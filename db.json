{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"source/images/mongo-cluster.jpg","path":"images/mongo-cluster.jpg","modified":1,"renderable":0},{"_id":"source/images/replica.jpg","path":"images/replica.jpg","modified":1,"renderable":0},{"_id":"source/images/wechat-reward-image.png","path":"images/wechat-reward-image.png","modified":1,"renderable":0},{"_id":"source/images/wechat.jpg","path":"images/wechat.jpg","modified":1,"renderable":0},{"_id":"source/images/alipay-reward-image.jpg","path":"images/alipay-reward-image.jpg","modified":1,"renderable":0},{"_id":"source/images/figure05.png","path":"images/figure05.png","modified":1,"renderable":0},{"_id":"source/images/restore-db/all_bak.png","path":"images/restore-db/all_bak.png","modified":1,"renderable":0},{"_id":"source/images/restore-db/delay_bak.png","path":"images/restore-db/delay_bak.png","modified":1,"renderable":0},{"_id":"source/images/restore-db/inc_bak.png","path":"images/restore-db/inc_bak.png","modified":1,"renderable":0},{"_id":"source/images/restore-db/master-master.png","path":"images/restore-db/master-master.png","modified":1,"renderable":0},{"_id":"source/images/restore-db/master-slave.png","path":"images/restore-db/master-slave.png","modified":1,"renderable":0},{"_id":"source/images/technology/gen-id.png","path":"images/technology/gen-id.png","modified":1,"renderable":0},{"_id":"source/images/technology/gen-id2.png","path":"images/technology/gen-id2.png","modified":1,"renderable":0},{"_id":"source/images/technology/gen-id3.png","path":"images/technology/gen-id3.png","modified":1,"renderable":0},{"_id":"source/images/technology/master-slave.png","path":"images/technology/master-slave.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/images/plan/1.png","path":"images/plan/1.png","modified":1,"renderable":0},{"_id":"source/images/technology/snowflake-64bit.jpg","path":"images/technology/snowflake-64bit.jpg","modified":1,"renderable":0},{"_id":"source/images/plan/2.png","path":"images/plan/2.png","modified":1,"renderable":0},{"_id":"source/images/plan/5.png","path":"images/plan/5.png","modified":1,"renderable":0},{"_id":"source/images/plan/6.png","path":"images/plan/6.png","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"source/images/plan/3.png","path":"images/plan/3.png","modified":1,"renderable":0},{"_id":"source/images/plan/4.png","path":"images/plan/4.png","modified":1,"renderable":0},{"_id":"source/images/plan/8.png","path":"images/plan/8.png","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"source/images/plan/7.png","path":"images/plan/7.png","modified":1,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"3e33456a5ccd6eca11f2d0b6a2faa8c94a0b5671","modified":1478140297930},{"_id":"source/404.html","hash":"d9c9db5465183d9bb87d3b395bfb06aa998d3d80","modified":1472622676705},{"_id":"source/favicon.ico","hash":"fa56159e4ee431ee701cdd1f5ff6528740d47d6e","modified":1472622676979},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1478567488635},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1478567488635},{"_id":"themes/next/.gitignore","hash":"de5b9b9e5b313b4a86e805b02f334d35c87bfe56","modified":1478567488636},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1478567488636},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1478567488636},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1478567488636},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1478567488637},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1478567488637},{"_id":"themes/next/_config.yml","hash":"92e72394587010a72785b6f59e8ab53e6eeecc2f","modified":1483508713158},{"_id":"themes/next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1479886391093},{"_id":"themes/next/gulpfile.coffee","hash":"e549561461642051d195550ec49d793e44ee22a0","modified":1479886391096},{"_id":"themes/next/package.json","hash":"48e2352f8e41f2b6bbf55254d10f3192ee206d5a","modified":1479886391201},{"_id":"source/_drafts/xiaoshuoke.md","hash":"091bee00e6785c82ba1d0be67095603578c81e26","modified":1483507030891},{"_id":"source/about/index.md","hash":"90b57aa2b846f215d86d061309ce49855bdd52e6","modified":1478140297955},{"_id":"source/categories/index.md","hash":"52f08fc545f0bb9c67c68924e6b5c16a73424b31","modified":1478140297960},{"_id":"source/images/avatar.jpg","hash":"983cc8f79020c07e6e58039e67e6fd495ea882e5","modified":1472622677013},{"_id":"source/images/mongo-cluster.jpg","hash":"d87f64a507292c29d243aa8cf3e6691c7aafb126","modified":1478570530803},{"_id":"source/images/replica.jpg","hash":"bbbcab06acdb0f8d8ed58871c91ea6d9ade3ac2f","modified":1478660737442},{"_id":"source/images/wechat-reward-image.png","hash":"55e55cc3d5f7b4f5928fa19c82f6ba9efb6571fa","modified":1472622677497},{"_id":"source/images/wechat.jpg","hash":"5014693062839204352b9d81a939033d791a7a5b","modified":1472622677524},{"_id":"source/schedule/index.md","hash":"4adf2fd9c85a880c7d4dc30cadcc06469a327853","modified":1478140297960},{"_id":"source/tags/index.md","hash":"384433ff925bc70bbbbce05c41c7f9eeac1d2f12","modified":1472622677527},{"_id":"themes/next/.git/FETCH_HEAD","hash":"1348f42c7eecb4792331eb149363955886313e8d","modified":1479886408863},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1478567488623},{"_id":"themes/next/.git/ORIG_HEAD","hash":"776e91b78b954875a8d38297e05b80eab20df4b9","modified":1479886409074},{"_id":"themes/next/.git/config","hash":"340cff4364d9733a32042fdb93097c334a781c93","modified":1478567488627},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1478566102754},{"_id":"themes/next/.git/index","hash":"14219f31ff302df5effeed4d04a0f4b4b370db58","modified":1479886578916},{"_id":"themes/next/.git/packed-refs","hash":"243bd8ada9526c51366f18d4e63883e562312bcb","modified":1478567488620},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1478567488635},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1478567488636},{"_id":"themes/next/languages/de.yml","hash":"db6a9d669f4b6282cda6c0a2d4e03d3e308a4846","modified":1479886391099},{"_id":"themes/next/languages/default.yml","hash":"fe00529a94bb2550194a31d178f5810b45014ab6","modified":1479886391101},{"_id":"themes/next/languages/en.yml","hash":"d02acdce503c86fbb01920ad22d31ec56fc285f1","modified":1479886391103},{"_id":"themes/next/languages/fr-FR.yml","hash":"91cf55b9d75879e72c8008d2659fe2ea993a4cca","modified":1479886391106},{"_id":"themes/next/languages/id.yml","hash":"d8b9dc017da0be7f71fda1cacd8064cbc38963b9","modified":1479886391108},{"_id":"themes/next/languages/ja.yml","hash":"bc89436a2a015ef72f43f265e56e37d94e73c0cd","modified":1479886391120},{"_id":"themes/next/languages/ko.yml","hash":"c59676f2af80c3c594c34c4a0fcbf65fd8864ff3","modified":1479886391122},{"_id":"themes/next/languages/pt-BR.yml","hash":"4b91f96b07e05705b28964df7460466c9b522e2c","modified":1479886391125},{"_id":"themes/next/languages/pt.yml","hash":"f364905121a816c9797acce07c0a4f248965b29a","modified":1479886391129},{"_id":"themes/next/languages/ru.yml","hash":"402e676252ab1fc4522257a578738cb9536eb077","modified":1479886391132},{"_id":"themes/next/languages/zh-Hans.yml","hash":"439c16c744b1596f24d9e0b4e230c4d3c93b7d85","modified":1479886391135},{"_id":"themes/next/languages/zh-hk.yml","hash":"a59f3f3114f5eb4d170a76da4359307e8f5159a7","modified":1479886391137},{"_id":"themes/next/languages/zh-tw.yml","hash":"18da1324d2212faca9a6e5e6ce98b419c86d4b0c","modified":1479886391140},{"_id":"themes/next/layout/_layout.swig","hash":"b4ef30f7da073bf2a9052186f76e0e080de1c794","modified":1479886391151},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1478567488656},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1478567488656},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1478567488656},{"_id":"themes/next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1479886391199},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1478567488657},{"_id":"themes/next/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1478567488657},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1478567488657},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1478567488658},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1478567488736},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1478567488736},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1478567488737},{"_id":"source/images/alipay-reward-image.jpg","hash":"797eedec4f7d9ede1e95140d01f8085d66cedc84","modified":1472622676996},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478567488697},{"_id":"source/_posts/2014/atom-tutorial.md","hash":"a13cb612e96e11f4a6e9f6330470f2ae5cfb5c81","modified":1483501655792},{"_id":"source/_posts/2014/fast-learning-way.md","hash":"67c13ecf07b35651186166f3900253c41d06ccdc","modified":1483501764873},{"_id":"source/_posts/2014/git-cheatsheet.md","hash":"aabe3285370aedd758001c41a7fe77dca0ebf977","modified":1483501884058},{"_id":"source/_posts/2014/hexo-tutorial.md","hash":"08219fa1636aa2c79c02b19c1bebce7bcdc511c4","modified":1483502019551},{"_id":"source/_posts/2014/http.md","hash":"ff5f0c4fce46f09f653f13d21b50817d02e8bbe6","modified":1483502066677},{"_id":"source/_posts/2014/https.md","hash":"6cdc4124ae2c7d2b1da14f069dfce0709dcf3dbc","modified":1483502074565},{"_id":"source/_posts/2014/learn-english.md","hash":"d802124febafecbcbdf249877a45007cc05f5753","modified":1483502175373},{"_id":"source/_posts/2014/learn-if-alive.md","hash":"9b79c4e19bcddf11fc0bfd6297caad1ef606a960","modified":1483500009144},{"_id":"source/_posts/2014/linux-aliases.md","hash":"47175175aca8a9ca98bbbe4f1e2e9911ad10f3db","modified":1483502201959},{"_id":"source/_posts/2014/zh-cn-to-pinyin.md","hash":"2728cef2768df2e201997a386a17bef0fffe0a33","modified":1483500047532},{"_id":"source/_posts/2015/critical-thinking.md","hash":"8142721c38410cb8c45591b06caf1a2e0f851866","modified":1483501821125},{"_id":"source/_posts/2015/gen-id-way.md","hash":"eff8c4227ba097a01177b97cf35f231490779733","modified":1483524329919},{"_id":"source/_posts/2015/grown-up.md","hash":"06c9331a27971c93ff4469743e2c0b626580c4e4","modified":1483501920308},{"_id":"source/_posts/2015/gulp-tutorial.md","hash":"393a926fa21fc25a869b23206a8b7fee6ce7a558","modified":1472622676786},{"_id":"source/_posts/2015/how-to-happy-work.md","hash":"667d2bf51abd5da14d3009fc1cffc59ae63dbea8","modified":1483502044971},{"_id":"source/_posts/2015/hui-lai-shi.md","hash":"838c664f92c67f8c089e5210f0d0d8b41d99f15e","modified":1483501996142},{"_id":"source/_posts/2015/mac-web.md","hash":"14cb35b70ee174eb1257c0a96c64cb7482a8ab12","modified":1483502216219},{"_id":"source/_posts/2015/markdown.md","hash":"de6876fdf0e65307ebaaa2e19401ea43219898d0","modified":1483502263839},{"_id":"source/_posts/2015/nodejs.md","hash":"d589ffc47069d142f45583b75f9417e05eb742dc","modified":1483502295690},{"_id":"source/_posts/2015/yc-create-note.md","hash":"54588bb82703baddee12f5480a1a05cbc0956936","modified":1483502465910},{"_id":"source/_posts/2016/Inverted-index.md","hash":"b740c24accc341cf42d6aeb51e10ba9e24a4a41e","modified":1483502160340},{"_id":"source/_posts/2016/MangoDB-cheatsheet.md","hash":"bb6f838584ad76d437f7e3f39e1ed563137f962d","modified":1479971746388},{"_id":"source/_posts/2016/beyond-feeling.md","hash":"c263b01a6ebecfb84f9dd838cec8b9f69c112b31","modified":1483499996113},{"_id":"source/_posts/2016/big-data-time.md","hash":"ba657beafbe40ac50e87c9ff1aec943a1d4db757","modified":1478143756722},{"_id":"source/_posts/2016/design-mysql.md","hash":"271425bbc3e2a89ef27e43ac326bafe1697c17c4","modified":1483526159558},{"_id":"source/_posts/2016/flex.md","hash":"2a93d29725dd23d68c5ab459fbaad8c940535212","modified":1483506987969},{"_id":"source/_posts/2016/ganji-design-msyql-rule.md","hash":"1b36fe0884fda3ce21fd8d77880e909501a80650","modified":1483511638436},{"_id":"source/_posts/2016/growth-hack.md","hash":"e2aa9799193323f1b910207ed340778402872954","modified":1472622676773},{"_id":"source/_posts/2016/influence.md","hash":"cc1ff596876b96872a5c87e0035d9262cdf2a6a3","modified":1483502117631},{"_id":"source/_posts/2016/mysql-bit.md","hash":"021d2c662eaeaee28f9c67e359d5f26b8fbd7790","modified":1483507083463},{"_id":"source/_posts/2016/mysql-cheatsheet.md","hash":"8f9334b2d04ac32e5547501e4e38baebaf9dc55e","modified":1483502281557},{"_id":"source/_posts/2016/npm-script.md","hash":"59d78364579255c8aaee70a975e5d819b3942be2","modified":1483502317252},{"_id":"source/_posts/2016/php-faker.md","hash":"110719d29b10fff479a0ebcfb4a3ccfb2177dd44","modified":1478140297945},{"_id":"source/_posts/2016/plan.md","hash":"48941013f84f7d3287f293f31a1547abbc4ab8b8","modified":1483502358985},{"_id":"source/_posts/2016/principles.md","hash":"3f2e27747df36485552a807f340b15cfde7c8190","modified":1483502375410},{"_id":"source/_posts/2016/restore-db.md","hash":"c7371d95050844a269fc60c0fa6849692ca21b98","modified":1483502399577},{"_id":"source/_posts/2016/running.md","hash":"a9ad308f73bdc42ec4094a3973349141114b3d56","modified":1483502427154},{"_id":"source/_posts/2016/seckill-sys.md","hash":"e47961ad56a6c947d12264f4a5f7e68f7c48bd43","modified":1483523589959},{"_id":"source/_posts/2016/shell.md","hash":"ae036528c200e6b44d745dba984588eca9aae2e0","modified":1483502449724},{"_id":"source/_posts/2016/vagrant.md","hash":"5130ff2f21f0ccf39d2f5a8675d030d465e5bfc9","modified":1479108819081},{"_id":"source/_posts/2016/yaml.md","hash":"1ff4b5c1e4ca0c96c08929c0c6e2dbd1296e600a","modified":1479971165313},{"_id":"source/images/figure05.png","hash":"e73bee42983ea05c9176c99e55f69ac0350455a8","modified":1472622677066},{"_id":"source/images/restore-db/all_bak.png","hash":"1193a8ad9cf0b99027ef88553696a67d0f4fffc7","modified":1479951352688},{"_id":"source/images/restore-db/delay_bak.png","hash":"6bb3695d19bfeb83bfcfacd21e4b61a0529cc10c","modified":1479951352691},{"_id":"source/images/restore-db/inc_bak.png","hash":"f8cf69db576931c76a8fcb1e51cb4da9cfa374c5","modified":1479951352694},{"_id":"source/images/restore-db/master-master.png","hash":"deacf1a4a31ce34c160674c27ade212e93ba744e","modified":1479951352697},{"_id":"source/images/restore-db/master-slave.png","hash":"7ed438af6bcad83ee7fd967dc6323a0aaa858944","modified":1479951352699},{"_id":"source/images/technology/gen-id.png","hash":"679ecaeeb8a6aeca9311baeeb5434c87444106a2","modified":1483512426065},{"_id":"source/images/technology/gen-id2.png","hash":"33c002da5cb8c27fd7c5fb34f947cf521870688d","modified":1483512766439},{"_id":"source/images/technology/gen-id3.png","hash":"4eeeef8f5680377ff9d954c3e8744666ba02bc89","modified":1483513118008},{"_id":"source/images/technology/master-slave.png","hash":"ce1a8e33ab7c07c3416ea2f12d4ddfb8a2ea0f8a","modified":1483525074975},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1478566102768},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1478566102776},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1478566102777},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1478566102792},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1478566102793},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1478566102794},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1478566102795},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1478566102797},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1478566102798},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1478566102799},{"_id":"themes/next/.git/logs/HEAD","hash":"4e5f5501e4ceeb62670e11f3bbf6c2c90f5446d3","modified":1479886391308},{"_id":"themes/next/.git/refs/stash","hash":"b2b712c4996e9d4f469236e02f9b6a05c7f2b3dc","modified":1479886381916},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1479886391147},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1479886391148},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1479886391153},{"_id":"themes/next/layout/_macro/post.swig","hash":"abfc88f34f2c0ae52229c4ffa577b00ad7cecdc6","modified":1479886391156},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1478567488642},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"3b261c758a7673d91c116367be1bb5223403f9e0","modified":1479886391158},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1478567488643},{"_id":"themes/next/layout/_partials/comments.swig","hash":"a5ffadb516522f85c052b290b94c0e4af3002644","modified":1479886391161},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1478567488643},{"_id":"themes/next/layout/_partials/footer.swig","hash":"8e21a6b8f024fcb29c7fcf44bbe967dfa70d3c05","modified":1479887245536},{"_id":"themes/next/layout/_partials/head.swig","hash":"740684ef2b6e56183529387882042612e904bc8d","modified":1479886391166},{"_id":"themes/next/layout/_partials/header.swig","hash":"d9b10a92fdccd57a0c0d6773831f9c1b0f1bb449","modified":1479886391171},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"dfbb6e9692333166aa78231ad12b2a40c153cbcb","modified":1479886391172},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1478567488647},{"_id":"themes/next/layout/_partials/search.swig","hash":"952b7b8d9ce2c81d4002a9dc2331f1e710f99616","modified":1479886391175},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1478567488649},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1478567488649},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1478567488650},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1478567488655},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1478567488658},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1479886391204},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1478567488658},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1479886391206},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1478567488696},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1479886391238},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1478567488697},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1478567488697},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1478567488698},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1478567488698},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1478567488699},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1478567488699},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1478567488699},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1478567488700},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1478567488700},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1478567488700},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1478567488700},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1478567488700},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1478567488701},{"_id":"source/images/plan/1.png","hash":"9d3293ea31e3836b89af95bb97f49f4cbd73d263","modified":1472622677106},{"_id":"source/images/technology/snowflake-64bit.jpg","hash":"5c7fca2061e94dba847dfc8072555599c76b1bc7","modified":1483519405285},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478567488650},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478567488651},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478567488685},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478567488685},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478567488687},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478567488695},{"_id":"source/images/plan/2.png","hash":"490e4354ec96efcf5fc68cfdc88466ad81f4bff1","modified":1472622677146},{"_id":"source/images/plan/5.png","hash":"94692f8f1aa6398bedf1623ca24db3eec6c5471b","modified":1472622677290},{"_id":"source/images/plan/6.png","hash":"66498494987b306e5e4789f360171a6295015839","modified":1472622677341},{"_id":"themes/next/.git/logs/refs/stash","hash":"2407a1019ca43b884aa493d357f3914cb6844b42","modified":1479886381917},{"_id":"themes/next/.git/objects/0f/57e0a5f2aa47a5c8c7effc9ae30fabd5b35500","hash":"6803831237d8e09d7ff02d647bc5e50d84066d86","modified":1479886578911},{"_id":"themes/next/.git/objects/23/684bee3e5ad1bee22df83ce5acc39d51cfaf05","hash":"bc24e23b6d49de209360233fa459ef97bac6be8a","modified":1479886381494},{"_id":"themes/next/.git/objects/25/5e1cd441042e6eda777056570b221dc2be8e41","hash":"89283df67611b5ca2851eac301c2377fb0cb5c80","modified":1479886381569},{"_id":"themes/next/.git/objects/28/44848be7b0b632ccad43bd3eb3a9656fec1d67","hash":"37ef7f913560f1d9655fb4656abd8cf9cec79b95","modified":1479886381576},{"_id":"themes/next/.git/objects/36/8b6cf56fe2c1a1bbdab189250abaf6e13b66ec","hash":"18b7056a59608c731f9ef6223fec725c12da7203","modified":1479886381589},{"_id":"themes/next/.git/objects/54/cf1534a970dac52a857e09117462af06882cce","hash":"122d2f2c382114529d466c2fe41750bad42d5838","modified":1479886578895},{"_id":"themes/next/.git/objects/58/f393e4cb71cc540c8062ed4e06b59f1e14590b","hash":"f9b6e997b85f5432473b31c628beee45e8c3f175","modified":1479886381585},{"_id":"themes/next/.git/objects/5a/823fb25e0ed2aa732b81799d10b19524601f61","hash":"67715d91221132de9b39b8c0224111dc497e7eb5","modified":1479886578903},{"_id":"themes/next/.git/objects/65/abccb46326c16695a1e877d3317f7129224108","hash":"eb49a53d236305795062db298b8ee2adc8036dd2","modified":1479886381595},{"_id":"themes/next/.git/objects/83/f8e1f6b7a0cd15716aa19189dd8ca8459d535a","hash":"895df0feab5cef4d9c794c35b38d0ffd90b76129","modified":1479886381280},{"_id":"themes/next/.git/objects/9e/60c2a2710f309bc353875e122cc3f502a37552","hash":"41fdc8ce5327a11023e5d1fd43c04d9042717415","modified":1479886381600},{"_id":"themes/next/.git/objects/a5/56bf15bc401e526637ca72e9413cd141e5280f","hash":"1838d024c6697cb24dbe22af68a43e4dada425fd","modified":1479886381808},{"_id":"themes/next/.git/objects/b9/5c52b07777a6ae24d7a87fe59106a82b822881","hash":"030eb4b9d7a6445bf1de4d33683b7bb3d05f2511","modified":1479886381581},{"_id":"themes/next/.git/objects/c5/d0820ad57d369f8c4cb4d2d72c4a978e5ee546","hash":"c8891ff6f6b82d91737a882101020a142814c486","modified":1479886381489},{"_id":"themes/next/.git/objects/d0/869f68ba655fe79d081b8d1af26223fd0e9560","hash":"49ed16bea5c6552fdfef743e1ab6f6ea055841ee","modified":1479886381563},{"_id":"themes/next/.git/objects/df/ddf9fd3c5b13fc35c4325ab6d0fae43c1af01c","hash":"1c1733973329dfdda94ffcb8822f2b5bd67fe39e","modified":1479886381499},{"_id":"themes/next/.git/objects/pack/pack-0afea73182ac606308fc5c3d9433c498bf068c5a.idx","hash":"d2c564a115cafd6400ab9c974ac56f45bb46d863","modified":1479886305503},{"_id":"themes/next/.git/refs/heads/master","hash":"776e91b78b954875a8d38297e05b80eab20df4b9","modified":1479886391303},{"_id":"themes/next/.git/refs/tags/v5.1.0","hash":"cabf39f34bb81548f82c93481989ec34274873a1","modified":1479886305707},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1479886391142},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"bb2c3a926bb7f8fea54d424882b25d93dfde7ae6","modified":1479886391144},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1479886391168},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1478567488646},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1478567488647},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1478567488647},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1478567488648},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1478567488648},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1478567488648},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1478567488649},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1478567488648},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1478567488650},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1478567488651},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"188423f7df0eb8c99a03cb6741384415651c4665","modified":1479886391178},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"9c8f4b2a29741d96adf0b8fef52ae7f4396f27f5","modified":1479886391183},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1478567488654},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f592adff22628b271ec9657b080cf6b9cc200615","modified":1479886391191},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1479886391196},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1478567488655},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1478567488655},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1478567488685},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1478567488686},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1478567488686},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1478567488695},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"d7826b48a20162835450495db534d353ac52e476","modified":1479886391236},{"_id":"themes/next/source/css/_variables/base.styl","hash":"4c4298a7011841d9ee2aec5bd192df5730b08517","modified":1478567488696},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"4e7b863d01d7ba5f68ede8d9c0c98d6010491650","modified":1483508509738},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1478567488701},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84bdc8a4fe127849a5c99bdefe1d0b65ee1a4a0a","modified":1479886391240},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1478567488701},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1478567488702},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1478567488702},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1478567488702},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1478567488703},{"_id":"themes/next/source/js/src/utils.js","hash":"e34f83848883732ddd7a34a3e3ed2a293f0f76a7","modified":1479886391243},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1479886391246},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1478567488704},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1478567488704},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1478567488712},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1478567488712},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1478567488712},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1478567488713},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"8868275e8b6340c87a81c69a54ed138d11fb3c3e","modified":1479886391254},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1478567488714},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1478567488715},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1479886391256},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1478567488715},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1478567488726},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1478567488728},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1478567488728},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1478567488728},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1478567488730},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1478567488731},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1478567488731},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1478567488732},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1478567488732},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1478567488735},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1478567488736},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1478567488736},{"_id":"themes/next/.git/objects/pack/pack-0afea73182ac606308fc5c3d9433c498bf068c5a.pack","hash":"c5b8d4bec0ba11ea2d695ffa0d6a98a00ec97fb9","modified":1479886578000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1478567488727},{"_id":"source/images/plan/3.png","hash":"01057a0a31d8b9512cc666b282fb876b3e9161ca","modified":1472622677200},{"_id":"source/images/plan/4.png","hash":"ff7f8fe3464c10509a233021c97babbe0f554f87","modified":1472622677249},{"_id":"source/images/plan/8.png","hash":"c7fff33e7c61eed7001e14636f1481f06ae29bed","modified":1472622677486},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"4e5f5501e4ceeb62670e11f3bbf6c2c90f5446d3","modified":1479886391306},{"_id":"themes/next/.git/refs/remotes/origin/dev","hash":"41ab21bbe0d88c2cc439c0af33807af4e95aef31","modified":1479886305612},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1478567488621},{"_id":"themes/next/.git/refs/remotes/origin/master","hash":"776e91b78b954875a8d38297e05b80eab20df4b9","modified":1479886305602},{"_id":"themes/next/.git/refs/remotes/origin/servant","hash":"cc0719ca98bd124977db7d9c89b69ede35e83d88","modified":1479886305619},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1478567488651},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1478567488652},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1478567488652},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1478567488653},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1478567488652},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1478567488653},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1479886391180},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"e4a13e8cd19762ef3aea0e59dfae8b3c1f251f11","modified":1479886391185},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1479886391189},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1479886391187},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1478567488659},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1478567488659},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1478567488660},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1478567488660},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1478567488664},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1478567488671},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1478567488682},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1478567488682},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1478567488683},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1478567488684},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1478567488684},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1478567488684},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1478567488687},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1478567488688},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1478567488688},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1478567488689},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1478567488689},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1478567488689},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1478567488689},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1478567488691},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1478567488691},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1479886391234},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1478567488692},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1478567488692},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1478567488693},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1478567488693},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"338e9475519ce72af29a1bc05610f9f486e0f1c2","modified":1478567488693},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1478567488694},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1478567488694},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1478567488694},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1478567488695},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1478567488703},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1478567488704},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1478567488705},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1478567488705},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1478567488706},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1478567488706},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1478567488706},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1478567488710},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1478567488711},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1478567488711},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1478567488713},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1478567488713},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1479886391260},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1478567488716},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1479886391263},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1478567488731},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1478567488732},{"_id":"source/images/plan/7.png","hash":"e42263fb161e67c09bcf19ad9170bb09a2c88d3c","modified":1472622677408},{"_id":"themes/next/.git/objects/pack/pack-d7f9900e407f50cf6854c435d4f274ead2f5117b.idx","hash":"f4a5ac1fe0329243bf6b253a0ea4691d0afe924c","modified":1478567488462},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1479886391271},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1479886391267},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1479886391285},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1479886391288},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1478567488734},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"273b40a03d958524625e5c784eb4aabc80a08307","modified":1478567488623},{"_id":"themes/next/.git/logs/refs/remotes/origin/dev","hash":"1e84be2fc61af53a740dde4011768f90d3e75f6d","modified":1479886305615},{"_id":"themes/next/.git/logs/refs/remotes/origin/master","hash":"45fd931958578e9a6e2bbc3ea582fb2962766e3d","modified":1479886305605},{"_id":"themes/next/.git/logs/refs/remotes/origin/servant","hash":"8923c803595e93fe01bc26efc5fe261f8f7861ad","modified":1479886305621},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1478567488660},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1478567488661},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1478567488661},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1478567488661},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1478567488662},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1478567488662},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1478567488662},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"cd2def16d31feb234be27dcdce2a919f70cc6919","modified":1479886391210},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"9ec9227ab8e3fc07f6dc3342c3c430b6cd649d98","modified":1479887848271},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1478567488663},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1478567488663},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1478567488664},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1478567488664},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1478567488664},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1478567488665},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1478567488665},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1478567488667},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1478567488667},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"e2066dd20747e3125c969ef8459d0015fa5233a2","modified":1479886391216},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1478567488667},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"74e9989a10fc682388cbd25ff7df0d7d4025fb8c","modified":1479886391220},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1478567488668},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1478567488668},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1478567488668},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"681b7c8ce4dc47130a0ca67c1ec62be7c96e4c4f","modified":1478567488668},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1478567488668},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1478567488669},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1478567488669},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1478567488669},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1478567488670},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1478567488670},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1478567488670},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1478567488670},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1478567488671},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1478567488670},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1478567488671},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1478567488671},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1478567488672},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1479886391222},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"c8a05ce90784db9744c22fab22019eb637df1f2f","modified":1479886391225},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"3b1aabbab57b0b1fafa311feb1212f59e78e7928","modified":1479886391228},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1478567488672},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1478567488674},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1478567488673},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"eb4ede7d7446d8a2f2ddeef3b17f497a6ad30756","modified":1478567488675},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"4f1e9d96940aa3e42d58fb63a26d4fa260323b0d","modified":1479886391231},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1478567488675},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1478567488690},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1478567488690},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1478567488693},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1478567488706},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1478567488707},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1478567488709},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1478567488709},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1478567488710},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1478567488710},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1479886391282},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1479886391250},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1479886391276},{"_id":"themes/next/.git/objects/pack/pack-d7f9900e407f50cf6854c435d4f274ead2f5117b.pack","hash":"d7c2c82c7ad561df7778869a4aed0b762d416269","modified":1479886578000},{"_id":"public/404.html","hash":"1507844d3c7bc75267c0ceb4306e02706ae44aa9","modified":1483526423349},{"_id":"public/about/index.html","hash":"f47ded54ef2548cf93a8f919373c28eda169008d","modified":1483526423349},{"_id":"public/categories/index.html","hash":"21f7b6f485885d10c6b8a8aa22851bdd7cd4cbbd","modified":1483526423349},{"_id":"public/schedule/index.html","hash":"aff9c002472a51c68fff37d33dbb8df10c5873c2","modified":1483526423349},{"_id":"public/tags/index.html","hash":"553e40265fb44bd7918eeb96822e3edf2b966e84","modified":1483526423349},{"_id":"public/2015/06/22/critical-thinking/index.html","hash":"2c17098b2185ce226bdcc6ea9af8f179c0b9ca0b","modified":1483526423349},{"_id":"public/2014/08/08/learn-if-alive/index.html","hash":"257d0d032098d9aec0a353716a8e64147284f09a","modified":1483526423349},{"_id":"public/archives/page/5/index.html","hash":"ea66eab942e478216822330678a007d68dd87259","modified":1483526423349},{"_id":"public/archives/2014/08/index.html","hash":"a581838dbdcb866043ed92ce564293b2030c3e8c","modified":1483526423349},{"_id":"public/archives/2014/09/index.html","hash":"253f091f9064ff3bc65a97ba7273c80cfaf8e0aa","modified":1483526423349},{"_id":"public/archives/2014/11/index.html","hash":"3511ede5e83cd92533bf161609baee597b5f7f7d","modified":1483526423349},{"_id":"public/archives/2014/12/index.html","hash":"93f337621e327d19ac3dcffd0c03cd6a8dcb1108","modified":1483526423349},{"_id":"public/archives/2015/index.html","hash":"8ef65422e164d45ea0ce669c61bd6e21d47ceb7e","modified":1483526423349},{"_id":"public/archives/2015/03/index.html","hash":"8bb10821b99a2df316299621a71610d2c4b5be92","modified":1483526423349},{"_id":"public/archives/2015/06/index.html","hash":"94628941ab2c7bdd588410b4405327eebe069735","modified":1483526423349},{"_id":"public/archives/2015/07/index.html","hash":"2c11c0fbbfb5740144ec986e1a189fc5ed034375","modified":1483526423349},{"_id":"public/archives/2015/10/index.html","hash":"a574be80ea79aa0e13f60b20bf59978433fc7c6b","modified":1483526423349},{"_id":"public/archives/2015/11/index.html","hash":"16b11f9fd167e180164b2e5618c915ff152e9862","modified":1483526423349},{"_id":"public/archives/2015/12/index.html","hash":"315b18c7faf41368e316037b18175236fe9058bf","modified":1483526423349},{"_id":"public/archives/2016/page/3/index.html","hash":"a1b04118b41df3051335ebe17dfb25c3796f472a","modified":1483526423349},{"_id":"public/archives/2016/01/index.html","hash":"60d2b6c4ee6796d9d64da5bcf52e34f82b82975d","modified":1483526423349},{"_id":"public/archives/2016/06/index.html","hash":"8b07403d72d7c43bcf3ee23a36bf2e35fc6df140","modified":1483526423349},{"_id":"public/archives/2016/07/index.html","hash":"b89b9189ebdf39529a6c9f1b71b10771d6cc420b","modified":1483526423349},{"_id":"public/archives/2016/08/index.html","hash":"8f9c25a6a243e12bb82f0e341ba294119db03d93","modified":1483526423349},{"_id":"public/archives/2016/10/index.html","hash":"df54840562c015cd03f81da28470fb23994ac0c4","modified":1483526423349},{"_id":"public/archives/2016/11/index.html","hash":"6a67a4a3d35ddda69df40284dc3e223c6cf746f0","modified":1483526423349},{"_id":"public/archives/2016/12/index.html","hash":"1283af5ac54222afa61d9cfe5547ef8bdd901258","modified":1483526423349},{"_id":"public/categories/日志/index.html","hash":"ba93be9c0fa981e4517644548c514d13cda15f80","modified":1483526423349},{"_id":"public/page/5/index.html","hash":"cf5ccbfa123031ad7c65f12c431cfd3fb86e260b","modified":1483526423349},{"_id":"public/tags/方法论/index.html","hash":"86a9e9e48cce569aa326afc4bbcb2e0ecfa61e9b","modified":1483526423349},{"_id":"public/tags/hexo/index.html","hash":"8a99669e2e5e0cbefa590bf8032331bb47421553","modified":1483526423349},{"_id":"public/tags/next/index.html","hash":"4d8bee630fcdd459d5f3ab9e6bcb7661392baad2","modified":1483526423349},{"_id":"public/tags/english/index.html","hash":"eb2c784a72176bc828624f574df6dc7b462476df","modified":1483526423349},{"_id":"public/tags/learn/index.html","hash":"fd4fca99e70cdc5291fab5091c95e5846db442de","modified":1483526423349},{"_id":"public/tags/mysql/index.html","hash":"91b0121fa5b54526b25ab01cc67500e4409fc284","modified":1483526423349},{"_id":"public/tags/随笔/index.html","hash":"20016754c2fa63b1094d4ade78de616303d3aba5","modified":1483526423349},{"_id":"public/tags/work/index.html","hash":"9b39c0752fd7bca4d0b4af3f406fbc60d01b9b2f","modified":1483526423349},{"_id":"public/tags/tools/index.html","hash":"e7cb87ffc94603ca58ccd2c7d6929649096276b3","modified":1483526423349},{"_id":"public/tags/创业/index.html","hash":"32ffd49aca708051664fe0ade4a899bd48c3c13c","modified":1483526423349},{"_id":"public/tags/读书/index.html","hash":"51d6c1cfc2802cad4aa385db50763798ec735aa8","modified":1483526423349},{"_id":"public/tags/db/index.html","hash":"f160eda7b4beea9867c9916b877554d357fbb314","modified":1483526423349},{"_id":"public/tags/逻辑/index.html","hash":"b823902e3703f8d88a77d5587990457b202640c3","modified":1483526423349},{"_id":"public/tags/阅读/index.html","hash":"9cd5ef0e51e1582059c79b60289dea47f180c684","modified":1483526423349},{"_id":"public/tags/js/index.html","hash":"936cd9dcb31e8db41cabe2aadbe8d43aec5c32c7","modified":1483526423349},{"_id":"public/tags/php/index.html","hash":"2b4a3d424e7f26e02c5479842833cf69025db934","modified":1483526423349},{"_id":"public/tags/运动/index.html","hash":"7e24e986d213cdd50423c74bbd8dec5c70dc2192","modified":1483526423349},{"_id":"public/tags/git/index.html","hash":"12f6f4847680de349b308331f10ee7f7916a039c","modified":1483526423349},{"_id":"public/2016/12/23/mysql-bit/index.html","hash":"286b4aafc30ab2242d492f68d876bfabf362283c","modified":1483526423349},{"_id":"public/2016/12/01/seckill-sys/index.html","hash":"8124f34c45c48ccb65bcf87ec1bc951e16cfc1f3","modified":1483526423349},{"_id":"public/2016/11/30/flex/index.html","hash":"dd56e2c7664529af80789a3630dc8f4c66439dc0","modified":1483526423349},{"_id":"public/2016/11/23/restore-db/index.html","hash":"223eedae9e1c6c85379a92daa58d447d7511bf7c","modified":1483526423349},{"_id":"public/2016/11/23/yaml/index.html","hash":"1089759eabe1f6452b242b51113d367a2850face","modified":1483526423349},{"_id":"public/2016/11/23/npm-script/index.html","hash":"9edafacc73f958c4c0fc8a4bbb8b1a0de8f14718","modified":1483526423349},{"_id":"public/2016/11/10/vagrant/index.html","hash":"d09528647c8b9345906d0b89e5a80883edeb552c","modified":1483526423349},{"_id":"public/2016/11/09/shell/index.html","hash":"df516840631a57ba3061756f8eaf798aed907e9a","modified":1483526423349},{"_id":"public/2016/11/02/MangoDB-cheatsheet/index.html","hash":"14a6091941b487d965763860e5141995f7458862","modified":1483526423349},{"_id":"public/2016/11/02/mysql-cheatsheet/index.html","hash":"23f6d590f6c6720871098aec9b5c596648708012","modified":1483526423349},{"_id":"public/2016/10/16/big-data-time/index.html","hash":"7a9c30a5455d53cbb6ce386c68d5f69fc03128b0","modified":1483526423349},{"_id":"public/2016/10/12/influence/index.html","hash":"3fb65e6f3d782b406185a47e139953642e7b7748","modified":1483526423349},{"_id":"public/2016/08/19/php-faker/index.html","hash":"0bb484896774e49a6a2b8beb543650e809d288ae","modified":1483526423349},{"_id":"public/2016/08/11/Inverted-index/index.html","hash":"9dc38297434625156340361e456747898dcd79b4","modified":1483526423349},{"_id":"public/2016/07/30/beyond-feeling/index.html","hash":"481f2f60820364d6ace20d76b7c22ff0ddf19962","modified":1483526423349},{"_id":"public/2016/07/22/plan/index.html","hash":"c9b6ed095fbed740e3d8d563f888676386f0f2fb","modified":1483526423349},{"_id":"public/2016/07/15/gulp-tutorial/index.html","hash":"c61b2b6bdb759ca18c07c2bb8073a8c9931cef2c","modified":1483526423349},{"_id":"public/2016/06/23/growth-hack/index.html","hash":"544a9509bc75fc6460210cef2d4ff897621fd76f","modified":1483526423349},{"_id":"public/2016/06/20/running/index.html","hash":"3472579d6d8a007d59c5b5f395f5317246104f76","modified":1483526423349},{"_id":"public/2016/06/15/principles/index.html","hash":"fa77c307719aefaf5a4de23db9912b99c6c7231a","modified":1483526423349},{"_id":"public/2016/01/28/design-mysql/index.html","hash":"652c6b8c486d18b0ca5b46e2c15c0288a2ecf746","modified":1483526423349},{"_id":"public/2016/01/28/ganji-design-msyql-rule/index.html","hash":"bf59fdd1d2afa232a54912b82d85c653893e6b9a","modified":1483526423349},{"_id":"public/2015/12/04/gen-id-way/index.html","hash":"9846f0682a56e5094b4b263d5f9bf83bd2ec8b80","modified":1483526423349},{"_id":"public/2015/11/14/nodejs/index.html","hash":"c42c2fa2b56392ec2e03c79ea6cf5de284787495","modified":1483526423349},{"_id":"public/2015/10/15/how-to-happy-work/index.html","hash":"65344cde01b2210cb696c13826187c5630bfe2be","modified":1483526423349},{"_id":"public/2015/07/29/mac-web/index.html","hash":"b780a45c2254b2f1e161f8c868113ec59fe4a224","modified":1483526423349},{"_id":"public/2015/06/22/grown-up/index.html","hash":"7b737093db936e9245220cce764bb4d236f603af","modified":1483526423349},{"_id":"public/2015/06/21/hui-lai-shi/index.html","hash":"ffa4312a09db4ae4cbdf5c63f998f7e90bdd87dc","modified":1483526423349},{"_id":"public/2015/06/20/yc-create-note/index.html","hash":"3e56901dc5811d1e0c8c5f41e5d81735eaae611e","modified":1483526423349},{"_id":"public/2015/03/15/markdown/index.html","hash":"5c756d6295a4b5e6bd9cc48939b8a98973765fe2","modified":1483526423349},{"_id":"public/2014/12/22/linux-aliases/index.html","hash":"01242427633ee956fb21938099a4651deca2fe09","modified":1483526423349},{"_id":"public/2014/12/15/learn-english/index.html","hash":"70da1ded7b8eb5d481e510d7eca9dbd317e2e120","modified":1483526423349},{"_id":"public/2014/12/14/fast-learning-way/index.html","hash":"cf060dbb32695eead23c8f688efef89c713364df","modified":1483526423349},{"_id":"public/2014/11/23/https/index.html","hash":"0ff97a6791a661f57be617627ba743d2c77a9cb8","modified":1483526423349},{"_id":"public/2014/11/23/http/index.html","hash":"da980f8ee645ca94fdaa0454250266558182a37a","modified":1483526423359},{"_id":"public/2014/09/02/git-cheatsheet/index.html","hash":"6187c5f8f499be334ae7c572ed2c360d4be60b85","modified":1483526423359},{"_id":"public/2014/08/29/zh-cn-to-pinyin/index.html","hash":"2f5977726fbd3ca632652bcbb970061f288f0fb5","modified":1483526423359},{"_id":"public/2014/08/27/atom-tutorial/index.html","hash":"29bf99330f438fb3ba75fd320dd6c066829ada4d","modified":1483526423359},{"_id":"public/2014/08/17/hexo-tutorial/index.html","hash":"7aa9a352c8240a890ada0c25d368457ac579a450","modified":1483526423359},{"_id":"public/archives/index.html","hash":"2474bdd31a722e7d96d6f5503fcf52859ba9ec79","modified":1483526423359},{"_id":"public/archives/page/2/index.html","hash":"0b42c873da16fa166584cac192726f0d79c62e6f","modified":1483526423359},{"_id":"public/archives/page/3/index.html","hash":"00dec91e0656d803d8d056ab67602f1779dcd712","modified":1483526423359},{"_id":"public/archives/page/4/index.html","hash":"92d8fb03d2f34e3a72fd64ed6d2dd63af445b630","modified":1483526423359},{"_id":"public/archives/2014/index.html","hash":"f2e05a0d272dea9562416eda206fa036e2b33667","modified":1483526423359},{"_id":"public/archives/2016/index.html","hash":"4afa6004335a57f106a38fb09d60b01e37cb8875","modified":1483526423359},{"_id":"public/archives/2016/page/2/index.html","hash":"3d2ef5298b4e35d4abe5becf6ec5321958f07687","modified":1483526423359},{"_id":"public/index.html","hash":"534d16830739dcec76e584ea83d4f62967bbbe68","modified":1483526423359},{"_id":"public/page/2/index.html","hash":"0d7e8965f3d9648291edbfc273ef7d1e305fd476","modified":1483526423359},{"_id":"public/page/3/index.html","hash":"b140290d1e5631aeeffdb46727844d8815433c2c","modified":1483526423359},{"_id":"public/page/4/index.html","hash":"910adbd05d87b4d2dad0495f081a247a49ef3901","modified":1483526423359},{"_id":"public/favicon.ico","hash":"fa56159e4ee431ee701cdd1f5ff6528740d47d6e","modified":1483526423399},{"_id":"public/images/avatar.jpg","hash":"983cc8f79020c07e6e58039e67e6fd495ea882e5","modified":1483526423399},{"_id":"public/images/replica.jpg","hash":"bbbcab06acdb0f8d8ed58871c91ea6d9ade3ac2f","modified":1483526423399},{"_id":"public/images/wechat-reward-image.png","hash":"55e55cc3d5f7b4f5928fa19c82f6ba9efb6571fa","modified":1483526423399},{"_id":"public/images/wechat.jpg","hash":"5014693062839204352b9d81a939033d791a7a5b","modified":1483526423399},{"_id":"public/images/mongo-cluster.jpg","hash":"d87f64a507292c29d243aa8cf3e6691c7aafb126","modified":1483526423399},{"_id":"public/images/restore-db/all_bak.png","hash":"1193a8ad9cf0b99027ef88553696a67d0f4fffc7","modified":1483526423399},{"_id":"public/images/restore-db/delay_bak.png","hash":"6bb3695d19bfeb83bfcfacd21e4b61a0529cc10c","modified":1483526423399},{"_id":"public/images/restore-db/inc_bak.png","hash":"f8cf69db576931c76a8fcb1e51cb4da9cfa374c5","modified":1483526423399},{"_id":"public/images/restore-db/master-master.png","hash":"deacf1a4a31ce34c160674c27ade212e93ba744e","modified":1483526423399},{"_id":"public/images/restore-db/master-slave.png","hash":"7ed438af6bcad83ee7fd967dc6323a0aaa858944","modified":1483526423399},{"_id":"public/images/technology/gen-id.png","hash":"679ecaeeb8a6aeca9311baeeb5434c87444106a2","modified":1483526423399},{"_id":"public/images/technology/gen-id2.png","hash":"33c002da5cb8c27fd7c5fb34f947cf521870688d","modified":1483526423399},{"_id":"public/images/technology/gen-id3.png","hash":"4eeeef8f5680377ff9d954c3e8744666ba02bc89","modified":1483526423399},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1483526423399},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1483526423399},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1483526423399},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1483526423399},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1483526423399},{"_id":"public/images/technology/master-slave.png","hash":"ce1a8e33ab7c07c3416ea2f12d4ddfb8a2ea0f8a","modified":1483526423399},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1483526423399},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1483526423399},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1483526423399},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1483526423399},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1483526423399},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1483526423399},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1483526423399},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1483526423399},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1483526423399},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1483526423399},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1483526423399},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1483526423399},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1483526423399},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1483526423399},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1483526423399},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1483526423399},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1483526423399},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1483526423399},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1483526423399},{"_id":"public/images/alipay-reward-image.jpg","hash":"797eedec4f7d9ede1e95140d01f8085d66cedc84","modified":1483526424373},{"_id":"public/images/plan/1.png","hash":"9d3293ea31e3836b89af95bb97f49f4cbd73d263","modified":1483526424373},{"_id":"public/images/technology/snowflake-64bit.jpg","hash":"5c7fca2061e94dba847dfc8072555599c76b1bc7","modified":1483526424393},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1483526424393},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1483526424393},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1483526424393},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1483526424393},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1483526424403},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1483526424403},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1483526424403},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1483526424403},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1483526424403},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1483526424403},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1483526424403},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1483526424403},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1483526424413},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1483526424413},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1483526424413},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1483526424413},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1483526424413},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1483526424413},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1483526424413},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1483526424413},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1483526424413},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1483526424413},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1483526424413},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1483526424413},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1483526424413},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1483526424413},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1483526424413},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1483526424413},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1483526424413},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1483526424413},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1483526424413},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1483526424413},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1483526424413},{"_id":"public/css/main.css","hash":"418de0f644fcb8e8b03ea3af56f7f1aa7b53621b","modified":1483526424413},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1483526424413},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1483526424413},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1483526424413},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1483526424413},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1483526424413},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1483526424413},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1483526424413},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1483526424413},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1483526424413},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1483526424413},{"_id":"public/images/figure05.png","hash":"e73bee42983ea05c9176c99e55f69ac0350455a8","modified":1483526424413},{"_id":"public/images/plan/2.png","hash":"490e4354ec96efcf5fc68cfdc88466ad81f4bff1","modified":1483526424413},{"_id":"public/images/plan/5.png","hash":"94692f8f1aa6398bedf1623ca24db3eec6c5471b","modified":1483526424413},{"_id":"public/images/plan/6.png","hash":"66498494987b306e5e4789f360171a6295015839","modified":1483526424413},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1483526424413},{"_id":"public/images/plan/3.png","hash":"01057a0a31d8b9512cc666b282fb876b3e9161ca","modified":1483526424443},{"_id":"public/images/plan/4.png","hash":"ff7f8fe3464c10509a233021c97babbe0f554f87","modified":1483526424443},{"_id":"public/images/plan/8.png","hash":"c7fff33e7c61eed7001e14636f1481f06ae29bed","modified":1483526424443},{"_id":"public/images/plan/7.png","hash":"e42263fb161e67c09bcf19ad9170bb09a2c88d3c","modified":1483526424453},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1483526424453}],"Category":[{"name":"日志","_id":"cixitbp88000bwsnnmk8gxb4s"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n","date":"2016-08-31T05:51:16.705Z","updated":"2016-08-31T05:51:16.705Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cixitboy30000wsnnipo57cmp","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n"},{"title":"about","date":"2016-06-14T11:28:53.000Z","_content":"<!-- ## ABOUT ME -->\n\n## CONTACT\nEMAIL: <a href=\"mailto:changocean@163.com\" target=\"_self\">changocean@163.com</a>\n<!-- ![个人微信号](/images/wechat.jpg) -->\n微信号： <img src=\"/images/wechat.jpg\" width=\"200px\" height=\"200px\" />\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-06-14 19:28:53\n---\n<!-- ## ABOUT ME -->\n\n## CONTACT\nEMAIL: <a href=\"mailto:changocean@163.com\" target=\"_self\">changocean@163.com</a>\n<!-- ![个人微信号](/images/wechat.jpg) -->\n微信号： <img src=\"/images/wechat.jpg\" width=\"200px\" height=\"200px\" />\n","updated":"2016-11-03T02:31:37.955Z","path":"about/index.html","comments":1,"layout":"page","_id":"cixitbp0l0002wsnn7cqe6vl3","content":"<!-- ## ABOUT ME -->\n<h2 id=\"CONTACT\"><a href=\"#CONTACT\" class=\"headerlink\" title=\"CONTACT\"></a>CONTACT</h2><p>EMAIL: <a href=\"mailto:changocean@163.com\" target=\"_self\">changocean@163.com</a><br><!-- ![个人微信号](/images/wechat.jpg) --><br>微信号： <img src=\"/images/wechat.jpg\" width=\"200px\" height=\"200px\"></p>\n","excerpt":"","more":"<!-- ## ABOUT ME -->\n<h2 id=\"CONTACT\"><a href=\"#CONTACT\" class=\"headerlink\" title=\"CONTACT\"></a>CONTACT</h2><p>EMAIL: <a href=\"mailto:changocean@163.com\" target=\"_self\">changocean@163.com</a><br><!-- ![个人微信号](/images/wechat.jpg) --><br>微信号： <img src=\"/images/wechat.jpg\" width=\"200px\" height=\"200px\" /></p>\n"},{"title":"categories","date":"2016-06-14T11:28:21.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-06-14 19:28:21\ntype: \"categories\"\n---\n","updated":"2016-11-03T02:31:37.960Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cixitbp0v0003wsnn8dyrsqjd","content":"","excerpt":"","more":""},{"title":"schedule","date":"2016-11-02T09:01:59.000Z","updated":"2016-11-02T09:01:59.000Z","type":"schedule","_content":"","source":"schedule/index.md","raw":"---\ntitle: schedule\ndate: 2016-11-02 17:01:59\nupdated: 2016-11-02 17:01:59\ntype: \"schedule\"\n---\n","path":"schedule/index.html","comments":1,"layout":"page","_id":"cixitbp6k0004wsnnel71okji","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-06-14T11:26:40.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-06-14 19:26:40\ntype: \"tags\"\n---\n","updated":"2016-08-31T05:51:17.527Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cixitbp6k0005wsnnrujfgt01","content":"","excerpt":"","more":""}],"Post":[{"title":"讲故事的方法论","date":"2016-06-14T16:40:26.000Z","_content":"","source":"_drafts/xiaoshuoke.md","raw":"---\ntitle: 讲故事的方法论\ndate: 2016-06-15 00:40:26\ntags:\ncategories:\n---\n","slug":"xiaoshuoke","published":0,"updated":"2017-01-04T05:17:10.891Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp0l0001wsnngwtkry4o","content":"","excerpt":"","more":""},{"title":"快速学习方法论","date":"2014-12-14T15:49:37.000Z","_content":"\n# 快速技能习得\n\n## 分解步骤\n\n> 把技能做最大程度的细分，分成若干个小步骤\n\n> ## 充分学习\n\n> 对每个小步骤进行充分的学习，以便能够灵活的练习，并在联系中自我纠正\n\n> ## 克服困难\n\n> 克服联系中出现的生理，心理，或者情绪上的障碍\n\n> ## 集中练习\n\n> 至少用20个小时集中练习最重要的小步骤\n\n选择一项技能，摸索出来最好的办法，腾出时间练习，知道掌握位置 <!-- more -->\n\n# 快速技能习得的10个方法\n\n1. 选择方向\n2. 集中精力\n3. 制定目标\n4. 分解技能\n5. 获得工具\n6. 扫除障碍\n7. 腾出时间\n8. 及时反馈\n9. 计时训练\n10. 数量速度\n\n> [TED演讲视频](http://www.bilibili.com/video/av1911047/)\n","source":"_posts/2014/fast-learning-way.md","raw":"---\ntitle: 快速学习方法论\ntags:\n  - 方法论\ndate: 2014-12-14T23:49:37.000Z\ncategories: \n---\n\n# 快速技能习得\n\n## 分解步骤\n\n> 把技能做最大程度的细分，分成若干个小步骤\n\n> ## 充分学习\n\n> 对每个小步骤进行充分的学习，以便能够灵活的练习，并在联系中自我纠正\n\n> ## 克服困难\n\n> 克服联系中出现的生理，心理，或者情绪上的障碍\n\n> ## 集中练习\n\n> 至少用20个小时集中练习最重要的小步骤\n\n选择一项技能，摸索出来最好的办法，腾出时间练习，知道掌握位置 <!-- more -->\n\n# 快速技能习得的10个方法\n\n1. 选择方向\n2. 集中精力\n3. 制定目标\n4. 分解技能\n5. 获得工具\n6. 扫除障碍\n7. 腾出时间\n8. 及时反馈\n9. 计时训练\n10. 数量速度\n\n> [TED演讲视频](http://www.bilibili.com/video/av1911047/)\n","slug":"fast-learning-way","published":1,"updated":"2017-01-04T03:49:24.873Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp7o0006wsnnu2xpr50t","content":"<h1 id=\"快速技能习得\"><a href=\"#快速技能习得\" class=\"headerlink\" title=\"快速技能习得\"></a>快速技能习得</h1><h2 id=\"分解步骤\"><a href=\"#分解步骤\" class=\"headerlink\" title=\"分解步骤\"></a>分解步骤</h2><blockquote>\n<p>把技能做最大程度的细分，分成若干个小步骤</p>\n<h2 id=\"充分学习\"><a href=\"#充分学习\" class=\"headerlink\" title=\"充分学习\"></a>充分学习</h2><p>对每个小步骤进行充分的学习，以便能够灵活的练习，并在联系中自我纠正</p>\n<h2 id=\"克服困难\"><a href=\"#克服困难\" class=\"headerlink\" title=\"克服困难\"></a>克服困难</h2><p>克服联系中出现的生理，心理，或者情绪上的障碍</p>\n<h2 id=\"集中练习\"><a href=\"#集中练习\" class=\"headerlink\" title=\"集中练习\"></a>集中练习</h2><p>至少用20个小时集中练习最重要的小步骤</p>\n</blockquote>\n<p>选择一项技能，摸索出来最好的办法，腾出时间练习，知道掌握位置 <a id=\"more\"></a></p>\n<h1 id=\"快速技能习得的10个方法\"><a href=\"#快速技能习得的10个方法\" class=\"headerlink\" title=\"快速技能习得的10个方法\"></a>快速技能习得的10个方法</h1><ol>\n<li>选择方向</li>\n<li>集中精力</li>\n<li>制定目标</li>\n<li>分解技能</li>\n<li>获得工具</li>\n<li>扫除障碍</li>\n<li>腾出时间</li>\n<li>及时反馈</li>\n<li>计时训练</li>\n<li>数量速度</li>\n</ol>\n<blockquote>\n<p><a href=\"http://www.bilibili.com/video/av1911047/\" target=\"_blank\" rel=\"external\">TED演讲视频</a></p>\n</blockquote>\n","excerpt":"<h1 id=\"快速技能习得\"><a href=\"#快速技能习得\" class=\"headerlink\" title=\"快速技能习得\"></a>快速技能习得</h1><h2 id=\"分解步骤\"><a href=\"#分解步骤\" class=\"headerlink\" title=\"分解步骤\"></a>分解步骤</h2><blockquote>\n<p>把技能做最大程度的细分，分成若干个小步骤</p>\n<h2 id=\"充分学习\"><a href=\"#充分学习\" class=\"headerlink\" title=\"充分学习\"></a>充分学习</h2><p>对每个小步骤进行充分的学习，以便能够灵活的练习，并在联系中自我纠正</p>\n<h2 id=\"克服困难\"><a href=\"#克服困难\" class=\"headerlink\" title=\"克服困难\"></a>克服困难</h2><p>克服联系中出现的生理，心理，或者情绪上的障碍</p>\n<h2 id=\"集中练习\"><a href=\"#集中练习\" class=\"headerlink\" title=\"集中练习\"></a>集中练习</h2><p>至少用20个小时集中练习最重要的小步骤</p>\n</blockquote>\n<p>选择一项技能，摸索出来最好的办法，腾出时间练习，知道掌握位置","more":"</p>\n<h1 id=\"快速技能习得的10个方法\"><a href=\"#快速技能习得的10个方法\" class=\"headerlink\" title=\"快速技能习得的10个方法\"></a>快速技能习得的10个方法</h1><ol>\n<li>选择方向</li>\n<li>集中精力</li>\n<li>制定目标</li>\n<li>分解技能</li>\n<li>获得工具</li>\n<li>扫除障碍</li>\n<li>腾出时间</li>\n<li>及时反馈</li>\n<li>计时训练</li>\n<li>数量速度</li>\n</ol>\n<blockquote>\n<p><a href=\"http://www.bilibili.com/video/av1911047/\">TED演讲视频</a></p>\n</blockquote>"},{"title":"atom tutorial","date":"2014-08-27T07:58:41.000Z","updated":"2014-08-27T07:58:41.000Z","_content":"\n## how to use atom\n\n[atom-flight-manual](http://flight-manual.atom.io/using-atom/sections/atom-packages/)\n\n在编辑器中，`Command Palette` 中输入 `init script`，由于这个输入框里使用的是 `Fuzy matching`, 你输入到 s 的时候，估计 `Application: Open Your Init Script` 已经排在第一位了，当它是第一位的时候，直接回车键就可以了...... 在 `init script` 文件里拷贝粘贴以下代码：\n<!-- more -->\n```coffeescript\n # move cursor across the ending symbols...\n EndingSymbolRegex = /\\s*[)}>\\]/'\";:=-]/\n atom.commands.add 'atom-text-editor', 'custom:jump-over-symbol': (event) ->\n   editor = atom.workspace.getActiveTextEditor()\n   cursorMoved = false\n   for cursor in editor.getCursors()\n     range = cursor.getCurrentWordBufferRange(wordRegex: EndingSymbolRegex)\n     unless range.isEmpty()\n       cursor.setBufferPosition(range.end)\n       cursorMoved = true\n   event.abortKeyBinding() unless cursorMoved\n```\n\n然后用 呼出 `Command Palette`，在里面输入 `keymap`，你应该能看到`Application: Open Your keymap` 已经排在第一位了，当它是第一位的时候，直接回车键 ⏎ ...... 在 Keymap 文件里拷贝粘贴以下代码：\n\n```\n\"enter\": \"custom:jump-over-symbol\"\n```\n\n现在，用呼出 Command Palette，在里面输入 reload，你应该能看到 `Window: Reload`,启动加载生效。\n\n\n## atom Snippets\n编写自己的 snippets 按照格式，可以把代码片段很快输入。\n打开setting->install 可以添加 snippets 和 packages\n例如：\n\n```\n// apm是atom提供的一个安装工具\napm install atom-yii2 //网上找的的一个yii2的snippets，还有laravel的，php的\n```\n可以在atom官方网站或者github中找到\n\n[参考1]: https://atom.io/packages/snippets\n[参考2]: https://scotch.io/bar-talk/best-of-atom-features-plugins-acting-like-sublime-text\n\n\n\n## atom packages\nGOOGLE 下面的词汇，会得到一些常用的包\n> favorite atom packages\n> most popular atom packages\n> must have packages for developer\n","source":"_posts/2014/atom-tutorial.md","raw":"---\ntitle: atom tutorial\ndate: 2014-08-27T15:58:41.000Z\nupdated: 2014-08-27T15:58:41.000Z\ntags: null\ncategories: null\n---\n\n## how to use atom\n\n[atom-flight-manual](http://flight-manual.atom.io/using-atom/sections/atom-packages/)\n\n在编辑器中，`Command Palette` 中输入 `init script`，由于这个输入框里使用的是 `Fuzy matching`, 你输入到 s 的时候，估计 `Application: Open Your Init Script` 已经排在第一位了，当它是第一位的时候，直接回车键就可以了...... 在 `init script` 文件里拷贝粘贴以下代码：\n<!-- more -->\n```coffeescript\n # move cursor across the ending symbols...\n EndingSymbolRegex = /\\s*[)}>\\]/'\";:=-]/\n atom.commands.add 'atom-text-editor', 'custom:jump-over-symbol': (event) ->\n   editor = atom.workspace.getActiveTextEditor()\n   cursorMoved = false\n   for cursor in editor.getCursors()\n     range = cursor.getCurrentWordBufferRange(wordRegex: EndingSymbolRegex)\n     unless range.isEmpty()\n       cursor.setBufferPosition(range.end)\n       cursorMoved = true\n   event.abortKeyBinding() unless cursorMoved\n```\n\n然后用 呼出 `Command Palette`，在里面输入 `keymap`，你应该能看到`Application: Open Your keymap` 已经排在第一位了，当它是第一位的时候，直接回车键 ⏎ ...... 在 Keymap 文件里拷贝粘贴以下代码：\n\n```\n\"enter\": \"custom:jump-over-symbol\"\n```\n\n现在，用呼出 Command Palette，在里面输入 reload，你应该能看到 `Window: Reload`,启动加载生效。\n\n\n## atom Snippets\n编写自己的 snippets 按照格式，可以把代码片段很快输入。\n打开setting->install 可以添加 snippets 和 packages\n例如：\n\n```\n// apm是atom提供的一个安装工具\napm install atom-yii2 //网上找的的一个yii2的snippets，还有laravel的，php的\n```\n可以在atom官方网站或者github中找到\n\n[参考1]: https://atom.io/packages/snippets\n[参考2]: https://scotch.io/bar-talk/best-of-atom-features-plugins-acting-like-sublime-text\n\n\n\n## atom packages\nGOOGLE 下面的词汇，会得到一些常用的包\n> favorite atom packages\n> most popular atom packages\n> must have packages for developer\n","slug":"atom-tutorial","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp7y0007wsnnlxp2evnc","content":"<h2 id=\"how-to-use-atom\"><a href=\"#how-to-use-atom\" class=\"headerlink\" title=\"how to use atom\"></a>how to use atom</h2><p><a href=\"http://flight-manual.atom.io/using-atom/sections/atom-packages/\" target=\"_blank\" rel=\"external\">atom-flight-manual</a></p>\n<p>在编辑器中，<code>Command Palette</code> 中输入 <code>init script</code>，由于这个输入框里使用的是 <code>Fuzy matching</code>, 你输入到 s 的时候，估计 <code>Application: Open Your Init Script</code> 已经排在第一位了，当它是第一位的时候，直接回车键就可以了…… 在 <code>init script</code> 文件里拷贝粘贴以下代码：<br><a id=\"more\"></a><br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># move cursor across the ending symbols...</span></span><br><span class=\"line\">EndingSymbolRegex = <span class=\"regexp\">/\\s*[)&#125;&gt;\\]/</span><span class=\"string\">'\";:=-]/</span><br><span class=\"line\">atom.commands.add '</span>atom-text-editor<span class=\"string\">', '</span>custom:jump-over-symbol<span class=\"string\">': (event) -&gt;</span><br><span class=\"line\">  editor = atom.workspace.getActiveTextEditor()</span><br><span class=\"line\">  cursorMoved = false</span><br><span class=\"line\">  for cursor in editor.getCursors()</span><br><span class=\"line\">    range = cursor.getCurrentWordBufferRange(wordRegex: EndingSymbolRegex)</span><br><span class=\"line\">    unless range.isEmpty()</span><br><span class=\"line\">      cursor.setBufferPosition(range.end)</span><br><span class=\"line\">      cursorMoved = true</span><br><span class=\"line\">  event.abortKeyBinding() unless cursorMoved</span></span><br></pre></td></tr></table></figure></p>\n<p>然后用 呼出 <code>Command Palette</code>，在里面输入 <code>keymap</code>，你应该能看到<code>Application: Open Your keymap</code> 已经排在第一位了，当它是第一位的时候，直接回车键 ⏎ …… 在 Keymap 文件里拷贝粘贴以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;enter&quot;: &quot;custom:jump-over-symbol&quot;</span><br></pre></td></tr></table></figure>\n<p>现在，用呼出 Command Palette，在里面输入 reload，你应该能看到 <code>Window: Reload</code>,启动加载生效。</p>\n<h2 id=\"atom-Snippets\"><a href=\"#atom-Snippets\" class=\"headerlink\" title=\"atom Snippets\"></a>atom Snippets</h2><p>编写自己的 snippets 按照格式，可以把代码片段很快输入。<br>打开setting-&gt;install 可以添加 snippets 和 packages<br>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// apm是atom提供的一个安装工具</span><br><span class=\"line\">apm install atom-yii2 //网上找的的一个yii2的snippets，还有laravel的，php的</span><br></pre></td></tr></table></figure>\n<p>可以在atom官方网站或者github中找到</p>\n<h2 id=\"atom-packages\"><a href=\"#atom-packages\" class=\"headerlink\" title=\"atom packages\"></a>atom packages</h2><p>GOOGLE 下面的词汇，会得到一些常用的包</p>\n<blockquote>\n<p>favorite atom packages<br>most popular atom packages<br>must have packages for developer</p>\n</blockquote>\n","excerpt":"<h2 id=\"how-to-use-atom\"><a href=\"#how-to-use-atom\" class=\"headerlink\" title=\"how to use atom\"></a>how to use atom</h2><p><a href=\"http://flight-manual.atom.io/using-atom/sections/atom-packages/\">atom-flight-manual</a></p>\n<p>在编辑器中，<code>Command Palette</code> 中输入 <code>init script</code>，由于这个输入框里使用的是 <code>Fuzy matching</code>, 你输入到 s 的时候，估计 <code>Application: Open Your Init Script</code> 已经排在第一位了，当它是第一位的时候，直接回车键就可以了…… 在 <code>init script</code> 文件里拷贝粘贴以下代码：<br>","more":"<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># move cursor across the ending symbols...</span></span><br><span class=\"line\">EndingSymbolRegex = <span class=\"regexp\">/\\s*[)&#125;&gt;\\]/</span><span class=\"string\">'\";:=-]/</span><br><span class=\"line\">atom.commands.add '</span>atom-text-editor<span class=\"string\">', '</span>custom:jump-over-symbol<span class=\"string\">': (event) -&gt;</span><br><span class=\"line\">  editor = atom.workspace.getActiveTextEditor()</span><br><span class=\"line\">  cursorMoved = false</span><br><span class=\"line\">  for cursor in editor.getCursors()</span><br><span class=\"line\">    range = cursor.getCurrentWordBufferRange(wordRegex: EndingSymbolRegex)</span><br><span class=\"line\">    unless range.isEmpty()</span><br><span class=\"line\">      cursor.setBufferPosition(range.end)</span><br><span class=\"line\">      cursorMoved = true</span><br><span class=\"line\">  event.abortKeyBinding() unless cursorMoved</span></span><br></pre></td></tr></table></figure></p>\n<p>然后用 呼出 <code>Command Palette</code>，在里面输入 <code>keymap</code>，你应该能看到<code>Application: Open Your keymap</code> 已经排在第一位了，当它是第一位的时候，直接回车键 ⏎ …… 在 Keymap 文件里拷贝粘贴以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;enter&quot;: &quot;custom:jump-over-symbol&quot;</span><br></pre></td></tr></table></figure>\n<p>现在，用呼出 Command Palette，在里面输入 reload，你应该能看到 <code>Window: Reload</code>,启动加载生效。</p>\n<h2 id=\"atom-Snippets\"><a href=\"#atom-Snippets\" class=\"headerlink\" title=\"atom Snippets\"></a>atom Snippets</h2><p>编写自己的 snippets 按照格式，可以把代码片段很快输入。<br>打开setting-&gt;install 可以添加 snippets 和 packages<br>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// apm是atom提供的一个安装工具</span><br><span class=\"line\">apm install atom-yii2 //网上找的的一个yii2的snippets，还有laravel的，php的</span><br></pre></td></tr></table></figure>\n<p>可以在atom官方网站或者github中找到</p>\n<h2 id=\"atom-packages\"><a href=\"#atom-packages\" class=\"headerlink\" title=\"atom packages\"></a>atom packages</h2><p>GOOGLE 下面的词汇，会得到一些常用的包</p>\n<blockquote>\n<p>favorite atom packages<br>most popular atom packages<br>must have packages for developer</p>\n</blockquote>"},{"title":"hexo tutorial","date":"2014-08-17T11:08:34.000Z","_content":"\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n# Quick Start\n\n## Create a new post\n\n```bash\n$ hexo new \"My New Post\"\n$ hexo new article\n$ hexo new page tags\n$ hexo new page tags\n```\n<!-- more -->\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n## Run server\n\n```bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n## Generate static files\n\n```bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n## Deploy to remote sites\n\n```bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n# 总结\n\n## 安装\n\n```bash\n    //安装nvm,nvm是一个nodejs的版本管理器\n    curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n    //安装nodejs 4以上的稳定版，官方有两个版本，目前是4.4.5稳定版本，这里自带的也会安装npm对应的版本\n    nvm install 4\n\n    //如果已经安装，直接安装hexo客户端\n    npm install -g hexo-cli\n    //有时候上面的安装命令不成功，是因为npm的源请求不到，这里安装一个国内的淘宝源\n    npm install -g cnpm --registry=https://registry.npm.taobao.org\n    //安装完成之后,cnpm 就可以使用了\n    cnpm install -g hexo-cli\n```\n\n## 常用命令\n\n```bash\n    hexo new \"postName\" #新建文章\n    hexo new page \"pageName\" #新建页面\n    hexo new draft \"postname\" #草稿\n     hexo generate #生成静态页面至public目录\n    hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n    hexo deploy #将.deploy目录部署到GitHub\n    hexo help  # 查看帮助\n    hexo version  #查看Hexo的版本\n    hexo publish [layout] postname # 从草稿中发布\n\n    //git\n    npm install hexo-deployer-git --save\n\n    hexo deploy -g  #生成加部署\n    hexo server -g  #生成加预览\n```\n\n## Layout\n\nLayout | Path\n------ | -------------\npost   | source/_posts\npage   | source\ndraft  | source/_draft\n\n## Scaffolds(脚手架)更改默认的生成模板\n\n> 是根据scaffolds中的模板来创建的，其中参数可以用下面的：\n\nPlaceholder | Description\n----------- | -----------------\nlayout      | Layout\ntitle       | Title\ndate        | File created date\n\n## 重新部署\n\n```bash\n    hexo clean\n    hexo generate\n    hexo deploy\n```\n\n部署配置\n\n```bash\n    deploy:\n    type: git\n    repository: git@github.com:changyuan/changyuan.github.io.git\n    branch: master\n```\n\n> 在本地生成==ssh-keygen -t rsa -C \"admin@example.com\"== ，然后把是生成的公钥复制到==Settings->Deploy keys中==\n\n## 本地调试\n\n```bash\n    hexo g #生成\n    hexo s #启动本地服务，进行文章预览调试\n    #简化为\n    hexo s -g\n```\n\n## 命令简写\n\n```bash\n    hexo n == hexo new\n    hexo g == hexo generate\n    hexo s == hexo server\n    hexo d == hexo deploy\n```\n\n> 这个静态的web网站就被部署到了github，检查一下分支是gh-pages。gh-pages是github为了web项目特别设置的分支。\n\n## Tag Plugins 引用块\n\n### Block Quote\n\n{% blockquote 作者, 作品 %} Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. 这是引用的话。 {% endblockquote %}\n\n--------------------------------------------------------------------------------\n\n{% blockquote Seth Godin <http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html> Welcome to Island Marketing %} Every interaction is both precious and an opportunity to delight. {% endblockquote %}\n\n### Code Block\n\n{% codeblock %} alert {% endcodeblock %}\n\n{% codeblock lang:objc %} [rectangle setX: 10 y: 10 width: 20 height: 20]; {% endcodeblock %}\n\n{% codeblock Array.map %} array.map(callback[, thisArg]) {% endcodeblock %}\n\n{% codeblock _.compact <http://underscorejs.org/#compact> Underscore.js %}_ .compact([0, 1, false, 2, '', 3]); => [1, 2, 3] {% endcodeblock %}\n\n- [参考1](http://blog.fens.me/hexo-blog-github/)\n- [参考2](https://hexo.io/docs/writing.html)\n","source":"_posts/2014/hexo-tutorial.md","raw":"---\ntitle: hexo tutorial\ndate: 2014-08-17T19:08:34.000Z\ntags:\n  - hexo\n  - next\ncategories: 日志\n---\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n# Quick Start\n\n## Create a new post\n\n```bash\n$ hexo new \"My New Post\"\n$ hexo new article\n$ hexo new page tags\n$ hexo new page tags\n```\n<!-- more -->\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n## Run server\n\n```bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n## Generate static files\n\n```bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n## Deploy to remote sites\n\n```bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n# 总结\n\n## 安装\n\n```bash\n    //安装nvm,nvm是一个nodejs的版本管理器\n    curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n    //安装nodejs 4以上的稳定版，官方有两个版本，目前是4.4.5稳定版本，这里自带的也会安装npm对应的版本\n    nvm install 4\n\n    //如果已经安装，直接安装hexo客户端\n    npm install -g hexo-cli\n    //有时候上面的安装命令不成功，是因为npm的源请求不到，这里安装一个国内的淘宝源\n    npm install -g cnpm --registry=https://registry.npm.taobao.org\n    //安装完成之后,cnpm 就可以使用了\n    cnpm install -g hexo-cli\n```\n\n## 常用命令\n\n```bash\n    hexo new \"postName\" #新建文章\n    hexo new page \"pageName\" #新建页面\n    hexo new draft \"postname\" #草稿\n     hexo generate #生成静态页面至public目录\n    hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n    hexo deploy #将.deploy目录部署到GitHub\n    hexo help  # 查看帮助\n    hexo version  #查看Hexo的版本\n    hexo publish [layout] postname # 从草稿中发布\n\n    //git\n    npm install hexo-deployer-git --save\n\n    hexo deploy -g  #生成加部署\n    hexo server -g  #生成加预览\n```\n\n## Layout\n\nLayout | Path\n------ | -------------\npost   | source/_posts\npage   | source\ndraft  | source/_draft\n\n## Scaffolds(脚手架)更改默认的生成模板\n\n> 是根据scaffolds中的模板来创建的，其中参数可以用下面的：\n\nPlaceholder | Description\n----------- | -----------------\nlayout      | Layout\ntitle       | Title\ndate        | File created date\n\n## 重新部署\n\n```bash\n    hexo clean\n    hexo generate\n    hexo deploy\n```\n\n部署配置\n\n```bash\n    deploy:\n    type: git\n    repository: git@github.com:changyuan/changyuan.github.io.git\n    branch: master\n```\n\n> 在本地生成==ssh-keygen -t rsa -C \"admin@example.com\"== ，然后把是生成的公钥复制到==Settings->Deploy keys中==\n\n## 本地调试\n\n```bash\n    hexo g #生成\n    hexo s #启动本地服务，进行文章预览调试\n    #简化为\n    hexo s -g\n```\n\n## 命令简写\n\n```bash\n    hexo n == hexo new\n    hexo g == hexo generate\n    hexo s == hexo server\n    hexo d == hexo deploy\n```\n\n> 这个静态的web网站就被部署到了github，检查一下分支是gh-pages。gh-pages是github为了web项目特别设置的分支。\n\n## Tag Plugins 引用块\n\n### Block Quote\n\n{% blockquote 作者, 作品 %} Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. 这是引用的话。 {% endblockquote %}\n\n--------------------------------------------------------------------------------\n\n{% blockquote Seth Godin <http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html> Welcome to Island Marketing %} Every interaction is both precious and an opportunity to delight. {% endblockquote %}\n\n### Code Block\n\n{% codeblock %} alert {% endcodeblock %}\n\n{% codeblock lang:objc %} [rectangle setX: 10 y: 10 width: 20 height: 20]; {% endcodeblock %}\n\n{% codeblock Array.map %} array.map(callback[, thisArg]) {% endcodeblock %}\n\n{% codeblock _.compact <http://underscorejs.org/#compact> Underscore.js %}_ .compact([0, 1, false, 2, '', 3]); => [1, 2, 3] {% endcodeblock %}\n\n- [参考1](http://blog.fens.me/hexo-blog-github/)\n- [参考2](https://hexo.io/docs/writing.html)\n","slug":"hexo-tutorial","published":1,"updated":"2017-01-04T03:53:39.551Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp7y0009wsnnq7cg1acg","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h1 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h1><h2 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br><span class=\"line\">$ hexo new article</span><br><span class=\"line\">$ hexo new page tags</span><br><span class=\"line\">$ hexo new page tags</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h2 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h2 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h2 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//安装nvm,nvm是一个nodejs的版本管理器</span><br><span class=\"line\">curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class=\"line\">//安装nodejs 4以上的稳定版，官方有两个版本，目前是4.4.5稳定版本，这里自带的也会安装npm对应的版本</span><br><span class=\"line\">nvm install 4</span><br><span class=\"line\"></span><br><span class=\"line\">//如果已经安装，直接安装hexo客户端</span><br><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\">//有时候上面的安装命令不成功，是因为npm的源请求不到，这里安装一个国内的淘宝源</span><br><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class=\"line\">//安装完成之后,cnpm 就可以使用了</span><br><span class=\"line\">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"postName\"</span> <span class=\"comment\">#新建文章</span></span><br><span class=\"line\">hexo new page <span class=\"string\">\"pageName\"</span> <span class=\"comment\">#新建页面</span></span><br><span class=\"line\">hexo new draft <span class=\"string\">\"postname\"</span> <span class=\"comment\">#草稿</span></span><br><span class=\"line\"> hexo generate <span class=\"comment\">#生成静态页面至public目录</span></span><br><span class=\"line\">hexo server <span class=\"comment\">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\">#将.deploy目录部署到GitHub</span></span><br><span class=\"line\">hexo <span class=\"built_in\">help</span>  <span class=\"comment\"># 查看帮助</span></span><br><span class=\"line\">hexo version  <span class=\"comment\">#查看Hexo的版本</span></span><br><span class=\"line\">hexo publish [layout] postname <span class=\"comment\"># 从草稿中发布</span></span><br><span class=\"line\"></span><br><span class=\"line\">//git</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy -g  <span class=\"comment\">#生成加部署</span></span><br><span class=\"line\">hexo server -g  <span class=\"comment\">#生成加预览</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Layout\"><a href=\"#Layout\" class=\"headerlink\" title=\"Layout\"></a>Layout</h2><table>\n<thead>\n<tr>\n<th>Layout</th>\n<th>Path</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>post</td>\n<td>source/_posts</td>\n</tr>\n<tr>\n<td>page</td>\n<td>source</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>source/_draft</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Scaffolds-脚手架-更改默认的生成模板\"><a href=\"#Scaffolds-脚手架-更改默认的生成模板\" class=\"headerlink\" title=\"Scaffolds(脚手架)更改默认的生成模板\"></a>Scaffolds(脚手架)更改默认的生成模板</h2><blockquote>\n<p>是根据scaffolds中的模板来创建的，其中参数可以用下面的：</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>Layout</td>\n</tr>\n<tr>\n<td>title</td>\n<td>Title</td>\n</tr>\n<tr>\n<td>date</td>\n<td>File created date</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"重新部署\"><a href=\"#重新部署\" class=\"headerlink\" title=\"重新部署\"></a>重新部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>部署配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\"><span class=\"built_in\">type</span>: git</span><br><span class=\"line\">repository: git@github.com:changyuan/changyuan.github.io.git</span><br><span class=\"line\">branch: master</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在本地生成==ssh-keygen -t rsa -C “admin@example.com”== ，然后把是生成的公钥复制到==Settings-&gt;Deploy keys中==</p>\n</blockquote>\n<h2 id=\"本地调试\"><a href=\"#本地调试\" class=\"headerlink\" title=\"本地调试\"></a>本地调试</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g <span class=\"comment\">#生成</span></span><br><span class=\"line\">hexo s <span class=\"comment\">#启动本地服务，进行文章预览调试</span></span><br><span class=\"line\"><span class=\"comment\">#简化为</span></span><br><span class=\"line\">hexo s -g</span><br></pre></td></tr></table></figure>\n<h2 id=\"命令简写\"><a href=\"#命令简写\" class=\"headerlink\" title=\"命令简写\"></a>命令简写</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n == hexo new</span><br><span class=\"line\">hexo g == hexo generate</span><br><span class=\"line\">hexo s == hexo server</span><br><span class=\"line\">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这个静态的web网站就被部署到了github，检查一下分支是gh-pages。gh-pages是github为了web项目特别设置的分支。</p>\n</blockquote>\n<h2 id=\"Tag-Plugins-引用块\"><a href=\"#Tag-Plugins-引用块\" class=\"headerlink\" title=\"Tag Plugins 引用块\"></a>Tag Plugins 引用块</h2><h3 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h3><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. 这是引用的话。 </p>\n<footer><strong>作者</strong><cite>作品</cite></footer></blockquote>\n\n--------------------------------------------------------------------------------\n\n<blockquote><p>Every interaction is both precious and an opportunity to delight. </p>\n<footer><strong>Seth Godin <http: 2009=\"\" sethgodin.typepad.com=\"\" seths_blog=\"\" 07=\"\" welcome-to-island-marketing.html=\"\"> Welcome to Island Marketing</http:></strong></footer></blockquote>\n<h3 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>]; </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg]) </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact <http: underscorejs.org=\"\" #compact=\"\"> Underscore.js</http:></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_ .compact([0, 1, false, 2, &apos;&apos;, 3]); =&gt; [1, 2, 3] </span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"http://blog.fens.me/hexo-blog-github/\" target=\"_blank\" rel=\"external\">参考1</a></li>\n<li><a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">参考2</a></li>\n</ul>\n","excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h1 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h1><h2 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br><span class=\"line\">$ hexo new article</span><br><span class=\"line\">$ hexo new page tags</span><br><span class=\"line\">$ hexo new page tags</span><br></pre></td></tr></table></figure>","more":"<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h2 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h2 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h2 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//安装nvm,nvm是一个nodejs的版本管理器</span><br><span class=\"line\">curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class=\"line\">//安装nodejs 4以上的稳定版，官方有两个版本，目前是4.4.5稳定版本，这里自带的也会安装npm对应的版本</span><br><span class=\"line\">nvm install 4</span><br><span class=\"line\"></span><br><span class=\"line\">//如果已经安装，直接安装hexo客户端</span><br><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\">//有时候上面的安装命令不成功，是因为npm的源请求不到，这里安装一个国内的淘宝源</span><br><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class=\"line\">//安装完成之后,cnpm 就可以使用了</span><br><span class=\"line\">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"postName\"</span> <span class=\"comment\">#新建文章</span></span><br><span class=\"line\">hexo new page <span class=\"string\">\"pageName\"</span> <span class=\"comment\">#新建页面</span></span><br><span class=\"line\">hexo new draft <span class=\"string\">\"postname\"</span> <span class=\"comment\">#草稿</span></span><br><span class=\"line\"> hexo generate <span class=\"comment\">#生成静态页面至public目录</span></span><br><span class=\"line\">hexo server <span class=\"comment\">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\">#将.deploy目录部署到GitHub</span></span><br><span class=\"line\">hexo <span class=\"built_in\">help</span>  <span class=\"comment\"># 查看帮助</span></span><br><span class=\"line\">hexo version  <span class=\"comment\">#查看Hexo的版本</span></span><br><span class=\"line\">hexo publish [layout] postname <span class=\"comment\"># 从草稿中发布</span></span><br><span class=\"line\"></span><br><span class=\"line\">//git</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy -g  <span class=\"comment\">#生成加部署</span></span><br><span class=\"line\">hexo server -g  <span class=\"comment\">#生成加预览</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Layout\"><a href=\"#Layout\" class=\"headerlink\" title=\"Layout\"></a>Layout</h2><table>\n<thead>\n<tr>\n<th>Layout</th>\n<th>Path</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>post</td>\n<td>source/_posts</td>\n</tr>\n<tr>\n<td>page</td>\n<td>source</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>source/_draft</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Scaffolds-脚手架-更改默认的生成模板\"><a href=\"#Scaffolds-脚手架-更改默认的生成模板\" class=\"headerlink\" title=\"Scaffolds(脚手架)更改默认的生成模板\"></a>Scaffolds(脚手架)更改默认的生成模板</h2><blockquote>\n<p>是根据scaffolds中的模板来创建的，其中参数可以用下面的：</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>Layout</td>\n</tr>\n<tr>\n<td>title</td>\n<td>Title</td>\n</tr>\n<tr>\n<td>date</td>\n<td>File created date</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"重新部署\"><a href=\"#重新部署\" class=\"headerlink\" title=\"重新部署\"></a>重新部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>部署配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\"><span class=\"built_in\">type</span>: git</span><br><span class=\"line\">repository: git@github.com:changyuan/changyuan.github.io.git</span><br><span class=\"line\">branch: master</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在本地生成==ssh-keygen -t rsa -C “admin@example.com”== ，然后把是生成的公钥复制到==Settings-&gt;Deploy keys中==</p>\n</blockquote>\n<h2 id=\"本地调试\"><a href=\"#本地调试\" class=\"headerlink\" title=\"本地调试\"></a>本地调试</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g <span class=\"comment\">#生成</span></span><br><span class=\"line\">hexo s <span class=\"comment\">#启动本地服务，进行文章预览调试</span></span><br><span class=\"line\"><span class=\"comment\">#简化为</span></span><br><span class=\"line\">hexo s -g</span><br></pre></td></tr></table></figure>\n<h2 id=\"命令简写\"><a href=\"#命令简写\" class=\"headerlink\" title=\"命令简写\"></a>命令简写</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n == hexo new</span><br><span class=\"line\">hexo g == hexo generate</span><br><span class=\"line\">hexo s == hexo server</span><br><span class=\"line\">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这个静态的web网站就被部署到了github，检查一下分支是gh-pages。gh-pages是github为了web项目特别设置的分支。</p>\n</blockquote>\n<h2 id=\"Tag-Plugins-引用块\"><a href=\"#Tag-Plugins-引用块\" class=\"headerlink\" title=\"Tag Plugins 引用块\"></a>Tag Plugins 引用块</h2><h3 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h3><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. 这是引用的话。 </p>\n<footer><strong>作者</strong><cite>作品</cite></footer></blockquote>\n\n--------------------------------------------------------------------------------\n\n<blockquote><p>Every interaction is both precious and an opportunity to delight. </p>\n<footer><strong>Seth Godin <http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html> Welcome to Island Marketing</strong></footer></blockquote>\n<h3 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>]; </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg]) </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact <http://underscorejs.org/#compact> Underscore.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_ .compact([0, 1, false, 2, &apos;&apos;, 3]); =&gt; [1, 2, 3] </span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"http://blog.fens.me/hexo-blog-github/\">参考1</a></li>\n<li><a href=\"https://hexo.io/docs/writing.html\">参考2</a></li>\n</ul>"},{"title":"HTTP 协议入门","date":"2014-11-23T08:43:07.000Z","updated":"2014-11-23T08:43:07.000Z","_content":"HTTP协议是互联网的基础协议，也是网页开发的必备知识，最新版本 HTTP/2 更是让它成为技术热点。\n\n本文介绍HTTP协议的历史演变和设计思路。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2016/bg2016081901.jpg)\n<!-- more -->\n## 一、HTTP/0.9\n\nHTTP是基于 TCP/IP 协议的[**应用层协议**](http://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html)。它不涉及数据包（packet）传输，主要规定了客户端和服务器之间的通信格式，默认使用80端口。\n\n最早版本是1991年发布的0.9版。该版本极其简单，只有一个命令`GET`。\n\n```http\nGET /index.html\n```\n\n上面命令表示，TCP连接（connection）建立后，客户端向服务器请求（request）网页`index.html`。\n\n协议规定，服务器只能回应HTML格式的字符串，不能回应别的格式。\n\n```html\n<html>\n  <body>Hello World</body>\n</html>\n```\n\n服务器发送完毕，就关闭TCP连接。\n\n## 二、HTTP/1.0\n\n### 2.1 简介\n\n1996年5月，HTTP/1.0 版本发布，内容大大增加。\n\n首先，任何格式的内容都可以发送。这使得互联网不仅可以传输文字，还能传输图像、视频、二进制文件。这为互联网的大发展奠定了基础。\n\n其次，除了`GET`命令，还引入了`POST`命令和`HEAD`命令，丰富了浏览器与服务器的互动手段。\n\n再次，HTTP请求和回应的格式也变了。除了数据部分，每次通信都必须包括头信息（HTTP header），用来描述一些元数据。\n\n其他的新增功能还包括状态码（status code）、多字符集支持、多部分发送（multi-part type）、权限（authorization）、缓存（cache）、内容编码（content encoding）等。\n\n### 2.2 请求格式\n\n下面是一个1.0版的HTTP请求的例子。\n\n```http\nGET / HTTP/1.0\nHost: kamranahmed.info\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5)\nAccept: */*\n```\n\n可以看到，这个格式与0.9版有很大变化。\n\n第一行是请求命令，必须在尾部添加协议版本（`HTTP/1.0`）。后面就是多行头信息，描述客户端的情况。\n\n### 2.3 回应格式\n\n服务器的回应如下。\n\n```http\nHTTP/1.0 200 OK \nContent-Type: text/plain\nContent-Length: 137582\nExpires: Thu, 05 Dec 1997 16:00:00 GMT\nLast-Modified: Wed, 5 August 1996 15:55:28 GMT\nServer: Apache 0.84\n\n<html>\n  <body>Hello World</body>\n</html>\n```\n\n回应的格式是`头信息 + 一个空行（`\\r\\n`） + 数据`。其中，第一行是`协议版本 + 状态码（status code） + 状态描述`。\n\n### 2.4 Content-Type 字段\n\n关于字符的编码，1.0版规定，头信息必须是 ASCII 码，后面的数据可以是任何格式。因此，服务器回应的时候，必须告诉客户端，数据是什么格式，这就是`Content-Type`字段的作用。\n\n下面是一些常见的`Content-Type`字段的值。\n\n> - text/plain\n- text/html\n- text/css\n- image/jpeg\n- image/png\n- image/svg+xml\n- audio/mp4\n- video/mp4\n- application/javascript\n- application/pdf\n- application/zip\n- application/atom+xml\n\n这些数据类型总称为`MIME type`，包含一级类型和二级类型，之间用斜杠分隔。\n\n除了预定义的类型，厂商也可以自定义类型。\n\n```http\napplication/vnd.debian.binary-package\n```\n\n上面的类型表明，发送的是Debian系统的二进制数据包。\n\n`MIME type`还可以在尾部使用分号，添加参数。\n\n```http\nContent-Type: text/html; charset=utf-8\n```\n\n上面的类型表明，发送的是网页，而且编码是UTF-8。\n\n`MIME type`不仅用在HTTP协议，还可以用在其他地方，比如HTML网页。\n\n```html\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<!-- 等同于 -->\n<meta charset=\"utf-8\" /> \n```\n\n### 2.5 Content-Encoding 字段\n\n由于发送的数据可以是任何格式，因此可以把数据压缩后再发送。`Content-Encoding`字段说明数据的压缩方法。\n\n```http\nContent-Encoding: gzip\nContent-Encoding: compress\nContent-Encoding: deflate\n```\n\n客户端在请求时，用`Accept-Encoding`字段说明自己可以接受哪些压缩方法。\n\n```http\nAccept-Encoding: gzip, deflate\n```\n\n### 2.6 缺点\n\nHTTP/1.0 版的主要缺点是，每个TCP连接只能发送一个请求。发送数据完毕，连接就关闭，如果还要请求其他资源，就必须再新建一个连接。\n\nTCP连接的新建成本很高，因为需要客户端和浏览器三次握手，并且开始时发送速率较慢（slow start）。所以，HTTP 1.0版本的性能比较差。随着网页加载的外部资源越来越多，这个问题就愈发突出了。\n\n为了解决这个问题，有些浏览器在请求时，用了一个非标准的`Connection`字段。\n\n```http\nConnection: keep-alive\n```\n\n这个字段要求服务器不要关闭TCP连接，以便其他请求复用。服务器同样回应这个字段。\n\n```http\nConnection: keep-alive\n```\n\n一个可以复用的TCP连接就建立了，直到客户端或服务器主动关闭连接。但是，这不是标准字段，不同实现的行为可能不一致，因此不是根本的解决办法。\n\n## 三、HTTP/1.1\n\n1997年1月，HTTP/1.1 版本发布，只比 1.0 版本晚了半年。它进一步完善了 HTTP 协议，一直用到了20年后的今天，直到现在还是最流行的版本。\n\n### 3.1 持久连接\n\n1.1 版的最大变化，就是引入了持久连接（persistent connection），即TCP连接默认不关闭，可以被多个请求复用，不用声明`Connection: keep-alive`。\n\n客户端和服务器发现对方一段时间没有活动，就可以主动关闭连接。不过，规范的做法是，客户端在最后一个请求时，发送`Connection: close`，明确要求服务器关闭TCP连接。\n\n```http\nConnection: close\n```\n\n目前，对于同一个域名，大多数浏览器允许同时建立6个持久连接。\n\n### 3.2 管道机制\n\n1.1 版还引入了管道机制（pipelining），即在同一个TCP连接里面，客户端可以同时发送多个请求。这样就进一步改进了HTTP协议的效率。\n\n举例来说，客户端需要请求两个资源。以前的做法是，在同一个TCP连接里面，先发送A请求，然后等待服务器做出回应，收到后再发出B请求。管道机制则是允许浏览器同时发出A请求和B请求，但是服务器还是按照顺序，先回应A请求，完成后再回应B请求。\n\n### 3.3 Content-Length 字段\n\n一个TCP连接现在可以传送多个回应，势必就要有一种机制，区分数据包是属于哪一个回应的。这就是`Content-length`字段的作用，声明本次回应的数据长度。\n\n```http\nContent-Length: 3495\n```\n\n上面代码告诉浏览器，本次回应的长度是3495个字节，后面的字节就属于下一个回应了。\n\n在1.0版中，`Content-Length`字段不是必需的，因为浏览器发现服务器关闭了TCP连接，就表明收到的数据包已经全了。\n\n### 3.4 分块传输编码\n\n使用`Content-Length`字段的前提条件是，服务器发送回应之前，必须知道回应的数据长度。\n\n对于一些很耗时的动态操作来说，这意味着，服务器要等到所有操作完成，才能发送数据，显然这样的效率不高。更好的处理方法是，产生一块数据，就发送一块，采用“流模式”（stream）取代“缓存模式”（buffer）。\n\n因此，1.1版规定可以不使用`Content-Length`字段，而使用[“分块传输编码”](https://zh.wikipedia.org/wiki/%E5%88%86%E5%9D%97%E4%BC%A0%E8%BE%93%E7%BC%96%E7%A0%81)（chunked transfer encoding）。只要请求或回应的头信息有`Transfer-Encoding`字段，就表明回应将由数量未定的数据块组成。\n\n```http\nTransfer-Encoding: chunked\n```\n\n每个非空的数据块之前，会有一个16进制的数值，表示这个块的长度。最后是一个大小为0的块，就表示本次回应的数据发送完了。下面是一个例子。\n\n```http\nHTTP/1.1 200 OK\nContent-Type: text/plain\nTransfer-Encoding: chunked\n\n25\nThis is the data in the first chunk\n\n1C\nand this is the second one\n\n3\ncon\n\n8\nsequence\n\n0\n\n```\n\n### 3.5 其他功能\n\n1.1版还新增了许多动词方法：`PUT`、`PATCH`、`HEAD`、 `OPTIONS`、`DELETE`。\n\n另外，客户端的请求新增了`Host`字段，用来指定服务器的域名。\n\n```http\nHost: www.example.com\n```\n\n有了`Host`字段，就可以将请求发往同一台服务器上的不同网站，为虚拟主机的兴起打下了基础。\n\n### 3.6 缺点\n\n虽然1.1版允许复用TCP连接，但是同一个TCP连接里面，所有的数据通信是按次序进行的。服务器只有处理完一个回应，才会进行下一个回应。要是前面的回应特别慢，后面就会有许多请求排队等着。这称为[“队头堵塞”](https://zh.wikipedia.org/wiki/%E9%98%9F%E5%A4%B4%E9%98%BB%E5%A1%9E)（Head-of-line blocking）。\n\n为了避免这个问题，只有两种方法：一是减少请求数，二是同时多开持久连接。这导致了很多的网页优化技巧，比如合并脚本和样式表、将图片嵌入CSS代码、域名分片（domain sharding）等等。如果HTTP协议设计得更好一些，这些额外的工作是可以避免的。\n\n## 四、SPDY 协议\n\n2009年，谷歌公开了自行研发的 SPDY 协议，主要解决 HTTP/1.1 效率不高的问题。 \n\n这个协议在Chrome浏览器上证明可行以后，就被当作 HTTP/2 的基础，主要特性都在 HTTP/2 之中得到继承。\n\n## 五、HTTP/2\n\n2015年，HTTP/2 发布。它不叫 HTTP/2.0，是因为标准委员会不打算再发布子版本了，下一个新版本将是 HTTP/3。\n\n### 5.1 二进制协议\n\nHTTP/1.1 版的头信息肯定是文本（ASCII编码），数据体可以是文本，也可以是二进制。HTTP/2 则是一个彻底的二进制协议，头信息和数据体都是二进制，并且统称为“帧”（frame）：头信息帧和数据帧。\n\n二进制协议的一个好处是，可以定义额外的帧。HTTP/2 定义了近十种帧，为将来的高级应用打好了基础。如果使用文本实现这种功能，解析数据将会变得非常麻烦，二进制解析则方便得多。\n\n### 5.2 多工\n\nHTTP/2 复用TCP连接，在一个连接里，客户端和浏览器都可以同时发送多个请求或回应，而且不用按照顺序一一对应，这样就避免了“队头堵塞”。\n\n举例来说，在一个TCP连接里面，服务器同时收到了A请求和B请求，于是先回应A请求，结果发现处理过程非常耗时，于是就发送A请求已经处理好的部分， 接着回应B请求，完成后，再发送A请求剩下的部分。\n\n这样双向的、实时的通信，就叫做多工（Multiplexing）。\n\n### 5.3 数据流\n\n因为 HTTP/2 的数据包是不按顺序发送的，同一个连接里面连续的数据包，可能属于不同的回应。因此，必须要对数据包做标记，指出它属于哪个回应。\n\nHTTP/2 将每个请求或回应的所有数据包，称为一个数据流（stream）。每个数据流都有一个独一无二的编号。数据包发送的时候，都必须标记数据流ID，用来区分它属于哪个数据流。另外还规定，客户端发出的数据流，ID一律为奇数，服务器发出的，ID为偶数。\n\n数据流发送到一半的时候，客户端和服务器都可以发送信号（`RST_STREAM`帧），取消这个数据流。1.1版取消数据流的唯一方法，就是关闭TCP连接。这就是说，HTTP/2 可以取消某一次请求，同时保证TCP连接还打开着，可以被其他请求使用。\n\n客户端还可以指定数据流的优先级。优先级越高，服务器就会越早回应。\n\n### 5.4 头信息压缩\n\nHTTP 协议不带有状态，每次请求都必须附上所有信息。所以，请求的很多字段都是重复的，比如`Cookie`和`User Agent`，一模一样的内容，每次请求都必须附带，这会浪费很多带宽，也影响速度。\n\nHTTP/2 对这一点做了优化，引入了头信息压缩机制（header compression）。一方面，头信息使用`gzip`或`compress`压缩后再发送；另一方面，客户端和服务器同时维护一张头信息表，所有字段都会存入这个表，生成一个索引号，以后就不发送同样字段了，只发送索引号，这样就提高速度了。\n\n### 5.5 服务器推送\n\nHTTP/2 允许服务器未经请求，主动向客户端发送资源，这叫做服务器推送（server push）。\n\n常见场景是客户端请求一个网页，这个网页里面包含很多静态资源。正常情况下，客户端必须收到网页后，解析HTML源码，发现有静态资源，再发出静态资源请求。其实，服务器可以预期到客户端请求网页后，很可能会再请求静态资源，所以就主动把这些静态资源随着网页一起发给客户端了。\n\n### 六、参考链接\n\n- [Journey to HTTP/2](http://kamranahmed.info/blog/2016/08/13/http-in-depth/), by Kamran Ahmed\n- [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol), by Wikipedia\n- [HTTP/2 Specification](https://http2.github.io/http2-spec/)","source":"_posts/2014/http.md","raw":"---\ntitle: HTTP 协议入门 \ndate: 2014-11-23 16:43:07\nupdated: 2014-11-23 16:43:07\ntags:\ncategories:\n---\nHTTP协议是互联网的基础协议，也是网页开发的必备知识，最新版本 HTTP/2 更是让它成为技术热点。\n\n本文介绍HTTP协议的历史演变和设计思路。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2016/bg2016081901.jpg)\n<!-- more -->\n## 一、HTTP/0.9\n\nHTTP是基于 TCP/IP 协议的[**应用层协议**](http://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html)。它不涉及数据包（packet）传输，主要规定了客户端和服务器之间的通信格式，默认使用80端口。\n\n最早版本是1991年发布的0.9版。该版本极其简单，只有一个命令`GET`。\n\n```http\nGET /index.html\n```\n\n上面命令表示，TCP连接（connection）建立后，客户端向服务器请求（request）网页`index.html`。\n\n协议规定，服务器只能回应HTML格式的字符串，不能回应别的格式。\n\n```html\n<html>\n  <body>Hello World</body>\n</html>\n```\n\n服务器发送完毕，就关闭TCP连接。\n\n## 二、HTTP/1.0\n\n### 2.1 简介\n\n1996年5月，HTTP/1.0 版本发布，内容大大增加。\n\n首先，任何格式的内容都可以发送。这使得互联网不仅可以传输文字，还能传输图像、视频、二进制文件。这为互联网的大发展奠定了基础。\n\n其次，除了`GET`命令，还引入了`POST`命令和`HEAD`命令，丰富了浏览器与服务器的互动手段。\n\n再次，HTTP请求和回应的格式也变了。除了数据部分，每次通信都必须包括头信息（HTTP header），用来描述一些元数据。\n\n其他的新增功能还包括状态码（status code）、多字符集支持、多部分发送（multi-part type）、权限（authorization）、缓存（cache）、内容编码（content encoding）等。\n\n### 2.2 请求格式\n\n下面是一个1.0版的HTTP请求的例子。\n\n```http\nGET / HTTP/1.0\nHost: kamranahmed.info\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5)\nAccept: */*\n```\n\n可以看到，这个格式与0.9版有很大变化。\n\n第一行是请求命令，必须在尾部添加协议版本（`HTTP/1.0`）。后面就是多行头信息，描述客户端的情况。\n\n### 2.3 回应格式\n\n服务器的回应如下。\n\n```http\nHTTP/1.0 200 OK \nContent-Type: text/plain\nContent-Length: 137582\nExpires: Thu, 05 Dec 1997 16:00:00 GMT\nLast-Modified: Wed, 5 August 1996 15:55:28 GMT\nServer: Apache 0.84\n\n<html>\n  <body>Hello World</body>\n</html>\n```\n\n回应的格式是`头信息 + 一个空行（`\\r\\n`） + 数据`。其中，第一行是`协议版本 + 状态码（status code） + 状态描述`。\n\n### 2.4 Content-Type 字段\n\n关于字符的编码，1.0版规定，头信息必须是 ASCII 码，后面的数据可以是任何格式。因此，服务器回应的时候，必须告诉客户端，数据是什么格式，这就是`Content-Type`字段的作用。\n\n下面是一些常见的`Content-Type`字段的值。\n\n> - text/plain\n- text/html\n- text/css\n- image/jpeg\n- image/png\n- image/svg+xml\n- audio/mp4\n- video/mp4\n- application/javascript\n- application/pdf\n- application/zip\n- application/atom+xml\n\n这些数据类型总称为`MIME type`，包含一级类型和二级类型，之间用斜杠分隔。\n\n除了预定义的类型，厂商也可以自定义类型。\n\n```http\napplication/vnd.debian.binary-package\n```\n\n上面的类型表明，发送的是Debian系统的二进制数据包。\n\n`MIME type`还可以在尾部使用分号，添加参数。\n\n```http\nContent-Type: text/html; charset=utf-8\n```\n\n上面的类型表明，发送的是网页，而且编码是UTF-8。\n\n`MIME type`不仅用在HTTP协议，还可以用在其他地方，比如HTML网页。\n\n```html\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<!-- 等同于 -->\n<meta charset=\"utf-8\" /> \n```\n\n### 2.5 Content-Encoding 字段\n\n由于发送的数据可以是任何格式，因此可以把数据压缩后再发送。`Content-Encoding`字段说明数据的压缩方法。\n\n```http\nContent-Encoding: gzip\nContent-Encoding: compress\nContent-Encoding: deflate\n```\n\n客户端在请求时，用`Accept-Encoding`字段说明自己可以接受哪些压缩方法。\n\n```http\nAccept-Encoding: gzip, deflate\n```\n\n### 2.6 缺点\n\nHTTP/1.0 版的主要缺点是，每个TCP连接只能发送一个请求。发送数据完毕，连接就关闭，如果还要请求其他资源，就必须再新建一个连接。\n\nTCP连接的新建成本很高，因为需要客户端和浏览器三次握手，并且开始时发送速率较慢（slow start）。所以，HTTP 1.0版本的性能比较差。随着网页加载的外部资源越来越多，这个问题就愈发突出了。\n\n为了解决这个问题，有些浏览器在请求时，用了一个非标准的`Connection`字段。\n\n```http\nConnection: keep-alive\n```\n\n这个字段要求服务器不要关闭TCP连接，以便其他请求复用。服务器同样回应这个字段。\n\n```http\nConnection: keep-alive\n```\n\n一个可以复用的TCP连接就建立了，直到客户端或服务器主动关闭连接。但是，这不是标准字段，不同实现的行为可能不一致，因此不是根本的解决办法。\n\n## 三、HTTP/1.1\n\n1997年1月，HTTP/1.1 版本发布，只比 1.0 版本晚了半年。它进一步完善了 HTTP 协议，一直用到了20年后的今天，直到现在还是最流行的版本。\n\n### 3.1 持久连接\n\n1.1 版的最大变化，就是引入了持久连接（persistent connection），即TCP连接默认不关闭，可以被多个请求复用，不用声明`Connection: keep-alive`。\n\n客户端和服务器发现对方一段时间没有活动，就可以主动关闭连接。不过，规范的做法是，客户端在最后一个请求时，发送`Connection: close`，明确要求服务器关闭TCP连接。\n\n```http\nConnection: close\n```\n\n目前，对于同一个域名，大多数浏览器允许同时建立6个持久连接。\n\n### 3.2 管道机制\n\n1.1 版还引入了管道机制（pipelining），即在同一个TCP连接里面，客户端可以同时发送多个请求。这样就进一步改进了HTTP协议的效率。\n\n举例来说，客户端需要请求两个资源。以前的做法是，在同一个TCP连接里面，先发送A请求，然后等待服务器做出回应，收到后再发出B请求。管道机制则是允许浏览器同时发出A请求和B请求，但是服务器还是按照顺序，先回应A请求，完成后再回应B请求。\n\n### 3.3 Content-Length 字段\n\n一个TCP连接现在可以传送多个回应，势必就要有一种机制，区分数据包是属于哪一个回应的。这就是`Content-length`字段的作用，声明本次回应的数据长度。\n\n```http\nContent-Length: 3495\n```\n\n上面代码告诉浏览器，本次回应的长度是3495个字节，后面的字节就属于下一个回应了。\n\n在1.0版中，`Content-Length`字段不是必需的，因为浏览器发现服务器关闭了TCP连接，就表明收到的数据包已经全了。\n\n### 3.4 分块传输编码\n\n使用`Content-Length`字段的前提条件是，服务器发送回应之前，必须知道回应的数据长度。\n\n对于一些很耗时的动态操作来说，这意味着，服务器要等到所有操作完成，才能发送数据，显然这样的效率不高。更好的处理方法是，产生一块数据，就发送一块，采用“流模式”（stream）取代“缓存模式”（buffer）。\n\n因此，1.1版规定可以不使用`Content-Length`字段，而使用[“分块传输编码”](https://zh.wikipedia.org/wiki/%E5%88%86%E5%9D%97%E4%BC%A0%E8%BE%93%E7%BC%96%E7%A0%81)（chunked transfer encoding）。只要请求或回应的头信息有`Transfer-Encoding`字段，就表明回应将由数量未定的数据块组成。\n\n```http\nTransfer-Encoding: chunked\n```\n\n每个非空的数据块之前，会有一个16进制的数值，表示这个块的长度。最后是一个大小为0的块，就表示本次回应的数据发送完了。下面是一个例子。\n\n```http\nHTTP/1.1 200 OK\nContent-Type: text/plain\nTransfer-Encoding: chunked\n\n25\nThis is the data in the first chunk\n\n1C\nand this is the second one\n\n3\ncon\n\n8\nsequence\n\n0\n\n```\n\n### 3.5 其他功能\n\n1.1版还新增了许多动词方法：`PUT`、`PATCH`、`HEAD`、 `OPTIONS`、`DELETE`。\n\n另外，客户端的请求新增了`Host`字段，用来指定服务器的域名。\n\n```http\nHost: www.example.com\n```\n\n有了`Host`字段，就可以将请求发往同一台服务器上的不同网站，为虚拟主机的兴起打下了基础。\n\n### 3.6 缺点\n\n虽然1.1版允许复用TCP连接，但是同一个TCP连接里面，所有的数据通信是按次序进行的。服务器只有处理完一个回应，才会进行下一个回应。要是前面的回应特别慢，后面就会有许多请求排队等着。这称为[“队头堵塞”](https://zh.wikipedia.org/wiki/%E9%98%9F%E5%A4%B4%E9%98%BB%E5%A1%9E)（Head-of-line blocking）。\n\n为了避免这个问题，只有两种方法：一是减少请求数，二是同时多开持久连接。这导致了很多的网页优化技巧，比如合并脚本和样式表、将图片嵌入CSS代码、域名分片（domain sharding）等等。如果HTTP协议设计得更好一些，这些额外的工作是可以避免的。\n\n## 四、SPDY 协议\n\n2009年，谷歌公开了自行研发的 SPDY 协议，主要解决 HTTP/1.1 效率不高的问题。 \n\n这个协议在Chrome浏览器上证明可行以后，就被当作 HTTP/2 的基础，主要特性都在 HTTP/2 之中得到继承。\n\n## 五、HTTP/2\n\n2015年，HTTP/2 发布。它不叫 HTTP/2.0，是因为标准委员会不打算再发布子版本了，下一个新版本将是 HTTP/3。\n\n### 5.1 二进制协议\n\nHTTP/1.1 版的头信息肯定是文本（ASCII编码），数据体可以是文本，也可以是二进制。HTTP/2 则是一个彻底的二进制协议，头信息和数据体都是二进制，并且统称为“帧”（frame）：头信息帧和数据帧。\n\n二进制协议的一个好处是，可以定义额外的帧。HTTP/2 定义了近十种帧，为将来的高级应用打好了基础。如果使用文本实现这种功能，解析数据将会变得非常麻烦，二进制解析则方便得多。\n\n### 5.2 多工\n\nHTTP/2 复用TCP连接，在一个连接里，客户端和浏览器都可以同时发送多个请求或回应，而且不用按照顺序一一对应，这样就避免了“队头堵塞”。\n\n举例来说，在一个TCP连接里面，服务器同时收到了A请求和B请求，于是先回应A请求，结果发现处理过程非常耗时，于是就发送A请求已经处理好的部分， 接着回应B请求，完成后，再发送A请求剩下的部分。\n\n这样双向的、实时的通信，就叫做多工（Multiplexing）。\n\n### 5.3 数据流\n\n因为 HTTP/2 的数据包是不按顺序发送的，同一个连接里面连续的数据包，可能属于不同的回应。因此，必须要对数据包做标记，指出它属于哪个回应。\n\nHTTP/2 将每个请求或回应的所有数据包，称为一个数据流（stream）。每个数据流都有一个独一无二的编号。数据包发送的时候，都必须标记数据流ID，用来区分它属于哪个数据流。另外还规定，客户端发出的数据流，ID一律为奇数，服务器发出的，ID为偶数。\n\n数据流发送到一半的时候，客户端和服务器都可以发送信号（`RST_STREAM`帧），取消这个数据流。1.1版取消数据流的唯一方法，就是关闭TCP连接。这就是说，HTTP/2 可以取消某一次请求，同时保证TCP连接还打开着，可以被其他请求使用。\n\n客户端还可以指定数据流的优先级。优先级越高，服务器就会越早回应。\n\n### 5.4 头信息压缩\n\nHTTP 协议不带有状态，每次请求都必须附上所有信息。所以，请求的很多字段都是重复的，比如`Cookie`和`User Agent`，一模一样的内容，每次请求都必须附带，这会浪费很多带宽，也影响速度。\n\nHTTP/2 对这一点做了优化，引入了头信息压缩机制（header compression）。一方面，头信息使用`gzip`或`compress`压缩后再发送；另一方面，客户端和服务器同时维护一张头信息表，所有字段都会存入这个表，生成一个索引号，以后就不发送同样字段了，只发送索引号，这样就提高速度了。\n\n### 5.5 服务器推送\n\nHTTP/2 允许服务器未经请求，主动向客户端发送资源，这叫做服务器推送（server push）。\n\n常见场景是客户端请求一个网页，这个网页里面包含很多静态资源。正常情况下，客户端必须收到网页后，解析HTML源码，发现有静态资源，再发出静态资源请求。其实，服务器可以预期到客户端请求网页后，很可能会再请求静态资源，所以就主动把这些静态资源随着网页一起发给客户端了。\n\n### 六、参考链接\n\n- [Journey to HTTP/2](http://kamranahmed.info/blog/2016/08/13/http-in-depth/), by Kamran Ahmed\n- [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol), by Wikipedia\n- [HTTP/2 Specification](https://http2.github.io/http2-spec/)","slug":"http","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp88000awsnnsovdbejg","content":"<p>HTTP协议是互联网的基础协议，也是网页开发的必备知识，最新版本 HTTP/2 更是让它成为技术热点。</p>\n<p>本文介绍HTTP协议的历史演变和设计思路。</p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016081901.jpg\" alt=\"\"><br><a id=\"more\"></a></p>\n<h2 id=\"一、HTTP-0-9\"><a href=\"#一、HTTP-0-9\" class=\"headerlink\" title=\"一、HTTP/0.9\"></a>一、HTTP/0.9</h2><p>HTTP是基于 TCP/IP 协议的<a href=\"http://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html\" target=\"_blank\" rel=\"external\"><strong>应用层协议</strong></a>。它不涉及数据包（packet）传输，主要规定了客户端和服务器之间的通信格式，默认使用80端口。</p>\n<p>最早版本是1991年发布的0.9版。该版本极其简单，只有一个命令<code>GET</code>。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /index.html</span><br></pre></td></tr></table></figure>\n<p>上面命令表示，TCP连接（connection）建立后，客户端向服务器请求（request）网页<code>index.html</code>。</p>\n<p>协议规定，服务器只能回应HTML格式的字符串，不能回应别的格式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>服务器发送完毕，就关闭TCP连接。</p>\n<h2 id=\"二、HTTP-1-0\"><a href=\"#二、HTTP-1-0\" class=\"headerlink\" title=\"二、HTTP/1.0\"></a>二、HTTP/1.0</h2><h3 id=\"2-1-简介\"><a href=\"#2-1-简介\" class=\"headerlink\" title=\"2.1 简介\"></a>2.1 简介</h3><p>1996年5月，HTTP/1.0 版本发布，内容大大增加。</p>\n<p>首先，任何格式的内容都可以发送。这使得互联网不仅可以传输文字，还能传输图像、视频、二进制文件。这为互联网的大发展奠定了基础。</p>\n<p>其次，除了<code>GET</code>命令，还引入了<code>POST</code>命令和<code>HEAD</code>命令，丰富了浏览器与服务器的互动手段。</p>\n<p>再次，HTTP请求和回应的格式也变了。除了数据部分，每次通信都必须包括头信息（HTTP header），用来描述一些元数据。</p>\n<p>其他的新增功能还包括状态码（status code）、多字符集支持、多部分发送（multi-part type）、权限（authorization）、缓存（cache）、内容编码（content encoding）等。</p>\n<h3 id=\"2-2-请求格式\"><a href=\"#2-2-请求格式\" class=\"headerlink\" title=\"2.2 请求格式\"></a>2.2 请求格式</h3><p>下面是一个1.0版的HTTP请求的例子。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/</span> HTTP/1.0</span><br><span class=\"line\"><span class=\"attribute\">Host</span>: kamranahmed.info</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5)</span><br><span class=\"line\"><span class=\"attribute\">Accept</span>: */*</span><br></pre></td></tr></table></figure>\n<p>可以看到，这个格式与0.9版有很大变化。</p>\n<p>第一行是请求命令，必须在尾部添加协议版本（<code>HTTP/1.0</code>）。后面就是多行头信息，描述客户端的情况。</p>\n<h3 id=\"2-3-回应格式\"><a href=\"#2-3-回应格式\" class=\"headerlink\" title=\"2.3 回应格式\"></a>2.3 回应格式</h3><p>服务器的回应如下。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.0 <span class=\"number\">200</span> OK </span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span>: text/plain</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span>: 137582</span><br><span class=\"line\"><span class=\"attribute\">Expires</span>: Thu, 05 Dec 1997 16:00:00 GMT</span><br><span class=\"line\"><span class=\"attribute\">Last-Modified</span>: Wed, 5 August 1996 15:55:28 GMT</span><br><span class=\"line\"><span class=\"attribute\">Server</span>: Apache 0.84</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>回应的格式是<code>头信息 + 一个空行（</code>\\r\\n<code>） + 数据</code>。其中，第一行是<code>协议版本 + 状态码（status code） + 状态描述</code>。</p>\n<h3 id=\"2-4-Content-Type-字段\"><a href=\"#2-4-Content-Type-字段\" class=\"headerlink\" title=\"2.4 Content-Type 字段\"></a>2.4 Content-Type 字段</h3><p>关于字符的编码，1.0版规定，头信息必须是 ASCII 码，后面的数据可以是任何格式。因此，服务器回应的时候，必须告诉客户端，数据是什么格式，这就是<code>Content-Type</code>字段的作用。</p>\n<p>下面是一些常见的<code>Content-Type</code>字段的值。</p>\n<blockquote>\n<ul>\n<li>text/plain</li>\n<li>text/html</li>\n<li>text/css</li>\n<li>image/jpeg</li>\n<li>image/png</li>\n<li>image/svg+xml</li>\n<li>audio/mp4</li>\n<li>video/mp4</li>\n<li>application/javascript</li>\n<li>application/pdf</li>\n<li>application/zip</li>\n<li>application/atom+xml</li>\n</ul>\n</blockquote>\n<p>这些数据类型总称为<code>MIME type</code>，包含一级类型和二级类型，之间用斜杠分隔。</p>\n<p>除了预定义的类型，厂商也可以自定义类型。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">application/vnd.debian.binary-package</span></span><br></pre></td></tr></table></figure>\n<p>上面的类型表明，发送的是Debian系统的二进制数据包。</p>\n<p><code>MIME type</code>还可以在尾部使用分号，添加参数。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Content-Type</span>: text/html; charset=utf-8</span><br></pre></td></tr></table></figure>\n<p>上面的类型表明，发送的是网页，而且编码是UTF-8。</p>\n<p><code>MIME type</code>不仅用在HTTP协议，还可以用在其他地方，比如HTML网页。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=UTF-8\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 等同于 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-Content-Encoding-字段\"><a href=\"#2-5-Content-Encoding-字段\" class=\"headerlink\" title=\"2.5 Content-Encoding 字段\"></a>2.5 Content-Encoding 字段</h3><p>由于发送的数据可以是任何格式，因此可以把数据压缩后再发送。<code>Content-Encoding</code>字段说明数据的压缩方法。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Content-Encoding</span>: gzip</span><br><span class=\"line\"><span class=\"attribute\">Content-Encoding</span>: compress</span><br><span class=\"line\"><span class=\"attribute\">Content-Encoding</span>: deflate</span><br></pre></td></tr></table></figure>\n<p>客户端在请求时，用<code>Accept-Encoding</code>字段说明自己可以接受哪些压缩方法。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span>: gzip, deflate</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-缺点\"><a href=\"#2-6-缺点\" class=\"headerlink\" title=\"2.6 缺点\"></a>2.6 缺点</h3><p>HTTP/1.0 版的主要缺点是，每个TCP连接只能发送一个请求。发送数据完毕，连接就关闭，如果还要请求其他资源，就必须再新建一个连接。</p>\n<p>TCP连接的新建成本很高，因为需要客户端和浏览器三次握手，并且开始时发送速率较慢（slow start）。所以，HTTP 1.0版本的性能比较差。随着网页加载的外部资源越来越多，这个问题就愈发突出了。</p>\n<p>为了解决这个问题，有些浏览器在请求时，用了一个非标准的<code>Connection</code>字段。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure>\n<p>这个字段要求服务器不要关闭TCP连接，以便其他请求复用。服务器同样回应这个字段。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure>\n<p>一个可以复用的TCP连接就建立了，直到客户端或服务器主动关闭连接。但是，这不是标准字段，不同实现的行为可能不一致，因此不是根本的解决办法。</p>\n<h2 id=\"三、HTTP-1-1\"><a href=\"#三、HTTP-1-1\" class=\"headerlink\" title=\"三、HTTP/1.1\"></a>三、HTTP/1.1</h2><p>1997年1月，HTTP/1.1 版本发布，只比 1.0 版本晚了半年。它进一步完善了 HTTP 协议，一直用到了20年后的今天，直到现在还是最流行的版本。</p>\n<h3 id=\"3-1-持久连接\"><a href=\"#3-1-持久连接\" class=\"headerlink\" title=\"3.1 持久连接\"></a>3.1 持久连接</h3><p>1.1 版的最大变化，就是引入了持久连接（persistent connection），即TCP连接默认不关闭，可以被多个请求复用，不用声明<code>Connection: keep-alive</code>。</p>\n<p>客户端和服务器发现对方一段时间没有活动，就可以主动关闭连接。不过，规范的做法是，客户端在最后一个请求时，发送<code>Connection: close</code>，明确要求服务器关闭TCP连接。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Connection</span>: close</span><br></pre></td></tr></table></figure>\n<p>目前，对于同一个域名，大多数浏览器允许同时建立6个持久连接。</p>\n<h3 id=\"3-2-管道机制\"><a href=\"#3-2-管道机制\" class=\"headerlink\" title=\"3.2 管道机制\"></a>3.2 管道机制</h3><p>1.1 版还引入了管道机制（pipelining），即在同一个TCP连接里面，客户端可以同时发送多个请求。这样就进一步改进了HTTP协议的效率。</p>\n<p>举例来说，客户端需要请求两个资源。以前的做法是，在同一个TCP连接里面，先发送A请求，然后等待服务器做出回应，收到后再发出B请求。管道机制则是允许浏览器同时发出A请求和B请求，但是服务器还是按照顺序，先回应A请求，完成后再回应B请求。</p>\n<h3 id=\"3-3-Content-Length-字段\"><a href=\"#3-3-Content-Length-字段\" class=\"headerlink\" title=\"3.3 Content-Length 字段\"></a>3.3 Content-Length 字段</h3><p>一个TCP连接现在可以传送多个回应，势必就要有一种机制，区分数据包是属于哪一个回应的。这就是<code>Content-length</code>字段的作用，声明本次回应的数据长度。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Content-Length</span>: 3495</span><br></pre></td></tr></table></figure>\n<p>上面代码告诉浏览器，本次回应的长度是3495个字节，后面的字节就属于下一个回应了。</p>\n<p>在1.0版中，<code>Content-Length</code>字段不是必需的，因为浏览器发现服务器关闭了TCP连接，就表明收到的数据包已经全了。</p>\n<h3 id=\"3-4-分块传输编码\"><a href=\"#3-4-分块传输编码\" class=\"headerlink\" title=\"3.4 分块传输编码\"></a>3.4 分块传输编码</h3><p>使用<code>Content-Length</code>字段的前提条件是，服务器发送回应之前，必须知道回应的数据长度。</p>\n<p>对于一些很耗时的动态操作来说，这意味着，服务器要等到所有操作完成，才能发送数据，显然这样的效率不高。更好的处理方法是，产生一块数据，就发送一块，采用“流模式”（stream）取代“缓存模式”（buffer）。</p>\n<p>因此，1.1版规定可以不使用<code>Content-Length</code>字段，而使用<a href=\"https://zh.wikipedia.org/wiki/%E5%88%86%E5%9D%97%E4%BC%A0%E8%BE%93%E7%BC%96%E7%A0%81\" target=\"_blank\" rel=\"external\">“分块传输编码”</a>（chunked transfer encoding）。只要请求或回应的头信息有<code>Transfer-Encoding</code>字段，就表明回应将由数量未定的数据块组成。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Transfer-Encoding</span>: chunked</span><br></pre></td></tr></table></figure>\n<p>每个非空的数据块之前，会有一个16进制的数值，表示这个块的长度。最后是一个大小为0的块，就表示本次回应的数据发送完了。下面是一个例子。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span>: text/plain</span><br><span class=\"line\"><span class=\"attribute\">Transfer-Encoding</span>: chunked</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"coffeescript\"><span class=\"number\">25</span></span><br><span class=\"line\">This <span class=\"keyword\">is</span> the data <span class=\"keyword\">in</span> the first chunk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>C</span><br><span class=\"line\"><span class=\"keyword\">and</span> <span class=\"keyword\">this</span> <span class=\"keyword\">is</span> the second one</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\">con</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">8</span></span><br><span class=\"line\">sequence</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-5-其他功能\"><a href=\"#3-5-其他功能\" class=\"headerlink\" title=\"3.5 其他功能\"></a>3.5 其他功能</h3><p>1.1版还新增了许多动词方法：<code>PUT</code>、<code>PATCH</code>、<code>HEAD</code>、 <code>OPTIONS</code>、<code>DELETE</code>。</p>\n<p>另外，客户端的请求新增了<code>Host</code>字段，用来指定服务器的域名。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Host</span>: www.example.com</span><br></pre></td></tr></table></figure>\n<p>有了<code>Host</code>字段，就可以将请求发往同一台服务器上的不同网站，为虚拟主机的兴起打下了基础。</p>\n<h3 id=\"3-6-缺点\"><a href=\"#3-6-缺点\" class=\"headerlink\" title=\"3.6 缺点\"></a>3.6 缺点</h3><p>虽然1.1版允许复用TCP连接，但是同一个TCP连接里面，所有的数据通信是按次序进行的。服务器只有处理完一个回应，才会进行下一个回应。要是前面的回应特别慢，后面就会有许多请求排队等着。这称为<a href=\"https://zh.wikipedia.org/wiki/%E9%98%9F%E5%A4%B4%E9%98%BB%E5%A1%9E\" target=\"_blank\" rel=\"external\">“队头堵塞”</a>（Head-of-line blocking）。</p>\n<p>为了避免这个问题，只有两种方法：一是减少请求数，二是同时多开持久连接。这导致了很多的网页优化技巧，比如合并脚本和样式表、将图片嵌入CSS代码、域名分片（domain sharding）等等。如果HTTP协议设计得更好一些，这些额外的工作是可以避免的。</p>\n<h2 id=\"四、SPDY-协议\"><a href=\"#四、SPDY-协议\" class=\"headerlink\" title=\"四、SPDY 协议\"></a>四、SPDY 协议</h2><p>2009年，谷歌公开了自行研发的 SPDY 协议，主要解决 HTTP/1.1 效率不高的问题。 </p>\n<p>这个协议在Chrome浏览器上证明可行以后，就被当作 HTTP/2 的基础，主要特性都在 HTTP/2 之中得到继承。</p>\n<h2 id=\"五、HTTP-2\"><a href=\"#五、HTTP-2\" class=\"headerlink\" title=\"五、HTTP/2\"></a>五、HTTP/2</h2><p>2015年，HTTP/2 发布。它不叫 HTTP/2.0，是因为标准委员会不打算再发布子版本了，下一个新版本将是 HTTP/3。</p>\n<h3 id=\"5-1-二进制协议\"><a href=\"#5-1-二进制协议\" class=\"headerlink\" title=\"5.1 二进制协议\"></a>5.1 二进制协议</h3><p>HTTP/1.1 版的头信息肯定是文本（ASCII编码），数据体可以是文本，也可以是二进制。HTTP/2 则是一个彻底的二进制协议，头信息和数据体都是二进制，并且统称为“帧”（frame）：头信息帧和数据帧。</p>\n<p>二进制协议的一个好处是，可以定义额外的帧。HTTP/2 定义了近十种帧，为将来的高级应用打好了基础。如果使用文本实现这种功能，解析数据将会变得非常麻烦，二进制解析则方便得多。</p>\n<h3 id=\"5-2-多工\"><a href=\"#5-2-多工\" class=\"headerlink\" title=\"5.2 多工\"></a>5.2 多工</h3><p>HTTP/2 复用TCP连接，在一个连接里，客户端和浏览器都可以同时发送多个请求或回应，而且不用按照顺序一一对应，这样就避免了“队头堵塞”。</p>\n<p>举例来说，在一个TCP连接里面，服务器同时收到了A请求和B请求，于是先回应A请求，结果发现处理过程非常耗时，于是就发送A请求已经处理好的部分， 接着回应B请求，完成后，再发送A请求剩下的部分。</p>\n<p>这样双向的、实时的通信，就叫做多工（Multiplexing）。</p>\n<h3 id=\"5-3-数据流\"><a href=\"#5-3-数据流\" class=\"headerlink\" title=\"5.3 数据流\"></a>5.3 数据流</h3><p>因为 HTTP/2 的数据包是不按顺序发送的，同一个连接里面连续的数据包，可能属于不同的回应。因此，必须要对数据包做标记，指出它属于哪个回应。</p>\n<p>HTTP/2 将每个请求或回应的所有数据包，称为一个数据流（stream）。每个数据流都有一个独一无二的编号。数据包发送的时候，都必须标记数据流ID，用来区分它属于哪个数据流。另外还规定，客户端发出的数据流，ID一律为奇数，服务器发出的，ID为偶数。</p>\n<p>数据流发送到一半的时候，客户端和服务器都可以发送信号（<code>RST_STREAM</code>帧），取消这个数据流。1.1版取消数据流的唯一方法，就是关闭TCP连接。这就是说，HTTP/2 可以取消某一次请求，同时保证TCP连接还打开着，可以被其他请求使用。</p>\n<p>客户端还可以指定数据流的优先级。优先级越高，服务器就会越早回应。</p>\n<h3 id=\"5-4-头信息压缩\"><a href=\"#5-4-头信息压缩\" class=\"headerlink\" title=\"5.4 头信息压缩\"></a>5.4 头信息压缩</h3><p>HTTP 协议不带有状态，每次请求都必须附上所有信息。所以，请求的很多字段都是重复的，比如<code>Cookie</code>和<code>User Agent</code>，一模一样的内容，每次请求都必须附带，这会浪费很多带宽，也影响速度。</p>\n<p>HTTP/2 对这一点做了优化，引入了头信息压缩机制（header compression）。一方面，头信息使用<code>gzip</code>或<code>compress</code>压缩后再发送；另一方面，客户端和服务器同时维护一张头信息表，所有字段都会存入这个表，生成一个索引号，以后就不发送同样字段了，只发送索引号，这样就提高速度了。</p>\n<h3 id=\"5-5-服务器推送\"><a href=\"#5-5-服务器推送\" class=\"headerlink\" title=\"5.5 服务器推送\"></a>5.5 服务器推送</h3><p>HTTP/2 允许服务器未经请求，主动向客户端发送资源，这叫做服务器推送（server push）。</p>\n<p>常见场景是客户端请求一个网页，这个网页里面包含很多静态资源。正常情况下，客户端必须收到网页后，解析HTML源码，发现有静态资源，再发出静态资源请求。其实，服务器可以预期到客户端请求网页后，很可能会再请求静态资源，所以就主动把这些静态资源随着网页一起发给客户端了。</p>\n<h3 id=\"六、参考链接\"><a href=\"#六、参考链接\" class=\"headerlink\" title=\"六、参考链接\"></a>六、参考链接</h3><ul>\n<li><a href=\"http://kamranahmed.info/blog/2016/08/13/http-in-depth/\" target=\"_blank\" rel=\"external\">Journey to HTTP/2</a>, by Kamran Ahmed</li>\n<li><a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" target=\"_blank\" rel=\"external\">HTTP</a>, by Wikipedia</li>\n<li><a href=\"https://http2.github.io/http2-spec/\" target=\"_blank\" rel=\"external\">HTTP/2 Specification</a></li>\n</ul>\n","excerpt":"<p>HTTP协议是互联网的基础协议，也是网页开发的必备知识，最新版本 HTTP/2 更是让它成为技术热点。</p>\n<p>本文介绍HTTP协议的历史演变和设计思路。</p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016081901.jpg\" alt=\"\"><br>","more":"</p>\n<h2 id=\"一、HTTP-0-9\"><a href=\"#一、HTTP-0-9\" class=\"headerlink\" title=\"一、HTTP/0.9\"></a>一、HTTP/0.9</h2><p>HTTP是基于 TCP/IP 协议的<a href=\"http://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html\"><strong>应用层协议</strong></a>。它不涉及数据包（packet）传输，主要规定了客户端和服务器之间的通信格式，默认使用80端口。</p>\n<p>最早版本是1991年发布的0.9版。该版本极其简单，只有一个命令<code>GET</code>。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /index.html</span><br></pre></td></tr></table></figure>\n<p>上面命令表示，TCP连接（connection）建立后，客户端向服务器请求（request）网页<code>index.html</code>。</p>\n<p>协议规定，服务器只能回应HTML格式的字符串，不能回应别的格式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>服务器发送完毕，就关闭TCP连接。</p>\n<h2 id=\"二、HTTP-1-0\"><a href=\"#二、HTTP-1-0\" class=\"headerlink\" title=\"二、HTTP/1.0\"></a>二、HTTP/1.0</h2><h3 id=\"2-1-简介\"><a href=\"#2-1-简介\" class=\"headerlink\" title=\"2.1 简介\"></a>2.1 简介</h3><p>1996年5月，HTTP/1.0 版本发布，内容大大增加。</p>\n<p>首先，任何格式的内容都可以发送。这使得互联网不仅可以传输文字，还能传输图像、视频、二进制文件。这为互联网的大发展奠定了基础。</p>\n<p>其次，除了<code>GET</code>命令，还引入了<code>POST</code>命令和<code>HEAD</code>命令，丰富了浏览器与服务器的互动手段。</p>\n<p>再次，HTTP请求和回应的格式也变了。除了数据部分，每次通信都必须包括头信息（HTTP header），用来描述一些元数据。</p>\n<p>其他的新增功能还包括状态码（status code）、多字符集支持、多部分发送（multi-part type）、权限（authorization）、缓存（cache）、内容编码（content encoding）等。</p>\n<h3 id=\"2-2-请求格式\"><a href=\"#2-2-请求格式\" class=\"headerlink\" title=\"2.2 请求格式\"></a>2.2 请求格式</h3><p>下面是一个1.0版的HTTP请求的例子。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/</span> HTTP/1.0</span><br><span class=\"line\"><span class=\"attribute\">Host</span>: kamranahmed.info</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5)</span><br><span class=\"line\"><span class=\"attribute\">Accept</span>: */*</span><br></pre></td></tr></table></figure>\n<p>可以看到，这个格式与0.9版有很大变化。</p>\n<p>第一行是请求命令，必须在尾部添加协议版本（<code>HTTP/1.0</code>）。后面就是多行头信息，描述客户端的情况。</p>\n<h3 id=\"2-3-回应格式\"><a href=\"#2-3-回应格式\" class=\"headerlink\" title=\"2.3 回应格式\"></a>2.3 回应格式</h3><p>服务器的回应如下。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.0 <span class=\"number\">200</span> OK </span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span>: text/plain</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span>: 137582</span><br><span class=\"line\"><span class=\"attribute\">Expires</span>: Thu, 05 Dec 1997 16:00:00 GMT</span><br><span class=\"line\"><span class=\"attribute\">Last-Modified</span>: Wed, 5 August 1996 15:55:28 GMT</span><br><span class=\"line\"><span class=\"attribute\">Server</span>: Apache 0.84</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>回应的格式是<code>头信息 + 一个空行（</code>\\r\\n<code>） + 数据</code>。其中，第一行是<code>协议版本 + 状态码（status code） + 状态描述</code>。</p>\n<h3 id=\"2-4-Content-Type-字段\"><a href=\"#2-4-Content-Type-字段\" class=\"headerlink\" title=\"2.4 Content-Type 字段\"></a>2.4 Content-Type 字段</h3><p>关于字符的编码，1.0版规定，头信息必须是 ASCII 码，后面的数据可以是任何格式。因此，服务器回应的时候，必须告诉客户端，数据是什么格式，这就是<code>Content-Type</code>字段的作用。</p>\n<p>下面是一些常见的<code>Content-Type</code>字段的值。</p>\n<blockquote>\n<ul>\n<li>text/plain</li>\n<li>text/html</li>\n<li>text/css</li>\n<li>image/jpeg</li>\n<li>image/png</li>\n<li>image/svg+xml</li>\n<li>audio/mp4</li>\n<li>video/mp4</li>\n<li>application/javascript</li>\n<li>application/pdf</li>\n<li>application/zip</li>\n<li>application/atom+xml</li>\n</ul>\n</blockquote>\n<p>这些数据类型总称为<code>MIME type</code>，包含一级类型和二级类型，之间用斜杠分隔。</p>\n<p>除了预定义的类型，厂商也可以自定义类型。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">application/vnd.debian.binary-package</span></span><br></pre></td></tr></table></figure>\n<p>上面的类型表明，发送的是Debian系统的二进制数据包。</p>\n<p><code>MIME type</code>还可以在尾部使用分号，添加参数。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Content-Type</span>: text/html; charset=utf-8</span><br></pre></td></tr></table></figure>\n<p>上面的类型表明，发送的是网页，而且编码是UTF-8。</p>\n<p><code>MIME type</code>不仅用在HTTP协议，还可以用在其他地方，比如HTML网页。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=UTF-8\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 等同于 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-Content-Encoding-字段\"><a href=\"#2-5-Content-Encoding-字段\" class=\"headerlink\" title=\"2.5 Content-Encoding 字段\"></a>2.5 Content-Encoding 字段</h3><p>由于发送的数据可以是任何格式，因此可以把数据压缩后再发送。<code>Content-Encoding</code>字段说明数据的压缩方法。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Content-Encoding</span>: gzip</span><br><span class=\"line\"><span class=\"attribute\">Content-Encoding</span>: compress</span><br><span class=\"line\"><span class=\"attribute\">Content-Encoding</span>: deflate</span><br></pre></td></tr></table></figure>\n<p>客户端在请求时，用<code>Accept-Encoding</code>字段说明自己可以接受哪些压缩方法。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span>: gzip, deflate</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-缺点\"><a href=\"#2-6-缺点\" class=\"headerlink\" title=\"2.6 缺点\"></a>2.6 缺点</h3><p>HTTP/1.0 版的主要缺点是，每个TCP连接只能发送一个请求。发送数据完毕，连接就关闭，如果还要请求其他资源，就必须再新建一个连接。</p>\n<p>TCP连接的新建成本很高，因为需要客户端和浏览器三次握手，并且开始时发送速率较慢（slow start）。所以，HTTP 1.0版本的性能比较差。随着网页加载的外部资源越来越多，这个问题就愈发突出了。</p>\n<p>为了解决这个问题，有些浏览器在请求时，用了一个非标准的<code>Connection</code>字段。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure>\n<p>这个字段要求服务器不要关闭TCP连接，以便其他请求复用。服务器同样回应这个字段。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure>\n<p>一个可以复用的TCP连接就建立了，直到客户端或服务器主动关闭连接。但是，这不是标准字段，不同实现的行为可能不一致，因此不是根本的解决办法。</p>\n<h2 id=\"三、HTTP-1-1\"><a href=\"#三、HTTP-1-1\" class=\"headerlink\" title=\"三、HTTP/1.1\"></a>三、HTTP/1.1</h2><p>1997年1月，HTTP/1.1 版本发布，只比 1.0 版本晚了半年。它进一步完善了 HTTP 协议，一直用到了20年后的今天，直到现在还是最流行的版本。</p>\n<h3 id=\"3-1-持久连接\"><a href=\"#3-1-持久连接\" class=\"headerlink\" title=\"3.1 持久连接\"></a>3.1 持久连接</h3><p>1.1 版的最大变化，就是引入了持久连接（persistent connection），即TCP连接默认不关闭，可以被多个请求复用，不用声明<code>Connection: keep-alive</code>。</p>\n<p>客户端和服务器发现对方一段时间没有活动，就可以主动关闭连接。不过，规范的做法是，客户端在最后一个请求时，发送<code>Connection: close</code>，明确要求服务器关闭TCP连接。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Connection</span>: close</span><br></pre></td></tr></table></figure>\n<p>目前，对于同一个域名，大多数浏览器允许同时建立6个持久连接。</p>\n<h3 id=\"3-2-管道机制\"><a href=\"#3-2-管道机制\" class=\"headerlink\" title=\"3.2 管道机制\"></a>3.2 管道机制</h3><p>1.1 版还引入了管道机制（pipelining），即在同一个TCP连接里面，客户端可以同时发送多个请求。这样就进一步改进了HTTP协议的效率。</p>\n<p>举例来说，客户端需要请求两个资源。以前的做法是，在同一个TCP连接里面，先发送A请求，然后等待服务器做出回应，收到后再发出B请求。管道机制则是允许浏览器同时发出A请求和B请求，但是服务器还是按照顺序，先回应A请求，完成后再回应B请求。</p>\n<h3 id=\"3-3-Content-Length-字段\"><a href=\"#3-3-Content-Length-字段\" class=\"headerlink\" title=\"3.3 Content-Length 字段\"></a>3.3 Content-Length 字段</h3><p>一个TCP连接现在可以传送多个回应，势必就要有一种机制，区分数据包是属于哪一个回应的。这就是<code>Content-length</code>字段的作用，声明本次回应的数据长度。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Content-Length</span>: 3495</span><br></pre></td></tr></table></figure>\n<p>上面代码告诉浏览器，本次回应的长度是3495个字节，后面的字节就属于下一个回应了。</p>\n<p>在1.0版中，<code>Content-Length</code>字段不是必需的，因为浏览器发现服务器关闭了TCP连接，就表明收到的数据包已经全了。</p>\n<h3 id=\"3-4-分块传输编码\"><a href=\"#3-4-分块传输编码\" class=\"headerlink\" title=\"3.4 分块传输编码\"></a>3.4 分块传输编码</h3><p>使用<code>Content-Length</code>字段的前提条件是，服务器发送回应之前，必须知道回应的数据长度。</p>\n<p>对于一些很耗时的动态操作来说，这意味着，服务器要等到所有操作完成，才能发送数据，显然这样的效率不高。更好的处理方法是，产生一块数据，就发送一块，采用“流模式”（stream）取代“缓存模式”（buffer）。</p>\n<p>因此，1.1版规定可以不使用<code>Content-Length</code>字段，而使用<a href=\"https://zh.wikipedia.org/wiki/%E5%88%86%E5%9D%97%E4%BC%A0%E8%BE%93%E7%BC%96%E7%A0%81\">“分块传输编码”</a>（chunked transfer encoding）。只要请求或回应的头信息有<code>Transfer-Encoding</code>字段，就表明回应将由数量未定的数据块组成。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Transfer-Encoding</span>: chunked</span><br></pre></td></tr></table></figure>\n<p>每个非空的数据块之前，会有一个16进制的数值，表示这个块的长度。最后是一个大小为0的块，就表示本次回应的数据发送完了。下面是一个例子。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span>: text/plain</span><br><span class=\"line\"><span class=\"attribute\">Transfer-Encoding</span>: chunked</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"coffeescript\"><span class=\"number\">25</span></span><br><span class=\"line\">This <span class=\"keyword\">is</span> the data <span class=\"keyword\">in</span> the first chunk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>C</span><br><span class=\"line\"><span class=\"keyword\">and</span> <span class=\"keyword\">this</span> <span class=\"keyword\">is</span> the second one</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\">con</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">8</span></span><br><span class=\"line\">sequence</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-5-其他功能\"><a href=\"#3-5-其他功能\" class=\"headerlink\" title=\"3.5 其他功能\"></a>3.5 其他功能</h3><p>1.1版还新增了许多动词方法：<code>PUT</code>、<code>PATCH</code>、<code>HEAD</code>、 <code>OPTIONS</code>、<code>DELETE</code>。</p>\n<p>另外，客户端的请求新增了<code>Host</code>字段，用来指定服务器的域名。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Host</span>: www.example.com</span><br></pre></td></tr></table></figure>\n<p>有了<code>Host</code>字段，就可以将请求发往同一台服务器上的不同网站，为虚拟主机的兴起打下了基础。</p>\n<h3 id=\"3-6-缺点\"><a href=\"#3-6-缺点\" class=\"headerlink\" title=\"3.6 缺点\"></a>3.6 缺点</h3><p>虽然1.1版允许复用TCP连接，但是同一个TCP连接里面，所有的数据通信是按次序进行的。服务器只有处理完一个回应，才会进行下一个回应。要是前面的回应特别慢，后面就会有许多请求排队等着。这称为<a href=\"https://zh.wikipedia.org/wiki/%E9%98%9F%E5%A4%B4%E9%98%BB%E5%A1%9E\">“队头堵塞”</a>（Head-of-line blocking）。</p>\n<p>为了避免这个问题，只有两种方法：一是减少请求数，二是同时多开持久连接。这导致了很多的网页优化技巧，比如合并脚本和样式表、将图片嵌入CSS代码、域名分片（domain sharding）等等。如果HTTP协议设计得更好一些，这些额外的工作是可以避免的。</p>\n<h2 id=\"四、SPDY-协议\"><a href=\"#四、SPDY-协议\" class=\"headerlink\" title=\"四、SPDY 协议\"></a>四、SPDY 协议</h2><p>2009年，谷歌公开了自行研发的 SPDY 协议，主要解决 HTTP/1.1 效率不高的问题。 </p>\n<p>这个协议在Chrome浏览器上证明可行以后，就被当作 HTTP/2 的基础，主要特性都在 HTTP/2 之中得到继承。</p>\n<h2 id=\"五、HTTP-2\"><a href=\"#五、HTTP-2\" class=\"headerlink\" title=\"五、HTTP/2\"></a>五、HTTP/2</h2><p>2015年，HTTP/2 发布。它不叫 HTTP/2.0，是因为标准委员会不打算再发布子版本了，下一个新版本将是 HTTP/3。</p>\n<h3 id=\"5-1-二进制协议\"><a href=\"#5-1-二进制协议\" class=\"headerlink\" title=\"5.1 二进制协议\"></a>5.1 二进制协议</h3><p>HTTP/1.1 版的头信息肯定是文本（ASCII编码），数据体可以是文本，也可以是二进制。HTTP/2 则是一个彻底的二进制协议，头信息和数据体都是二进制，并且统称为“帧”（frame）：头信息帧和数据帧。</p>\n<p>二进制协议的一个好处是，可以定义额外的帧。HTTP/2 定义了近十种帧，为将来的高级应用打好了基础。如果使用文本实现这种功能，解析数据将会变得非常麻烦，二进制解析则方便得多。</p>\n<h3 id=\"5-2-多工\"><a href=\"#5-2-多工\" class=\"headerlink\" title=\"5.2 多工\"></a>5.2 多工</h3><p>HTTP/2 复用TCP连接，在一个连接里，客户端和浏览器都可以同时发送多个请求或回应，而且不用按照顺序一一对应，这样就避免了“队头堵塞”。</p>\n<p>举例来说，在一个TCP连接里面，服务器同时收到了A请求和B请求，于是先回应A请求，结果发现处理过程非常耗时，于是就发送A请求已经处理好的部分， 接着回应B请求，完成后，再发送A请求剩下的部分。</p>\n<p>这样双向的、实时的通信，就叫做多工（Multiplexing）。</p>\n<h3 id=\"5-3-数据流\"><a href=\"#5-3-数据流\" class=\"headerlink\" title=\"5.3 数据流\"></a>5.3 数据流</h3><p>因为 HTTP/2 的数据包是不按顺序发送的，同一个连接里面连续的数据包，可能属于不同的回应。因此，必须要对数据包做标记，指出它属于哪个回应。</p>\n<p>HTTP/2 将每个请求或回应的所有数据包，称为一个数据流（stream）。每个数据流都有一个独一无二的编号。数据包发送的时候，都必须标记数据流ID，用来区分它属于哪个数据流。另外还规定，客户端发出的数据流，ID一律为奇数，服务器发出的，ID为偶数。</p>\n<p>数据流发送到一半的时候，客户端和服务器都可以发送信号（<code>RST_STREAM</code>帧），取消这个数据流。1.1版取消数据流的唯一方法，就是关闭TCP连接。这就是说，HTTP/2 可以取消某一次请求，同时保证TCP连接还打开着，可以被其他请求使用。</p>\n<p>客户端还可以指定数据流的优先级。优先级越高，服务器就会越早回应。</p>\n<h3 id=\"5-4-头信息压缩\"><a href=\"#5-4-头信息压缩\" class=\"headerlink\" title=\"5.4 头信息压缩\"></a>5.4 头信息压缩</h3><p>HTTP 协议不带有状态，每次请求都必须附上所有信息。所以，请求的很多字段都是重复的，比如<code>Cookie</code>和<code>User Agent</code>，一模一样的内容，每次请求都必须附带，这会浪费很多带宽，也影响速度。</p>\n<p>HTTP/2 对这一点做了优化，引入了头信息压缩机制（header compression）。一方面，头信息使用<code>gzip</code>或<code>compress</code>压缩后再发送；另一方面，客户端和服务器同时维护一张头信息表，所有字段都会存入这个表，生成一个索引号，以后就不发送同样字段了，只发送索引号，这样就提高速度了。</p>\n<h3 id=\"5-5-服务器推送\"><a href=\"#5-5-服务器推送\" class=\"headerlink\" title=\"5.5 服务器推送\"></a>5.5 服务器推送</h3><p>HTTP/2 允许服务器未经请求，主动向客户端发送资源，这叫做服务器推送（server push）。</p>\n<p>常见场景是客户端请求一个网页，这个网页里面包含很多静态资源。正常情况下，客户端必须收到网页后，解析HTML源码，发现有静态资源，再发出静态资源请求。其实，服务器可以预期到客户端请求网页后，很可能会再请求静态资源，所以就主动把这些静态资源随着网页一起发给客户端了。</p>\n<h3 id=\"六、参考链接\"><a href=\"#六、参考链接\" class=\"headerlink\" title=\"六、参考链接\"></a>六、参考链接</h3><ul>\n<li><a href=\"http://kamranahmed.info/blog/2016/08/13/http-in-depth/\">Journey to HTTP/2</a>, by Kamran Ahmed</li>\n<li><a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\">HTTP</a>, by Wikipedia</li>\n<li><a href=\"https://http2.github.io/http2-spec/\">HTTP/2 Specification</a></li>\n</ul>"},{"title":"HTTPS 升级指南","date":"2014-11-23T08:44:59.000Z","updated":"2014-11-23T08:44:59.000Z","_content":"\n上一篇文章我介绍了 [HTTP/2 协议](http://www.ruanyifeng.com/blog/2016/08/http.html) ，它只有在 HTTPS 环境才会生效。\n\n为了升级到 HTTP/2 协议，必须先启用 HTTPS。如果你不了解 HTTPS 协议（学名 TLS 协议），可以参考我以前的文章。\n\n> - [《HTTPS 协议概述》](http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html)\n- [《图解 HTTPS 协议》](http://www.ruanyifeng.com/blog/2014/09/illustration-ssl.html)\n-  [《HTTPS 协议的七个误解》](http://www.ruanyifeng.com/blog/2011/02/seven_myths_about_https.html)\n- [《HTTPS 协议的延迟有多大？》](http://www.ruanyifeng.com/blog/2014/09/ssl-latency.html)\n\n<!-- more -->\n本文介绍如何将一个 HTTP 网站升级到 HTTPS 。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2016/bg2016082601.png)\n\n## 一、获取证书\n\n升级到HTTPS协议的第一步，就是要获得一张证书。\n\n证书是一个二进制文件，里面包含经过认证的网站公钥和一些元数据，要从经销商购买。\n \n> - [GoGetSSL](https://www.gogetssl.com/)\n- [SSLs.com](https://www.ssls.com/)\n- [SSLmate.com](https://sslmate.com/)\n\n证书有很多类型，首先分为三种认证级别。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2016/bg2016082602.png)\n\n> - **域名认证**（Domain Validation）：最低级别认证，可以确认申请人拥有这个域名。对于这种证书，浏览器会在地址栏显示一把锁。\n- **公司认证**（Company Validation）：确认域名所有人是哪一家公司，证书里面会包含公司信息。\n- **扩展认证**（Extended Validation）：最高级别的认证，浏览器地址栏会显示公司名。\n\n还分为三种覆盖范围。\n\n> - **单域名证书**：只能用于单一域名，`foo.com`的证书不能用于`www.foo.com`\n- **通配符证书**：可以用于某个域名及其所有一级子域名，比如`*.foo.com`的证书可以用于`foo.com`，也可以用于`www.foo.com`\n- **多域名证书**：可以用于多个域名，比如`foo.com`和`bar.com`\n\n认证级别越高、覆盖范围越广的证书，价格越贵。\n\n还有一个免费证书的选择。为了推广HTTPS协议，电子前哨基金会EFF成立了 [Let’s Encrypt](https://letsencrypt.org/)，提供免费证书（[教程](https://www.digitalocean.com/community/tags/let-s-encrypt?type=tutorials)和[工具](https://certbot.eff.org/)）。\n\n拿到证书以后，可以用[SSL Certificate Check](https://tools.keycdn.com/ssl)检查一下，信息是否正确。\n\n## 二、安装证书\n\n证书可以放在`/etc/ssl`目录（Linux 系统），然后根据你使用的Web服务器进行配置。\n\n> - [证书配置文件生成器](https://mozilla.github.io/server-side-tls/ssl-config-generator/)，by Mozilla\n- [配置文件模板](https://github.com/SSLMate/tlsconfigguide/tree/master/templates)，by SSLMate\n\n如果使用 Let’s Encrypt 证书，请使用自动安装工具[Certbot](https://certbot.eff.org/)。\n\n安装成功后，使用 [SSL Labs Server Test](https://www.ssllabs.com/ssltest/analyze.html) 检查一下证书是否生效。\n\n\n## 三、修改链接\n\n下一步，网页加载的 HTTP 资源，全部改成 HTTPS 链接。因为加密网页内有非加密的资源，浏览器是不会加载的。\n\n```html\n<script src=\"http://foo.com/jquery.js\"></script>\n```\n\n上面这行加载命令，有两种改法。\n\n```html\n<!-- 改法一 -->\n<script src=\"https://foo.com/jquery.js\"></script>\n\n<!-- 改法二 -->\n<script src=\"//foo.com/jquery.js\"></script>\n```\n\n其中，改法二会根据当前网页的协议，加载相同协议的外部资源，更灵活一些。\n\n另外，如果页面头部用到了`rel=\"canonical\"`，也要改成HTTPS网址。\n\n```html\n<link rel=\"canonical\" href=\"https://foo.com/bar.html\" />\n```\n\n## 四、301重定向\n\n下一步，修改 Web 服务器的配置文件，使用 301 重定向，将 HTTP 协议的访问导向 HTTPS 协议。\n\n[Nginx 的写法](https://serverfault.com/questions/67316/in-nginx-how-can-i-rewrite-all-http-requests-to-https-while-maintaining-sub-dom)。\n\n```http\nserver {\n  listen 80;\n  server_name domain.com www.domain.com;\n  return 301 https://domain.com$request_uri;\n}\n```\n\n[Apache 的写法](https://httpd.apache.org/docs/2.4/rewrite/remapping.html#canonicalhost)（`.htaccess`文件）。\n\n```bash\nRewriteEngine On\nRewriteCond %{HTTPS} off\nRewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]\n```\n\n## 五、安全措施\n\n以下措施可以进一步保证通信安全。\n\n### 5.1 HTTP Strict Transport Security (HSTS)\n\n访问网站时，用户很少直接在地址栏输入`https://`，总是通过点击链接，或者3xx重定向，从HTTP页面进入HTTPS页面。攻击者完全可以在用户发出HTTP请求时，劫持并篡改该请求。\n\n另一种情况是恶意网站使用自签名证书，冒充另一个网站，这时浏览器会给出警告，但是许多用户会忽略警告继续访问。\n\n“HTTP严格传输安全”（简称 HSTS）的作用，就是强制浏览器只能发出HTTPS请求，并阻止用户接受不安全的证书。\n\n它在网站的响应头里面，加入一个强制性声明。以下例子摘自[维基百科](https://zh.wikipedia.org/wiki/HTTP%E4%B8%A5%E6%A0%BC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8)。\n\n```http\nStrict-Transport-Security: max-age=31536000; includeSubDomains\n```\n\n上面这段头信息有两个作用。\n\n> （1）在接下来的一年（即31536000秒）中，浏览器只要向`example.com`或其子域名发送HTTP请求时，必须采用HTTPS来发起连接。用户点击超链接或在地址栏输入`http://www.example.com/`，浏览器应当自动将`http`转写成`https`，然后直接向`https://www.example.com/`发送请求。\n> \n> （2）在接下来的一年中，如果`example.com`服务器发送的证书无效，用户不能忽略浏览器警告，将无法继续访问该网站。\n\nHSTS 很大程度上解决了 SSL 剥离攻击。只要浏览器曾经与服务器建立过一次安全连接，之后浏览器会强制使用`HTTPS`，即使链接被换成了`HTTP`。\n\n该方法的主要不足是，用户首次访问网站发出HTTP请求时，是不受HSTS保护的。\n\n### 5.2 Cookie\n\n另一个需要注意的地方是，确保浏览器只在使用 HTTPS 时，才发送Cookie。\n\n网站响应头里面，`Set-Cookie`字段加上`Secure`标志即可。\n\n```http\nSet-Cookie: LSID=DQAAAK…Eaem_vYg; Secure\n```\n\n## 六、参考链接\n\n- [How To Migrate To HTTPS](https://docs.google.com/document/d/1oRXJUIttqQxuxmjj2tgYjj096IKw4Zcw6eAoIKWZ2oQ/edit#), by Chris Palmer\n- [Complete Guide – How to Migrate from HTTP to HTTPS](https://www.keycdn.com/blog/http-to-https/), by KeyCDN\n- [What You Need to Know About Changing From Http to Https](http://smallbiztrends.com/2015/04/changing-from-http-to-https.html), by Matt Mansfield\n\n（完）","source":"_posts/2014/https.md","raw":"---\ntitle: HTTPS 升级指南\ndate: 2014-11-23 16:44:59\nupdated: 2014-11-23 16:44:59\ntags:\ncategories:\n---\n\n上一篇文章我介绍了 [HTTP/2 协议](http://www.ruanyifeng.com/blog/2016/08/http.html) ，它只有在 HTTPS 环境才会生效。\n\n为了升级到 HTTP/2 协议，必须先启用 HTTPS。如果你不了解 HTTPS 协议（学名 TLS 协议），可以参考我以前的文章。\n\n> - [《HTTPS 协议概述》](http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html)\n- [《图解 HTTPS 协议》](http://www.ruanyifeng.com/blog/2014/09/illustration-ssl.html)\n-  [《HTTPS 协议的七个误解》](http://www.ruanyifeng.com/blog/2011/02/seven_myths_about_https.html)\n- [《HTTPS 协议的延迟有多大？》](http://www.ruanyifeng.com/blog/2014/09/ssl-latency.html)\n\n<!-- more -->\n本文介绍如何将一个 HTTP 网站升级到 HTTPS 。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2016/bg2016082601.png)\n\n## 一、获取证书\n\n升级到HTTPS协议的第一步，就是要获得一张证书。\n\n证书是一个二进制文件，里面包含经过认证的网站公钥和一些元数据，要从经销商购买。\n \n> - [GoGetSSL](https://www.gogetssl.com/)\n- [SSLs.com](https://www.ssls.com/)\n- [SSLmate.com](https://sslmate.com/)\n\n证书有很多类型，首先分为三种认证级别。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2016/bg2016082602.png)\n\n> - **域名认证**（Domain Validation）：最低级别认证，可以确认申请人拥有这个域名。对于这种证书，浏览器会在地址栏显示一把锁。\n- **公司认证**（Company Validation）：确认域名所有人是哪一家公司，证书里面会包含公司信息。\n- **扩展认证**（Extended Validation）：最高级别的认证，浏览器地址栏会显示公司名。\n\n还分为三种覆盖范围。\n\n> - **单域名证书**：只能用于单一域名，`foo.com`的证书不能用于`www.foo.com`\n- **通配符证书**：可以用于某个域名及其所有一级子域名，比如`*.foo.com`的证书可以用于`foo.com`，也可以用于`www.foo.com`\n- **多域名证书**：可以用于多个域名，比如`foo.com`和`bar.com`\n\n认证级别越高、覆盖范围越广的证书，价格越贵。\n\n还有一个免费证书的选择。为了推广HTTPS协议，电子前哨基金会EFF成立了 [Let’s Encrypt](https://letsencrypt.org/)，提供免费证书（[教程](https://www.digitalocean.com/community/tags/let-s-encrypt?type=tutorials)和[工具](https://certbot.eff.org/)）。\n\n拿到证书以后，可以用[SSL Certificate Check](https://tools.keycdn.com/ssl)检查一下，信息是否正确。\n\n## 二、安装证书\n\n证书可以放在`/etc/ssl`目录（Linux 系统），然后根据你使用的Web服务器进行配置。\n\n> - [证书配置文件生成器](https://mozilla.github.io/server-side-tls/ssl-config-generator/)，by Mozilla\n- [配置文件模板](https://github.com/SSLMate/tlsconfigguide/tree/master/templates)，by SSLMate\n\n如果使用 Let’s Encrypt 证书，请使用自动安装工具[Certbot](https://certbot.eff.org/)。\n\n安装成功后，使用 [SSL Labs Server Test](https://www.ssllabs.com/ssltest/analyze.html) 检查一下证书是否生效。\n\n\n## 三、修改链接\n\n下一步，网页加载的 HTTP 资源，全部改成 HTTPS 链接。因为加密网页内有非加密的资源，浏览器是不会加载的。\n\n```html\n<script src=\"http://foo.com/jquery.js\"></script>\n```\n\n上面这行加载命令，有两种改法。\n\n```html\n<!-- 改法一 -->\n<script src=\"https://foo.com/jquery.js\"></script>\n\n<!-- 改法二 -->\n<script src=\"//foo.com/jquery.js\"></script>\n```\n\n其中，改法二会根据当前网页的协议，加载相同协议的外部资源，更灵活一些。\n\n另外，如果页面头部用到了`rel=\"canonical\"`，也要改成HTTPS网址。\n\n```html\n<link rel=\"canonical\" href=\"https://foo.com/bar.html\" />\n```\n\n## 四、301重定向\n\n下一步，修改 Web 服务器的配置文件，使用 301 重定向，将 HTTP 协议的访问导向 HTTPS 协议。\n\n[Nginx 的写法](https://serverfault.com/questions/67316/in-nginx-how-can-i-rewrite-all-http-requests-to-https-while-maintaining-sub-dom)。\n\n```http\nserver {\n  listen 80;\n  server_name domain.com www.domain.com;\n  return 301 https://domain.com$request_uri;\n}\n```\n\n[Apache 的写法](https://httpd.apache.org/docs/2.4/rewrite/remapping.html#canonicalhost)（`.htaccess`文件）。\n\n```bash\nRewriteEngine On\nRewriteCond %{HTTPS} off\nRewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]\n```\n\n## 五、安全措施\n\n以下措施可以进一步保证通信安全。\n\n### 5.1 HTTP Strict Transport Security (HSTS)\n\n访问网站时，用户很少直接在地址栏输入`https://`，总是通过点击链接，或者3xx重定向，从HTTP页面进入HTTPS页面。攻击者完全可以在用户发出HTTP请求时，劫持并篡改该请求。\n\n另一种情况是恶意网站使用自签名证书，冒充另一个网站，这时浏览器会给出警告，但是许多用户会忽略警告继续访问。\n\n“HTTP严格传输安全”（简称 HSTS）的作用，就是强制浏览器只能发出HTTPS请求，并阻止用户接受不安全的证书。\n\n它在网站的响应头里面，加入一个强制性声明。以下例子摘自[维基百科](https://zh.wikipedia.org/wiki/HTTP%E4%B8%A5%E6%A0%BC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8)。\n\n```http\nStrict-Transport-Security: max-age=31536000; includeSubDomains\n```\n\n上面这段头信息有两个作用。\n\n> （1）在接下来的一年（即31536000秒）中，浏览器只要向`example.com`或其子域名发送HTTP请求时，必须采用HTTPS来发起连接。用户点击超链接或在地址栏输入`http://www.example.com/`，浏览器应当自动将`http`转写成`https`，然后直接向`https://www.example.com/`发送请求。\n> \n> （2）在接下来的一年中，如果`example.com`服务器发送的证书无效，用户不能忽略浏览器警告，将无法继续访问该网站。\n\nHSTS 很大程度上解决了 SSL 剥离攻击。只要浏览器曾经与服务器建立过一次安全连接，之后浏览器会强制使用`HTTPS`，即使链接被换成了`HTTP`。\n\n该方法的主要不足是，用户首次访问网站发出HTTP请求时，是不受HSTS保护的。\n\n### 5.2 Cookie\n\n另一个需要注意的地方是，确保浏览器只在使用 HTTPS 时，才发送Cookie。\n\n网站响应头里面，`Set-Cookie`字段加上`Secure`标志即可。\n\n```http\nSet-Cookie: LSID=DQAAAK…Eaem_vYg; Secure\n```\n\n## 六、参考链接\n\n- [How To Migrate To HTTPS](https://docs.google.com/document/d/1oRXJUIttqQxuxmjj2tgYjj096IKw4Zcw6eAoIKWZ2oQ/edit#), by Chris Palmer\n- [Complete Guide – How to Migrate from HTTP to HTTPS](https://www.keycdn.com/blog/http-to-https/), by KeyCDN\n- [What You Need to Know About Changing From Http to Https](http://smallbiztrends.com/2015/04/changing-from-http-to-https.html), by Matt Mansfield\n\n（完）","slug":"https","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp88000dwsnnvk15j9p7","content":"<p>上一篇文章我介绍了 <a href=\"http://www.ruanyifeng.com/blog/2016/08/http.html\" target=\"_blank\" rel=\"external\">HTTP/2 协议</a> ，它只有在 HTTPS 环境才会生效。</p>\n<p>为了升级到 HTTP/2 协议，必须先启用 HTTPS。如果你不了解 HTTPS 协议（学名 TLS 协议），可以参考我以前的文章。</p>\n<blockquote>\n<ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html\" target=\"_blank\" rel=\"external\">《HTTPS 协议概述》</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2014/09/illustration-ssl.html\" target=\"_blank\" rel=\"external\">《图解 HTTPS 协议》</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2011/02/seven_myths_about_https.html\" target=\"_blank\" rel=\"external\">《HTTPS 协议的七个误解》</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2014/09/ssl-latency.html\" target=\"_blank\" rel=\"external\">《HTTPS 协议的延迟有多大？》</a></li>\n</ul>\n</blockquote>\n<a id=\"more\"></a>\n<p>本文介绍如何将一个 HTTP 网站升级到 HTTPS 。</p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016082601.png\" alt=\"\"></p>\n<h2 id=\"一、获取证书\"><a href=\"#一、获取证书\" class=\"headerlink\" title=\"一、获取证书\"></a>一、获取证书</h2><p>升级到HTTPS协议的第一步，就是要获得一张证书。</p>\n<p>证书是一个二进制文件，里面包含经过认证的网站公钥和一些元数据，要从经销商购买。</p>\n<blockquote>\n<ul>\n<li><a href=\"https://www.gogetssl.com/\" target=\"_blank\" rel=\"external\">GoGetSSL</a></li>\n<li><a href=\"https://www.ssls.com/\" target=\"_blank\" rel=\"external\">SSLs.com</a></li>\n<li><a href=\"https://sslmate.com/\" target=\"_blank\" rel=\"external\">SSLmate.com</a></li>\n</ul>\n</blockquote>\n<p>证书有很多类型，首先分为三种认证级别。</p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016082602.png\" alt=\"\"></p>\n<blockquote>\n<ul>\n<li><strong>域名认证</strong>（Domain Validation）：最低级别认证，可以确认申请人拥有这个域名。对于这种证书，浏览器会在地址栏显示一把锁。</li>\n<li><strong>公司认证</strong>（Company Validation）：确认域名所有人是哪一家公司，证书里面会包含公司信息。</li>\n<li><strong>扩展认证</strong>（Extended Validation）：最高级别的认证，浏览器地址栏会显示公司名。</li>\n</ul>\n</blockquote>\n<p>还分为三种覆盖范围。</p>\n<blockquote>\n<ul>\n<li><strong>单域名证书</strong>：只能用于单一域名，<code>foo.com</code>的证书不能用于<code>www.foo.com</code></li>\n<li><strong>通配符证书</strong>：可以用于某个域名及其所有一级子域名，比如<code>*.foo.com</code>的证书可以用于<code>foo.com</code>，也可以用于<code>www.foo.com</code></li>\n<li><strong>多域名证书</strong>：可以用于多个域名，比如<code>foo.com</code>和<code>bar.com</code></li>\n</ul>\n</blockquote>\n<p>认证级别越高、覆盖范围越广的证书，价格越贵。</p>\n<p>还有一个免费证书的选择。为了推广HTTPS协议，电子前哨基金会EFF成立了 <a href=\"https://letsencrypt.org/\" target=\"_blank\" rel=\"external\">Let’s Encrypt</a>，提供免费证书（<a href=\"https://www.digitalocean.com/community/tags/let-s-encrypt?type=tutorials\" target=\"_blank\" rel=\"external\">教程</a>和<a href=\"https://certbot.eff.org/\" target=\"_blank\" rel=\"external\">工具</a>）。</p>\n<p>拿到证书以后，可以用<a href=\"https://tools.keycdn.com/ssl\" target=\"_blank\" rel=\"external\">SSL Certificate Check</a>检查一下，信息是否正确。</p>\n<h2 id=\"二、安装证书\"><a href=\"#二、安装证书\" class=\"headerlink\" title=\"二、安装证书\"></a>二、安装证书</h2><p>证书可以放在<code>/etc/ssl</code>目录（Linux 系统），然后根据你使用的Web服务器进行配置。</p>\n<blockquote>\n<ul>\n<li><a href=\"https://mozilla.github.io/server-side-tls/ssl-config-generator/\" target=\"_blank\" rel=\"external\">证书配置文件生成器</a>，by Mozilla</li>\n<li><a href=\"https://github.com/SSLMate/tlsconfigguide/tree/master/templates\" target=\"_blank\" rel=\"external\">配置文件模板</a>，by SSLMate</li>\n</ul>\n</blockquote>\n<p>如果使用 Let’s Encrypt 证书，请使用自动安装工具<a href=\"https://certbot.eff.org/\" target=\"_blank\" rel=\"external\">Certbot</a>。</p>\n<p>安装成功后，使用 <a href=\"https://www.ssllabs.com/ssltest/analyze.html\" target=\"_blank\" rel=\"external\">SSL Labs Server Test</a> 检查一下证书是否生效。</p>\n<h2 id=\"三、修改链接\"><a href=\"#三、修改链接\" class=\"headerlink\" title=\"三、修改链接\"></a>三、修改链接</h2><p>下一步，网页加载的 HTTP 资源，全部改成 HTTPS 链接。因为加密网页内有非加密的资源，浏览器是不会加载的。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://foo.com/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面这行加载命令，有两种改法。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 改法一 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://foo.com/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 改法二 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//foo.com/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>其中，改法二会根据当前网页的协议，加载相同协议的外部资源，更灵活一些。</p>\n<p>另外，如果页面头部用到了<code>rel=&quot;canonical&quot;</code>，也要改成HTTPS网址。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"canonical\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://foo.com/bar.html\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"四、301重定向\"><a href=\"#四、301重定向\" class=\"headerlink\" title=\"四、301重定向\"></a>四、301重定向</h2><p>下一步，修改 Web 服务器的配置文件，使用 301 重定向，将 HTTP 协议的访问导向 HTTPS 协议。</p>\n<p><a href=\"https://serverfault.com/questions/67316/in-nginx-how-can-i-rewrite-all-http-requests-to-https-while-maintaining-sub-dom\" target=\"_blank\" rel=\"external\">Nginx 的写法</a>。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 80;</span><br><span class=\"line\">  server_name domain.com www.domain.com;</span><br><span class=\"line\">  return 301 https://domain.com$request_uri;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://httpd.apache.org/docs/2.4/rewrite/remapping.html#canonicalhost\" target=\"_blank\" rel=\"external\">Apache 的写法</a>（<code>.htaccess</code>文件）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RewriteEngine On</span><br><span class=\"line\">RewriteCond %&#123;HTTPS&#125; off</span><br><span class=\"line\">RewriteRule (.*) https://%&#123;HTTP_HOST&#125;%&#123;REQUEST_URI&#125; [R=301,L]</span><br></pre></td></tr></table></figure>\n<h2 id=\"五、安全措施\"><a href=\"#五、安全措施\" class=\"headerlink\" title=\"五、安全措施\"></a>五、安全措施</h2><p>以下措施可以进一步保证通信安全。</p>\n<h3 id=\"5-1-HTTP-Strict-Transport-Security-HSTS\"><a href=\"#5-1-HTTP-Strict-Transport-Security-HSTS\" class=\"headerlink\" title=\"5.1 HTTP Strict Transport Security (HSTS)\"></a>5.1 HTTP Strict Transport Security (HSTS)</h3><p>访问网站时，用户很少直接在地址栏输入<code>https://</code>，总是通过点击链接，或者3xx重定向，从HTTP页面进入HTTPS页面。攻击者完全可以在用户发出HTTP请求时，劫持并篡改该请求。</p>\n<p>另一种情况是恶意网站使用自签名证书，冒充另一个网站，这时浏览器会给出警告，但是许多用户会忽略警告继续访问。</p>\n<p>“HTTP严格传输安全”（简称 HSTS）的作用，就是强制浏览器只能发出HTTPS请求，并阻止用户接受不安全的证书。</p>\n<p>它在网站的响应头里面，加入一个强制性声明。以下例子摘自<a href=\"https://zh.wikipedia.org/wiki/HTTP%E4%B8%A5%E6%A0%BC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8\" target=\"_blank\" rel=\"external\">维基百科</a>。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Strict-Transport-Security</span>: max-age=31536000; includeSubDomains</span><br></pre></td></tr></table></figure>\n<p>上面这段头信息有两个作用。</p>\n<blockquote>\n<p>（1）在接下来的一年（即31536000秒）中，浏览器只要向<code>example.com</code>或其子域名发送HTTP请求时，必须采用HTTPS来发起连接。用户点击超链接或在地址栏输入<code>http://www.example.com/</code>，浏览器应当自动将<code>http</code>转写成<code>https</code>，然后直接向<code>https://www.example.com/</code>发送请求。</p>\n<p>（2）在接下来的一年中，如果<code>example.com</code>服务器发送的证书无效，用户不能忽略浏览器警告，将无法继续访问该网站。</p>\n</blockquote>\n<p>HSTS 很大程度上解决了 SSL 剥离攻击。只要浏览器曾经与服务器建立过一次安全连接，之后浏览器会强制使用<code>HTTPS</code>，即使链接被换成了<code>HTTP</code>。</p>\n<p>该方法的主要不足是，用户首次访问网站发出HTTP请求时，是不受HSTS保护的。</p>\n<h3 id=\"5-2-Cookie\"><a href=\"#5-2-Cookie\" class=\"headerlink\" title=\"5.2 Cookie\"></a>5.2 Cookie</h3><p>另一个需要注意的地方是，确保浏览器只在使用 HTTPS 时，才发送Cookie。</p>\n<p>网站响应头里面，<code>Set-Cookie</code>字段加上<code>Secure</code>标志即可。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Set-Cookie</span>: LSID=DQAAAK…Eaem_vYg; Secure</span><br></pre></td></tr></table></figure>\n<h2 id=\"六、参考链接\"><a href=\"#六、参考链接\" class=\"headerlink\" title=\"六、参考链接\"></a>六、参考链接</h2><ul>\n<li><a href=\"https://docs.google.com/document/d/1oRXJUIttqQxuxmjj2tgYjj096IKw4Zcw6eAoIKWZ2oQ/edit#\" target=\"_blank\" rel=\"external\">How To Migrate To HTTPS</a>, by Chris Palmer</li>\n<li><a href=\"https://www.keycdn.com/blog/http-to-https/\" target=\"_blank\" rel=\"external\">Complete Guide – How to Migrate from HTTP to HTTPS</a>, by KeyCDN</li>\n<li><a href=\"http://smallbiztrends.com/2015/04/changing-from-http-to-https.html\" target=\"_blank\" rel=\"external\">What You Need to Know About Changing From Http to Https</a>, by Matt Mansfield</li>\n</ul>\n<p>（完）</p>\n","excerpt":"<p>上一篇文章我介绍了 <a href=\"http://www.ruanyifeng.com/blog/2016/08/http.html\">HTTP/2 协议</a> ，它只有在 HTTPS 环境才会生效。</p>\n<p>为了升级到 HTTP/2 协议，必须先启用 HTTPS。如果你不了解 HTTPS 协议（学名 TLS 协议），可以参考我以前的文章。</p>\n<blockquote>\n<ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html\">《HTTPS 协议概述》</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2014/09/illustration-ssl.html\">《图解 HTTPS 协议》</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2011/02/seven_myths_about_https.html\">《HTTPS 协议的七个误解》</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2014/09/ssl-latency.html\">《HTTPS 协议的延迟有多大？》</a></li>\n</ul>\n</blockquote>","more":"<p>本文介绍如何将一个 HTTP 网站升级到 HTTPS 。</p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016082601.png\" alt=\"\"></p>\n<h2 id=\"一、获取证书\"><a href=\"#一、获取证书\" class=\"headerlink\" title=\"一、获取证书\"></a>一、获取证书</h2><p>升级到HTTPS协议的第一步，就是要获得一张证书。</p>\n<p>证书是一个二进制文件，里面包含经过认证的网站公钥和一些元数据，要从经销商购买。</p>\n<blockquote>\n<ul>\n<li><a href=\"https://www.gogetssl.com/\">GoGetSSL</a></li>\n<li><a href=\"https://www.ssls.com/\">SSLs.com</a></li>\n<li><a href=\"https://sslmate.com/\">SSLmate.com</a></li>\n</ul>\n</blockquote>\n<p>证书有很多类型，首先分为三种认证级别。</p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016082602.png\" alt=\"\"></p>\n<blockquote>\n<ul>\n<li><strong>域名认证</strong>（Domain Validation）：最低级别认证，可以确认申请人拥有这个域名。对于这种证书，浏览器会在地址栏显示一把锁。</li>\n<li><strong>公司认证</strong>（Company Validation）：确认域名所有人是哪一家公司，证书里面会包含公司信息。</li>\n<li><strong>扩展认证</strong>（Extended Validation）：最高级别的认证，浏览器地址栏会显示公司名。</li>\n</ul>\n</blockquote>\n<p>还分为三种覆盖范围。</p>\n<blockquote>\n<ul>\n<li><strong>单域名证书</strong>：只能用于单一域名，<code>foo.com</code>的证书不能用于<code>www.foo.com</code></li>\n<li><strong>通配符证书</strong>：可以用于某个域名及其所有一级子域名，比如<code>*.foo.com</code>的证书可以用于<code>foo.com</code>，也可以用于<code>www.foo.com</code></li>\n<li><strong>多域名证书</strong>：可以用于多个域名，比如<code>foo.com</code>和<code>bar.com</code></li>\n</ul>\n</blockquote>\n<p>认证级别越高、覆盖范围越广的证书，价格越贵。</p>\n<p>还有一个免费证书的选择。为了推广HTTPS协议，电子前哨基金会EFF成立了 <a href=\"https://letsencrypt.org/\">Let’s Encrypt</a>，提供免费证书（<a href=\"https://www.digitalocean.com/community/tags/let-s-encrypt?type=tutorials\">教程</a>和<a href=\"https://certbot.eff.org/\">工具</a>）。</p>\n<p>拿到证书以后，可以用<a href=\"https://tools.keycdn.com/ssl\">SSL Certificate Check</a>检查一下，信息是否正确。</p>\n<h2 id=\"二、安装证书\"><a href=\"#二、安装证书\" class=\"headerlink\" title=\"二、安装证书\"></a>二、安装证书</h2><p>证书可以放在<code>/etc/ssl</code>目录（Linux 系统），然后根据你使用的Web服务器进行配置。</p>\n<blockquote>\n<ul>\n<li><a href=\"https://mozilla.github.io/server-side-tls/ssl-config-generator/\">证书配置文件生成器</a>，by Mozilla</li>\n<li><a href=\"https://github.com/SSLMate/tlsconfigguide/tree/master/templates\">配置文件模板</a>，by SSLMate</li>\n</ul>\n</blockquote>\n<p>如果使用 Let’s Encrypt 证书，请使用自动安装工具<a href=\"https://certbot.eff.org/\">Certbot</a>。</p>\n<p>安装成功后，使用 <a href=\"https://www.ssllabs.com/ssltest/analyze.html\">SSL Labs Server Test</a> 检查一下证书是否生效。</p>\n<h2 id=\"三、修改链接\"><a href=\"#三、修改链接\" class=\"headerlink\" title=\"三、修改链接\"></a>三、修改链接</h2><p>下一步，网页加载的 HTTP 资源，全部改成 HTTPS 链接。因为加密网页内有非加密的资源，浏览器是不会加载的。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://foo.com/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面这行加载命令，有两种改法。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 改法一 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://foo.com/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 改法二 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//foo.com/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>其中，改法二会根据当前网页的协议，加载相同协议的外部资源，更灵活一些。</p>\n<p>另外，如果页面头部用到了<code>rel=&quot;canonical&quot;</code>，也要改成HTTPS网址。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"canonical\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://foo.com/bar.html\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"四、301重定向\"><a href=\"#四、301重定向\" class=\"headerlink\" title=\"四、301重定向\"></a>四、301重定向</h2><p>下一步，修改 Web 服务器的配置文件，使用 301 重定向，将 HTTP 协议的访问导向 HTTPS 协议。</p>\n<p><a href=\"https://serverfault.com/questions/67316/in-nginx-how-can-i-rewrite-all-http-requests-to-https-while-maintaining-sub-dom\">Nginx 的写法</a>。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 80;</span><br><span class=\"line\">  server_name domain.com www.domain.com;</span><br><span class=\"line\">  return 301 https://domain.com$request_uri;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://httpd.apache.org/docs/2.4/rewrite/remapping.html#canonicalhost\">Apache 的写法</a>（<code>.htaccess</code>文件）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RewriteEngine On</span><br><span class=\"line\">RewriteCond %&#123;HTTPS&#125; off</span><br><span class=\"line\">RewriteRule (.*) https://%&#123;HTTP_HOST&#125;%&#123;REQUEST_URI&#125; [R=301,L]</span><br></pre></td></tr></table></figure>\n<h2 id=\"五、安全措施\"><a href=\"#五、安全措施\" class=\"headerlink\" title=\"五、安全措施\"></a>五、安全措施</h2><p>以下措施可以进一步保证通信安全。</p>\n<h3 id=\"5-1-HTTP-Strict-Transport-Security-HSTS\"><a href=\"#5-1-HTTP-Strict-Transport-Security-HSTS\" class=\"headerlink\" title=\"5.1 HTTP Strict Transport Security (HSTS)\"></a>5.1 HTTP Strict Transport Security (HSTS)</h3><p>访问网站时，用户很少直接在地址栏输入<code>https://</code>，总是通过点击链接，或者3xx重定向，从HTTP页面进入HTTPS页面。攻击者完全可以在用户发出HTTP请求时，劫持并篡改该请求。</p>\n<p>另一种情况是恶意网站使用自签名证书，冒充另一个网站，这时浏览器会给出警告，但是许多用户会忽略警告继续访问。</p>\n<p>“HTTP严格传输安全”（简称 HSTS）的作用，就是强制浏览器只能发出HTTPS请求，并阻止用户接受不安全的证书。</p>\n<p>它在网站的响应头里面，加入一个强制性声明。以下例子摘自<a href=\"https://zh.wikipedia.org/wiki/HTTP%E4%B8%A5%E6%A0%BC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8\">维基百科</a>。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Strict-Transport-Security</span>: max-age=31536000; includeSubDomains</span><br></pre></td></tr></table></figure>\n<p>上面这段头信息有两个作用。</p>\n<blockquote>\n<p>（1）在接下来的一年（即31536000秒）中，浏览器只要向<code>example.com</code>或其子域名发送HTTP请求时，必须采用HTTPS来发起连接。用户点击超链接或在地址栏输入<code>http://www.example.com/</code>，浏览器应当自动将<code>http</code>转写成<code>https</code>，然后直接向<code>https://www.example.com/</code>发送请求。</p>\n<p>（2）在接下来的一年中，如果<code>example.com</code>服务器发送的证书无效，用户不能忽略浏览器警告，将无法继续访问该网站。</p>\n</blockquote>\n<p>HSTS 很大程度上解决了 SSL 剥离攻击。只要浏览器曾经与服务器建立过一次安全连接，之后浏览器会强制使用<code>HTTPS</code>，即使链接被换成了<code>HTTP</code>。</p>\n<p>该方法的主要不足是，用户首次访问网站发出HTTP请求时，是不受HSTS保护的。</p>\n<h3 id=\"5-2-Cookie\"><a href=\"#5-2-Cookie\" class=\"headerlink\" title=\"5.2 Cookie\"></a>5.2 Cookie</h3><p>另一个需要注意的地方是，确保浏览器只在使用 HTTPS 时，才发送Cookie。</p>\n<p>网站响应头里面，<code>Set-Cookie</code>字段加上<code>Secure</code>标志即可。</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Set-Cookie</span>: LSID=DQAAAK…Eaem_vYg; Secure</span><br></pre></td></tr></table></figure>\n<h2 id=\"六、参考链接\"><a href=\"#六、参考链接\" class=\"headerlink\" title=\"六、参考链接\"></a>六、参考链接</h2><ul>\n<li><a href=\"https://docs.google.com/document/d/1oRXJUIttqQxuxmjj2tgYjj096IKw4Zcw6eAoIKWZ2oQ/edit#\">How To Migrate To HTTPS</a>, by Chris Palmer</li>\n<li><a href=\"https://www.keycdn.com/blog/http-to-https/\">Complete Guide – How to Migrate from HTTP to HTTPS</a>, by KeyCDN</li>\n<li><a href=\"http://smallbiztrends.com/2015/04/changing-from-http-to-https.html\">What You Need to Know About Changing From Http to Https</a>, by Matt Mansfield</li>\n</ul>\n<p>（完）</p>"},{"title":"如何学英语？","date":"2014-12-14T16:40:51.000Z","_content":"\n# 信心来源于理性\n\n像学自己的母语一样可以学会的，只要不断坚持。很多人学得好的仅仅是身边人学会了，_他也行_ 的启示。\n\n- 大脑是可塑的；\n- 并且它自始至终都是可塑的；\n- 甚至它还会重新组织自己（Reorganizing），通过恰当的训练，它能用另外一个区域习得已被毁坏区域的能力......\n<!-- more -->\n\n> 如下面这个小女孩，他受伤的右臂，就是要限制他的左臂。英语也是，如果你要学习这个，首先要限制一下自己的母语，这样你学起来更快，否则大脑会走\"捷径\"。 ![小女孩](/images/figure05.png)\n\n为什么成年后学习第二语言显得更为困难？ 成年之后，第二语言学习显得更为困难的原因并不在于关键期论所说的\"此后大脑不再可塑\"，而实际上在于这是第二语言所使用的脑图要与已经形成强大势力的母语脑图竞争----当然越来越难.然而，恰恰是这样的认识给了人们希望。目前，有很多教育学家开始提倡\"浸泡式学习\"，有一定的依据，也有相当的效果。所谓\"浸泡式学习\"，就是在特定的时间、特定的环境里，强迫学生只使用第二语言，禁止使用母语，进而刺激大脑加速构建新的脑图。风靡全球的罗赛塔石碑语言学习软体（[Rosetta Stone](http://www.rosettastone.com/)）就是基于这个原理开发出来的。\n\n- 什么时候开始学都不晚；\n- 只要方法得当，并加以时日，一定能学好。\n- 甚至，第二语言也可能超越母语成为主导语言。\n\n罗伯特•莫顿教授发现了这个现象，为这类现象取了个名字叫做\"自证预言\"（Self-fulfilling prophecy）。\n\n> 当人们相信某件事情会发生（事实上那件事情原本并不见得一定会发生），那么此事最终真的会发生。\n\n而莫顿教授用银行挤兑的例子说明自证预言的作用机理：\n\n> 一家银行本来运作得好好的，但不知怎么就开始有谣言说这家银行要倒闭了。流言越穿越广，越来越多的人开始信以为真，开始有人跑到银行把自己的存款提走；进而恐慌开始蔓延，并且变得真实，更多的人冲进银行提走自己的存款......最终，挤兑发生了，银行真的倒闭了。\n\n很多人宁愿\"学一辈子\"，却坚持\"一辈子不用\"的原因就在于害怕犯错。儿时犯错往往招致惩罚，成年之后，就算没有来自他人的惩罚，还有因为犯错而导致自己自卑和尴尬，所以，很多人是\"不惜一切代价\"避免出错的。然而， **要知道知识的习得过程离不开试错，没有试错，就不可能有全面而真实的进步** 。\n\n潜移默化的教育最有效。当你看到身边的人做成功了，对你启发就大了。反过来，如果要影响身边的人，首先自己去开始做。\n\n我们应该做的是，用最快的速度完成对\"马拉松\"的适应，而后哪怕每天\"马拉松\"也不觉得异常，甚至应该早忘记当初的痛苦，而去专注于语言的主要功用：用英语获取信息，用英语交流......反正，用就是了。（海量阅读）\n\n--------------------------------------------------------------------------------\n\n# 口语\n\n## 你的问题也许不在于你不会说，而在于你没什么话可说。\n\n如果遇到你要说的场合，提前\"预演\"，准本自己需要说什么。如此这般之后，到了现场，基本上能够做到\"自如\"应对。 在相当长一段时间里，我以为自己\"发现\"了一条真正的捷径，后来才发现\"我并不孤独\"。在国内，卖得最好的口语教材，实际上是北京外国语大学的专业教材，作者是北外教授吴桢福老师：一共三本，《英语初级口语》、《英语中级口语》、《英语高级口语》，多年来多次再版，印数均超过100万本。如果读者有机会，不妨去书店翻翻这套教材──你会发现其中的大多数课文话题，实际上也许都是从TOEFL作文题脱胎而来的。\n\n## 制作自己的口语书\n\n准备一个笔记本，随身携带。每天花十分钟到半个小时，把自己想要表达的内容用中文记录下来。坚持一段时间之后，每天再多花点时间把那些你要说的话用英文表达出来，并记录下来。\n\n> 实际上你必须表达的话并不多...... 这些内容中的绝大多数其实你完全有能力用英文表达（最多查查词典就可以了）。\n\n### 一定要用本子记录\n\n找个本子把自己要说的话记录下来，不仅仅是为了将来翻译成英文。记录下来有很多好处，起码，可以让自己重新审视一下自己所说过的话，避免自己的表达实际上是思维混乱的产物。\n\n### 根本不知道该如何用英文说怎么办,记录下来，以后\"某个时候\"会有答案\n\n### 学会\"换一种说法\"\n\n例如:\n\n> Whoever is a girl does not want to be loved, and whoever is a boy does not want to be royal to his lover.\n\n所以，\"父母们之所以选择男女分校，很可能的原因之一是因为他们害怕自己的孩子早恋。\"这句话，我愣是用英文说不出来。但，我还是先把这句话中能说明白的部分记在本子上：\n\n> One of the reasons why many parents want to send their children to separate school is that they are worried about 早恋.\n\n大概几个星期之后，有一天我在读一篇文章，读到一个词，\"undernutrition\"（营养不良），脑子里闪过的念头是这个词头\"under\"究竟都有哪些意思呢？于是动手去查词典。哦，它基本上有两个意思：\n\n> 在......之下，比如underground； ......不足、不良，比如，undernutrition，比如underage drinking......\n\n读到\"underage drinking\"（未成年人饮酒）的那一瞬间，我突然想到，实际上，我可以不用\"早恋\"这个词就能把我要说的说明白。其实，中国的父母害怕的并不是所谓的\"早恋\"，如若一切发生在思维之中，他们很可能其实是并不关心的，就算因\"早恋\"发生了行动，拉拉手、亲亲嘴，他们也很可能不会太过紧张；然而，他们真的害怕自己的孩子发生\"underage sexual behaviors\"......\n\nOne of the reasons why many parents want to send their children to separate school is that they are worried about possible underage sexual behaviors.\n\n### 使用平实的、朴素的、没有修辞的中文\n\n我说主张的口语习得方法不过是\"把自己想说的先写下来，然后不断练、不断改\"而已。绝大多数最终拥有良好写作能力的人基本上都是靠自己，多读、多写、多改、多练、多观察、多思考、多讨论、多积累......而这些要多做的事情中几乎没有哪一样是哪一个老师能在其中起主导作用的，几乎全都是（只能）靠自己。\n\n> 自己给自己改作文 帮别人改作文\n\n自己给自己批改作文，有个很重要的诀窍：不要写完马上改，而是隔天再修改。你当时那么写（即便是错的）就是因为你认为那么写是对的。这种惯性在刚写完的时候最大，表现最强。所以，写完之后马上修改很可能事倍功半。隔一天就不一样了，很多错误在你眼里几乎是跳出来的，并伴随着惊讶\"哎呀！我怎么会犯这种低级错误呢？！\"相信我，这其实就是你真正进步的痕迹──因为产生深刻记忆的最有效手段无非两种：重复、惊讶。帮别人改作文是提高自己能力的最快手段之一。也许你会说，\"我自己都不会呢，哪儿有能力帮别人改啊？\"这不是问题，你试试就知道了，挑错比写文章容易多了，尤其是别人的错，更容易被你找出来。有趣的现象在于，批改者往往比被批改者收获更多。\n\n# 更重要的是思考能力\n\n语言最终是用来表达思想的。所以，思考方式格外重要。大多数人不懂得如何正确思考，乃至于所要表达的东西漏洞百出却又不自知。这个问题导致的更多麻烦，很多的时候被一些英语老师归咎于\"东西方文化差异\"，这是和稀泥的一种说法----事实上，这跟文化没多大关系，而是思考能力问题。关于文化差异，首先需要的是尊重，其次需要的是理解。而思考能力差异，则是另外一回事，所表达的内容千疮百孔，无论如何都只能怪思考能力差，而与文化差异毫无关系。\n\n不能\"只学英语\"，这就好像用计算机绘图，只学\"Photoshop\"是不够的，要有足够的色彩、手绘基本训练，才能够自由创作一样。有几本书，建议所有想获得正确思考能力，进而表达清晰的人阅读。\n\n- Thought and Knowledge: An Introduction to Critical Thinking 4th edition, by Diane F. Halpern\n- Thinking and Deciding, 4th edition, by Jonathan Baron\n- Argumentation: The Study of Effective Reasoning by Zarefsky David (Audiobook)\n- Craft of Research, by Wayne C. Booth, Gregory G. Colomb, Joseph M. Williams\n- Good Reasoning Matters!: A Constructive Approach to Critical Thinking 3rd edition, by Leo A. Groarke, Christopher W. Tindale 另外，还有三本关于文风（Style）的书籍也一定要看：\n\n- A Plain English Handbook (1998), from Security and Exchange Commission, Prefaced by Warren E. Buffett (<http://www.plainlanguage.gov>)\n\n- On Writing: A Memoir of The Craft by Stephen King (with audiobook) Style: Toward Clarity and Grace by Joseph M. Williams 另外，还有一个TTC (The Teaching Company)的视频教程，是我所见过最好的写作课程：\n- Building Great Sentences。\n\n# 秘密武器-- 复述\n\n这还真的并不是那么\"显而易见\"的事实。ETS在设计并举办TOEFL考试几十年之后才\"恍然大悟\"地在新托福考试中大面积添加了\"复述能力\"的考 量：TOEFL作文部分中有综合测试，要求考生先读一篇文章，然后再听一篇与刚刚读过的文章相关的讲座，而后复述讲座内容以及讲座内容是如何与阅读文章内 容相联系的；口语部分中有先听再说，先读再说，听与读之后再说----无一不是在考量考生的\"复述能力\"。\n\n# 模式识别（pattern recognition) 朗读\n模式识别可以在不知不觉中运用正确的词汇，通过肢体表情等等。\n\n\n## 语音\n1. 发音很重要，但显然不是最重要的\n2. 我们完全有能力大幅度改善发音\n3. 最大的障碍：害怕被嘲弄\n4. 多听多听再多听，去听正常的语速资料不需要听得懂，只需要有语言刺激就可以了，大概半年时间。\n[cnn radio](http://edition.cnn.com/audio/radio/radio.html)\n正如之前所提到的那样，至少要坚持六个月，我个人建议每天的输入时间不要低于四个小时——只要开始做，就会发现其实并不难，因为“哪怕听不懂都无所谓”。听得多了，听得久了，早晚有一天想听不懂都不太容易。当然，即便是最初的时候，为了效果更佳，可以有意识地渐渐提高文本难度，并且最好配合精读。这期间几乎所有的人都会感觉没什么进步，但是，这种“感觉”是不靠谱的——事实上，我们的感觉几乎总是极不靠谱。看看下面的两条直线哪个更长？\n","source":"_posts/2014/learn-english.md","raw":"---\ntitle: 如何学英语？\ndate: 2014-12-15T00:40:51.000Z\ntags:\n  - english\ncategories: null\n---\n\n# 信心来源于理性\n\n像学自己的母语一样可以学会的，只要不断坚持。很多人学得好的仅仅是身边人学会了，_他也行_ 的启示。\n\n- 大脑是可塑的；\n- 并且它自始至终都是可塑的；\n- 甚至它还会重新组织自己（Reorganizing），通过恰当的训练，它能用另外一个区域习得已被毁坏区域的能力......\n<!-- more -->\n\n> 如下面这个小女孩，他受伤的右臂，就是要限制他的左臂。英语也是，如果你要学习这个，首先要限制一下自己的母语，这样你学起来更快，否则大脑会走\"捷径\"。 ![小女孩](/images/figure05.png)\n\n为什么成年后学习第二语言显得更为困难？ 成年之后，第二语言学习显得更为困难的原因并不在于关键期论所说的\"此后大脑不再可塑\"，而实际上在于这是第二语言所使用的脑图要与已经形成强大势力的母语脑图竞争----当然越来越难.然而，恰恰是这样的认识给了人们希望。目前，有很多教育学家开始提倡\"浸泡式学习\"，有一定的依据，也有相当的效果。所谓\"浸泡式学习\"，就是在特定的时间、特定的环境里，强迫学生只使用第二语言，禁止使用母语，进而刺激大脑加速构建新的脑图。风靡全球的罗赛塔石碑语言学习软体（[Rosetta Stone](http://www.rosettastone.com/)）就是基于这个原理开发出来的。\n\n- 什么时候开始学都不晚；\n- 只要方法得当，并加以时日，一定能学好。\n- 甚至，第二语言也可能超越母语成为主导语言。\n\n罗伯特•莫顿教授发现了这个现象，为这类现象取了个名字叫做\"自证预言\"（Self-fulfilling prophecy）。\n\n> 当人们相信某件事情会发生（事实上那件事情原本并不见得一定会发生），那么此事最终真的会发生。\n\n而莫顿教授用银行挤兑的例子说明自证预言的作用机理：\n\n> 一家银行本来运作得好好的，但不知怎么就开始有谣言说这家银行要倒闭了。流言越穿越广，越来越多的人开始信以为真，开始有人跑到银行把自己的存款提走；进而恐慌开始蔓延，并且变得真实，更多的人冲进银行提走自己的存款......最终，挤兑发生了，银行真的倒闭了。\n\n很多人宁愿\"学一辈子\"，却坚持\"一辈子不用\"的原因就在于害怕犯错。儿时犯错往往招致惩罚，成年之后，就算没有来自他人的惩罚，还有因为犯错而导致自己自卑和尴尬，所以，很多人是\"不惜一切代价\"避免出错的。然而， **要知道知识的习得过程离不开试错，没有试错，就不可能有全面而真实的进步** 。\n\n潜移默化的教育最有效。当你看到身边的人做成功了，对你启发就大了。反过来，如果要影响身边的人，首先自己去开始做。\n\n我们应该做的是，用最快的速度完成对\"马拉松\"的适应，而后哪怕每天\"马拉松\"也不觉得异常，甚至应该早忘记当初的痛苦，而去专注于语言的主要功用：用英语获取信息，用英语交流......反正，用就是了。（海量阅读）\n\n--------------------------------------------------------------------------------\n\n# 口语\n\n## 你的问题也许不在于你不会说，而在于你没什么话可说。\n\n如果遇到你要说的场合，提前\"预演\"，准本自己需要说什么。如此这般之后，到了现场，基本上能够做到\"自如\"应对。 在相当长一段时间里，我以为自己\"发现\"了一条真正的捷径，后来才发现\"我并不孤独\"。在国内，卖得最好的口语教材，实际上是北京外国语大学的专业教材，作者是北外教授吴桢福老师：一共三本，《英语初级口语》、《英语中级口语》、《英语高级口语》，多年来多次再版，印数均超过100万本。如果读者有机会，不妨去书店翻翻这套教材──你会发现其中的大多数课文话题，实际上也许都是从TOEFL作文题脱胎而来的。\n\n## 制作自己的口语书\n\n准备一个笔记本，随身携带。每天花十分钟到半个小时，把自己想要表达的内容用中文记录下来。坚持一段时间之后，每天再多花点时间把那些你要说的话用英文表达出来，并记录下来。\n\n> 实际上你必须表达的话并不多...... 这些内容中的绝大多数其实你完全有能力用英文表达（最多查查词典就可以了）。\n\n### 一定要用本子记录\n\n找个本子把自己要说的话记录下来，不仅仅是为了将来翻译成英文。记录下来有很多好处，起码，可以让自己重新审视一下自己所说过的话，避免自己的表达实际上是思维混乱的产物。\n\n### 根本不知道该如何用英文说怎么办,记录下来，以后\"某个时候\"会有答案\n\n### 学会\"换一种说法\"\n\n例如:\n\n> Whoever is a girl does not want to be loved, and whoever is a boy does not want to be royal to his lover.\n\n所以，\"父母们之所以选择男女分校，很可能的原因之一是因为他们害怕自己的孩子早恋。\"这句话，我愣是用英文说不出来。但，我还是先把这句话中能说明白的部分记在本子上：\n\n> One of the reasons why many parents want to send their children to separate school is that they are worried about 早恋.\n\n大概几个星期之后，有一天我在读一篇文章，读到一个词，\"undernutrition\"（营养不良），脑子里闪过的念头是这个词头\"under\"究竟都有哪些意思呢？于是动手去查词典。哦，它基本上有两个意思：\n\n> 在......之下，比如underground； ......不足、不良，比如，undernutrition，比如underage drinking......\n\n读到\"underage drinking\"（未成年人饮酒）的那一瞬间，我突然想到，实际上，我可以不用\"早恋\"这个词就能把我要说的说明白。其实，中国的父母害怕的并不是所谓的\"早恋\"，如若一切发生在思维之中，他们很可能其实是并不关心的，就算因\"早恋\"发生了行动，拉拉手、亲亲嘴，他们也很可能不会太过紧张；然而，他们真的害怕自己的孩子发生\"underage sexual behaviors\"......\n\nOne of the reasons why many parents want to send their children to separate school is that they are worried about possible underage sexual behaviors.\n\n### 使用平实的、朴素的、没有修辞的中文\n\n我说主张的口语习得方法不过是\"把自己想说的先写下来，然后不断练、不断改\"而已。绝大多数最终拥有良好写作能力的人基本上都是靠自己，多读、多写、多改、多练、多观察、多思考、多讨论、多积累......而这些要多做的事情中几乎没有哪一样是哪一个老师能在其中起主导作用的，几乎全都是（只能）靠自己。\n\n> 自己给自己改作文 帮别人改作文\n\n自己给自己批改作文，有个很重要的诀窍：不要写完马上改，而是隔天再修改。你当时那么写（即便是错的）就是因为你认为那么写是对的。这种惯性在刚写完的时候最大，表现最强。所以，写完之后马上修改很可能事倍功半。隔一天就不一样了，很多错误在你眼里几乎是跳出来的，并伴随着惊讶\"哎呀！我怎么会犯这种低级错误呢？！\"相信我，这其实就是你真正进步的痕迹──因为产生深刻记忆的最有效手段无非两种：重复、惊讶。帮别人改作文是提高自己能力的最快手段之一。也许你会说，\"我自己都不会呢，哪儿有能力帮别人改啊？\"这不是问题，你试试就知道了，挑错比写文章容易多了，尤其是别人的错，更容易被你找出来。有趣的现象在于，批改者往往比被批改者收获更多。\n\n# 更重要的是思考能力\n\n语言最终是用来表达思想的。所以，思考方式格外重要。大多数人不懂得如何正确思考，乃至于所要表达的东西漏洞百出却又不自知。这个问题导致的更多麻烦，很多的时候被一些英语老师归咎于\"东西方文化差异\"，这是和稀泥的一种说法----事实上，这跟文化没多大关系，而是思考能力问题。关于文化差异，首先需要的是尊重，其次需要的是理解。而思考能力差异，则是另外一回事，所表达的内容千疮百孔，无论如何都只能怪思考能力差，而与文化差异毫无关系。\n\n不能\"只学英语\"，这就好像用计算机绘图，只学\"Photoshop\"是不够的，要有足够的色彩、手绘基本训练，才能够自由创作一样。有几本书，建议所有想获得正确思考能力，进而表达清晰的人阅读。\n\n- Thought and Knowledge: An Introduction to Critical Thinking 4th edition, by Diane F. Halpern\n- Thinking and Deciding, 4th edition, by Jonathan Baron\n- Argumentation: The Study of Effective Reasoning by Zarefsky David (Audiobook)\n- Craft of Research, by Wayne C. Booth, Gregory G. Colomb, Joseph M. Williams\n- Good Reasoning Matters!: A Constructive Approach to Critical Thinking 3rd edition, by Leo A. Groarke, Christopher W. Tindale 另外，还有三本关于文风（Style）的书籍也一定要看：\n\n- A Plain English Handbook (1998), from Security and Exchange Commission, Prefaced by Warren E. Buffett (<http://www.plainlanguage.gov>)\n\n- On Writing: A Memoir of The Craft by Stephen King (with audiobook) Style: Toward Clarity and Grace by Joseph M. Williams 另外，还有一个TTC (The Teaching Company)的视频教程，是我所见过最好的写作课程：\n- Building Great Sentences。\n\n# 秘密武器-- 复述\n\n这还真的并不是那么\"显而易见\"的事实。ETS在设计并举办TOEFL考试几十年之后才\"恍然大悟\"地在新托福考试中大面积添加了\"复述能力\"的考 量：TOEFL作文部分中有综合测试，要求考生先读一篇文章，然后再听一篇与刚刚读过的文章相关的讲座，而后复述讲座内容以及讲座内容是如何与阅读文章内 容相联系的；口语部分中有先听再说，先读再说，听与读之后再说----无一不是在考量考生的\"复述能力\"。\n\n# 模式识别（pattern recognition) 朗读\n模式识别可以在不知不觉中运用正确的词汇，通过肢体表情等等。\n\n\n## 语音\n1. 发音很重要，但显然不是最重要的\n2. 我们完全有能力大幅度改善发音\n3. 最大的障碍：害怕被嘲弄\n4. 多听多听再多听，去听正常的语速资料不需要听得懂，只需要有语言刺激就可以了，大概半年时间。\n[cnn radio](http://edition.cnn.com/audio/radio/radio.html)\n正如之前所提到的那样，至少要坚持六个月，我个人建议每天的输入时间不要低于四个小时——只要开始做，就会发现其实并不难，因为“哪怕听不懂都无所谓”。听得多了，听得久了，早晚有一天想听不懂都不太容易。当然，即便是最初的时候，为了效果更佳，可以有意识地渐渐提高文本难度，并且最好配合精读。这期间几乎所有的人都会感觉没什么进步，但是，这种“感觉”是不靠谱的——事实上，我们的感觉几乎总是极不靠谱。看看下面的两条直线哪个更长？\n","slug":"learn-english","published":1,"updated":"2017-01-04T03:56:15.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp88000fwsnnvo1davs6","content":"<h1 id=\"信心来源于理性\"><a href=\"#信心来源于理性\" class=\"headerlink\" title=\"信心来源于理性\"></a>信心来源于理性</h1><p>像学自己的母语一样可以学会的，只要不断坚持。很多人学得好的仅仅是身边人学会了，<em>他也行</em> 的启示。</p>\n<ul>\n<li>大脑是可塑的；</li>\n<li>并且它自始至终都是可塑的；</li>\n<li>甚至它还会重新组织自己（Reorganizing），通过恰当的训练，它能用另外一个区域习得已被毁坏区域的能力……<a id=\"more\"></a>\n</li>\n</ul>\n<blockquote>\n<p>如下面这个小女孩，他受伤的右臂，就是要限制他的左臂。英语也是，如果你要学习这个，首先要限制一下自己的母语，这样你学起来更快，否则大脑会走”捷径”。 <img src=\"/images/figure05.png\" alt=\"小女孩\"></p>\n</blockquote>\n<p>为什么成年后学习第二语言显得更为困难？ 成年之后，第二语言学习显得更为困难的原因并不在于关键期论所说的”此后大脑不再可塑”，而实际上在于这是第二语言所使用的脑图要与已经形成强大势力的母语脑图竞争—-当然越来越难.然而，恰恰是这样的认识给了人们希望。目前，有很多教育学家开始提倡”浸泡式学习”，有一定的依据，也有相当的效果。所谓”浸泡式学习”，就是在特定的时间、特定的环境里，强迫学生只使用第二语言，禁止使用母语，进而刺激大脑加速构建新的脑图。风靡全球的罗赛塔石碑语言学习软体（<a href=\"http://www.rosettastone.com/\" target=\"_blank\" rel=\"external\">Rosetta Stone</a>）就是基于这个原理开发出来的。</p>\n<ul>\n<li>什么时候开始学都不晚；</li>\n<li>只要方法得当，并加以时日，一定能学好。</li>\n<li>甚至，第二语言也可能超越母语成为主导语言。</li>\n</ul>\n<p>罗伯特•莫顿教授发现了这个现象，为这类现象取了个名字叫做”自证预言”（Self-fulfilling prophecy）。</p>\n<blockquote>\n<p>当人们相信某件事情会发生（事实上那件事情原本并不见得一定会发生），那么此事最终真的会发生。</p>\n</blockquote>\n<p>而莫顿教授用银行挤兑的例子说明自证预言的作用机理：</p>\n<blockquote>\n<p>一家银行本来运作得好好的，但不知怎么就开始有谣言说这家银行要倒闭了。流言越穿越广，越来越多的人开始信以为真，开始有人跑到银行把自己的存款提走；进而恐慌开始蔓延，并且变得真实，更多的人冲进银行提走自己的存款……最终，挤兑发生了，银行真的倒闭了。</p>\n</blockquote>\n<p>很多人宁愿”学一辈子”，却坚持”一辈子不用”的原因就在于害怕犯错。儿时犯错往往招致惩罚，成年之后，就算没有来自他人的惩罚，还有因为犯错而导致自己自卑和尴尬，所以，很多人是”不惜一切代价”避免出错的。然而， <strong>要知道知识的习得过程离不开试错，没有试错，就不可能有全面而真实的进步</strong> 。</p>\n<p>潜移默化的教育最有效。当你看到身边的人做成功了，对你启发就大了。反过来，如果要影响身边的人，首先自己去开始做。</p>\n<p>我们应该做的是，用最快的速度完成对”马拉松”的适应，而后哪怕每天”马拉松”也不觉得异常，甚至应该早忘记当初的痛苦，而去专注于语言的主要功用：用英语获取信息，用英语交流……反正，用就是了。（海量阅读）</p>\n<hr>\n<h1 id=\"口语\"><a href=\"#口语\" class=\"headerlink\" title=\"口语\"></a>口语</h1><h2 id=\"你的问题也许不在于你不会说，而在于你没什么话可说。\"><a href=\"#你的问题也许不在于你不会说，而在于你没什么话可说。\" class=\"headerlink\" title=\"你的问题也许不在于你不会说，而在于你没什么话可说。\"></a>你的问题也许不在于你不会说，而在于你没什么话可说。</h2><p>如果遇到你要说的场合，提前”预演”，准本自己需要说什么。如此这般之后，到了现场，基本上能够做到”自如”应对。 在相当长一段时间里，我以为自己”发现”了一条真正的捷径，后来才发现”我并不孤独”。在国内，卖得最好的口语教材，实际上是北京外国语大学的专业教材，作者是北外教授吴桢福老师：一共三本，《英语初级口语》、《英语中级口语》、《英语高级口语》，多年来多次再版，印数均超过100万本。如果读者有机会，不妨去书店翻翻这套教材──你会发现其中的大多数课文话题，实际上也许都是从TOEFL作文题脱胎而来的。</p>\n<h2 id=\"制作自己的口语书\"><a href=\"#制作自己的口语书\" class=\"headerlink\" title=\"制作自己的口语书\"></a>制作自己的口语书</h2><p>准备一个笔记本，随身携带。每天花十分钟到半个小时，把自己想要表达的内容用中文记录下来。坚持一段时间之后，每天再多花点时间把那些你要说的话用英文表达出来，并记录下来。</p>\n<blockquote>\n<p>实际上你必须表达的话并不多…… 这些内容中的绝大多数其实你完全有能力用英文表达（最多查查词典就可以了）。</p>\n</blockquote>\n<h3 id=\"一定要用本子记录\"><a href=\"#一定要用本子记录\" class=\"headerlink\" title=\"一定要用本子记录\"></a>一定要用本子记录</h3><p>找个本子把自己要说的话记录下来，不仅仅是为了将来翻译成英文。记录下来有很多好处，起码，可以让自己重新审视一下自己所说过的话，避免自己的表达实际上是思维混乱的产物。</p>\n<h3 id=\"根本不知道该如何用英文说怎么办-记录下来，以后”某个时候”会有答案\"><a href=\"#根本不知道该如何用英文说怎么办-记录下来，以后”某个时候”会有答案\" class=\"headerlink\" title=\"根本不知道该如何用英文说怎么办,记录下来，以后”某个时候”会有答案\"></a>根本不知道该如何用英文说怎么办,记录下来，以后”某个时候”会有答案</h3><h3 id=\"学会”换一种说法”\"><a href=\"#学会”换一种说法”\" class=\"headerlink\" title=\"学会”换一种说法”\"></a>学会”换一种说法”</h3><p>例如:</p>\n<blockquote>\n<p>Whoever is a girl does not want to be loved, and whoever is a boy does not want to be royal to his lover.</p>\n</blockquote>\n<p>所以，”父母们之所以选择男女分校，很可能的原因之一是因为他们害怕自己的孩子早恋。”这句话，我愣是用英文说不出来。但，我还是先把这句话中能说明白的部分记在本子上：</p>\n<blockquote>\n<p>One of the reasons why many parents want to send their children to separate school is that they are worried about 早恋.</p>\n</blockquote>\n<p>大概几个星期之后，有一天我在读一篇文章，读到一个词，”undernutrition”（营养不良），脑子里闪过的念头是这个词头”under”究竟都有哪些意思呢？于是动手去查词典。哦，它基本上有两个意思：</p>\n<blockquote>\n<p>在……之下，比如underground； ……不足、不良，比如，undernutrition，比如underage drinking……</p>\n</blockquote>\n<p>读到”underage drinking”（未成年人饮酒）的那一瞬间，我突然想到，实际上，我可以不用”早恋”这个词就能把我要说的说明白。其实，中国的父母害怕的并不是所谓的”早恋”，如若一切发生在思维之中，他们很可能其实是并不关心的，就算因”早恋”发生了行动，拉拉手、亲亲嘴，他们也很可能不会太过紧张；然而，他们真的害怕自己的孩子发生”underage sexual behaviors”……</p>\n<p>One of the reasons why many parents want to send their children to separate school is that they are worried about possible underage sexual behaviors.</p>\n<h3 id=\"使用平实的、朴素的、没有修辞的中文\"><a href=\"#使用平实的、朴素的、没有修辞的中文\" class=\"headerlink\" title=\"使用平实的、朴素的、没有修辞的中文\"></a>使用平实的、朴素的、没有修辞的中文</h3><p>我说主张的口语习得方法不过是”把自己想说的先写下来，然后不断练、不断改”而已。绝大多数最终拥有良好写作能力的人基本上都是靠自己，多读、多写、多改、多练、多观察、多思考、多讨论、多积累……而这些要多做的事情中几乎没有哪一样是哪一个老师能在其中起主导作用的，几乎全都是（只能）靠自己。</p>\n<blockquote>\n<p>自己给自己改作文 帮别人改作文</p>\n</blockquote>\n<p>自己给自己批改作文，有个很重要的诀窍：不要写完马上改，而是隔天再修改。你当时那么写（即便是错的）就是因为你认为那么写是对的。这种惯性在刚写完的时候最大，表现最强。所以，写完之后马上修改很可能事倍功半。隔一天就不一样了，很多错误在你眼里几乎是跳出来的，并伴随着惊讶”哎呀！我怎么会犯这种低级错误呢？！”相信我，这其实就是你真正进步的痕迹──因为产生深刻记忆的最有效手段无非两种：重复、惊讶。帮别人改作文是提高自己能力的最快手段之一。也许你会说，”我自己都不会呢，哪儿有能力帮别人改啊？”这不是问题，你试试就知道了，挑错比写文章容易多了，尤其是别人的错，更容易被你找出来。有趣的现象在于，批改者往往比被批改者收获更多。</p>\n<h1 id=\"更重要的是思考能力\"><a href=\"#更重要的是思考能力\" class=\"headerlink\" title=\"更重要的是思考能力\"></a>更重要的是思考能力</h1><p>语言最终是用来表达思想的。所以，思考方式格外重要。大多数人不懂得如何正确思考，乃至于所要表达的东西漏洞百出却又不自知。这个问题导致的更多麻烦，很多的时候被一些英语老师归咎于”东西方文化差异”，这是和稀泥的一种说法—-事实上，这跟文化没多大关系，而是思考能力问题。关于文化差异，首先需要的是尊重，其次需要的是理解。而思考能力差异，则是另外一回事，所表达的内容千疮百孔，无论如何都只能怪思考能力差，而与文化差异毫无关系。</p>\n<p>不能”只学英语”，这就好像用计算机绘图，只学”Photoshop”是不够的，要有足够的色彩、手绘基本训练，才能够自由创作一样。有几本书，建议所有想获得正确思考能力，进而表达清晰的人阅读。</p>\n<ul>\n<li>Thought and Knowledge: An Introduction to Critical Thinking 4th edition, by Diane F. Halpern</li>\n<li>Thinking and Deciding, 4th edition, by Jonathan Baron</li>\n<li>Argumentation: The Study of Effective Reasoning by Zarefsky David (Audiobook)</li>\n<li>Craft of Research, by Wayne C. Booth, Gregory G. Colomb, Joseph M. Williams</li>\n<li><p>Good Reasoning Matters!: A Constructive Approach to Critical Thinking 3rd edition, by Leo A. Groarke, Christopher W. Tindale 另外，还有三本关于文风（Style）的书籍也一定要看：</p>\n</li>\n<li><p>A Plain English Handbook (1998), from Security and Exchange Commission, Prefaced by Warren E. Buffett (<a href=\"http://www.plainlanguage.gov\" target=\"_blank\" rel=\"external\">http://www.plainlanguage.gov</a>)</p>\n</li>\n<li><p>On Writing: A Memoir of The Craft by Stephen King (with audiobook) Style: Toward Clarity and Grace by Joseph M. Williams 另外，还有一个TTC (The Teaching Company)的视频教程，是我所见过最好的写作课程：</p>\n</li>\n<li>Building Great Sentences。</li>\n</ul>\n<h1 id=\"秘密武器–-复述\"><a href=\"#秘密武器–-复述\" class=\"headerlink\" title=\"秘密武器– 复述\"></a>秘密武器– 复述</h1><p>这还真的并不是那么”显而易见”的事实。ETS在设计并举办TOEFL考试几十年之后才”恍然大悟”地在新托福考试中大面积添加了”复述能力”的考 量：TOEFL作文部分中有综合测试，要求考生先读一篇文章，然后再听一篇与刚刚读过的文章相关的讲座，而后复述讲座内容以及讲座内容是如何与阅读文章内 容相联系的；口语部分中有先听再说，先读再说，听与读之后再说—-无一不是在考量考生的”复述能力”。</p>\n<h1 id=\"模式识别（pattern-recognition-朗读\"><a href=\"#模式识别（pattern-recognition-朗读\" class=\"headerlink\" title=\"模式识别（pattern recognition) 朗读\"></a>模式识别（pattern recognition) 朗读</h1><p>模式识别可以在不知不觉中运用正确的词汇，通过肢体表情等等。</p>\n<h2 id=\"语音\"><a href=\"#语音\" class=\"headerlink\" title=\"语音\"></a>语音</h2><ol>\n<li>发音很重要，但显然不是最重要的</li>\n<li>我们完全有能力大幅度改善发音</li>\n<li>最大的障碍：害怕被嘲弄</li>\n<li>多听多听再多听，去听正常的语速资料不需要听得懂，只需要有语言刺激就可以了，大概半年时间。<br><a href=\"http://edition.cnn.com/audio/radio/radio.html\" target=\"_blank\" rel=\"external\">cnn radio</a><br>正如之前所提到的那样，至少要坚持六个月，我个人建议每天的输入时间不要低于四个小时——只要开始做，就会发现其实并不难，因为“哪怕听不懂都无所谓”。听得多了，听得久了，早晚有一天想听不懂都不太容易。当然，即便是最初的时候，为了效果更佳，可以有意识地渐渐提高文本难度，并且最好配合精读。这期间几乎所有的人都会感觉没什么进步，但是，这种“感觉”是不靠谱的——事实上，我们的感觉几乎总是极不靠谱。看看下面的两条直线哪个更长？</li>\n</ol>\n","excerpt":"<h1 id=\"信心来源于理性\"><a href=\"#信心来源于理性\" class=\"headerlink\" title=\"信心来源于理性\"></a>信心来源于理性</h1><p>像学自己的母语一样可以学会的，只要不断坚持。很多人学得好的仅仅是身边人学会了，<em>他也行</em> 的启示。</p>\n<ul>\n<li>大脑是可塑的；</li>\n<li>并且它自始至终都是可塑的；</li>\n<li>甚至它还会重新组织自己（Reorganizing），通过恰当的训练，它能用另外一个区域习得已被毁坏区域的能力……","more":"</li>\n</ul>\n<blockquote>\n<p>如下面这个小女孩，他受伤的右臂，就是要限制他的左臂。英语也是，如果你要学习这个，首先要限制一下自己的母语，这样你学起来更快，否则大脑会走”捷径”。 <img src=\"/images/figure05.png\" alt=\"小女孩\"></p>\n</blockquote>\n<p>为什么成年后学习第二语言显得更为困难？ 成年之后，第二语言学习显得更为困难的原因并不在于关键期论所说的”此后大脑不再可塑”，而实际上在于这是第二语言所使用的脑图要与已经形成强大势力的母语脑图竞争—-当然越来越难.然而，恰恰是这样的认识给了人们希望。目前，有很多教育学家开始提倡”浸泡式学习”，有一定的依据，也有相当的效果。所谓”浸泡式学习”，就是在特定的时间、特定的环境里，强迫学生只使用第二语言，禁止使用母语，进而刺激大脑加速构建新的脑图。风靡全球的罗赛塔石碑语言学习软体（<a href=\"http://www.rosettastone.com/\">Rosetta Stone</a>）就是基于这个原理开发出来的。</p>\n<ul>\n<li>什么时候开始学都不晚；</li>\n<li>只要方法得当，并加以时日，一定能学好。</li>\n<li>甚至，第二语言也可能超越母语成为主导语言。</li>\n</ul>\n<p>罗伯特•莫顿教授发现了这个现象，为这类现象取了个名字叫做”自证预言”（Self-fulfilling prophecy）。</p>\n<blockquote>\n<p>当人们相信某件事情会发生（事实上那件事情原本并不见得一定会发生），那么此事最终真的会发生。</p>\n</blockquote>\n<p>而莫顿教授用银行挤兑的例子说明自证预言的作用机理：</p>\n<blockquote>\n<p>一家银行本来运作得好好的，但不知怎么就开始有谣言说这家银行要倒闭了。流言越穿越广，越来越多的人开始信以为真，开始有人跑到银行把自己的存款提走；进而恐慌开始蔓延，并且变得真实，更多的人冲进银行提走自己的存款……最终，挤兑发生了，银行真的倒闭了。</p>\n</blockquote>\n<p>很多人宁愿”学一辈子”，却坚持”一辈子不用”的原因就在于害怕犯错。儿时犯错往往招致惩罚，成年之后，就算没有来自他人的惩罚，还有因为犯错而导致自己自卑和尴尬，所以，很多人是”不惜一切代价”避免出错的。然而， <strong>要知道知识的习得过程离不开试错，没有试错，就不可能有全面而真实的进步</strong> 。</p>\n<p>潜移默化的教育最有效。当你看到身边的人做成功了，对你启发就大了。反过来，如果要影响身边的人，首先自己去开始做。</p>\n<p>我们应该做的是，用最快的速度完成对”马拉松”的适应，而后哪怕每天”马拉松”也不觉得异常，甚至应该早忘记当初的痛苦，而去专注于语言的主要功用：用英语获取信息，用英语交流……反正，用就是了。（海量阅读）</p>\n<hr>\n<h1 id=\"口语\"><a href=\"#口语\" class=\"headerlink\" title=\"口语\"></a>口语</h1><h2 id=\"你的问题也许不在于你不会说，而在于你没什么话可说。\"><a href=\"#你的问题也许不在于你不会说，而在于你没什么话可说。\" class=\"headerlink\" title=\"你的问题也许不在于你不会说，而在于你没什么话可说。\"></a>你的问题也许不在于你不会说，而在于你没什么话可说。</h2><p>如果遇到你要说的场合，提前”预演”，准本自己需要说什么。如此这般之后，到了现场，基本上能够做到”自如”应对。 在相当长一段时间里，我以为自己”发现”了一条真正的捷径，后来才发现”我并不孤独”。在国内，卖得最好的口语教材，实际上是北京外国语大学的专业教材，作者是北外教授吴桢福老师：一共三本，《英语初级口语》、《英语中级口语》、《英语高级口语》，多年来多次再版，印数均超过100万本。如果读者有机会，不妨去书店翻翻这套教材──你会发现其中的大多数课文话题，实际上也许都是从TOEFL作文题脱胎而来的。</p>\n<h2 id=\"制作自己的口语书\"><a href=\"#制作自己的口语书\" class=\"headerlink\" title=\"制作自己的口语书\"></a>制作自己的口语书</h2><p>准备一个笔记本，随身携带。每天花十分钟到半个小时，把自己想要表达的内容用中文记录下来。坚持一段时间之后，每天再多花点时间把那些你要说的话用英文表达出来，并记录下来。</p>\n<blockquote>\n<p>实际上你必须表达的话并不多…… 这些内容中的绝大多数其实你完全有能力用英文表达（最多查查词典就可以了）。</p>\n</blockquote>\n<h3 id=\"一定要用本子记录\"><a href=\"#一定要用本子记录\" class=\"headerlink\" title=\"一定要用本子记录\"></a>一定要用本子记录</h3><p>找个本子把自己要说的话记录下来，不仅仅是为了将来翻译成英文。记录下来有很多好处，起码，可以让自己重新审视一下自己所说过的话，避免自己的表达实际上是思维混乱的产物。</p>\n<h3 id=\"根本不知道该如何用英文说怎么办-记录下来，以后”某个时候”会有答案\"><a href=\"#根本不知道该如何用英文说怎么办-记录下来，以后”某个时候”会有答案\" class=\"headerlink\" title=\"根本不知道该如何用英文说怎么办,记录下来，以后”某个时候”会有答案\"></a>根本不知道该如何用英文说怎么办,记录下来，以后”某个时候”会有答案</h3><h3 id=\"学会”换一种说法”\"><a href=\"#学会”换一种说法”\" class=\"headerlink\" title=\"学会”换一种说法”\"></a>学会”换一种说法”</h3><p>例如:</p>\n<blockquote>\n<p>Whoever is a girl does not want to be loved, and whoever is a boy does not want to be royal to his lover.</p>\n</blockquote>\n<p>所以，”父母们之所以选择男女分校，很可能的原因之一是因为他们害怕自己的孩子早恋。”这句话，我愣是用英文说不出来。但，我还是先把这句话中能说明白的部分记在本子上：</p>\n<blockquote>\n<p>One of the reasons why many parents want to send their children to separate school is that they are worried about 早恋.</p>\n</blockquote>\n<p>大概几个星期之后，有一天我在读一篇文章，读到一个词，”undernutrition”（营养不良），脑子里闪过的念头是这个词头”under”究竟都有哪些意思呢？于是动手去查词典。哦，它基本上有两个意思：</p>\n<blockquote>\n<p>在……之下，比如underground； ……不足、不良，比如，undernutrition，比如underage drinking……</p>\n</blockquote>\n<p>读到”underage drinking”（未成年人饮酒）的那一瞬间，我突然想到，实际上，我可以不用”早恋”这个词就能把我要说的说明白。其实，中国的父母害怕的并不是所谓的”早恋”，如若一切发生在思维之中，他们很可能其实是并不关心的，就算因”早恋”发生了行动，拉拉手、亲亲嘴，他们也很可能不会太过紧张；然而，他们真的害怕自己的孩子发生”underage sexual behaviors”……</p>\n<p>One of the reasons why many parents want to send their children to separate school is that they are worried about possible underage sexual behaviors.</p>\n<h3 id=\"使用平实的、朴素的、没有修辞的中文\"><a href=\"#使用平实的、朴素的、没有修辞的中文\" class=\"headerlink\" title=\"使用平实的、朴素的、没有修辞的中文\"></a>使用平实的、朴素的、没有修辞的中文</h3><p>我说主张的口语习得方法不过是”把自己想说的先写下来，然后不断练、不断改”而已。绝大多数最终拥有良好写作能力的人基本上都是靠自己，多读、多写、多改、多练、多观察、多思考、多讨论、多积累……而这些要多做的事情中几乎没有哪一样是哪一个老师能在其中起主导作用的，几乎全都是（只能）靠自己。</p>\n<blockquote>\n<p>自己给自己改作文 帮别人改作文</p>\n</blockquote>\n<p>自己给自己批改作文，有个很重要的诀窍：不要写完马上改，而是隔天再修改。你当时那么写（即便是错的）就是因为你认为那么写是对的。这种惯性在刚写完的时候最大，表现最强。所以，写完之后马上修改很可能事倍功半。隔一天就不一样了，很多错误在你眼里几乎是跳出来的，并伴随着惊讶”哎呀！我怎么会犯这种低级错误呢？！”相信我，这其实就是你真正进步的痕迹──因为产生深刻记忆的最有效手段无非两种：重复、惊讶。帮别人改作文是提高自己能力的最快手段之一。也许你会说，”我自己都不会呢，哪儿有能力帮别人改啊？”这不是问题，你试试就知道了，挑错比写文章容易多了，尤其是别人的错，更容易被你找出来。有趣的现象在于，批改者往往比被批改者收获更多。</p>\n<h1 id=\"更重要的是思考能力\"><a href=\"#更重要的是思考能力\" class=\"headerlink\" title=\"更重要的是思考能力\"></a>更重要的是思考能力</h1><p>语言最终是用来表达思想的。所以，思考方式格外重要。大多数人不懂得如何正确思考，乃至于所要表达的东西漏洞百出却又不自知。这个问题导致的更多麻烦，很多的时候被一些英语老师归咎于”东西方文化差异”，这是和稀泥的一种说法—-事实上，这跟文化没多大关系，而是思考能力问题。关于文化差异，首先需要的是尊重，其次需要的是理解。而思考能力差异，则是另外一回事，所表达的内容千疮百孔，无论如何都只能怪思考能力差，而与文化差异毫无关系。</p>\n<p>不能”只学英语”，这就好像用计算机绘图，只学”Photoshop”是不够的，要有足够的色彩、手绘基本训练，才能够自由创作一样。有几本书，建议所有想获得正确思考能力，进而表达清晰的人阅读。</p>\n<ul>\n<li>Thought and Knowledge: An Introduction to Critical Thinking 4th edition, by Diane F. Halpern</li>\n<li>Thinking and Deciding, 4th edition, by Jonathan Baron</li>\n<li>Argumentation: The Study of Effective Reasoning by Zarefsky David (Audiobook)</li>\n<li>Craft of Research, by Wayne C. Booth, Gregory G. Colomb, Joseph M. Williams</li>\n<li><p>Good Reasoning Matters!: A Constructive Approach to Critical Thinking 3rd edition, by Leo A. Groarke, Christopher W. Tindale 另外，还有三本关于文风（Style）的书籍也一定要看：</p>\n</li>\n<li><p>A Plain English Handbook (1998), from Security and Exchange Commission, Prefaced by Warren E. Buffett (<a href=\"http://www.plainlanguage.gov\">http://www.plainlanguage.gov</a>)</p>\n</li>\n<li><p>On Writing: A Memoir of The Craft by Stephen King (with audiobook) Style: Toward Clarity and Grace by Joseph M. Williams 另外，还有一个TTC (The Teaching Company)的视频教程，是我所见过最好的写作课程：</p>\n</li>\n<li>Building Great Sentences。</li>\n</ul>\n<h1 id=\"秘密武器–-复述\"><a href=\"#秘密武器–-复述\" class=\"headerlink\" title=\"秘密武器– 复述\"></a>秘密武器– 复述</h1><p>这还真的并不是那么”显而易见”的事实。ETS在设计并举办TOEFL考试几十年之后才”恍然大悟”地在新托福考试中大面积添加了”复述能力”的考 量：TOEFL作文部分中有综合测试，要求考生先读一篇文章，然后再听一篇与刚刚读过的文章相关的讲座，而后复述讲座内容以及讲座内容是如何与阅读文章内 容相联系的；口语部分中有先听再说，先读再说，听与读之后再说—-无一不是在考量考生的”复述能力”。</p>\n<h1 id=\"模式识别（pattern-recognition-朗读\"><a href=\"#模式识别（pattern-recognition-朗读\" class=\"headerlink\" title=\"模式识别（pattern recognition) 朗读\"></a>模式识别（pattern recognition) 朗读</h1><p>模式识别可以在不知不觉中运用正确的词汇，通过肢体表情等等。</p>\n<h2 id=\"语音\"><a href=\"#语音\" class=\"headerlink\" title=\"语音\"></a>语音</h2><ol>\n<li>发音很重要，但显然不是最重要的</li>\n<li>我们完全有能力大幅度改善发音</li>\n<li>最大的障碍：害怕被嘲弄</li>\n<li>多听多听再多听，去听正常的语速资料不需要听得懂，只需要有语言刺激就可以了，大概半年时间。<br><a href=\"http://edition.cnn.com/audio/radio/radio.html\">cnn radio</a><br>正如之前所提到的那样，至少要坚持六个月，我个人建议每天的输入时间不要低于四个小时——只要开始做，就会发现其实并不难，因为“哪怕听不懂都无所谓”。听得多了，听得久了，早晚有一天想听不懂都不太容易。当然，即便是最初的时候，为了效果更佳，可以有意识地渐渐提高文本难度，并且最好配合精读。这期间几乎所有的人都会感觉没什么进步，但是，这种“感觉”是不靠谱的——事实上，我们的感觉几乎总是极不靠谱。看看下面的两条直线哪个更长？</li>\n</ol>"},{"title":"learning","date":"2014-08-08T11:08:34.000Z","_content":"\n**学习是一种生活方式**，否则为什么会有的人就是停不下来呢？学习不需要坚持、不需要毅力、不需要信念，不需要各种\"不得已而为之的概念\"，它只不过是一种选择，一个一旦真选了就再也不可逆的选择。仅此而已。\n\n```code\n    while (alive) {\n        learn;\n    }\n```\n","source":"_posts/2014/learn-if-alive.md","raw":"---\ntitle: learning\ndate: 2014-08-08T19:08:34.000Z\ntags:\n  - learn\ncategories: 日志\n---\n\n**学习是一种生活方式**，否则为什么会有的人就是停不下来呢？学习不需要坚持、不需要毅力、不需要信念，不需要各种\"不得已而为之的概念\"，它只不过是一种选择，一个一旦真选了就再也不可逆的选择。仅此而已。\n\n```code\n    while (alive) {\n        learn;\n    }\n```\n","slug":"learn-if-alive","published":1,"updated":"2017-01-04T03:20:09.144Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp8i000gwsnnkbhsmf4j","content":"<p><strong>学习是一种生活方式</strong>，否则为什么会有的人就是停不下来呢？学习不需要坚持、不需要毅力、不需要信念，不需要各种”不得已而为之的概念”，它只不过是一种选择，一个一旦真选了就再也不可逆的选择。仅此而已。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while (alive) &#123;</span><br><span class=\"line\">    learn;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p><strong>学习是一种生活方式</strong>，否则为什么会有的人就是停不下来呢？学习不需要坚持、不需要毅力、不需要信念，不需要各种”不得已而为之的概念”，它只不过是一种选择，一个一旦真选了就再也不可逆的选择。仅此而已。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while (alive) &#123;</span><br><span class=\"line\">    learn;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"linux-aliases","date":"2014-12-22T05:22:37.000Z","_content":"\n#### linux别名设置\n\nTerminal 输入 `alias` 之后可以查看已经有的别名设置\n\n如果要设置自己的别名如下：<!-- more -->\n```bash\n\talias d='date' #起别名\n\tunalias d  #删除别名\n\n\talias ..=\"cd ..\"\n\talias ...=\"cd ../..\"  \n\talias ....=\"cd ../../..\"\n\talias .....=\"cd ../../../..\"\n\talias ~=\"cd ~\" # `cd` is probably faster to type though\n\talias -- -=\"cd -\"\n\n\talias d=\"cd ~/Documents/Dropbox\"\n\talias dl=\"cd ~/Downloads\"\n\talias dt=\"cd ~/Desktop\"\n\talias p=\"cd ~/projects\"\n\talias g=\"git\"\n\talias h=\"history\"\n\talias j=\"jobs\"\n\t……\n```\n\n\n网络上很多人整理了常用的操作\n\n#### Mac OS 操作如下：\n1. cd ~\n2. curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile\n3. curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt\n4. curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases\n5. source .bash_profile\n[参考文件](https://github.com/donnemartin/dev-setup)\n\n#### 对应linux 各个版本不一样 `vim ~/.bashrc` 文件添加：\n\n```bash\n\tif [ -f ~/.aliases ]; then\n    \t. ~/.aliases\n\tfi\n```\n1. cd ~\n2. curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases\n3. source .bashrc\n\n##### 对于ubuntu 已经包含了 `.bash_aliases` 文件\n\n```bash\n\tif [ -f ~/.bash_aliases ]; then\n\t    . ~/.bash_aliases\n\tfi\n```\n只需要往 `.bash_aliases` 文件中写自己的别名就可以了\n","source":"_posts/2014/linux-aliases.md","raw":"---\ntitle: linux-aliases\ndate: 2014-12-22 13:22:37\ntags:\ncategories:\n---\n\n#### linux别名设置\n\nTerminal 输入 `alias` 之后可以查看已经有的别名设置\n\n如果要设置自己的别名如下：<!-- more -->\n```bash\n\talias d='date' #起别名\n\tunalias d  #删除别名\n\n\talias ..=\"cd ..\"\n\talias ...=\"cd ../..\"  \n\talias ....=\"cd ../../..\"\n\talias .....=\"cd ../../../..\"\n\talias ~=\"cd ~\" # `cd` is probably faster to type though\n\talias -- -=\"cd -\"\n\n\talias d=\"cd ~/Documents/Dropbox\"\n\talias dl=\"cd ~/Downloads\"\n\talias dt=\"cd ~/Desktop\"\n\talias p=\"cd ~/projects\"\n\talias g=\"git\"\n\talias h=\"history\"\n\talias j=\"jobs\"\n\t……\n```\n\n\n网络上很多人整理了常用的操作\n\n#### Mac OS 操作如下：\n1. cd ~\n2. curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile\n3. curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt\n4. curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases\n5. source .bash_profile\n[参考文件](https://github.com/donnemartin/dev-setup)\n\n#### 对应linux 各个版本不一样 `vim ~/.bashrc` 文件添加：\n\n```bash\n\tif [ -f ~/.aliases ]; then\n    \t. ~/.aliases\n\tfi\n```\n1. cd ~\n2. curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases\n3. source .bashrc\n\n##### 对于ubuntu 已经包含了 `.bash_aliases` 文件\n\n```bash\n\tif [ -f ~/.bash_aliases ]; then\n\t    . ~/.bash_aliases\n\tfi\n```\n只需要往 `.bash_aliases` 文件中写自己的别名就可以了\n","slug":"linux-aliases","published":1,"updated":"2017-01-04T03:56:41.959Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp8i000iwsnnrsbhlk51","content":"<h4 id=\"linux别名设置\"><a href=\"#linux别名设置\" class=\"headerlink\" title=\"linux别名设置\"></a>linux别名设置</h4><p>Terminal 输入 <code>alias</code> 之后可以查看已经有的别名设置</p>\n<p>如果要设置自己的别名如下：<a id=\"more\"></a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> d=<span class=\"string\">'date'</span> <span class=\"comment\">#起别名</span></span><br><span class=\"line\"><span class=\"built_in\">unalias</span> d  <span class=\"comment\">#删除别名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ..=<span class=\"string\">\"cd ..\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ...=<span class=\"string\">\"cd ../..\"</span>  </span><br><span class=\"line\"><span class=\"built_in\">alias</span> ....=<span class=\"string\">\"cd ../../..\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> .....=<span class=\"string\">\"cd ../../../..\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ~=<span class=\"string\">\"cd ~\"</span> <span class=\"comment\"># `cd` is probably faster to type though</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> -- -=<span class=\"string\">\"cd -\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">alias</span> d=<span class=\"string\">\"cd ~/Documents/Dropbox\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> dl=<span class=\"string\">\"cd ~/Downloads\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> dt=<span class=\"string\">\"cd ~/Desktop\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> p=<span class=\"string\">\"cd ~/projects\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> g=<span class=\"string\">\"git\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> h=<span class=\"string\">\"history\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> j=<span class=\"string\">\"jobs\"</span></span><br><span class=\"line\">……</span><br></pre></td></tr></table></figure></p>\n<p>网络上很多人整理了常用的操作</p>\n<h4 id=\"Mac-OS-操作如下：\"><a href=\"#Mac-OS-操作如下：\" class=\"headerlink\" title=\"Mac OS 操作如下：\"></a>Mac OS 操作如下：</h4><ol>\n<li>cd ~</li>\n<li>curl -O <a href=\"https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile</a></li>\n<li>curl -O <a href=\"https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt</a></li>\n<li>curl -O <a href=\"https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases</a></li>\n<li>source .bash_profile<br><a href=\"https://github.com/donnemartin/dev-setup\" target=\"_blank\" rel=\"external\">参考文件</a></li>\n</ol>\n<h4 id=\"对应linux-各个版本不一样-vim-bashrc-文件添加：\"><a href=\"#对应linux-各个版本不一样-vim-bashrc-文件添加：\" class=\"headerlink\" title=\"对应linux 各个版本不一样 vim ~/.bashrc 文件添加：\"></a>对应linux 各个版本不一样 <code>vim ~/.bashrc</code> 文件添加：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"_\">-f</span> ~/.aliases ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">   \t. ~/.aliases</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>cd ~</li>\n<li>curl -O <a href=\"https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases</a></li>\n<li>source .bashrc</li>\n</ol>\n<h5 id=\"对于ubuntu-已经包含了-bash-aliases-文件\"><a href=\"#对于ubuntu-已经包含了-bash-aliases-文件\" class=\"headerlink\" title=\"对于ubuntu 已经包含了 .bash_aliases 文件\"></a>对于ubuntu 已经包含了 <code>.bash_aliases</code> 文件</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"_\">-f</span> ~/.bash_aliases ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    . ~/.bash_aliases</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>只需要往 <code>.bash_aliases</code> 文件中写自己的别名就可以了</p>\n","excerpt":"<h4 id=\"linux别名设置\"><a href=\"#linux别名设置\" class=\"headerlink\" title=\"linux别名设置\"></a>linux别名设置</h4><p>Terminal 输入 <code>alias</code> 之后可以查看已经有的别名设置</p>\n<p>如果要设置自己的别名如下：","more":"<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> d=<span class=\"string\">'date'</span> <span class=\"comment\">#起别名</span></span><br><span class=\"line\"><span class=\"built_in\">unalias</span> d  <span class=\"comment\">#删除别名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ..=<span class=\"string\">\"cd ..\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ...=<span class=\"string\">\"cd ../..\"</span>  </span><br><span class=\"line\"><span class=\"built_in\">alias</span> ....=<span class=\"string\">\"cd ../../..\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> .....=<span class=\"string\">\"cd ../../../..\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ~=<span class=\"string\">\"cd ~\"</span> <span class=\"comment\"># `cd` is probably faster to type though</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> -- -=<span class=\"string\">\"cd -\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">alias</span> d=<span class=\"string\">\"cd ~/Documents/Dropbox\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> dl=<span class=\"string\">\"cd ~/Downloads\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> dt=<span class=\"string\">\"cd ~/Desktop\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> p=<span class=\"string\">\"cd ~/projects\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> g=<span class=\"string\">\"git\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> h=<span class=\"string\">\"history\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> j=<span class=\"string\">\"jobs\"</span></span><br><span class=\"line\">……</span><br></pre></td></tr></table></figure></p>\n<p>网络上很多人整理了常用的操作</p>\n<h4 id=\"Mac-OS-操作如下：\"><a href=\"#Mac-OS-操作如下：\" class=\"headerlink\" title=\"Mac OS 操作如下：\"></a>Mac OS 操作如下：</h4><ol>\n<li>cd ~</li>\n<li>curl -O <a href=\"https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile\">https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile</a></li>\n<li>curl -O <a href=\"https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt\">https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt</a></li>\n<li>curl -O <a href=\"https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases\">https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases</a></li>\n<li>source .bash_profile<br><a href=\"https://github.com/donnemartin/dev-setup\">参考文件</a></li>\n</ol>\n<h4 id=\"对应linux-各个版本不一样-vim-bashrc-文件添加：\"><a href=\"#对应linux-各个版本不一样-vim-bashrc-文件添加：\" class=\"headerlink\" title=\"对应linux 各个版本不一样 vim ~/.bashrc 文件添加：\"></a>对应linux 各个版本不一样 <code>vim ~/.bashrc</code> 文件添加：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"_\">-f</span> ~/.aliases ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">   \t. ~/.aliases</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>cd ~</li>\n<li>curl -O <a href=\"https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases\">https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases</a></li>\n<li>source .bashrc</li>\n</ol>\n<h5 id=\"对于ubuntu-已经包含了-bash-aliases-文件\"><a href=\"#对于ubuntu-已经包含了-bash-aliases-文件\" class=\"headerlink\" title=\"对于ubuntu 已经包含了 .bash_aliases 文件\"></a>对于ubuntu 已经包含了 <code>.bash_aliases</code> 文件</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"_\">-f</span> ~/.bash_aliases ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    . ~/.bash_aliases</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>只需要往 <code>.bash_aliases</code> 文件中写自己的别名就可以了</p>"},{"title":"汉字转拼音（mysql）","date":"2014-08-29T02:52:19.000Z","updated":"2016-08-29T02:52:19.000Z","_content":"\n### 创建mysql函数\n<!-- more -->\n``` mysql\n\nCREATE FUNCTION `f_to_pinyin`(NAME VARCHAR(255) CHARSET gbk) RETURNS varchar(255) CHARSET gbk\nBEGIN\n    DECLARE mycode INT;\n    DECLARE tmp_lcode VARCHAR(2) CHARSET gbk;\n    DECLARE lcode INT;\n    DECLARE tmp_rcode VARCHAR(2) CHARSET gbk;\n    DECLARE rcode INT;\n    DECLARE mypy VARCHAR(255) CHARSET gbk DEFAULT '';\n    DECLARE lp INT;\n    SET mycode = 0;\n    SET lp = 1;\n    SET NAME = HEX(NAME);\n    WHILE lp < LENGTH(NAME) DO\n        SET tmp_lcode = SUBSTRING(NAME, lp, 2);\n        SET lcode = CAST(ASCII(UNHEX(tmp_lcode)) AS UNSIGNED); \n        SET tmp_rcode = SUBSTRING(NAME, lp + 2, 2);\n        SET rcode = CAST(ASCII(UNHEX(tmp_rcode)) AS UNSIGNED); \n        IF lcode > 128 THEN\n            SET mycode =65536 - lcode * 256 - rcode ;\n            SELECT CONCAT(mypy,py) INTO mypy FROM pinyin WHERE `code` >= ABS(mycode) ORDER BY `code` ASC LIMIT 1;\n            SET lp = lp + 4;\n        ELSE\n            SET mypy = CONCAT(mypy,CHAR(CAST(ASCII(UNHEX(SUBSTRING(NAME, lp, 2))) AS UNSIGNED)));\n            SET lp = lp + 2;\n        END IF;\n    END WHILE;\n    RETURN LOWER(mypy);\nEND\n```\n\n\n### 创建拼音ascii码\n\n``` mysql\n\nCREATE TABLE `pinyin` (\n  `code` int(11) NOT NULL,\n  `py` varchar(10) CHARACTER SET gbk NOT NULL,\n  PRIMARY KEY (`code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nINSERT INTO `pinyin` VALUES ('10254', 'zuo');\nINSERT INTO `pinyin` VALUES ('10256', 'zun');\nINSERT INTO `pinyin` VALUES ('10260', 'zui');\nINSERT INTO `pinyin` VALUES ('10262', 'zuan');\nINSERT INTO `pinyin` VALUES ('10270', 'zu');\nINSERT INTO `pinyin` VALUES ('10274', 'zou');\nINSERT INTO `pinyin` VALUES ('10281', 'zong');\nINSERT INTO `pinyin` VALUES ('10296', 'zi');\nINSERT INTO `pinyin` VALUES ('10307', 'zhuo');\nINSERT INTO `pinyin` VALUES ('10309', 'zhun');\nINSERT INTO `pinyin` VALUES ('10315', 'zhui');\nINSERT INTO `pinyin` VALUES ('10322', 'zhuang');\nINSERT INTO `pinyin` VALUES ('10328', 'zhuan');\nINSERT INTO `pinyin` VALUES ('10329', 'zhuai');\nINSERT INTO `pinyin` VALUES ('10331', 'zhua');\nINSERT INTO `pinyin` VALUES ('10519', 'zhu');\nINSERT INTO `pinyin` VALUES ('10533', 'zhou');\nINSERT INTO `pinyin` VALUES ('10544', 'zhong');\nINSERT INTO `pinyin` VALUES ('10587', 'zhi');\nINSERT INTO `pinyin` VALUES ('10764', 'zheng');\nINSERT INTO `pinyin` VALUES ('10780', 'zhen');\nINSERT INTO `pinyin` VALUES ('10790', 'zhe');\nINSERT INTO `pinyin` VALUES ('10800', 'zhao');\nINSERT INTO `pinyin` VALUES ('10815', 'zhang');\nINSERT INTO `pinyin` VALUES ('10832', 'zhan');\nINSERT INTO `pinyin` VALUES ('10838', 'zhai');\nINSERT INTO `pinyin` VALUES ('11014', 'zha');\nINSERT INTO `pinyin` VALUES ('11018', 'zeng');\nINSERT INTO `pinyin` VALUES ('11019', 'zen');\nINSERT INTO `pinyin` VALUES ('11020', 'zei');\nINSERT INTO `pinyin` VALUES ('11024', 'ze');\nINSERT INTO `pinyin` VALUES ('11038', 'zao');\nINSERT INTO `pinyin` VALUES ('11041', 'zang');\nINSERT INTO `pinyin` VALUES ('11045', 'zan');\nINSERT INTO `pinyin` VALUES ('11052', 'zai');\nINSERT INTO `pinyin` VALUES ('11055', 'za');\nINSERT INTO `pinyin` VALUES ('11067', 'yun');\nINSERT INTO `pinyin` VALUES ('11077', 'yue');\nINSERT INTO `pinyin` VALUES ('11097', 'yuan');\nINSERT INTO `pinyin` VALUES ('11303', 'yu');\nINSERT INTO `pinyin` VALUES ('11324', 'you');\nINSERT INTO `pinyin` VALUES ('11339', 'yong');\nINSERT INTO `pinyin` VALUES ('11340', 'yo');\nINSERT INTO `pinyin` VALUES ('11358', 'ying');\nINSERT INTO `pinyin` VALUES ('11536', 'yin');\nINSERT INTO `pinyin` VALUES ('11589', 'yi');\nINSERT INTO `pinyin` VALUES ('11604', 'ye');\nINSERT INTO `pinyin` VALUES ('11781', 'yao');\nINSERT INTO `pinyin` VALUES ('11798', 'yang');\nINSERT INTO `pinyin` VALUES ('11831', 'yan');\nINSERT INTO `pinyin` VALUES ('11847', 'ya');\nINSERT INTO `pinyin` VALUES ('11861', 'xun');\nINSERT INTO `pinyin` VALUES ('11867', 'xue');\nINSERT INTO `pinyin` VALUES ('12039', 'xuan');\nINSERT INTO `pinyin` VALUES ('12058', 'xu');\nINSERT INTO `pinyin` VALUES ('12067', 'xiu');\nINSERT INTO `pinyin` VALUES ('12074', 'xiong');\nINSERT INTO `pinyin` VALUES ('12089', 'xing');\nINSERT INTO `pinyin` VALUES ('12099', 'xin');\nINSERT INTO `pinyin` VALUES ('12120', 'xie');\nINSERT INTO `pinyin` VALUES ('12300', 'xiao');\nINSERT INTO `pinyin` VALUES ('12320', 'xiang');\nINSERT INTO `pinyin` VALUES ('12346', 'xian');\nINSERT INTO `pinyin` VALUES ('12359', 'xia');\nINSERT INTO `pinyin` VALUES ('12556', 'xi');\nINSERT INTO `pinyin` VALUES ('12585', 'wu');\nINSERT INTO `pinyin` VALUES ('12594', 'wo');\nINSERT INTO `pinyin` VALUES ('12597', 'weng');\nINSERT INTO `pinyin` VALUES ('12607', 'wen');\nINSERT INTO `pinyin` VALUES ('12802', 'wei');\nINSERT INTO `pinyin` VALUES ('12812', 'wang');\nINSERT INTO `pinyin` VALUES ('12829', 'wan');\nINSERT INTO `pinyin` VALUES ('12831', 'wai');\nINSERT INTO `pinyin` VALUES ('12838', 'wa');\nINSERT INTO `pinyin` VALUES ('12849', 'tuo');\nINSERT INTO `pinyin` VALUES ('12852', 'tun');\nINSERT INTO `pinyin` VALUES ('12858', 'tui');\nINSERT INTO `pinyin` VALUES ('12860', 'tuan');\nINSERT INTO `pinyin` VALUES ('12871', 'tu');\nINSERT INTO `pinyin` VALUES ('12875', 'tou');\nINSERT INTO `pinyin` VALUES ('12888', 'tong');\nINSERT INTO `pinyin` VALUES ('13060', 'ting');\nINSERT INTO `pinyin` VALUES ('13063', 'tie');\nINSERT INTO `pinyin` VALUES ('13068', 'tiao');\nINSERT INTO `pinyin` VALUES ('13076', 'tian');\nINSERT INTO `pinyin` VALUES ('13091', 'ti');\nINSERT INTO `pinyin` VALUES ('13095', 'teng');\nINSERT INTO `pinyin` VALUES ('13096', 'te');\nINSERT INTO `pinyin` VALUES ('13107', 'tao');\nINSERT INTO `pinyin` VALUES ('13120', 'tang');\nINSERT INTO `pinyin` VALUES ('13138', 'tan');\nINSERT INTO `pinyin` VALUES ('13147', 'tai');\nINSERT INTO `pinyin` VALUES ('13318', 'ta');\nINSERT INTO `pinyin` VALUES ('13326', 'suo');\nINSERT INTO `pinyin` VALUES ('13329', 'sun');\nINSERT INTO `pinyin` VALUES ('13340', 'sui');\nINSERT INTO `pinyin` VALUES ('13343', 'suan');\nINSERT INTO `pinyin` VALUES ('13356', 'su');\nINSERT INTO `pinyin` VALUES ('13359', 'sou');\nINSERT INTO `pinyin` VALUES ('13367', 'song');\nINSERT INTO `pinyin` VALUES ('13383', 'si');\nINSERT INTO `pinyin` VALUES ('13387', 'shuo');\nINSERT INTO `pinyin` VALUES ('13391', 'shun');\nINSERT INTO `pinyin` VALUES ('13395', 'shui');\nINSERT INTO `pinyin` VALUES ('13398', 'shuang');\nINSERT INTO `pinyin` VALUES ('13400', 'shuan');\nINSERT INTO `pinyin` VALUES ('13404', 'shuai');\nINSERT INTO `pinyin` VALUES ('13406', 'shua');\nINSERT INTO `pinyin` VALUES ('13601', 'shu');\nINSERT INTO `pinyin` VALUES ('13611', 'shou');\nINSERT INTO `pinyin` VALUES ('13658', 'shi');\nINSERT INTO `pinyin` VALUES ('13831', 'sheng');\nINSERT INTO `pinyin` VALUES ('13847', 'shen');\nINSERT INTO `pinyin` VALUES ('13859', 'she');\nINSERT INTO `pinyin` VALUES ('13870', 'shao');\nINSERT INTO `pinyin` VALUES ('13878', 'shang');\nINSERT INTO `pinyin` VALUES ('13894', 'shan');\nINSERT INTO `pinyin` VALUES ('13896', 'shai');\nINSERT INTO `pinyin` VALUES ('13905', 'sha');\nINSERT INTO `pinyin` VALUES ('13906', 'seng');\nINSERT INTO `pinyin` VALUES ('13907', 'sen');\nINSERT INTO `pinyin` VALUES ('13910', 'se');\nINSERT INTO `pinyin` VALUES ('13914', 'sao');\nINSERT INTO `pinyin` VALUES ('13917', 'sang');\nINSERT INTO `pinyin` VALUES ('14083', 'san');\nINSERT INTO `pinyin` VALUES ('14087', 'sai');\nINSERT INTO `pinyin` VALUES ('14090', 'sa');\nINSERT INTO `pinyin` VALUES ('14092', 'ruo');\nINSERT INTO `pinyin` VALUES ('14094', 'run');\nINSERT INTO `pinyin` VALUES ('14097', 'rui');\nINSERT INTO `pinyin` VALUES ('14099', 'ruan');\nINSERT INTO `pinyin` VALUES ('14109', 'ru');\nINSERT INTO `pinyin` VALUES ('14112', 'rou');\nINSERT INTO `pinyin` VALUES ('14122', 'rong');\nINSERT INTO `pinyin` VALUES ('14123', 'ri');\nINSERT INTO `pinyin` VALUES ('14125', 'reng');\nINSERT INTO `pinyin` VALUES ('14135', 'ren');\nINSERT INTO `pinyin` VALUES ('14137', 're');\nINSERT INTO `pinyin` VALUES ('14140', 'rao');\nINSERT INTO `pinyin` VALUES ('14145', 'rang');\nINSERT INTO `pinyin` VALUES ('14149', 'ran');\nINSERT INTO `pinyin` VALUES ('14151', 'qun');\nINSERT INTO `pinyin` VALUES ('14159', 'que');\nINSERT INTO `pinyin` VALUES ('14170', 'quan');\nINSERT INTO `pinyin` VALUES ('14345', 'qu');\nINSERT INTO `pinyin` VALUES ('14353', 'qiu');\nINSERT INTO `pinyin` VALUES ('14355', 'qiong');\nINSERT INTO `pinyin` VALUES ('14368', 'qing');\nINSERT INTO `pinyin` VALUES ('14379', 'qin');\nINSERT INTO `pinyin` VALUES ('14384', 'qie');\nINSERT INTO `pinyin` VALUES ('14399', 'qiao');\nINSERT INTO `pinyin` VALUES ('14407', 'qiang');\nINSERT INTO `pinyin` VALUES ('14429', 'qian');\nINSERT INTO `pinyin` VALUES ('14594', 'qia');\nINSERT INTO `pinyin` VALUES ('14630', 'qi');\nINSERT INTO `pinyin` VALUES ('14645', 'pu');\nINSERT INTO `pinyin` VALUES ('14654', 'po');\nINSERT INTO `pinyin` VALUES ('14663', 'ping');\nINSERT INTO `pinyin` VALUES ('14668', 'pin');\nINSERT INTO `pinyin` VALUES ('14670', 'pie');\nINSERT INTO `pinyin` VALUES ('14674', 'piao');\nINSERT INTO `pinyin` VALUES ('14678', 'pian');\nINSERT INTO `pinyin` VALUES ('14857', 'pi');\nINSERT INTO `pinyin` VALUES ('14871', 'peng');\nINSERT INTO `pinyin` VALUES ('14873', 'pen');\nINSERT INTO `pinyin` VALUES ('14882', 'pei');\nINSERT INTO `pinyin` VALUES ('14889', 'pao');\nINSERT INTO `pinyin` VALUES ('14894', 'pang');\nINSERT INTO `pinyin` VALUES ('14902', 'pan');\nINSERT INTO `pinyin` VALUES ('14908', 'pai');\nINSERT INTO `pinyin` VALUES ('14914', 'pa');\nINSERT INTO `pinyin` VALUES ('14921', 'ou');\nINSERT INTO `pinyin` VALUES ('14922', 'o');\nINSERT INTO `pinyin` VALUES ('14926', 'nuo');\nINSERT INTO `pinyin` VALUES ('14928', 'nue');\nINSERT INTO `pinyin` VALUES ('14929', 'nuan');\nINSERT INTO `pinyin` VALUES ('14930', 'nv');\nINSERT INTO `pinyin` VALUES ('14933', 'nu');\nINSERT INTO `pinyin` VALUES ('14937', 'nong');\nINSERT INTO `pinyin` VALUES ('14941', 'niu');\nINSERT INTO `pinyin` VALUES ('15109', 'ning');\nINSERT INTO `pinyin` VALUES ('15110', 'nin');\nINSERT INTO `pinyin` VALUES ('15117', 'nie');\nINSERT INTO `pinyin` VALUES ('15119', 'niao');\nINSERT INTO `pinyin` VALUES ('15121', 'niang');\nINSERT INTO `pinyin` VALUES ('15128', 'nian');\nINSERT INTO `pinyin` VALUES ('15139', 'ni');\nINSERT INTO `pinyin` VALUES ('15140', 'neng');\nINSERT INTO `pinyin` VALUES ('15141', 'nen');\nINSERT INTO `pinyin` VALUES ('15143', 'nei');\nINSERT INTO `pinyin` VALUES ('15144', 'ne');\nINSERT INTO `pinyin` VALUES ('15149', 'nao');\nINSERT INTO `pinyin` VALUES ('15150', 'nang');\nINSERT INTO `pinyin` VALUES ('15153', 'nan');\nINSERT INTO `pinyin` VALUES ('15158', 'nai');\nINSERT INTO `pinyin` VALUES ('15165', 'na');\nINSERT INTO `pinyin` VALUES ('15180', 'mu');\nINSERT INTO `pinyin` VALUES ('15183', 'mou');\nINSERT INTO `pinyin` VALUES ('15362', 'mo');\nINSERT INTO `pinyin` VALUES ('15363', 'miu');\nINSERT INTO `pinyin` VALUES ('15369', 'ming');\nINSERT INTO `pinyin` VALUES ('15375', 'min');\nINSERT INTO `pinyin` VALUES ('15377', 'mie');\nINSERT INTO `pinyin` VALUES ('15385', 'miao');\nINSERT INTO `pinyin` VALUES ('15394', 'mian');\nINSERT INTO `pinyin` VALUES ('15408', 'mi');\nINSERT INTO `pinyin` VALUES ('15416', 'meng');\nINSERT INTO `pinyin` VALUES ('15419', 'men');\nINSERT INTO `pinyin` VALUES ('15435', 'mei');\nINSERT INTO `pinyin` VALUES ('15436', 'me');\nINSERT INTO `pinyin` VALUES ('15448', 'mao');\nINSERT INTO `pinyin` VALUES ('15454', 'mang');\nINSERT INTO `pinyin` VALUES ('15625', 'man');\nINSERT INTO `pinyin` VALUES ('15631', 'mai');\nINSERT INTO `pinyin` VALUES ('15640', 'ma');\nINSERT INTO `pinyin` VALUES ('15652', 'luo');\nINSERT INTO `pinyin` VALUES ('15659', 'lun');\nINSERT INTO `pinyin` VALUES ('15661', 'lue');\nINSERT INTO `pinyin` VALUES ('15667', 'luan');\nINSERT INTO `pinyin` VALUES ('15681', 'lv');\nINSERT INTO `pinyin` VALUES ('15701', 'lu');\nINSERT INTO `pinyin` VALUES ('15707', 'lou');\nINSERT INTO `pinyin` VALUES ('15878', 'long');\nINSERT INTO `pinyin` VALUES ('15889', 'liu');\nINSERT INTO `pinyin` VALUES ('15903', 'ling');\nINSERT INTO `pinyin` VALUES ('15915', 'lin');\nINSERT INTO `pinyin` VALUES ('15920', 'lie');\nINSERT INTO `pinyin` VALUES ('15933', 'liao');\nINSERT INTO `pinyin` VALUES ('15944', 'liang');\nINSERT INTO `pinyin` VALUES ('15958', 'lian');\nINSERT INTO `pinyin` VALUES ('15959', 'lia');\nINSERT INTO `pinyin` VALUES ('16155', 'li');\nINSERT INTO `pinyin` VALUES ('16158', 'leng');\nINSERT INTO `pinyin` VALUES ('16169', 'lei');\nINSERT INTO `pinyin` VALUES ('16171', 'le');\nINSERT INTO `pinyin` VALUES ('16180', 'lao');\nINSERT INTO `pinyin` VALUES ('16187', 'lang');\nINSERT INTO `pinyin` VALUES ('16202', 'lan');\nINSERT INTO `pinyin` VALUES ('16205', 'lai');\nINSERT INTO `pinyin` VALUES ('16212', 'la');\nINSERT INTO `pinyin` VALUES ('16216', 'kuo');\nINSERT INTO `pinyin` VALUES ('16220', 'kun');\nINSERT INTO `pinyin` VALUES ('16393', 'kui');\nINSERT INTO `pinyin` VALUES ('16401', 'kuang');\nINSERT INTO `pinyin` VALUES ('16403', 'kuan');\nINSERT INTO `pinyin` VALUES ('16407', 'kuai');\nINSERT INTO `pinyin` VALUES ('16412', 'kua');\nINSERT INTO `pinyin` VALUES ('16419', 'ku');\nINSERT INTO `pinyin` VALUES ('16423', 'kou');\nINSERT INTO `pinyin` VALUES ('16427', 'kong');\nINSERT INTO `pinyin` VALUES ('16429', 'keng');\nINSERT INTO `pinyin` VALUES ('16433', 'ken');\nINSERT INTO `pinyin` VALUES ('16448', 'ke');\nINSERT INTO `pinyin` VALUES ('16452', 'kao');\nINSERT INTO `pinyin` VALUES ('16459', 'kang');\nINSERT INTO `pinyin` VALUES ('16465', 'kan');\nINSERT INTO `pinyin` VALUES ('16470', 'kai');\nINSERT INTO `pinyin` VALUES ('16474', 'ka');\nINSERT INTO `pinyin` VALUES ('16647', 'jun');\nINSERT INTO `pinyin` VALUES ('16657', 'jue');\nINSERT INTO `pinyin` VALUES ('16664', 'juan');\nINSERT INTO `pinyin` VALUES ('16689', 'ju');\nINSERT INTO `pinyin` VALUES ('16706', 'jiu');\nINSERT INTO `pinyin` VALUES ('16708', 'jiong');\nINSERT INTO `pinyin` VALUES ('16733', 'jing');\nINSERT INTO `pinyin` VALUES ('16915', 'jin');\nINSERT INTO `pinyin` VALUES ('16942', 'jie');\nINSERT INTO `pinyin` VALUES ('16970', 'jiao');\nINSERT INTO `pinyin` VALUES ('16983', 'jiang');\nINSERT INTO `pinyin` VALUES ('17185', 'jian');\nINSERT INTO `pinyin` VALUES ('17202', 'jia');\nINSERT INTO `pinyin` VALUES ('17417', 'ji');\nINSERT INTO `pinyin` VALUES ('17427', 'huo');\nINSERT INTO `pinyin` VALUES ('17433', 'hun');\nINSERT INTO `pinyin` VALUES ('17454', 'hui');\nINSERT INTO `pinyin` VALUES ('17468', 'huang');\nINSERT INTO `pinyin` VALUES ('17482', 'huan');\nINSERT INTO `pinyin` VALUES ('17487', 'huai');\nINSERT INTO `pinyin` VALUES ('17496', 'hua');\nINSERT INTO `pinyin` VALUES ('17676', 'hu');\nINSERT INTO `pinyin` VALUES ('17683', 'hou');\nINSERT INTO `pinyin` VALUES ('17692', 'hong');\nINSERT INTO `pinyin` VALUES ('17697', 'heng');\nINSERT INTO `pinyin` VALUES ('17701', 'hen');\nINSERT INTO `pinyin` VALUES ('17703', 'hei');\nINSERT INTO `pinyin` VALUES ('17721', 'he');\nINSERT INTO `pinyin` VALUES ('17730', 'hao');\nINSERT INTO `pinyin` VALUES ('17733', 'hang');\nINSERT INTO `pinyin` VALUES ('17752', 'han');\nINSERT INTO `pinyin` VALUES ('17759', 'hai');\nINSERT INTO `pinyin` VALUES ('17922', 'ha');\nINSERT INTO `pinyin` VALUES ('17928', 'guo');\nINSERT INTO `pinyin` VALUES ('17931', 'gun');\nINSERT INTO `pinyin` VALUES ('17947', 'gui');\nINSERT INTO `pinyin` VALUES ('17950', 'guang');\nINSERT INTO `pinyin` VALUES ('17961', 'guan');\nINSERT INTO `pinyin` VALUES ('17964', 'guai');\nINSERT INTO `pinyin` VALUES ('17970', 'gua');\nINSERT INTO `pinyin` VALUES ('17988', 'gu');\nINSERT INTO `pinyin` VALUES ('17997', 'gou');\nINSERT INTO `pinyin` VALUES ('18012', 'gong');\nINSERT INTO `pinyin` VALUES ('18181', 'geng');\nINSERT INTO `pinyin` VALUES ('18183', 'gen');\nINSERT INTO `pinyin` VALUES ('18184', 'gei');\nINSERT INTO `pinyin` VALUES ('18201', 'ge');\nINSERT INTO `pinyin` VALUES ('18211', 'gao');\nINSERT INTO `pinyin` VALUES ('18220', 'gang');\nINSERT INTO `pinyin` VALUES ('18231', 'gan');\nINSERT INTO `pinyin` VALUES ('18237', 'gai');\nINSERT INTO `pinyin` VALUES ('18239', 'ga');\nINSERT INTO `pinyin` VALUES ('18446', 'fu');\nINSERT INTO `pinyin` VALUES ('18447', 'fou');\nINSERT INTO `pinyin` VALUES ('18448', 'fo');\nINSERT INTO `pinyin` VALUES ('18463', 'feng');\nINSERT INTO `pinyin` VALUES ('18478', 'fen');\nINSERT INTO `pinyin` VALUES ('18490', 'fei');\nINSERT INTO `pinyin` VALUES ('18501', 'fang');\nINSERT INTO `pinyin` VALUES ('18518', 'fan');\nINSERT INTO `pinyin` VALUES ('18526', 'fa');\nINSERT INTO `pinyin` VALUES ('18696', 'er');\nINSERT INTO `pinyin` VALUES ('18697', 'en');\nINSERT INTO `pinyin` VALUES ('18710', 'e');\nINSERT INTO `pinyin` VALUES ('18722', 'duo');\nINSERT INTO `pinyin` VALUES ('18731', 'dun');\nINSERT INTO `pinyin` VALUES ('18735', 'dui');\nINSERT INTO `pinyin` VALUES ('18741', 'duan');\nINSERT INTO `pinyin` VALUES ('18756', 'du');\nINSERT INTO `pinyin` VALUES ('18763', 'dou');\nINSERT INTO `pinyin` VALUES ('18773', 'dong');\nINSERT INTO `pinyin` VALUES ('18774', 'diu');\nINSERT INTO `pinyin` VALUES ('18783', 'ding');\nINSERT INTO `pinyin` VALUES ('18952', 'die');\nINSERT INTO `pinyin` VALUES ('18961', 'diao');\nINSERT INTO `pinyin` VALUES ('18977', 'dian');\nINSERT INTO `pinyin` VALUES ('18996', 'di');\nINSERT INTO `pinyin` VALUES ('19003', 'deng');\nINSERT INTO `pinyin` VALUES ('19006', 'de');\nINSERT INTO `pinyin` VALUES ('19018', 'dao');\nINSERT INTO `pinyin` VALUES ('19023', 'dang');\nINSERT INTO `pinyin` VALUES ('19038', 'dan');\nINSERT INTO `pinyin` VALUES ('19212', 'dai');\nINSERT INTO `pinyin` VALUES ('19218', 'da');\nINSERT INTO `pinyin` VALUES ('19224', 'cuo');\nINSERT INTO `pinyin` VALUES ('19227', 'cun');\nINSERT INTO `pinyin` VALUES ('19235', 'cui');\nINSERT INTO `pinyin` VALUES ('19238', 'cuan');\nINSERT INTO `pinyin` VALUES ('19242', 'cu');\nINSERT INTO `pinyin` VALUES ('19243', 'cou');\nINSERT INTO `pinyin` VALUES ('19249', 'cong');\nINSERT INTO `pinyin` VALUES ('19261', 'ci');\nINSERT INTO `pinyin` VALUES ('19263', 'chuo');\nINSERT INTO `pinyin` VALUES ('19270', 'chun');\nINSERT INTO `pinyin` VALUES ('19275', 'chui');\nINSERT INTO `pinyin` VALUES ('19281', 'chuang');\nINSERT INTO `pinyin` VALUES ('19288', 'chuan');\nINSERT INTO `pinyin` VALUES ('19289', 'chuai');\nINSERT INTO `pinyin` VALUES ('19467', 'chu');\nINSERT INTO `pinyin` VALUES ('19479', 'chou');\nINSERT INTO `pinyin` VALUES ('19484', 'chong');\nINSERT INTO `pinyin` VALUES ('19500', 'chi');\nINSERT INTO `pinyin` VALUES ('19515', 'cheng');\nINSERT INTO `pinyin` VALUES ('19525', 'chen');\nINSERT INTO `pinyin` VALUES ('19531', 'che');\nINSERT INTO `pinyin` VALUES ('19540', 'chao');\nINSERT INTO `pinyin` VALUES ('19715', 'chang');\nINSERT INTO `pinyin` VALUES ('19725', 'chan');\nINSERT INTO `pinyin` VALUES ('19728', 'chai');\nINSERT INTO `pinyin` VALUES ('19739', 'cha');\nINSERT INTO `pinyin` VALUES ('19741', 'ceng');\nINSERT INTO `pinyin` VALUES ('19746', 'ce');\nINSERT INTO `pinyin` VALUES ('19751', 'cao');\nINSERT INTO `pinyin` VALUES ('19756', 'cang');\nINSERT INTO `pinyin` VALUES ('19763', 'can');\nINSERT INTO `pinyin` VALUES ('19774', 'cai');\nINSERT INTO `pinyin` VALUES ('19775', 'ca');\nINSERT INTO `pinyin` VALUES ('19784', 'bu');\nINSERT INTO `pinyin` VALUES ('19805', 'bo');\nINSERT INTO `pinyin` VALUES ('19976', 'bing');\nINSERT INTO `pinyin` VALUES ('19982', 'bin');\nINSERT INTO `pinyin` VALUES ('19986', 'bie');\nINSERT INTO `pinyin` VALUES ('19990', 'biao');\nINSERT INTO `pinyin` VALUES ('20002', 'bian');\nINSERT INTO `pinyin` VALUES ('20026', 'bi');\nINSERT INTO `pinyin` VALUES ('20032', 'beng');\nINSERT INTO `pinyin` VALUES ('20036', 'ben');\nINSERT INTO `pinyin` VALUES ('20051', 'bei');\nINSERT INTO `pinyin` VALUES ('20230', 'bao');\nINSERT INTO `pinyin` VALUES ('20242', 'bang');\nINSERT INTO `pinyin` VALUES ('20257', 'ban');\nINSERT INTO `pinyin` VALUES ('20265', 'bai');\nINSERT INTO `pinyin` VALUES ('20283', 'ba');\nINSERT INTO `pinyin` VALUES ('20292', 'ao');\nINSERT INTO `pinyin` VALUES ('20295', 'ang');\nINSERT INTO `pinyin` VALUES ('20304', 'an');\nINSERT INTO `pinyin` VALUES ('20317', 'ai');\nINSERT INTO `pinyin` VALUES ('20319', 'a');\n```\n\n\n### 调用\n\n``` mysql\nselect f_to_pinyin(\"测试\");\n```\n","source":"_posts/2014/zh-cn-to-pinyin.md","raw":"---\ntitle: 汉字转拼音（mysql）\ndate: 2014-08-29 10:52:19\nupdated: 2016-08-29 10:52:19\ntags:\n- mysql\ncategories:\n---\n\n### 创建mysql函数\n<!-- more -->\n``` mysql\n\nCREATE FUNCTION `f_to_pinyin`(NAME VARCHAR(255) CHARSET gbk) RETURNS varchar(255) CHARSET gbk\nBEGIN\n    DECLARE mycode INT;\n    DECLARE tmp_lcode VARCHAR(2) CHARSET gbk;\n    DECLARE lcode INT;\n    DECLARE tmp_rcode VARCHAR(2) CHARSET gbk;\n    DECLARE rcode INT;\n    DECLARE mypy VARCHAR(255) CHARSET gbk DEFAULT '';\n    DECLARE lp INT;\n    SET mycode = 0;\n    SET lp = 1;\n    SET NAME = HEX(NAME);\n    WHILE lp < LENGTH(NAME) DO\n        SET tmp_lcode = SUBSTRING(NAME, lp, 2);\n        SET lcode = CAST(ASCII(UNHEX(tmp_lcode)) AS UNSIGNED); \n        SET tmp_rcode = SUBSTRING(NAME, lp + 2, 2);\n        SET rcode = CAST(ASCII(UNHEX(tmp_rcode)) AS UNSIGNED); \n        IF lcode > 128 THEN\n            SET mycode =65536 - lcode * 256 - rcode ;\n            SELECT CONCAT(mypy,py) INTO mypy FROM pinyin WHERE `code` >= ABS(mycode) ORDER BY `code` ASC LIMIT 1;\n            SET lp = lp + 4;\n        ELSE\n            SET mypy = CONCAT(mypy,CHAR(CAST(ASCII(UNHEX(SUBSTRING(NAME, lp, 2))) AS UNSIGNED)));\n            SET lp = lp + 2;\n        END IF;\n    END WHILE;\n    RETURN LOWER(mypy);\nEND\n```\n\n\n### 创建拼音ascii码\n\n``` mysql\n\nCREATE TABLE `pinyin` (\n  `code` int(11) NOT NULL,\n  `py` varchar(10) CHARACTER SET gbk NOT NULL,\n  PRIMARY KEY (`code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nINSERT INTO `pinyin` VALUES ('10254', 'zuo');\nINSERT INTO `pinyin` VALUES ('10256', 'zun');\nINSERT INTO `pinyin` VALUES ('10260', 'zui');\nINSERT INTO `pinyin` VALUES ('10262', 'zuan');\nINSERT INTO `pinyin` VALUES ('10270', 'zu');\nINSERT INTO `pinyin` VALUES ('10274', 'zou');\nINSERT INTO `pinyin` VALUES ('10281', 'zong');\nINSERT INTO `pinyin` VALUES ('10296', 'zi');\nINSERT INTO `pinyin` VALUES ('10307', 'zhuo');\nINSERT INTO `pinyin` VALUES ('10309', 'zhun');\nINSERT INTO `pinyin` VALUES ('10315', 'zhui');\nINSERT INTO `pinyin` VALUES ('10322', 'zhuang');\nINSERT INTO `pinyin` VALUES ('10328', 'zhuan');\nINSERT INTO `pinyin` VALUES ('10329', 'zhuai');\nINSERT INTO `pinyin` VALUES ('10331', 'zhua');\nINSERT INTO `pinyin` VALUES ('10519', 'zhu');\nINSERT INTO `pinyin` VALUES ('10533', 'zhou');\nINSERT INTO `pinyin` VALUES ('10544', 'zhong');\nINSERT INTO `pinyin` VALUES ('10587', 'zhi');\nINSERT INTO `pinyin` VALUES ('10764', 'zheng');\nINSERT INTO `pinyin` VALUES ('10780', 'zhen');\nINSERT INTO `pinyin` VALUES ('10790', 'zhe');\nINSERT INTO `pinyin` VALUES ('10800', 'zhao');\nINSERT INTO `pinyin` VALUES ('10815', 'zhang');\nINSERT INTO `pinyin` VALUES ('10832', 'zhan');\nINSERT INTO `pinyin` VALUES ('10838', 'zhai');\nINSERT INTO `pinyin` VALUES ('11014', 'zha');\nINSERT INTO `pinyin` VALUES ('11018', 'zeng');\nINSERT INTO `pinyin` VALUES ('11019', 'zen');\nINSERT INTO `pinyin` VALUES ('11020', 'zei');\nINSERT INTO `pinyin` VALUES ('11024', 'ze');\nINSERT INTO `pinyin` VALUES ('11038', 'zao');\nINSERT INTO `pinyin` VALUES ('11041', 'zang');\nINSERT INTO `pinyin` VALUES ('11045', 'zan');\nINSERT INTO `pinyin` VALUES ('11052', 'zai');\nINSERT INTO `pinyin` VALUES ('11055', 'za');\nINSERT INTO `pinyin` VALUES ('11067', 'yun');\nINSERT INTO `pinyin` VALUES ('11077', 'yue');\nINSERT INTO `pinyin` VALUES ('11097', 'yuan');\nINSERT INTO `pinyin` VALUES ('11303', 'yu');\nINSERT INTO `pinyin` VALUES ('11324', 'you');\nINSERT INTO `pinyin` VALUES ('11339', 'yong');\nINSERT INTO `pinyin` VALUES ('11340', 'yo');\nINSERT INTO `pinyin` VALUES ('11358', 'ying');\nINSERT INTO `pinyin` VALUES ('11536', 'yin');\nINSERT INTO `pinyin` VALUES ('11589', 'yi');\nINSERT INTO `pinyin` VALUES ('11604', 'ye');\nINSERT INTO `pinyin` VALUES ('11781', 'yao');\nINSERT INTO `pinyin` VALUES ('11798', 'yang');\nINSERT INTO `pinyin` VALUES ('11831', 'yan');\nINSERT INTO `pinyin` VALUES ('11847', 'ya');\nINSERT INTO `pinyin` VALUES ('11861', 'xun');\nINSERT INTO `pinyin` VALUES ('11867', 'xue');\nINSERT INTO `pinyin` VALUES ('12039', 'xuan');\nINSERT INTO `pinyin` VALUES ('12058', 'xu');\nINSERT INTO `pinyin` VALUES ('12067', 'xiu');\nINSERT INTO `pinyin` VALUES ('12074', 'xiong');\nINSERT INTO `pinyin` VALUES ('12089', 'xing');\nINSERT INTO `pinyin` VALUES ('12099', 'xin');\nINSERT INTO `pinyin` VALUES ('12120', 'xie');\nINSERT INTO `pinyin` VALUES ('12300', 'xiao');\nINSERT INTO `pinyin` VALUES ('12320', 'xiang');\nINSERT INTO `pinyin` VALUES ('12346', 'xian');\nINSERT INTO `pinyin` VALUES ('12359', 'xia');\nINSERT INTO `pinyin` VALUES ('12556', 'xi');\nINSERT INTO `pinyin` VALUES ('12585', 'wu');\nINSERT INTO `pinyin` VALUES ('12594', 'wo');\nINSERT INTO `pinyin` VALUES ('12597', 'weng');\nINSERT INTO `pinyin` VALUES ('12607', 'wen');\nINSERT INTO `pinyin` VALUES ('12802', 'wei');\nINSERT INTO `pinyin` VALUES ('12812', 'wang');\nINSERT INTO `pinyin` VALUES ('12829', 'wan');\nINSERT INTO `pinyin` VALUES ('12831', 'wai');\nINSERT INTO `pinyin` VALUES ('12838', 'wa');\nINSERT INTO `pinyin` VALUES ('12849', 'tuo');\nINSERT INTO `pinyin` VALUES ('12852', 'tun');\nINSERT INTO `pinyin` VALUES ('12858', 'tui');\nINSERT INTO `pinyin` VALUES ('12860', 'tuan');\nINSERT INTO `pinyin` VALUES ('12871', 'tu');\nINSERT INTO `pinyin` VALUES ('12875', 'tou');\nINSERT INTO `pinyin` VALUES ('12888', 'tong');\nINSERT INTO `pinyin` VALUES ('13060', 'ting');\nINSERT INTO `pinyin` VALUES ('13063', 'tie');\nINSERT INTO `pinyin` VALUES ('13068', 'tiao');\nINSERT INTO `pinyin` VALUES ('13076', 'tian');\nINSERT INTO `pinyin` VALUES ('13091', 'ti');\nINSERT INTO `pinyin` VALUES ('13095', 'teng');\nINSERT INTO `pinyin` VALUES ('13096', 'te');\nINSERT INTO `pinyin` VALUES ('13107', 'tao');\nINSERT INTO `pinyin` VALUES ('13120', 'tang');\nINSERT INTO `pinyin` VALUES ('13138', 'tan');\nINSERT INTO `pinyin` VALUES ('13147', 'tai');\nINSERT INTO `pinyin` VALUES ('13318', 'ta');\nINSERT INTO `pinyin` VALUES ('13326', 'suo');\nINSERT INTO `pinyin` VALUES ('13329', 'sun');\nINSERT INTO `pinyin` VALUES ('13340', 'sui');\nINSERT INTO `pinyin` VALUES ('13343', 'suan');\nINSERT INTO `pinyin` VALUES ('13356', 'su');\nINSERT INTO `pinyin` VALUES ('13359', 'sou');\nINSERT INTO `pinyin` VALUES ('13367', 'song');\nINSERT INTO `pinyin` VALUES ('13383', 'si');\nINSERT INTO `pinyin` VALUES ('13387', 'shuo');\nINSERT INTO `pinyin` VALUES ('13391', 'shun');\nINSERT INTO `pinyin` VALUES ('13395', 'shui');\nINSERT INTO `pinyin` VALUES ('13398', 'shuang');\nINSERT INTO `pinyin` VALUES ('13400', 'shuan');\nINSERT INTO `pinyin` VALUES ('13404', 'shuai');\nINSERT INTO `pinyin` VALUES ('13406', 'shua');\nINSERT INTO `pinyin` VALUES ('13601', 'shu');\nINSERT INTO `pinyin` VALUES ('13611', 'shou');\nINSERT INTO `pinyin` VALUES ('13658', 'shi');\nINSERT INTO `pinyin` VALUES ('13831', 'sheng');\nINSERT INTO `pinyin` VALUES ('13847', 'shen');\nINSERT INTO `pinyin` VALUES ('13859', 'she');\nINSERT INTO `pinyin` VALUES ('13870', 'shao');\nINSERT INTO `pinyin` VALUES ('13878', 'shang');\nINSERT INTO `pinyin` VALUES ('13894', 'shan');\nINSERT INTO `pinyin` VALUES ('13896', 'shai');\nINSERT INTO `pinyin` VALUES ('13905', 'sha');\nINSERT INTO `pinyin` VALUES ('13906', 'seng');\nINSERT INTO `pinyin` VALUES ('13907', 'sen');\nINSERT INTO `pinyin` VALUES ('13910', 'se');\nINSERT INTO `pinyin` VALUES ('13914', 'sao');\nINSERT INTO `pinyin` VALUES ('13917', 'sang');\nINSERT INTO `pinyin` VALUES ('14083', 'san');\nINSERT INTO `pinyin` VALUES ('14087', 'sai');\nINSERT INTO `pinyin` VALUES ('14090', 'sa');\nINSERT INTO `pinyin` VALUES ('14092', 'ruo');\nINSERT INTO `pinyin` VALUES ('14094', 'run');\nINSERT INTO `pinyin` VALUES ('14097', 'rui');\nINSERT INTO `pinyin` VALUES ('14099', 'ruan');\nINSERT INTO `pinyin` VALUES ('14109', 'ru');\nINSERT INTO `pinyin` VALUES ('14112', 'rou');\nINSERT INTO `pinyin` VALUES ('14122', 'rong');\nINSERT INTO `pinyin` VALUES ('14123', 'ri');\nINSERT INTO `pinyin` VALUES ('14125', 'reng');\nINSERT INTO `pinyin` VALUES ('14135', 'ren');\nINSERT INTO `pinyin` VALUES ('14137', 're');\nINSERT INTO `pinyin` VALUES ('14140', 'rao');\nINSERT INTO `pinyin` VALUES ('14145', 'rang');\nINSERT INTO `pinyin` VALUES ('14149', 'ran');\nINSERT INTO `pinyin` VALUES ('14151', 'qun');\nINSERT INTO `pinyin` VALUES ('14159', 'que');\nINSERT INTO `pinyin` VALUES ('14170', 'quan');\nINSERT INTO `pinyin` VALUES ('14345', 'qu');\nINSERT INTO `pinyin` VALUES ('14353', 'qiu');\nINSERT INTO `pinyin` VALUES ('14355', 'qiong');\nINSERT INTO `pinyin` VALUES ('14368', 'qing');\nINSERT INTO `pinyin` VALUES ('14379', 'qin');\nINSERT INTO `pinyin` VALUES ('14384', 'qie');\nINSERT INTO `pinyin` VALUES ('14399', 'qiao');\nINSERT INTO `pinyin` VALUES ('14407', 'qiang');\nINSERT INTO `pinyin` VALUES ('14429', 'qian');\nINSERT INTO `pinyin` VALUES ('14594', 'qia');\nINSERT INTO `pinyin` VALUES ('14630', 'qi');\nINSERT INTO `pinyin` VALUES ('14645', 'pu');\nINSERT INTO `pinyin` VALUES ('14654', 'po');\nINSERT INTO `pinyin` VALUES ('14663', 'ping');\nINSERT INTO `pinyin` VALUES ('14668', 'pin');\nINSERT INTO `pinyin` VALUES ('14670', 'pie');\nINSERT INTO `pinyin` VALUES ('14674', 'piao');\nINSERT INTO `pinyin` VALUES ('14678', 'pian');\nINSERT INTO `pinyin` VALUES ('14857', 'pi');\nINSERT INTO `pinyin` VALUES ('14871', 'peng');\nINSERT INTO `pinyin` VALUES ('14873', 'pen');\nINSERT INTO `pinyin` VALUES ('14882', 'pei');\nINSERT INTO `pinyin` VALUES ('14889', 'pao');\nINSERT INTO `pinyin` VALUES ('14894', 'pang');\nINSERT INTO `pinyin` VALUES ('14902', 'pan');\nINSERT INTO `pinyin` VALUES ('14908', 'pai');\nINSERT INTO `pinyin` VALUES ('14914', 'pa');\nINSERT INTO `pinyin` VALUES ('14921', 'ou');\nINSERT INTO `pinyin` VALUES ('14922', 'o');\nINSERT INTO `pinyin` VALUES ('14926', 'nuo');\nINSERT INTO `pinyin` VALUES ('14928', 'nue');\nINSERT INTO `pinyin` VALUES ('14929', 'nuan');\nINSERT INTO `pinyin` VALUES ('14930', 'nv');\nINSERT INTO `pinyin` VALUES ('14933', 'nu');\nINSERT INTO `pinyin` VALUES ('14937', 'nong');\nINSERT INTO `pinyin` VALUES ('14941', 'niu');\nINSERT INTO `pinyin` VALUES ('15109', 'ning');\nINSERT INTO `pinyin` VALUES ('15110', 'nin');\nINSERT INTO `pinyin` VALUES ('15117', 'nie');\nINSERT INTO `pinyin` VALUES ('15119', 'niao');\nINSERT INTO `pinyin` VALUES ('15121', 'niang');\nINSERT INTO `pinyin` VALUES ('15128', 'nian');\nINSERT INTO `pinyin` VALUES ('15139', 'ni');\nINSERT INTO `pinyin` VALUES ('15140', 'neng');\nINSERT INTO `pinyin` VALUES ('15141', 'nen');\nINSERT INTO `pinyin` VALUES ('15143', 'nei');\nINSERT INTO `pinyin` VALUES ('15144', 'ne');\nINSERT INTO `pinyin` VALUES ('15149', 'nao');\nINSERT INTO `pinyin` VALUES ('15150', 'nang');\nINSERT INTO `pinyin` VALUES ('15153', 'nan');\nINSERT INTO `pinyin` VALUES ('15158', 'nai');\nINSERT INTO `pinyin` VALUES ('15165', 'na');\nINSERT INTO `pinyin` VALUES ('15180', 'mu');\nINSERT INTO `pinyin` VALUES ('15183', 'mou');\nINSERT INTO `pinyin` VALUES ('15362', 'mo');\nINSERT INTO `pinyin` VALUES ('15363', 'miu');\nINSERT INTO `pinyin` VALUES ('15369', 'ming');\nINSERT INTO `pinyin` VALUES ('15375', 'min');\nINSERT INTO `pinyin` VALUES ('15377', 'mie');\nINSERT INTO `pinyin` VALUES ('15385', 'miao');\nINSERT INTO `pinyin` VALUES ('15394', 'mian');\nINSERT INTO `pinyin` VALUES ('15408', 'mi');\nINSERT INTO `pinyin` VALUES ('15416', 'meng');\nINSERT INTO `pinyin` VALUES ('15419', 'men');\nINSERT INTO `pinyin` VALUES ('15435', 'mei');\nINSERT INTO `pinyin` VALUES ('15436', 'me');\nINSERT INTO `pinyin` VALUES ('15448', 'mao');\nINSERT INTO `pinyin` VALUES ('15454', 'mang');\nINSERT INTO `pinyin` VALUES ('15625', 'man');\nINSERT INTO `pinyin` VALUES ('15631', 'mai');\nINSERT INTO `pinyin` VALUES ('15640', 'ma');\nINSERT INTO `pinyin` VALUES ('15652', 'luo');\nINSERT INTO `pinyin` VALUES ('15659', 'lun');\nINSERT INTO `pinyin` VALUES ('15661', 'lue');\nINSERT INTO `pinyin` VALUES ('15667', 'luan');\nINSERT INTO `pinyin` VALUES ('15681', 'lv');\nINSERT INTO `pinyin` VALUES ('15701', 'lu');\nINSERT INTO `pinyin` VALUES ('15707', 'lou');\nINSERT INTO `pinyin` VALUES ('15878', 'long');\nINSERT INTO `pinyin` VALUES ('15889', 'liu');\nINSERT INTO `pinyin` VALUES ('15903', 'ling');\nINSERT INTO `pinyin` VALUES ('15915', 'lin');\nINSERT INTO `pinyin` VALUES ('15920', 'lie');\nINSERT INTO `pinyin` VALUES ('15933', 'liao');\nINSERT INTO `pinyin` VALUES ('15944', 'liang');\nINSERT INTO `pinyin` VALUES ('15958', 'lian');\nINSERT INTO `pinyin` VALUES ('15959', 'lia');\nINSERT INTO `pinyin` VALUES ('16155', 'li');\nINSERT INTO `pinyin` VALUES ('16158', 'leng');\nINSERT INTO `pinyin` VALUES ('16169', 'lei');\nINSERT INTO `pinyin` VALUES ('16171', 'le');\nINSERT INTO `pinyin` VALUES ('16180', 'lao');\nINSERT INTO `pinyin` VALUES ('16187', 'lang');\nINSERT INTO `pinyin` VALUES ('16202', 'lan');\nINSERT INTO `pinyin` VALUES ('16205', 'lai');\nINSERT INTO `pinyin` VALUES ('16212', 'la');\nINSERT INTO `pinyin` VALUES ('16216', 'kuo');\nINSERT INTO `pinyin` VALUES ('16220', 'kun');\nINSERT INTO `pinyin` VALUES ('16393', 'kui');\nINSERT INTO `pinyin` VALUES ('16401', 'kuang');\nINSERT INTO `pinyin` VALUES ('16403', 'kuan');\nINSERT INTO `pinyin` VALUES ('16407', 'kuai');\nINSERT INTO `pinyin` VALUES ('16412', 'kua');\nINSERT INTO `pinyin` VALUES ('16419', 'ku');\nINSERT INTO `pinyin` VALUES ('16423', 'kou');\nINSERT INTO `pinyin` VALUES ('16427', 'kong');\nINSERT INTO `pinyin` VALUES ('16429', 'keng');\nINSERT INTO `pinyin` VALUES ('16433', 'ken');\nINSERT INTO `pinyin` VALUES ('16448', 'ke');\nINSERT INTO `pinyin` VALUES ('16452', 'kao');\nINSERT INTO `pinyin` VALUES ('16459', 'kang');\nINSERT INTO `pinyin` VALUES ('16465', 'kan');\nINSERT INTO `pinyin` VALUES ('16470', 'kai');\nINSERT INTO `pinyin` VALUES ('16474', 'ka');\nINSERT INTO `pinyin` VALUES ('16647', 'jun');\nINSERT INTO `pinyin` VALUES ('16657', 'jue');\nINSERT INTO `pinyin` VALUES ('16664', 'juan');\nINSERT INTO `pinyin` VALUES ('16689', 'ju');\nINSERT INTO `pinyin` VALUES ('16706', 'jiu');\nINSERT INTO `pinyin` VALUES ('16708', 'jiong');\nINSERT INTO `pinyin` VALUES ('16733', 'jing');\nINSERT INTO `pinyin` VALUES ('16915', 'jin');\nINSERT INTO `pinyin` VALUES ('16942', 'jie');\nINSERT INTO `pinyin` VALUES ('16970', 'jiao');\nINSERT INTO `pinyin` VALUES ('16983', 'jiang');\nINSERT INTO `pinyin` VALUES ('17185', 'jian');\nINSERT INTO `pinyin` VALUES ('17202', 'jia');\nINSERT INTO `pinyin` VALUES ('17417', 'ji');\nINSERT INTO `pinyin` VALUES ('17427', 'huo');\nINSERT INTO `pinyin` VALUES ('17433', 'hun');\nINSERT INTO `pinyin` VALUES ('17454', 'hui');\nINSERT INTO `pinyin` VALUES ('17468', 'huang');\nINSERT INTO `pinyin` VALUES ('17482', 'huan');\nINSERT INTO `pinyin` VALUES ('17487', 'huai');\nINSERT INTO `pinyin` VALUES ('17496', 'hua');\nINSERT INTO `pinyin` VALUES ('17676', 'hu');\nINSERT INTO `pinyin` VALUES ('17683', 'hou');\nINSERT INTO `pinyin` VALUES ('17692', 'hong');\nINSERT INTO `pinyin` VALUES ('17697', 'heng');\nINSERT INTO `pinyin` VALUES ('17701', 'hen');\nINSERT INTO `pinyin` VALUES ('17703', 'hei');\nINSERT INTO `pinyin` VALUES ('17721', 'he');\nINSERT INTO `pinyin` VALUES ('17730', 'hao');\nINSERT INTO `pinyin` VALUES ('17733', 'hang');\nINSERT INTO `pinyin` VALUES ('17752', 'han');\nINSERT INTO `pinyin` VALUES ('17759', 'hai');\nINSERT INTO `pinyin` VALUES ('17922', 'ha');\nINSERT INTO `pinyin` VALUES ('17928', 'guo');\nINSERT INTO `pinyin` VALUES ('17931', 'gun');\nINSERT INTO `pinyin` VALUES ('17947', 'gui');\nINSERT INTO `pinyin` VALUES ('17950', 'guang');\nINSERT INTO `pinyin` VALUES ('17961', 'guan');\nINSERT INTO `pinyin` VALUES ('17964', 'guai');\nINSERT INTO `pinyin` VALUES ('17970', 'gua');\nINSERT INTO `pinyin` VALUES ('17988', 'gu');\nINSERT INTO `pinyin` VALUES ('17997', 'gou');\nINSERT INTO `pinyin` VALUES ('18012', 'gong');\nINSERT INTO `pinyin` VALUES ('18181', 'geng');\nINSERT INTO `pinyin` VALUES ('18183', 'gen');\nINSERT INTO `pinyin` VALUES ('18184', 'gei');\nINSERT INTO `pinyin` VALUES ('18201', 'ge');\nINSERT INTO `pinyin` VALUES ('18211', 'gao');\nINSERT INTO `pinyin` VALUES ('18220', 'gang');\nINSERT INTO `pinyin` VALUES ('18231', 'gan');\nINSERT INTO `pinyin` VALUES ('18237', 'gai');\nINSERT INTO `pinyin` VALUES ('18239', 'ga');\nINSERT INTO `pinyin` VALUES ('18446', 'fu');\nINSERT INTO `pinyin` VALUES ('18447', 'fou');\nINSERT INTO `pinyin` VALUES ('18448', 'fo');\nINSERT INTO `pinyin` VALUES ('18463', 'feng');\nINSERT INTO `pinyin` VALUES ('18478', 'fen');\nINSERT INTO `pinyin` VALUES ('18490', 'fei');\nINSERT INTO `pinyin` VALUES ('18501', 'fang');\nINSERT INTO `pinyin` VALUES ('18518', 'fan');\nINSERT INTO `pinyin` VALUES ('18526', 'fa');\nINSERT INTO `pinyin` VALUES ('18696', 'er');\nINSERT INTO `pinyin` VALUES ('18697', 'en');\nINSERT INTO `pinyin` VALUES ('18710', 'e');\nINSERT INTO `pinyin` VALUES ('18722', 'duo');\nINSERT INTO `pinyin` VALUES ('18731', 'dun');\nINSERT INTO `pinyin` VALUES ('18735', 'dui');\nINSERT INTO `pinyin` VALUES ('18741', 'duan');\nINSERT INTO `pinyin` VALUES ('18756', 'du');\nINSERT INTO `pinyin` VALUES ('18763', 'dou');\nINSERT INTO `pinyin` VALUES ('18773', 'dong');\nINSERT INTO `pinyin` VALUES ('18774', 'diu');\nINSERT INTO `pinyin` VALUES ('18783', 'ding');\nINSERT INTO `pinyin` VALUES ('18952', 'die');\nINSERT INTO `pinyin` VALUES ('18961', 'diao');\nINSERT INTO `pinyin` VALUES ('18977', 'dian');\nINSERT INTO `pinyin` VALUES ('18996', 'di');\nINSERT INTO `pinyin` VALUES ('19003', 'deng');\nINSERT INTO `pinyin` VALUES ('19006', 'de');\nINSERT INTO `pinyin` VALUES ('19018', 'dao');\nINSERT INTO `pinyin` VALUES ('19023', 'dang');\nINSERT INTO `pinyin` VALUES ('19038', 'dan');\nINSERT INTO `pinyin` VALUES ('19212', 'dai');\nINSERT INTO `pinyin` VALUES ('19218', 'da');\nINSERT INTO `pinyin` VALUES ('19224', 'cuo');\nINSERT INTO `pinyin` VALUES ('19227', 'cun');\nINSERT INTO `pinyin` VALUES ('19235', 'cui');\nINSERT INTO `pinyin` VALUES ('19238', 'cuan');\nINSERT INTO `pinyin` VALUES ('19242', 'cu');\nINSERT INTO `pinyin` VALUES ('19243', 'cou');\nINSERT INTO `pinyin` VALUES ('19249', 'cong');\nINSERT INTO `pinyin` VALUES ('19261', 'ci');\nINSERT INTO `pinyin` VALUES ('19263', 'chuo');\nINSERT INTO `pinyin` VALUES ('19270', 'chun');\nINSERT INTO `pinyin` VALUES ('19275', 'chui');\nINSERT INTO `pinyin` VALUES ('19281', 'chuang');\nINSERT INTO `pinyin` VALUES ('19288', 'chuan');\nINSERT INTO `pinyin` VALUES ('19289', 'chuai');\nINSERT INTO `pinyin` VALUES ('19467', 'chu');\nINSERT INTO `pinyin` VALUES ('19479', 'chou');\nINSERT INTO `pinyin` VALUES ('19484', 'chong');\nINSERT INTO `pinyin` VALUES ('19500', 'chi');\nINSERT INTO `pinyin` VALUES ('19515', 'cheng');\nINSERT INTO `pinyin` VALUES ('19525', 'chen');\nINSERT INTO `pinyin` VALUES ('19531', 'che');\nINSERT INTO `pinyin` VALUES ('19540', 'chao');\nINSERT INTO `pinyin` VALUES ('19715', 'chang');\nINSERT INTO `pinyin` VALUES ('19725', 'chan');\nINSERT INTO `pinyin` VALUES ('19728', 'chai');\nINSERT INTO `pinyin` VALUES ('19739', 'cha');\nINSERT INTO `pinyin` VALUES ('19741', 'ceng');\nINSERT INTO `pinyin` VALUES ('19746', 'ce');\nINSERT INTO `pinyin` VALUES ('19751', 'cao');\nINSERT INTO `pinyin` VALUES ('19756', 'cang');\nINSERT INTO `pinyin` VALUES ('19763', 'can');\nINSERT INTO `pinyin` VALUES ('19774', 'cai');\nINSERT INTO `pinyin` VALUES ('19775', 'ca');\nINSERT INTO `pinyin` VALUES ('19784', 'bu');\nINSERT INTO `pinyin` VALUES ('19805', 'bo');\nINSERT INTO `pinyin` VALUES ('19976', 'bing');\nINSERT INTO `pinyin` VALUES ('19982', 'bin');\nINSERT INTO `pinyin` VALUES ('19986', 'bie');\nINSERT INTO `pinyin` VALUES ('19990', 'biao');\nINSERT INTO `pinyin` VALUES ('20002', 'bian');\nINSERT INTO `pinyin` VALUES ('20026', 'bi');\nINSERT INTO `pinyin` VALUES ('20032', 'beng');\nINSERT INTO `pinyin` VALUES ('20036', 'ben');\nINSERT INTO `pinyin` VALUES ('20051', 'bei');\nINSERT INTO `pinyin` VALUES ('20230', 'bao');\nINSERT INTO `pinyin` VALUES ('20242', 'bang');\nINSERT INTO `pinyin` VALUES ('20257', 'ban');\nINSERT INTO `pinyin` VALUES ('20265', 'bai');\nINSERT INTO `pinyin` VALUES ('20283', 'ba');\nINSERT INTO `pinyin` VALUES ('20292', 'ao');\nINSERT INTO `pinyin` VALUES ('20295', 'ang');\nINSERT INTO `pinyin` VALUES ('20304', 'an');\nINSERT INTO `pinyin` VALUES ('20317', 'ai');\nINSERT INTO `pinyin` VALUES ('20319', 'a');\n```\n\n\n### 调用\n\n``` mysql\nselect f_to_pinyin(\"测试\");\n```\n","slug":"zh-cn-to-pinyin","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp8i000kwsnnye3794w3","content":"<h3 id=\"创建mysql函数\"><a href=\"#创建mysql函数\" class=\"headerlink\" title=\"创建mysql函数\"></a>创建mysql函数</h3><a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">CREATE FUNCTION `f_to_pinyin`(NAME VARCHAR(255) CHARSET gbk) RETURNS varchar(255) CHARSET gbk</span><br><span class=\"line\">BEGIN</span><br><span class=\"line\">    DECLARE mycode INT;</span><br><span class=\"line\">    DECLARE tmp_lcode VARCHAR(2) CHARSET gbk;</span><br><span class=\"line\">    DECLARE lcode INT;</span><br><span class=\"line\">    DECLARE tmp_rcode VARCHAR(2) CHARSET gbk;</span><br><span class=\"line\">    DECLARE rcode INT;</span><br><span class=\"line\">    DECLARE mypy VARCHAR(255) CHARSET gbk DEFAULT &apos;&apos;;</span><br><span class=\"line\">    DECLARE lp INT;</span><br><span class=\"line\">    SET mycode = 0;</span><br><span class=\"line\">    SET lp = 1;</span><br><span class=\"line\">    SET NAME = HEX(NAME);</span><br><span class=\"line\">    WHILE lp &lt; LENGTH(NAME) DO</span><br><span class=\"line\">        SET tmp_lcode = SUBSTRING(NAME, lp, 2);</span><br><span class=\"line\">        SET lcode = CAST(ASCII(UNHEX(tmp_lcode)) AS UNSIGNED); </span><br><span class=\"line\">        SET tmp_rcode = SUBSTRING(NAME, lp + 2, 2);</span><br><span class=\"line\">        SET rcode = CAST(ASCII(UNHEX(tmp_rcode)) AS UNSIGNED); </span><br><span class=\"line\">        IF lcode &gt; 128 THEN</span><br><span class=\"line\">            SET mycode =65536 - lcode * 256 - rcode ;</span><br><span class=\"line\">            SELECT CONCAT(mypy,py) INTO mypy FROM pinyin WHERE `code` &gt;= ABS(mycode) ORDER BY `code` ASC LIMIT 1;</span><br><span class=\"line\">            SET lp = lp + 4;</span><br><span class=\"line\">        ELSE</span><br><span class=\"line\">            SET mypy = CONCAT(mypy,CHAR(CAST(ASCII(UNHEX(SUBSTRING(NAME, lp, 2))) AS UNSIGNED)));</span><br><span class=\"line\">            SET lp = lp + 2;</span><br><span class=\"line\">        END IF;</span><br><span class=\"line\">    END WHILE;</span><br><span class=\"line\">    RETURN LOWER(mypy);</span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建拼音ascii码\"><a href=\"#创建拼音ascii码\" class=\"headerlink\" title=\"创建拼音ascii码\"></a>创建拼音ascii码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE `pinyin` (</span><br><span class=\"line\">  `code` int(11) NOT NULL,</span><br><span class=\"line\">  `py` varchar(10) CHARACTER SET gbk NOT NULL,</span><br><span class=\"line\">  PRIMARY KEY (`code`)</span><br><span class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10254&apos;, &apos;zuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10256&apos;, &apos;zun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10260&apos;, &apos;zui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10262&apos;, &apos;zuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10270&apos;, &apos;zu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10274&apos;, &apos;zou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10281&apos;, &apos;zong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10296&apos;, &apos;zi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10307&apos;, &apos;zhuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10309&apos;, &apos;zhun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10315&apos;, &apos;zhui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10322&apos;, &apos;zhuang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10328&apos;, &apos;zhuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10329&apos;, &apos;zhuai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10331&apos;, &apos;zhua&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10519&apos;, &apos;zhu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10533&apos;, &apos;zhou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10544&apos;, &apos;zhong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10587&apos;, &apos;zhi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10764&apos;, &apos;zheng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10780&apos;, &apos;zhen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10790&apos;, &apos;zhe&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10800&apos;, &apos;zhao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10815&apos;, &apos;zhang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10832&apos;, &apos;zhan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10838&apos;, &apos;zhai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11014&apos;, &apos;zha&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11018&apos;, &apos;zeng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11019&apos;, &apos;zen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11020&apos;, &apos;zei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11024&apos;, &apos;ze&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11038&apos;, &apos;zao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11041&apos;, &apos;zang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11045&apos;, &apos;zan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11052&apos;, &apos;zai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11055&apos;, &apos;za&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11067&apos;, &apos;yun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11077&apos;, &apos;yue&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11097&apos;, &apos;yuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11303&apos;, &apos;yu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11324&apos;, &apos;you&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11339&apos;, &apos;yong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11340&apos;, &apos;yo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11358&apos;, &apos;ying&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11536&apos;, &apos;yin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11589&apos;, &apos;yi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11604&apos;, &apos;ye&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11781&apos;, &apos;yao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11798&apos;, &apos;yang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11831&apos;, &apos;yan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11847&apos;, &apos;ya&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11861&apos;, &apos;xun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11867&apos;, &apos;xue&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12039&apos;, &apos;xuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12058&apos;, &apos;xu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12067&apos;, &apos;xiu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12074&apos;, &apos;xiong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12089&apos;, &apos;xing&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12099&apos;, &apos;xin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12120&apos;, &apos;xie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12300&apos;, &apos;xiao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12320&apos;, &apos;xiang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12346&apos;, &apos;xian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12359&apos;, &apos;xia&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12556&apos;, &apos;xi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12585&apos;, &apos;wu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12594&apos;, &apos;wo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12597&apos;, &apos;weng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12607&apos;, &apos;wen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12802&apos;, &apos;wei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12812&apos;, &apos;wang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12829&apos;, &apos;wan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12831&apos;, &apos;wai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12838&apos;, &apos;wa&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12849&apos;, &apos;tuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12852&apos;, &apos;tun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12858&apos;, &apos;tui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12860&apos;, &apos;tuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12871&apos;, &apos;tu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12875&apos;, &apos;tou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12888&apos;, &apos;tong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13060&apos;, &apos;ting&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13063&apos;, &apos;tie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13068&apos;, &apos;tiao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13076&apos;, &apos;tian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13091&apos;, &apos;ti&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13095&apos;, &apos;teng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13096&apos;, &apos;te&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13107&apos;, &apos;tao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13120&apos;, &apos;tang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13138&apos;, &apos;tan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13147&apos;, &apos;tai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13318&apos;, &apos;ta&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13326&apos;, &apos;suo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13329&apos;, &apos;sun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13340&apos;, &apos;sui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13343&apos;, &apos;suan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13356&apos;, &apos;su&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13359&apos;, &apos;sou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13367&apos;, &apos;song&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13383&apos;, &apos;si&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13387&apos;, &apos;shuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13391&apos;, &apos;shun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13395&apos;, &apos;shui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13398&apos;, &apos;shuang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13400&apos;, &apos;shuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13404&apos;, &apos;shuai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13406&apos;, &apos;shua&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13601&apos;, &apos;shu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13611&apos;, &apos;shou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13658&apos;, &apos;shi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13831&apos;, &apos;sheng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13847&apos;, &apos;shen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13859&apos;, &apos;she&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13870&apos;, &apos;shao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13878&apos;, &apos;shang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13894&apos;, &apos;shan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13896&apos;, &apos;shai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13905&apos;, &apos;sha&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13906&apos;, &apos;seng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13907&apos;, &apos;sen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13910&apos;, &apos;se&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13914&apos;, &apos;sao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13917&apos;, &apos;sang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14083&apos;, &apos;san&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14087&apos;, &apos;sai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14090&apos;, &apos;sa&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14092&apos;, &apos;ruo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14094&apos;, &apos;run&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14097&apos;, &apos;rui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14099&apos;, &apos;ruan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14109&apos;, &apos;ru&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14112&apos;, &apos;rou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14122&apos;, &apos;rong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14123&apos;, &apos;ri&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14125&apos;, &apos;reng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14135&apos;, &apos;ren&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14137&apos;, &apos;re&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14140&apos;, &apos;rao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14145&apos;, &apos;rang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14149&apos;, &apos;ran&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14151&apos;, &apos;qun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14159&apos;, &apos;que&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14170&apos;, &apos;quan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14345&apos;, &apos;qu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14353&apos;, &apos;qiu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14355&apos;, &apos;qiong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14368&apos;, &apos;qing&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14379&apos;, &apos;qin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14384&apos;, &apos;qie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14399&apos;, &apos;qiao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14407&apos;, &apos;qiang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14429&apos;, &apos;qian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14594&apos;, &apos;qia&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14630&apos;, &apos;qi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14645&apos;, &apos;pu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14654&apos;, &apos;po&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14663&apos;, &apos;ping&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14668&apos;, &apos;pin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14670&apos;, &apos;pie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14674&apos;, &apos;piao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14678&apos;, &apos;pian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14857&apos;, &apos;pi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14871&apos;, &apos;peng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14873&apos;, &apos;pen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14882&apos;, &apos;pei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14889&apos;, &apos;pao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14894&apos;, &apos;pang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14902&apos;, &apos;pan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14908&apos;, &apos;pai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14914&apos;, &apos;pa&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14921&apos;, &apos;ou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14922&apos;, &apos;o&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14926&apos;, &apos;nuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14928&apos;, &apos;nue&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14929&apos;, &apos;nuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14930&apos;, &apos;nv&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14933&apos;, &apos;nu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14937&apos;, &apos;nong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14941&apos;, &apos;niu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15109&apos;, &apos;ning&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15110&apos;, &apos;nin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15117&apos;, &apos;nie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15119&apos;, &apos;niao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15121&apos;, &apos;niang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15128&apos;, &apos;nian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15139&apos;, &apos;ni&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15140&apos;, &apos;neng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15141&apos;, &apos;nen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15143&apos;, &apos;nei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15144&apos;, &apos;ne&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15149&apos;, &apos;nao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15150&apos;, &apos;nang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15153&apos;, &apos;nan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15158&apos;, &apos;nai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15165&apos;, &apos;na&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15180&apos;, &apos;mu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15183&apos;, &apos;mou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15362&apos;, &apos;mo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15363&apos;, &apos;miu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15369&apos;, &apos;ming&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15375&apos;, &apos;min&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15377&apos;, &apos;mie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15385&apos;, &apos;miao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15394&apos;, &apos;mian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15408&apos;, &apos;mi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15416&apos;, &apos;meng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15419&apos;, &apos;men&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15435&apos;, &apos;mei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15436&apos;, &apos;me&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15448&apos;, &apos;mao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15454&apos;, &apos;mang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15625&apos;, &apos;man&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15631&apos;, &apos;mai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15640&apos;, &apos;ma&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15652&apos;, &apos;luo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15659&apos;, &apos;lun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15661&apos;, &apos;lue&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15667&apos;, &apos;luan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15681&apos;, &apos;lv&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15701&apos;, &apos;lu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15707&apos;, &apos;lou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15878&apos;, &apos;long&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15889&apos;, &apos;liu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15903&apos;, &apos;ling&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15915&apos;, &apos;lin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15920&apos;, &apos;lie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15933&apos;, &apos;liao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15944&apos;, &apos;liang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15958&apos;, &apos;lian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15959&apos;, &apos;lia&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16155&apos;, &apos;li&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16158&apos;, &apos;leng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16169&apos;, &apos;lei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16171&apos;, &apos;le&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16180&apos;, &apos;lao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16187&apos;, &apos;lang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16202&apos;, &apos;lan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16205&apos;, &apos;lai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16212&apos;, &apos;la&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16216&apos;, &apos;kuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16220&apos;, &apos;kun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16393&apos;, &apos;kui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16401&apos;, &apos;kuang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16403&apos;, &apos;kuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16407&apos;, &apos;kuai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16412&apos;, &apos;kua&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16419&apos;, &apos;ku&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16423&apos;, &apos;kou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16427&apos;, &apos;kong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16429&apos;, &apos;keng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16433&apos;, &apos;ken&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16448&apos;, &apos;ke&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16452&apos;, &apos;kao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16459&apos;, &apos;kang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16465&apos;, &apos;kan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16470&apos;, &apos;kai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16474&apos;, &apos;ka&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16647&apos;, &apos;jun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16657&apos;, &apos;jue&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16664&apos;, &apos;juan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16689&apos;, &apos;ju&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16706&apos;, &apos;jiu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16708&apos;, &apos;jiong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16733&apos;, &apos;jing&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16915&apos;, &apos;jin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16942&apos;, &apos;jie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16970&apos;, &apos;jiao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16983&apos;, &apos;jiang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17185&apos;, &apos;jian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17202&apos;, &apos;jia&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17417&apos;, &apos;ji&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17427&apos;, &apos;huo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17433&apos;, &apos;hun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17454&apos;, &apos;hui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17468&apos;, &apos;huang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17482&apos;, &apos;huan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17487&apos;, &apos;huai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17496&apos;, &apos;hua&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17676&apos;, &apos;hu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17683&apos;, &apos;hou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17692&apos;, &apos;hong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17697&apos;, &apos;heng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17701&apos;, &apos;hen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17703&apos;, &apos;hei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17721&apos;, &apos;he&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17730&apos;, &apos;hao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17733&apos;, &apos;hang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17752&apos;, &apos;han&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17759&apos;, &apos;hai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17922&apos;, &apos;ha&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17928&apos;, &apos;guo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17931&apos;, &apos;gun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17947&apos;, &apos;gui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17950&apos;, &apos;guang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17961&apos;, &apos;guan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17964&apos;, &apos;guai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17970&apos;, &apos;gua&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17988&apos;, &apos;gu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17997&apos;, &apos;gou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18012&apos;, &apos;gong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18181&apos;, &apos;geng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18183&apos;, &apos;gen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18184&apos;, &apos;gei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18201&apos;, &apos;ge&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18211&apos;, &apos;gao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18220&apos;, &apos;gang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18231&apos;, &apos;gan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18237&apos;, &apos;gai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18239&apos;, &apos;ga&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18446&apos;, &apos;fu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18447&apos;, &apos;fou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18448&apos;, &apos;fo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18463&apos;, &apos;feng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18478&apos;, &apos;fen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18490&apos;, &apos;fei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18501&apos;, &apos;fang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18518&apos;, &apos;fan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18526&apos;, &apos;fa&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18696&apos;, &apos;er&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18697&apos;, &apos;en&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18710&apos;, &apos;e&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18722&apos;, &apos;duo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18731&apos;, &apos;dun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18735&apos;, &apos;dui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18741&apos;, &apos;duan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18756&apos;, &apos;du&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18763&apos;, &apos;dou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18773&apos;, &apos;dong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18774&apos;, &apos;diu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18783&apos;, &apos;ding&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18952&apos;, &apos;die&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18961&apos;, &apos;diao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18977&apos;, &apos;dian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18996&apos;, &apos;di&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19003&apos;, &apos;deng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19006&apos;, &apos;de&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19018&apos;, &apos;dao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19023&apos;, &apos;dang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19038&apos;, &apos;dan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19212&apos;, &apos;dai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19218&apos;, &apos;da&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19224&apos;, &apos;cuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19227&apos;, &apos;cun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19235&apos;, &apos;cui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19238&apos;, &apos;cuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19242&apos;, &apos;cu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19243&apos;, &apos;cou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19249&apos;, &apos;cong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19261&apos;, &apos;ci&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19263&apos;, &apos;chuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19270&apos;, &apos;chun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19275&apos;, &apos;chui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19281&apos;, &apos;chuang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19288&apos;, &apos;chuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19289&apos;, &apos;chuai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19467&apos;, &apos;chu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19479&apos;, &apos;chou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19484&apos;, &apos;chong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19500&apos;, &apos;chi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19515&apos;, &apos;cheng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19525&apos;, &apos;chen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19531&apos;, &apos;che&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19540&apos;, &apos;chao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19715&apos;, &apos;chang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19725&apos;, &apos;chan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19728&apos;, &apos;chai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19739&apos;, &apos;cha&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19741&apos;, &apos;ceng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19746&apos;, &apos;ce&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19751&apos;, &apos;cao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19756&apos;, &apos;cang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19763&apos;, &apos;can&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19774&apos;, &apos;cai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19775&apos;, &apos;ca&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19784&apos;, &apos;bu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19805&apos;, &apos;bo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19976&apos;, &apos;bing&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19982&apos;, &apos;bin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19986&apos;, &apos;bie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19990&apos;, &apos;biao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20002&apos;, &apos;bian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20026&apos;, &apos;bi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20032&apos;, &apos;beng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20036&apos;, &apos;ben&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20051&apos;, &apos;bei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20230&apos;, &apos;bao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20242&apos;, &apos;bang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20257&apos;, &apos;ban&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20265&apos;, &apos;bai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20283&apos;, &apos;ba&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20292&apos;, &apos;ao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20295&apos;, &apos;ang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20304&apos;, &apos;an&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20317&apos;, &apos;ai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20319&apos;, &apos;a&apos;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select f_to_pinyin(&quot;测试&quot;);</span><br></pre></td></tr></table></figure>\n","excerpt":"<h3 id=\"创建mysql函数\"><a href=\"#创建mysql函数\" class=\"headerlink\" title=\"创建mysql函数\"></a>创建mysql函数</h3>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">CREATE FUNCTION `f_to_pinyin`(NAME VARCHAR(255) CHARSET gbk) RETURNS varchar(255) CHARSET gbk</span><br><span class=\"line\">BEGIN</span><br><span class=\"line\">    DECLARE mycode INT;</span><br><span class=\"line\">    DECLARE tmp_lcode VARCHAR(2) CHARSET gbk;</span><br><span class=\"line\">    DECLARE lcode INT;</span><br><span class=\"line\">    DECLARE tmp_rcode VARCHAR(2) CHARSET gbk;</span><br><span class=\"line\">    DECLARE rcode INT;</span><br><span class=\"line\">    DECLARE mypy VARCHAR(255) CHARSET gbk DEFAULT &apos;&apos;;</span><br><span class=\"line\">    DECLARE lp INT;</span><br><span class=\"line\">    SET mycode = 0;</span><br><span class=\"line\">    SET lp = 1;</span><br><span class=\"line\">    SET NAME = HEX(NAME);</span><br><span class=\"line\">    WHILE lp &lt; LENGTH(NAME) DO</span><br><span class=\"line\">        SET tmp_lcode = SUBSTRING(NAME, lp, 2);</span><br><span class=\"line\">        SET lcode = CAST(ASCII(UNHEX(tmp_lcode)) AS UNSIGNED); </span><br><span class=\"line\">        SET tmp_rcode = SUBSTRING(NAME, lp + 2, 2);</span><br><span class=\"line\">        SET rcode = CAST(ASCII(UNHEX(tmp_rcode)) AS UNSIGNED); </span><br><span class=\"line\">        IF lcode &gt; 128 THEN</span><br><span class=\"line\">            SET mycode =65536 - lcode * 256 - rcode ;</span><br><span class=\"line\">            SELECT CONCAT(mypy,py) INTO mypy FROM pinyin WHERE `code` &gt;= ABS(mycode) ORDER BY `code` ASC LIMIT 1;</span><br><span class=\"line\">            SET lp = lp + 4;</span><br><span class=\"line\">        ELSE</span><br><span class=\"line\">            SET mypy = CONCAT(mypy,CHAR(CAST(ASCII(UNHEX(SUBSTRING(NAME, lp, 2))) AS UNSIGNED)));</span><br><span class=\"line\">            SET lp = lp + 2;</span><br><span class=\"line\">        END IF;</span><br><span class=\"line\">    END WHILE;</span><br><span class=\"line\">    RETURN LOWER(mypy);</span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建拼音ascii码\"><a href=\"#创建拼音ascii码\" class=\"headerlink\" title=\"创建拼音ascii码\"></a>创建拼音ascii码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE `pinyin` (</span><br><span class=\"line\">  `code` int(11) NOT NULL,</span><br><span class=\"line\">  `py` varchar(10) CHARACTER SET gbk NOT NULL,</span><br><span class=\"line\">  PRIMARY KEY (`code`)</span><br><span class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10254&apos;, &apos;zuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10256&apos;, &apos;zun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10260&apos;, &apos;zui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10262&apos;, &apos;zuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10270&apos;, &apos;zu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10274&apos;, &apos;zou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10281&apos;, &apos;zong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10296&apos;, &apos;zi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10307&apos;, &apos;zhuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10309&apos;, &apos;zhun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10315&apos;, &apos;zhui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10322&apos;, &apos;zhuang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10328&apos;, &apos;zhuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10329&apos;, &apos;zhuai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10331&apos;, &apos;zhua&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10519&apos;, &apos;zhu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10533&apos;, &apos;zhou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10544&apos;, &apos;zhong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10587&apos;, &apos;zhi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10764&apos;, &apos;zheng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10780&apos;, &apos;zhen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10790&apos;, &apos;zhe&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10800&apos;, &apos;zhao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10815&apos;, &apos;zhang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10832&apos;, &apos;zhan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;10838&apos;, &apos;zhai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11014&apos;, &apos;zha&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11018&apos;, &apos;zeng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11019&apos;, &apos;zen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11020&apos;, &apos;zei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11024&apos;, &apos;ze&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11038&apos;, &apos;zao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11041&apos;, &apos;zang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11045&apos;, &apos;zan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11052&apos;, &apos;zai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11055&apos;, &apos;za&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11067&apos;, &apos;yun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11077&apos;, &apos;yue&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11097&apos;, &apos;yuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11303&apos;, &apos;yu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11324&apos;, &apos;you&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11339&apos;, &apos;yong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11340&apos;, &apos;yo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11358&apos;, &apos;ying&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11536&apos;, &apos;yin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11589&apos;, &apos;yi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11604&apos;, &apos;ye&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11781&apos;, &apos;yao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11798&apos;, &apos;yang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11831&apos;, &apos;yan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11847&apos;, &apos;ya&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11861&apos;, &apos;xun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;11867&apos;, &apos;xue&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12039&apos;, &apos;xuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12058&apos;, &apos;xu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12067&apos;, &apos;xiu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12074&apos;, &apos;xiong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12089&apos;, &apos;xing&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12099&apos;, &apos;xin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12120&apos;, &apos;xie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12300&apos;, &apos;xiao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12320&apos;, &apos;xiang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12346&apos;, &apos;xian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12359&apos;, &apos;xia&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12556&apos;, &apos;xi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12585&apos;, &apos;wu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12594&apos;, &apos;wo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12597&apos;, &apos;weng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12607&apos;, &apos;wen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12802&apos;, &apos;wei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12812&apos;, &apos;wang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12829&apos;, &apos;wan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12831&apos;, &apos;wai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12838&apos;, &apos;wa&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12849&apos;, &apos;tuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12852&apos;, &apos;tun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12858&apos;, &apos;tui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12860&apos;, &apos;tuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12871&apos;, &apos;tu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12875&apos;, &apos;tou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;12888&apos;, &apos;tong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13060&apos;, &apos;ting&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13063&apos;, &apos;tie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13068&apos;, &apos;tiao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13076&apos;, &apos;tian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13091&apos;, &apos;ti&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13095&apos;, &apos;teng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13096&apos;, &apos;te&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13107&apos;, &apos;tao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13120&apos;, &apos;tang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13138&apos;, &apos;tan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13147&apos;, &apos;tai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13318&apos;, &apos;ta&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13326&apos;, &apos;suo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13329&apos;, &apos;sun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13340&apos;, &apos;sui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13343&apos;, &apos;suan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13356&apos;, &apos;su&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13359&apos;, &apos;sou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13367&apos;, &apos;song&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13383&apos;, &apos;si&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13387&apos;, &apos;shuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13391&apos;, &apos;shun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13395&apos;, &apos;shui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13398&apos;, &apos;shuang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13400&apos;, &apos;shuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13404&apos;, &apos;shuai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13406&apos;, &apos;shua&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13601&apos;, &apos;shu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13611&apos;, &apos;shou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13658&apos;, &apos;shi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13831&apos;, &apos;sheng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13847&apos;, &apos;shen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13859&apos;, &apos;she&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13870&apos;, &apos;shao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13878&apos;, &apos;shang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13894&apos;, &apos;shan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13896&apos;, &apos;shai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13905&apos;, &apos;sha&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13906&apos;, &apos;seng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13907&apos;, &apos;sen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13910&apos;, &apos;se&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13914&apos;, &apos;sao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;13917&apos;, &apos;sang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14083&apos;, &apos;san&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14087&apos;, &apos;sai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14090&apos;, &apos;sa&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14092&apos;, &apos;ruo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14094&apos;, &apos;run&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14097&apos;, &apos;rui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14099&apos;, &apos;ruan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14109&apos;, &apos;ru&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14112&apos;, &apos;rou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14122&apos;, &apos;rong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14123&apos;, &apos;ri&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14125&apos;, &apos;reng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14135&apos;, &apos;ren&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14137&apos;, &apos;re&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14140&apos;, &apos;rao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14145&apos;, &apos;rang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14149&apos;, &apos;ran&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14151&apos;, &apos;qun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14159&apos;, &apos;que&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14170&apos;, &apos;quan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14345&apos;, &apos;qu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14353&apos;, &apos;qiu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14355&apos;, &apos;qiong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14368&apos;, &apos;qing&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14379&apos;, &apos;qin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14384&apos;, &apos;qie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14399&apos;, &apos;qiao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14407&apos;, &apos;qiang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14429&apos;, &apos;qian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14594&apos;, &apos;qia&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14630&apos;, &apos;qi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14645&apos;, &apos;pu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14654&apos;, &apos;po&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14663&apos;, &apos;ping&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14668&apos;, &apos;pin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14670&apos;, &apos;pie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14674&apos;, &apos;piao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14678&apos;, &apos;pian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14857&apos;, &apos;pi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14871&apos;, &apos;peng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14873&apos;, &apos;pen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14882&apos;, &apos;pei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14889&apos;, &apos;pao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14894&apos;, &apos;pang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14902&apos;, &apos;pan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14908&apos;, &apos;pai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14914&apos;, &apos;pa&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14921&apos;, &apos;ou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14922&apos;, &apos;o&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14926&apos;, &apos;nuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14928&apos;, &apos;nue&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14929&apos;, &apos;nuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14930&apos;, &apos;nv&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14933&apos;, &apos;nu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14937&apos;, &apos;nong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;14941&apos;, &apos;niu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15109&apos;, &apos;ning&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15110&apos;, &apos;nin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15117&apos;, &apos;nie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15119&apos;, &apos;niao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15121&apos;, &apos;niang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15128&apos;, &apos;nian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15139&apos;, &apos;ni&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15140&apos;, &apos;neng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15141&apos;, &apos;nen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15143&apos;, &apos;nei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15144&apos;, &apos;ne&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15149&apos;, &apos;nao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15150&apos;, &apos;nang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15153&apos;, &apos;nan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15158&apos;, &apos;nai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15165&apos;, &apos;na&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15180&apos;, &apos;mu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15183&apos;, &apos;mou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15362&apos;, &apos;mo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15363&apos;, &apos;miu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15369&apos;, &apos;ming&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15375&apos;, &apos;min&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15377&apos;, &apos;mie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15385&apos;, &apos;miao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15394&apos;, &apos;mian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15408&apos;, &apos;mi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15416&apos;, &apos;meng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15419&apos;, &apos;men&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15435&apos;, &apos;mei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15436&apos;, &apos;me&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15448&apos;, &apos;mao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15454&apos;, &apos;mang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15625&apos;, &apos;man&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15631&apos;, &apos;mai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15640&apos;, &apos;ma&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15652&apos;, &apos;luo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15659&apos;, &apos;lun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15661&apos;, &apos;lue&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15667&apos;, &apos;luan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15681&apos;, &apos;lv&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15701&apos;, &apos;lu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15707&apos;, &apos;lou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15878&apos;, &apos;long&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15889&apos;, &apos;liu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15903&apos;, &apos;ling&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15915&apos;, &apos;lin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15920&apos;, &apos;lie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15933&apos;, &apos;liao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15944&apos;, &apos;liang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15958&apos;, &apos;lian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;15959&apos;, &apos;lia&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16155&apos;, &apos;li&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16158&apos;, &apos;leng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16169&apos;, &apos;lei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16171&apos;, &apos;le&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16180&apos;, &apos;lao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16187&apos;, &apos;lang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16202&apos;, &apos;lan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16205&apos;, &apos;lai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16212&apos;, &apos;la&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16216&apos;, &apos;kuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16220&apos;, &apos;kun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16393&apos;, &apos;kui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16401&apos;, &apos;kuang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16403&apos;, &apos;kuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16407&apos;, &apos;kuai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16412&apos;, &apos;kua&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16419&apos;, &apos;ku&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16423&apos;, &apos;kou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16427&apos;, &apos;kong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16429&apos;, &apos;keng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16433&apos;, &apos;ken&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16448&apos;, &apos;ke&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16452&apos;, &apos;kao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16459&apos;, &apos;kang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16465&apos;, &apos;kan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16470&apos;, &apos;kai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16474&apos;, &apos;ka&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16647&apos;, &apos;jun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16657&apos;, &apos;jue&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16664&apos;, &apos;juan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16689&apos;, &apos;ju&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16706&apos;, &apos;jiu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16708&apos;, &apos;jiong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16733&apos;, &apos;jing&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16915&apos;, &apos;jin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16942&apos;, &apos;jie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16970&apos;, &apos;jiao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;16983&apos;, &apos;jiang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17185&apos;, &apos;jian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17202&apos;, &apos;jia&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17417&apos;, &apos;ji&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17427&apos;, &apos;huo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17433&apos;, &apos;hun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17454&apos;, &apos;hui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17468&apos;, &apos;huang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17482&apos;, &apos;huan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17487&apos;, &apos;huai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17496&apos;, &apos;hua&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17676&apos;, &apos;hu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17683&apos;, &apos;hou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17692&apos;, &apos;hong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17697&apos;, &apos;heng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17701&apos;, &apos;hen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17703&apos;, &apos;hei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17721&apos;, &apos;he&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17730&apos;, &apos;hao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17733&apos;, &apos;hang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17752&apos;, &apos;han&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17759&apos;, &apos;hai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17922&apos;, &apos;ha&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17928&apos;, &apos;guo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17931&apos;, &apos;gun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17947&apos;, &apos;gui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17950&apos;, &apos;guang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17961&apos;, &apos;guan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17964&apos;, &apos;guai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17970&apos;, &apos;gua&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17988&apos;, &apos;gu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;17997&apos;, &apos;gou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18012&apos;, &apos;gong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18181&apos;, &apos;geng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18183&apos;, &apos;gen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18184&apos;, &apos;gei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18201&apos;, &apos;ge&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18211&apos;, &apos;gao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18220&apos;, &apos;gang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18231&apos;, &apos;gan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18237&apos;, &apos;gai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18239&apos;, &apos;ga&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18446&apos;, &apos;fu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18447&apos;, &apos;fou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18448&apos;, &apos;fo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18463&apos;, &apos;feng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18478&apos;, &apos;fen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18490&apos;, &apos;fei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18501&apos;, &apos;fang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18518&apos;, &apos;fan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18526&apos;, &apos;fa&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18696&apos;, &apos;er&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18697&apos;, &apos;en&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18710&apos;, &apos;e&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18722&apos;, &apos;duo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18731&apos;, &apos;dun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18735&apos;, &apos;dui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18741&apos;, &apos;duan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18756&apos;, &apos;du&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18763&apos;, &apos;dou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18773&apos;, &apos;dong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18774&apos;, &apos;diu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18783&apos;, &apos;ding&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18952&apos;, &apos;die&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18961&apos;, &apos;diao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18977&apos;, &apos;dian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;18996&apos;, &apos;di&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19003&apos;, &apos;deng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19006&apos;, &apos;de&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19018&apos;, &apos;dao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19023&apos;, &apos;dang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19038&apos;, &apos;dan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19212&apos;, &apos;dai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19218&apos;, &apos;da&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19224&apos;, &apos;cuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19227&apos;, &apos;cun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19235&apos;, &apos;cui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19238&apos;, &apos;cuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19242&apos;, &apos;cu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19243&apos;, &apos;cou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19249&apos;, &apos;cong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19261&apos;, &apos;ci&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19263&apos;, &apos;chuo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19270&apos;, &apos;chun&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19275&apos;, &apos;chui&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19281&apos;, &apos;chuang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19288&apos;, &apos;chuan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19289&apos;, &apos;chuai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19467&apos;, &apos;chu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19479&apos;, &apos;chou&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19484&apos;, &apos;chong&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19500&apos;, &apos;chi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19515&apos;, &apos;cheng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19525&apos;, &apos;chen&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19531&apos;, &apos;che&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19540&apos;, &apos;chao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19715&apos;, &apos;chang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19725&apos;, &apos;chan&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19728&apos;, &apos;chai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19739&apos;, &apos;cha&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19741&apos;, &apos;ceng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19746&apos;, &apos;ce&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19751&apos;, &apos;cao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19756&apos;, &apos;cang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19763&apos;, &apos;can&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19774&apos;, &apos;cai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19775&apos;, &apos;ca&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19784&apos;, &apos;bu&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19805&apos;, &apos;bo&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19976&apos;, &apos;bing&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19982&apos;, &apos;bin&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19986&apos;, &apos;bie&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;19990&apos;, &apos;biao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20002&apos;, &apos;bian&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20026&apos;, &apos;bi&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20032&apos;, &apos;beng&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20036&apos;, &apos;ben&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20051&apos;, &apos;bei&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20230&apos;, &apos;bao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20242&apos;, &apos;bang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20257&apos;, &apos;ban&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20265&apos;, &apos;bai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20283&apos;, &apos;ba&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20292&apos;, &apos;ao&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20295&apos;, &apos;ang&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20304&apos;, &apos;an&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20317&apos;, &apos;ai&apos;);</span><br><span class=\"line\">INSERT INTO `pinyin` VALUES (&apos;20319&apos;, &apos;a&apos;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select f_to_pinyin(&quot;测试&quot;);</span><br></pre></td></tr></table></figure>"},{"title":"批判性思维(critical thinking)","date":"2015-06-22T06:07:53.000Z","_content":"\n[批判性思维](http://www.criticalthinking.org/)\n[critical thinking](https://book.douban.com/subject/2591434/)","source":"_posts/2015/critical-thinking.md","raw":"---\ntitle: 批判性思维(critical thinking)\ndate: 2015-06-22T14:07:53.000Z\ntags: null\ncategories: null\n---\n\n[批判性思维](http://www.criticalthinking.org/)\n[critical thinking](https://book.douban.com/subject/2591434/)","slug":"critical-thinking","published":1,"updated":"2017-01-04T03:50:21.125Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp8s000nwsnnj9f7ouyi","content":"<p><a href=\"http://www.criticalthinking.org/\" target=\"_blank\" rel=\"external\">批判性思维</a><br><a href=\"https://book.douban.com/subject/2591434/\" target=\"_blank\" rel=\"external\">critical thinking</a></p>\n","excerpt":"","more":"<p><a href=\"http://www.criticalthinking.org/\">批判性思维</a><br><a href=\"https://book.douban.com/subject/2591434/\">critical thinking</a></p>\n"},{"title":"如何高效生成趋势有序的全局唯一ID？","date":"2015-12-04T05:57:12.000Z","updated":"2015-12-04T05:57:12.000Z","_content":"\n# 生成一个记录标识的需求，例如：\n1. 消息标识：message-id\n2. 订单标识：order-id\n3. 帖子标识：tiezi-id\n\n这个记录标识往往就是数据库中的唯一主键，数据库上会建立聚集索引（`cluster index`），即在物理存储上以这个字段排序。\n\n<!-- more -->\n这个记录标识上的查询，往往又有分页或者排序的业务需求，例如：\n- 拉取最新的一页消息：selectmessage-id/ order by time/ limit 100\n- 拉取最新的一页订单：selectorder-id/ order by time/ limit 100\n- 拉取最新的一页帖子：selecttiezi-id/ order by time/ limit 100\n所以往往要有一个time字段，并且在time字段上建立普通索引（non-cluster index）。\n \n我们都知道普通索引存储的是实际记录的指针，其访问效率会比聚集索引慢，如果记录标识在生成时能够基本按照时间有序，则可以省去这个time字段的索引查询：\n`select message-id/ (order by message-id)/limit 100`\n再次强调，能这么做的前提是，message-id的生成基本是趋势时间递增的。\n \n两大核心需求：\n1. 全局唯一\n2. 趋势有序\n \n\n## 常见方法、不足、优化\n### 1.用数据库的 auto_increment\n#### 优点：\n1. 简单，使用数据库已有的功能\n1. 能够保证唯一性\n1. 能够保证递增性\n1. 步长固定\n\n#### 缺点：\n\n1. 可用性难以保证：数据库常见架构是一主多从+读写分离，生成自增ID是写请求，主库挂了就玩不转了\n1. 扩展性差，性能有上限：因为写入是单点，数据库主库的写性能决定ID的生成性能上限，并且难以扩展\n\n#### **改进方法**：\n\n1. 增加主库，避免写入单点\n2. 数据水平切分，保证各主库生成的ID不重复\n\n![pic](/images/technology/gen-id.png)\n\n如上图所述，由1个写库变成3个写库，每个写库设置不同的auto_increment初始值，以及相同的增长步长，以保证每个数据库生成的ID是不同的（上图中库0生成0,3,6,9…，库1生成1,4,7,10，库2生成2,5,8,11…）, 改进后的架构保证了可用性。\n\n**缺点是**：\n1. 丧失了ID生成的“绝对递增性”：先访问库0生成0,3，再访问库1生成1，可能导致在非常短的时间内，ID生成不是绝对递增的（这个问题不大，我们的目标是趋势递增，不是绝对递增）\n2. 数据库的写压力依然很大，每次生成ID都要访问数据库\n为了解决上述两个问题，引出了第二个常见的方案\n \n### 单点批量ID生成服务\n\n分布式系统之所以难，很重要的原因之一是“没有一个全局时钟，难以保证绝对的时序”，要想保证绝对的时序，还是只能使用单点服务，用本地时钟保证“绝对时序”。数据库写压力大，是因为每次生成ID都访问了数据库，可以使用批量的方式降低数据库写压力。\n\n![pic](/images/technology/gen-id2.png)\n\n如上图所述，数据库使用双master保证可用性，数据库中只存储当前ID的最大值，例如0。ID生成服务假设每次批量拉取6个ID，服务访问数据库，将当前ID的最大值修改为5，这样应用访问ID生成服务索要ID，ID生成服务不需要每次访问数据库，就能依次派发0,1,2,3,4,5这些ID了，当ID发完后，再将ID的最大值修改为11，就能再次派发6,7,8,9,10,11这些ID了，于是数据库的压力就降低到原来的1/6了。\n#### 优点：\n1. 保证了ID生成的绝对递增有序\n1. 大大的降低了数据库的压力，ID生成可以做到每秒生成几万几十万个\n\n#### 缺点：\n1. 服务仍然是单点\n1. 如果服务挂了，服务重启起来之后，继续生成ID可能会不连续，中间出现空洞（服务内存是保存着0,1,2,3,4,5，数据库中max-id是5，分配到3时，服务重启了，下次会从6开始分配，4和5就成了空洞，不过这个问题也不大）\n1. 虽然每秒可以生成几万几十万个ID，但毕竟还是有性能上限，无法进行水平扩展\n\n#### **改进方法**：\n** 单点服务的常用高可用优化方案是“备用服务”，也叫“影子服务”，** 所以我们能用以下方法优化上述缺点（1）：\n\n![pic](/images/technology/gen-id3.png)\n如上图，对外提供的服务是主服务，有一个影子服务时刻处于备用状态，当主服务挂了的时候影子服务顶上。这个切换的过程对调用方是透明的，可以自动完成，常用的技术是vip+keepalived，具体就不在这里展开。\n \n### uuid\n上述方案来生成ID，虽然性能大增，但由于是单点系统，总还是存在性能上限的。同时，上述两种方案，不管是数据库还是服务来生成ID，业务方Application都需要进行一次远程调用，比较耗时。有没有一种本地生成ID的方法，即高性能，又时延低呢？\n\nuuid是一种常见的方案：`string ID = GenUUID();`\n#### 优点：\n1. 本地生成ID，不需要进行远程调用，时延低\n1. 扩展性好，基本可以认为没有性能上限\n\n```php\n// com_create_guid()\nfunction guid(){\n    if (function_exists('com_create_guid')){\n        return com_create_guid();\n    }else{\n        mt_srand((double)microtime()*10000);//optional for php 4.2.0 and up.\n        $charid = strtoupper(md5(uniqid(rand(), true)));\n        $hyphen = chr(45);// \"-\"\n        $uuid = chr(123)// \"{\"\n                .substr($charid, 0, 8).$hyphen\n                .substr($charid, 8, 4).$hyphen\n                .substr($charid,12, 4).$hyphen\n                .substr($charid,16, 4).$hyphen\n                .substr($charid,20,12)\n                .chr(125);// \"}\"\n        return $uuid;\n    }\n}\necho guid();\n```\n#### 缺点：\n1. 无法保证趋势递增\n1. uuid过长，往往用字符串表示，作为主键建立索引查询效率低，常见优化方案为“转化为两个uint64整数存储”或者“折半存储”（折半后不能保证唯一性）\n \n### 取当前毫秒数\nuuid是一个本地算法，生成性能高，但无法保证趋势递增，且作为字符串ID检索效率低，有没有一种能保证递增的本地算法呢？\n取当前毫秒数是一种常见方案：`uint64 ID = GenTimeMS();`\n\n#### 优点：\n1. 本地生成ID，不需要进行远程调用，时延低\n1. 生成的ID趋势递增\n1. 生成的ID是整数，建立索引后查询效率高\n\n#### 缺点：\n（1）如果并发量超过1000，会生成重复的ID, 当然，使用微秒可以降低冲突概率，但每秒最多只能生成1000000个ID，再多的话就一定会冲突了，所以使用微秒并不从根本上解决问题。\n \n### 类snowflake算法 [snowflake](https://github.com/twitter/snowflake)\nsnowflake是twitter开源的分布式ID生成算法.\n\n0---0000000000 0000000000 0000000000 0000000000 0 --- 00000 ---00000 ---000000000000\n\n![pic](/images/technology/snowflake-64bit.jpg)\n\n\"41bit的时间戳可以支持该算法使用年限：(时间差的毫秒数)\", (1L << 41) / (3600L * 24 * 365 * 1000.0)，其中1L为长整形，位移41位为 ： 2199023255552 /31536000000=69.73057000101471\n\"10bit的工作机器id数量：{0}\", (1L << 10) - 1  为： 1023\n\"12bit序列id数量：{0}\", (1L << 12) - 1 为：4095\n\n一个long型的ID，使用其中`41bit`作为毫秒数，`10bit`作为机器编号，`12bit`作为毫秒内序列号。这个算法**单机每秒**内理论上最多可以生成`1000 * (2^12-1) 或 1000 * ((1 << 12)- 1)`，也就是4096000个ID。\n\n\n借鉴snowflake的思想，结合各公司的业务逻辑和并发量，可以实现自己的分布式ID生成算法。\n\n举例，假设某公司ID生成器服务的需求如下：\n1. 单机高峰并发量小于1W，预计未来5年单机高峰并发量小于10W\n1. 有2个机房，预计未来5年机房数量小于4个\n1. 每个机房机器数小于100台\n1. 目前有5个业务线有ID生成需求，预计未来业务线数量小于10个\n\n分析过程如下：\n1. 高位取从2016年1月1日到现在的毫秒数（假设系统ID生成器服务在这个时间之后上线），假设系统至少运行10年，那至少需要 `10年*365天*24小时*3600秒*1000毫秒=320*10^9`，差不多预留39bit给毫秒\n1. 每秒的单机高峰并发量小于10W，即平均每毫秒的单机高峰并发量小于100，差不多预留7bit给每毫秒内序列号\n1. 5年内机房数小于4个，预留2bit给机房标识\n1. 每个机房小于100台机器，预留7bit给每个机房内的服务器标识\n1. 业务线小于10个，预留4bit给业务线标识\n\n#### 优点：\n这样设计的64bit标识，可以保证：\n1. 每个业务线、每个机房、每个机器生成的ID都是不同的\n1. 同一个机器，每个毫秒内生成的ID都是不同的\n1. 同一个机器，同一个毫秒内，以序列号区区分保证生成的ID是不同的\n1. 将毫秒数放在最高位，保证生成的ID是趋势递增的\n\n#### 缺点：\n（1）由于“没有一个全局时钟”，每台服务器分配的ID是绝对递增的，但从全局看，生成的ID只是趋势递增的（有些服务器的时间早，有些服务器的时间晚）\n最后一个容易忽略的问题：\n生成的ID，例如`message-id/ order-id/ tiezi-id`，在数据量大时往往需要分库分表，这些ID经常作为取模分库分表的依据，为了分库分表后数据均匀，ID生成往往有“取模随机性”的需求，所以我们通常把**每秒内的序列号放在ID的最末位**，保证生成的ID是随机的。\n又如果，我们在跨毫秒时，序列号总是归0，**会使得序列号为0的ID比较多，导致生成的ID取模后不均匀**。解决方法是，**序列号不是每次都归0，而是归一个0到9的随机数**。\n\n```java\nclass Snowflake\n{\n\n    //工作机器id的bit段拆分为前5个bit标记workerid，后5个bit标记datacenterid\n    const int WorkerIdBits = 5;\n    const int DatacenterIdBits = 5;\n    //序列号bit数\n    const int SequenceBits = 12;\n    //最大编号限制\n    const long MaxWorkerId = -1L ^ (-1L << WorkerIdBits);\n    const long MaxDatacenterId = -1L ^ (-1L << DatacenterIdBits);\n    private const long SequenceMask = -1L ^ (-1L << SequenceBits);\n    //位左运算移动量\n    public const int WorkerIdShift = SequenceBits;\n    public const int DatacenterIdShift = SequenceBits + WorkerIdBits;\n    public const int TimestampLeftShift = SequenceBits + WorkerIdBits + DatacenterIdBits;\n\n    //序列号记录\n    private long _sequence = 0L;\n    //时间戳记录\n    private long _lastTimestamp = -1L;\n\n\n    public long WorkerId { get; protected set; }\n    public long DatacenterId { get; protected set; }\n\n    public Snowflake(long workerId, long datacenterId, long sequence = 0L) \n    {\n        WorkerId = workerId;\n        DatacenterId = datacenterId;\n        _sequence = sequence;\n    \n        // sanity check for workerId\n        if (workerId > MaxWorkerId || workerId < 0) \n        {\n            throw new ArgumentException( String.Format(\"worker Id can't be greater than {0} or less than 0\", MaxWorkerId) );\n        }\n\n        if (datacenterId > MaxDatacenterId || datacenterId < 0)\n        {\n            throw new ArgumentException( String.Format(\"datacenter Id can't be greater than {0} or less than 0\", MaxDatacenterId));\n        }\n\n    }\n    /// <summary>\n    /// 格林时间戳\n    /// </summary>\n    /// <returns></returns>\n    public long TimeGen()\n    {\n        DateTime Jan1st1970 = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);//\n        return (long)(DateTime.UtcNow - Jan1st1970).TotalMilliseconds;\n    }\n\n    readonly object _lock = new Object();\n\n    public virtual long NextId()\n    {\n        lock (_lock)\n        {\n            var timestamp = TimeGen();\n\n            if (timestamp < _lastTimestamp)\n            {\n                throw new InvalidSystemClock(String.Format(\n                    \"发现最新时间戳少{0}毫秒的异常\", _lastTimestamp - timestamp));\n            }\n\n            if (_lastTimestamp == timestamp)\n            {\n                _sequence = (_sequence + 1) & SequenceMask;\n                if (_sequence == 0)\n                {\n                    //序列号超过限制，重新取时间戳\n                    timestamp = TilNextMillis(_lastTimestamp);\n                }\n            }\n            else\n            {\n                _sequence = 0;\n            }\n\n            _lastTimestamp = timestamp;\n            //snowflake算法\n            var id = (timestamp << TimestampLeftShift) |\n                     (DatacenterId << DatacenterIdShift) |\n                     (WorkerId << WorkerIdShift) | _sequence;\n\n            return id;\n        }\n    }\n    /// <summary>\n    /// 重新取时间戳\n    /// </summary>\n    protected virtual long TilNextMillis(long lastTimestamp)\n    {\n        var timestamp = TimeGen();\n        while (timestamp <= lastTimestamp)\n        {\n            //新的时间戳要大于旧的时间戳，才算作有效时间戳\n            timestamp = TimeGen();\n        }\n        return timestamp;\n    }\n}\n```","source":"_posts/2015/gen-id-way.md","raw":"---\ntitle: 如何高效生成趋势有序的全局唯一ID？\ndate: 2015-12-04 13:57:12\nupdated: 2015-12-04 13:57:12\ntags:\ncategories:\n---\n\n# 生成一个记录标识的需求，例如：\n1. 消息标识：message-id\n2. 订单标识：order-id\n3. 帖子标识：tiezi-id\n\n这个记录标识往往就是数据库中的唯一主键，数据库上会建立聚集索引（`cluster index`），即在物理存储上以这个字段排序。\n\n<!-- more -->\n这个记录标识上的查询，往往又有分页或者排序的业务需求，例如：\n- 拉取最新的一页消息：selectmessage-id/ order by time/ limit 100\n- 拉取最新的一页订单：selectorder-id/ order by time/ limit 100\n- 拉取最新的一页帖子：selecttiezi-id/ order by time/ limit 100\n所以往往要有一个time字段，并且在time字段上建立普通索引（non-cluster index）。\n \n我们都知道普通索引存储的是实际记录的指针，其访问效率会比聚集索引慢，如果记录标识在生成时能够基本按照时间有序，则可以省去这个time字段的索引查询：\n`select message-id/ (order by message-id)/limit 100`\n再次强调，能这么做的前提是，message-id的生成基本是趋势时间递增的。\n \n两大核心需求：\n1. 全局唯一\n2. 趋势有序\n \n\n## 常见方法、不足、优化\n### 1.用数据库的 auto_increment\n#### 优点：\n1. 简单，使用数据库已有的功能\n1. 能够保证唯一性\n1. 能够保证递增性\n1. 步长固定\n\n#### 缺点：\n\n1. 可用性难以保证：数据库常见架构是一主多从+读写分离，生成自增ID是写请求，主库挂了就玩不转了\n1. 扩展性差，性能有上限：因为写入是单点，数据库主库的写性能决定ID的生成性能上限，并且难以扩展\n\n#### **改进方法**：\n\n1. 增加主库，避免写入单点\n2. 数据水平切分，保证各主库生成的ID不重复\n\n![pic](/images/technology/gen-id.png)\n\n如上图所述，由1个写库变成3个写库，每个写库设置不同的auto_increment初始值，以及相同的增长步长，以保证每个数据库生成的ID是不同的（上图中库0生成0,3,6,9…，库1生成1,4,7,10，库2生成2,5,8,11…）, 改进后的架构保证了可用性。\n\n**缺点是**：\n1. 丧失了ID生成的“绝对递增性”：先访问库0生成0,3，再访问库1生成1，可能导致在非常短的时间内，ID生成不是绝对递增的（这个问题不大，我们的目标是趋势递增，不是绝对递增）\n2. 数据库的写压力依然很大，每次生成ID都要访问数据库\n为了解决上述两个问题，引出了第二个常见的方案\n \n### 单点批量ID生成服务\n\n分布式系统之所以难，很重要的原因之一是“没有一个全局时钟，难以保证绝对的时序”，要想保证绝对的时序，还是只能使用单点服务，用本地时钟保证“绝对时序”。数据库写压力大，是因为每次生成ID都访问了数据库，可以使用批量的方式降低数据库写压力。\n\n![pic](/images/technology/gen-id2.png)\n\n如上图所述，数据库使用双master保证可用性，数据库中只存储当前ID的最大值，例如0。ID生成服务假设每次批量拉取6个ID，服务访问数据库，将当前ID的最大值修改为5，这样应用访问ID生成服务索要ID，ID生成服务不需要每次访问数据库，就能依次派发0,1,2,3,4,5这些ID了，当ID发完后，再将ID的最大值修改为11，就能再次派发6,7,8,9,10,11这些ID了，于是数据库的压力就降低到原来的1/6了。\n#### 优点：\n1. 保证了ID生成的绝对递增有序\n1. 大大的降低了数据库的压力，ID生成可以做到每秒生成几万几十万个\n\n#### 缺点：\n1. 服务仍然是单点\n1. 如果服务挂了，服务重启起来之后，继续生成ID可能会不连续，中间出现空洞（服务内存是保存着0,1,2,3,4,5，数据库中max-id是5，分配到3时，服务重启了，下次会从6开始分配，4和5就成了空洞，不过这个问题也不大）\n1. 虽然每秒可以生成几万几十万个ID，但毕竟还是有性能上限，无法进行水平扩展\n\n#### **改进方法**：\n** 单点服务的常用高可用优化方案是“备用服务”，也叫“影子服务”，** 所以我们能用以下方法优化上述缺点（1）：\n\n![pic](/images/technology/gen-id3.png)\n如上图，对外提供的服务是主服务，有一个影子服务时刻处于备用状态，当主服务挂了的时候影子服务顶上。这个切换的过程对调用方是透明的，可以自动完成，常用的技术是vip+keepalived，具体就不在这里展开。\n \n### uuid\n上述方案来生成ID，虽然性能大增，但由于是单点系统，总还是存在性能上限的。同时，上述两种方案，不管是数据库还是服务来生成ID，业务方Application都需要进行一次远程调用，比较耗时。有没有一种本地生成ID的方法，即高性能，又时延低呢？\n\nuuid是一种常见的方案：`string ID = GenUUID();`\n#### 优点：\n1. 本地生成ID，不需要进行远程调用，时延低\n1. 扩展性好，基本可以认为没有性能上限\n\n```php\n// com_create_guid()\nfunction guid(){\n    if (function_exists('com_create_guid')){\n        return com_create_guid();\n    }else{\n        mt_srand((double)microtime()*10000);//optional for php 4.2.0 and up.\n        $charid = strtoupper(md5(uniqid(rand(), true)));\n        $hyphen = chr(45);// \"-\"\n        $uuid = chr(123)// \"{\"\n                .substr($charid, 0, 8).$hyphen\n                .substr($charid, 8, 4).$hyphen\n                .substr($charid,12, 4).$hyphen\n                .substr($charid,16, 4).$hyphen\n                .substr($charid,20,12)\n                .chr(125);// \"}\"\n        return $uuid;\n    }\n}\necho guid();\n```\n#### 缺点：\n1. 无法保证趋势递增\n1. uuid过长，往往用字符串表示，作为主键建立索引查询效率低，常见优化方案为“转化为两个uint64整数存储”或者“折半存储”（折半后不能保证唯一性）\n \n### 取当前毫秒数\nuuid是一个本地算法，生成性能高，但无法保证趋势递增，且作为字符串ID检索效率低，有没有一种能保证递增的本地算法呢？\n取当前毫秒数是一种常见方案：`uint64 ID = GenTimeMS();`\n\n#### 优点：\n1. 本地生成ID，不需要进行远程调用，时延低\n1. 生成的ID趋势递增\n1. 生成的ID是整数，建立索引后查询效率高\n\n#### 缺点：\n（1）如果并发量超过1000，会生成重复的ID, 当然，使用微秒可以降低冲突概率，但每秒最多只能生成1000000个ID，再多的话就一定会冲突了，所以使用微秒并不从根本上解决问题。\n \n### 类snowflake算法 [snowflake](https://github.com/twitter/snowflake)\nsnowflake是twitter开源的分布式ID生成算法.\n\n0---0000000000 0000000000 0000000000 0000000000 0 --- 00000 ---00000 ---000000000000\n\n![pic](/images/technology/snowflake-64bit.jpg)\n\n\"41bit的时间戳可以支持该算法使用年限：(时间差的毫秒数)\", (1L << 41) / (3600L * 24 * 365 * 1000.0)，其中1L为长整形，位移41位为 ： 2199023255552 /31536000000=69.73057000101471\n\"10bit的工作机器id数量：{0}\", (1L << 10) - 1  为： 1023\n\"12bit序列id数量：{0}\", (1L << 12) - 1 为：4095\n\n一个long型的ID，使用其中`41bit`作为毫秒数，`10bit`作为机器编号，`12bit`作为毫秒内序列号。这个算法**单机每秒**内理论上最多可以生成`1000 * (2^12-1) 或 1000 * ((1 << 12)- 1)`，也就是4096000个ID。\n\n\n借鉴snowflake的思想，结合各公司的业务逻辑和并发量，可以实现自己的分布式ID生成算法。\n\n举例，假设某公司ID生成器服务的需求如下：\n1. 单机高峰并发量小于1W，预计未来5年单机高峰并发量小于10W\n1. 有2个机房，预计未来5年机房数量小于4个\n1. 每个机房机器数小于100台\n1. 目前有5个业务线有ID生成需求，预计未来业务线数量小于10个\n\n分析过程如下：\n1. 高位取从2016年1月1日到现在的毫秒数（假设系统ID生成器服务在这个时间之后上线），假设系统至少运行10年，那至少需要 `10年*365天*24小时*3600秒*1000毫秒=320*10^9`，差不多预留39bit给毫秒\n1. 每秒的单机高峰并发量小于10W，即平均每毫秒的单机高峰并发量小于100，差不多预留7bit给每毫秒内序列号\n1. 5年内机房数小于4个，预留2bit给机房标识\n1. 每个机房小于100台机器，预留7bit给每个机房内的服务器标识\n1. 业务线小于10个，预留4bit给业务线标识\n\n#### 优点：\n这样设计的64bit标识，可以保证：\n1. 每个业务线、每个机房、每个机器生成的ID都是不同的\n1. 同一个机器，每个毫秒内生成的ID都是不同的\n1. 同一个机器，同一个毫秒内，以序列号区区分保证生成的ID是不同的\n1. 将毫秒数放在最高位，保证生成的ID是趋势递增的\n\n#### 缺点：\n（1）由于“没有一个全局时钟”，每台服务器分配的ID是绝对递增的，但从全局看，生成的ID只是趋势递增的（有些服务器的时间早，有些服务器的时间晚）\n最后一个容易忽略的问题：\n生成的ID，例如`message-id/ order-id/ tiezi-id`，在数据量大时往往需要分库分表，这些ID经常作为取模分库分表的依据，为了分库分表后数据均匀，ID生成往往有“取模随机性”的需求，所以我们通常把**每秒内的序列号放在ID的最末位**，保证生成的ID是随机的。\n又如果，我们在跨毫秒时，序列号总是归0，**会使得序列号为0的ID比较多，导致生成的ID取模后不均匀**。解决方法是，**序列号不是每次都归0，而是归一个0到9的随机数**。\n\n```java\nclass Snowflake\n{\n\n    //工作机器id的bit段拆分为前5个bit标记workerid，后5个bit标记datacenterid\n    const int WorkerIdBits = 5;\n    const int DatacenterIdBits = 5;\n    //序列号bit数\n    const int SequenceBits = 12;\n    //最大编号限制\n    const long MaxWorkerId = -1L ^ (-1L << WorkerIdBits);\n    const long MaxDatacenterId = -1L ^ (-1L << DatacenterIdBits);\n    private const long SequenceMask = -1L ^ (-1L << SequenceBits);\n    //位左运算移动量\n    public const int WorkerIdShift = SequenceBits;\n    public const int DatacenterIdShift = SequenceBits + WorkerIdBits;\n    public const int TimestampLeftShift = SequenceBits + WorkerIdBits + DatacenterIdBits;\n\n    //序列号记录\n    private long _sequence = 0L;\n    //时间戳记录\n    private long _lastTimestamp = -1L;\n\n\n    public long WorkerId { get; protected set; }\n    public long DatacenterId { get; protected set; }\n\n    public Snowflake(long workerId, long datacenterId, long sequence = 0L) \n    {\n        WorkerId = workerId;\n        DatacenterId = datacenterId;\n        _sequence = sequence;\n    \n        // sanity check for workerId\n        if (workerId > MaxWorkerId || workerId < 0) \n        {\n            throw new ArgumentException( String.Format(\"worker Id can't be greater than {0} or less than 0\", MaxWorkerId) );\n        }\n\n        if (datacenterId > MaxDatacenterId || datacenterId < 0)\n        {\n            throw new ArgumentException( String.Format(\"datacenter Id can't be greater than {0} or less than 0\", MaxDatacenterId));\n        }\n\n    }\n    /// <summary>\n    /// 格林时间戳\n    /// </summary>\n    /// <returns></returns>\n    public long TimeGen()\n    {\n        DateTime Jan1st1970 = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);//\n        return (long)(DateTime.UtcNow - Jan1st1970).TotalMilliseconds;\n    }\n\n    readonly object _lock = new Object();\n\n    public virtual long NextId()\n    {\n        lock (_lock)\n        {\n            var timestamp = TimeGen();\n\n            if (timestamp < _lastTimestamp)\n            {\n                throw new InvalidSystemClock(String.Format(\n                    \"发现最新时间戳少{0}毫秒的异常\", _lastTimestamp - timestamp));\n            }\n\n            if (_lastTimestamp == timestamp)\n            {\n                _sequence = (_sequence + 1) & SequenceMask;\n                if (_sequence == 0)\n                {\n                    //序列号超过限制，重新取时间戳\n                    timestamp = TilNextMillis(_lastTimestamp);\n                }\n            }\n            else\n            {\n                _sequence = 0;\n            }\n\n            _lastTimestamp = timestamp;\n            //snowflake算法\n            var id = (timestamp << TimestampLeftShift) |\n                     (DatacenterId << DatacenterIdShift) |\n                     (WorkerId << WorkerIdShift) | _sequence;\n\n            return id;\n        }\n    }\n    /// <summary>\n    /// 重新取时间戳\n    /// </summary>\n    protected virtual long TilNextMillis(long lastTimestamp)\n    {\n        var timestamp = TimeGen();\n        while (timestamp <= lastTimestamp)\n        {\n            //新的时间戳要大于旧的时间戳，才算作有效时间戳\n            timestamp = TimeGen();\n        }\n        return timestamp;\n    }\n}\n```","slug":"gen-id-way","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp8s000pwsnn6z2v4617","content":"<h1 id=\"生成一个记录标识的需求，例如：\"><a href=\"#生成一个记录标识的需求，例如：\" class=\"headerlink\" title=\"生成一个记录标识的需求，例如：\"></a>生成一个记录标识的需求，例如：</h1><ol>\n<li>消息标识：message-id</li>\n<li>订单标识：order-id</li>\n<li>帖子标识：tiezi-id</li>\n</ol>\n<p>这个记录标识往往就是数据库中的唯一主键，数据库上会建立聚集索引（<code>cluster index</code>），即在物理存储上以这个字段排序。</p>\n<a id=\"more\"></a>\n<p>这个记录标识上的查询，往往又有分页或者排序的业务需求，例如：</p>\n<ul>\n<li>拉取最新的一页消息：selectmessage-id/ order by time/ limit 100</li>\n<li>拉取最新的一页订单：selectorder-id/ order by time/ limit 100</li>\n<li>拉取最新的一页帖子：selecttiezi-id/ order by time/ limit 100<br>所以往往要有一个time字段，并且在time字段上建立普通索引（non-cluster index）。</li>\n</ul>\n<p>我们都知道普通索引存储的是实际记录的指针，其访问效率会比聚集索引慢，如果记录标识在生成时能够基本按照时间有序，则可以省去这个time字段的索引查询：<br><code>select message-id/ (order by message-id)/limit 100</code><br>再次强调，能这么做的前提是，message-id的生成基本是趋势时间递增的。</p>\n<p>两大核心需求：</p>\n<ol>\n<li>全局唯一</li>\n<li>趋势有序</li>\n</ol>\n<h2 id=\"常见方法、不足、优化\"><a href=\"#常见方法、不足、优化\" class=\"headerlink\" title=\"常见方法、不足、优化\"></a>常见方法、不足、优化</h2><h3 id=\"1-用数据库的-auto-increment\"><a href=\"#1-用数据库的-auto-increment\" class=\"headerlink\" title=\"1.用数据库的 auto_increment\"></a>1.用数据库的 auto_increment</h3><h4 id=\"优点：\"><a href=\"#优点：\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><ol>\n<li>简单，使用数据库已有的功能</li>\n<li>能够保证唯一性</li>\n<li>能够保证递增性</li>\n<li>步长固定</li>\n</ol>\n<h4 id=\"缺点：\"><a href=\"#缺点：\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><ol>\n<li>可用性难以保证：数据库常见架构是一主多从+读写分离，生成自增ID是写请求，主库挂了就玩不转了</li>\n<li>扩展性差，性能有上限：因为写入是单点，数据库主库的写性能决定ID的生成性能上限，并且难以扩展</li>\n</ol>\n<h4 id=\"改进方法：\"><a href=\"#改进方法：\" class=\"headerlink\" title=\"改进方法：\"></a><strong>改进方法</strong>：</h4><ol>\n<li>增加主库，避免写入单点</li>\n<li>数据水平切分，保证各主库生成的ID不重复</li>\n</ol>\n<p><img src=\"/images/technology/gen-id.png\" alt=\"pic\"></p>\n<p>如上图所述，由1个写库变成3个写库，每个写库设置不同的auto_increment初始值，以及相同的增长步长，以保证每个数据库生成的ID是不同的（上图中库0生成0,3,6,9…，库1生成1,4,7,10，库2生成2,5,8,11…）, 改进后的架构保证了可用性。</p>\n<p><strong>缺点是</strong>：</p>\n<ol>\n<li>丧失了ID生成的“绝对递增性”：先访问库0生成0,3，再访问库1生成1，可能导致在非常短的时间内，ID生成不是绝对递增的（这个问题不大，我们的目标是趋势递增，不是绝对递增）</li>\n<li>数据库的写压力依然很大，每次生成ID都要访问数据库<br>为了解决上述两个问题，引出了第二个常见的方案</li>\n</ol>\n<h3 id=\"单点批量ID生成服务\"><a href=\"#单点批量ID生成服务\" class=\"headerlink\" title=\"单点批量ID生成服务\"></a>单点批量ID生成服务</h3><p>分布式系统之所以难，很重要的原因之一是“没有一个全局时钟，难以保证绝对的时序”，要想保证绝对的时序，还是只能使用单点服务，用本地时钟保证“绝对时序”。数据库写压力大，是因为每次生成ID都访问了数据库，可以使用批量的方式降低数据库写压力。</p>\n<p><img src=\"/images/technology/gen-id2.png\" alt=\"pic\"></p>\n<p>如上图所述，数据库使用双master保证可用性，数据库中只存储当前ID的最大值，例如0。ID生成服务假设每次批量拉取6个ID，服务访问数据库，将当前ID的最大值修改为5，这样应用访问ID生成服务索要ID，ID生成服务不需要每次访问数据库，就能依次派发0,1,2,3,4,5这些ID了，当ID发完后，再将ID的最大值修改为11，就能再次派发6,7,8,9,10,11这些ID了，于是数据库的压力就降低到原来的1/6了。</p>\n<h4 id=\"优点：-1\"><a href=\"#优点：-1\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><ol>\n<li>保证了ID生成的绝对递增有序</li>\n<li>大大的降低了数据库的压力，ID生成可以做到每秒生成几万几十万个</li>\n</ol>\n<h4 id=\"缺点：-1\"><a href=\"#缺点：-1\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><ol>\n<li>服务仍然是单点</li>\n<li>如果服务挂了，服务重启起来之后，继续生成ID可能会不连续，中间出现空洞（服务内存是保存着0,1,2,3,4,5，数据库中max-id是5，分配到3时，服务重启了，下次会从6开始分配，4和5就成了空洞，不过这个问题也不大）</li>\n<li>虽然每秒可以生成几万几十万个ID，但毕竟还是有性能上限，无法进行水平扩展</li>\n</ol>\n<h4 id=\"改进方法：-1\"><a href=\"#改进方法：-1\" class=\"headerlink\" title=\"改进方法：\"></a><strong>改进方法</strong>：</h4><p><strong> 单点服务的常用高可用优化方案是“备用服务”，也叫“影子服务”，</strong> 所以我们能用以下方法优化上述缺点（1）：</p>\n<p><img src=\"/images/technology/gen-id3.png\" alt=\"pic\"><br>如上图，对外提供的服务是主服务，有一个影子服务时刻处于备用状态，当主服务挂了的时候影子服务顶上。这个切换的过程对调用方是透明的，可以自动完成，常用的技术是vip+keepalived，具体就不在这里展开。</p>\n<h3 id=\"uuid\"><a href=\"#uuid\" class=\"headerlink\" title=\"uuid\"></a>uuid</h3><p>上述方案来生成ID，虽然性能大增，但由于是单点系统，总还是存在性能上限的。同时，上述两种方案，不管是数据库还是服务来生成ID，业务方Application都需要进行一次远程调用，比较耗时。有没有一种本地生成ID的方法，即高性能，又时延低呢？</p>\n<p>uuid是一种常见的方案：<code>string ID = GenUUID();</code></p>\n<h4 id=\"优点：-2\"><a href=\"#优点：-2\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><ol>\n<li>本地生成ID，不需要进行远程调用，时延低</li>\n<li>扩展性好，基本可以认为没有性能上限</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// com_create_guid()</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">guid</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (function_exists(<span class=\"string\">'com_create_guid'</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> com_create_guid();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        mt_srand((double)microtime()*<span class=\"number\">10000</span>);<span class=\"comment\">//optional for php 4.2.0 and up.</span></span><br><span class=\"line\">        $charid = strtoupper(md5(uniqid(rand(), <span class=\"keyword\">true</span>)));</span><br><span class=\"line\">        $hyphen = chr(<span class=\"number\">45</span>);<span class=\"comment\">// \"-\"</span></span><br><span class=\"line\">        $uuid = chr(<span class=\"number\">123</span>)<span class=\"comment\">// \"&#123;\"</span></span><br><span class=\"line\">                .substr($charid, <span class=\"number\">0</span>, <span class=\"number\">8</span>).$hyphen</span><br><span class=\"line\">                .substr($charid, <span class=\"number\">8</span>, <span class=\"number\">4</span>).$hyphen</span><br><span class=\"line\">                .substr($charid,<span class=\"number\">12</span>, <span class=\"number\">4</span>).$hyphen</span><br><span class=\"line\">                .substr($charid,<span class=\"number\">16</span>, <span class=\"number\">4</span>).$hyphen</span><br><span class=\"line\">                .substr($charid,<span class=\"number\">20</span>,<span class=\"number\">12</span>)</span><br><span class=\"line\">                .chr(<span class=\"number\">125</span>);<span class=\"comment\">// \"&#125;\"</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> $uuid;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> guid();</span><br></pre></td></tr></table></figure>\n<h4 id=\"缺点：-2\"><a href=\"#缺点：-2\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><ol>\n<li>无法保证趋势递增</li>\n<li>uuid过长，往往用字符串表示，作为主键建立索引查询效率低，常见优化方案为“转化为两个uint64整数存储”或者“折半存储”（折半后不能保证唯一性）</li>\n</ol>\n<h3 id=\"取当前毫秒数\"><a href=\"#取当前毫秒数\" class=\"headerlink\" title=\"取当前毫秒数\"></a>取当前毫秒数</h3><p>uuid是一个本地算法，生成性能高，但无法保证趋势递增，且作为字符串ID检索效率低，有没有一种能保证递增的本地算法呢？<br>取当前毫秒数是一种常见方案：<code>uint64 ID = GenTimeMS();</code></p>\n<h4 id=\"优点：-3\"><a href=\"#优点：-3\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><ol>\n<li>本地生成ID，不需要进行远程调用，时延低</li>\n<li>生成的ID趋势递增</li>\n<li>生成的ID是整数，建立索引后查询效率高</li>\n</ol>\n<h4 id=\"缺点：-3\"><a href=\"#缺点：-3\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><p>（1）如果并发量超过1000，会生成重复的ID, 当然，使用微秒可以降低冲突概率，但每秒最多只能生成1000000个ID，再多的话就一定会冲突了，所以使用微秒并不从根本上解决问题。</p>\n<h3 id=\"类snowflake算法-snowflake\"><a href=\"#类snowflake算法-snowflake\" class=\"headerlink\" title=\"类snowflake算法 snowflake\"></a>类snowflake算法 <a href=\"https://github.com/twitter/snowflake\" target=\"_blank\" rel=\"external\">snowflake</a></h3><p>snowflake是twitter开源的分布式ID生成算法.</p>\n<p>0—0000000000 0000000000 0000000000 0000000000 0 — 00000 —00000 —000000000000</p>\n<p><img src=\"/images/technology/snowflake-64bit.jpg\" alt=\"pic\"></p>\n<p>“41bit的时间戳可以支持该算法使用年限：(时间差的毫秒数)”, (1L &lt;&lt; 41) / (3600L <em> 24 </em> 365 * 1000.0)，其中1L为长整形，位移41位为 ： 2199023255552 /31536000000=69.73057000101471<br>“10bit的工作机器id数量：{0}”, (1L &lt;&lt; 10) - 1  为： 1023<br>“12bit序列id数量：{0}”, (1L &lt;&lt; 12) - 1 为：4095</p>\n<p>一个long型的ID，使用其中<code>41bit</code>作为毫秒数，<code>10bit</code>作为机器编号，<code>12bit</code>作为毫秒内序列号。这个算法<strong>单机每秒</strong>内理论上最多可以生成<code>1000 * (2^12-1) 或 1000 * ((1 &lt;&lt; 12)- 1)</code>，也就是4096000个ID。</p>\n<p>借鉴snowflake的思想，结合各公司的业务逻辑和并发量，可以实现自己的分布式ID生成算法。</p>\n<p>举例，假设某公司ID生成器服务的需求如下：</p>\n<ol>\n<li>单机高峰并发量小于1W，预计未来5年单机高峰并发量小于10W</li>\n<li>有2个机房，预计未来5年机房数量小于4个</li>\n<li>每个机房机器数小于100台</li>\n<li>目前有5个业务线有ID生成需求，预计未来业务线数量小于10个</li>\n</ol>\n<p>分析过程如下：</p>\n<ol>\n<li>高位取从2016年1月1日到现在的毫秒数（假设系统ID生成器服务在这个时间之后上线），假设系统至少运行10年，那至少需要 <code>10年*365天*24小时*3600秒*1000毫秒=320*10^9</code>，差不多预留39bit给毫秒</li>\n<li>每秒的单机高峰并发量小于10W，即平均每毫秒的单机高峰并发量小于100，差不多预留7bit给每毫秒内序列号</li>\n<li>5年内机房数小于4个，预留2bit给机房标识</li>\n<li>每个机房小于100台机器，预留7bit给每个机房内的服务器标识</li>\n<li>业务线小于10个，预留4bit给业务线标识</li>\n</ol>\n<h4 id=\"优点：-4\"><a href=\"#优点：-4\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><p>这样设计的64bit标识，可以保证：</p>\n<ol>\n<li>每个业务线、每个机房、每个机器生成的ID都是不同的</li>\n<li>同一个机器，每个毫秒内生成的ID都是不同的</li>\n<li>同一个机器，同一个毫秒内，以序列号区区分保证生成的ID是不同的</li>\n<li>将毫秒数放在最高位，保证生成的ID是趋势递增的</li>\n</ol>\n<h4 id=\"缺点：-4\"><a href=\"#缺点：-4\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><p>（1）由于“没有一个全局时钟”，每台服务器分配的ID是绝对递增的，但从全局看，生成的ID只是趋势递增的（有些服务器的时间早，有些服务器的时间晚）<br>最后一个容易忽略的问题：<br>生成的ID，例如<code>message-id/ order-id/ tiezi-id</code>，在数据量大时往往需要分库分表，这些ID经常作为取模分库分表的依据，为了分库分表后数据均匀，ID生成往往有“取模随机性”的需求，所以我们通常把<strong>每秒内的序列号放在ID的最末位</strong>，保证生成的ID是随机的。<br>又如果，我们在跨毫秒时，序列号总是归0，<strong>会使得序列号为0的ID比较多，导致生成的ID取模后不均匀</strong>。解决方法是，<strong>序列号不是每次都归0，而是归一个0到9的随机数</strong>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Snowflake</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//工作机器id的bit段拆分为前5个bit标记workerid，后5个bit标记datacenterid</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> WorkerIdBits = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> DatacenterIdBits = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"comment\">//序列号bit数</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> SequenceBits = <span class=\"number\">12</span>;</span><br><span class=\"line\">    <span class=\"comment\">//最大编号限制</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">long</span> MaxWorkerId = -<span class=\"number\">1L</span> ^ (-<span class=\"number\">1L</span> &lt;&lt; WorkerIdBits);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">long</span> MaxDatacenterId = -<span class=\"number\">1L</span> ^ (-<span class=\"number\">1L</span> &lt;&lt; DatacenterIdBits);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"keyword\">long</span> SequenceMask = -<span class=\"number\">1L</span> ^ (-<span class=\"number\">1L</span> &lt;&lt; SequenceBits);</span><br><span class=\"line\">    <span class=\"comment\">//位左运算移动量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> WorkerIdShift = SequenceBits;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> DatacenterIdShift = SequenceBits + WorkerIdBits;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> TimestampLeftShift = SequenceBits + WorkerIdBits + DatacenterIdBits;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//序列号记录</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">long</span> _sequence = <span class=\"number\">0L</span>;</span><br><span class=\"line\">    <span class=\"comment\">//时间戳记录</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">long</span> _lastTimestamp = -<span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">long</span> WorkerId &#123; get; <span class=\"keyword\">protected</span> set; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">long</span> DatacenterId &#123; get; <span class=\"keyword\">protected</span> set; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Snowflake</span><span class=\"params\">(<span class=\"keyword\">long</span> workerId, <span class=\"keyword\">long</span> datacenterId, <span class=\"keyword\">long</span> sequence = <span class=\"number\">0</span>L)</span> </span><br><span class=\"line\">    </span>&#123;</span><br><span class=\"line\">        WorkerId = workerId;</span><br><span class=\"line\">        DatacenterId = datacenterId;</span><br><span class=\"line\">        _sequence = sequence;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\">// sanity check for workerId</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (workerId &gt; MaxWorkerId || workerId &lt; <span class=\"number\">0</span>) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ArgumentException( String.Format(<span class=\"string\">\"worker Id can't be greater than &#123;0&#125; or less than 0\"</span>, MaxWorkerId) );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (datacenterId &gt; MaxDatacenterId || datacenterId &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ArgumentException( String.Format(<span class=\"string\">\"datacenter Id can't be greater than &#123;0&#125; or less than 0\"</span>, MaxDatacenterId));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 格林时间戳</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">TimeGen</span><span class=\"params\">()</span></span><br><span class=\"line\">    </span>&#123;</span><br><span class=\"line\">        DateTime Jan1st1970 = <span class=\"keyword\">new</span> DateTime(<span class=\"number\">1970</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, DateTimeKind.Utc);<span class=\"comment\">//</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">long</span>)(DateTime.UtcNow - Jan1st1970).TotalMilliseconds;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    readonly object _lock = <span class=\"keyword\">new</span> Object();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> virtual <span class=\"keyword\">long</span> <span class=\"title\">NextId</span><span class=\"params\">()</span></span><br><span class=\"line\">    </span>&#123;</span><br><span class=\"line\">        lock (_lock)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            var timestamp = TimeGen();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (timestamp &lt; _lastTimestamp)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> InvalidSystemClock(String.Format(</span><br><span class=\"line\">                    <span class=\"string\">\"发现最新时间戳少&#123;0&#125;毫秒的异常\"</span>, _lastTimestamp - timestamp));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (_lastTimestamp == timestamp)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                _sequence = (_sequence + <span class=\"number\">1</span>) &amp; SequenceMask;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (_sequence == <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//序列号超过限制，重新取时间戳</span></span><br><span class=\"line\">                    timestamp = TilNextMillis(_lastTimestamp);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                _sequence = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            _lastTimestamp = timestamp;</span><br><span class=\"line\">            <span class=\"comment\">//snowflake算法</span></span><br><span class=\"line\">            var id = (timestamp &lt;&lt; TimestampLeftShift) |</span><br><span class=\"line\">                     (DatacenterId &lt;&lt; DatacenterIdShift) |</span><br><span class=\"line\">                     (WorkerId &lt;&lt; WorkerIdShift) | _sequence;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 重新取时间戳</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> virtual <span class=\"keyword\">long</span> <span class=\"title\">TilNextMillis</span><span class=\"params\">(<span class=\"keyword\">long</span> lastTimestamp)</span></span><br><span class=\"line\">    </span>&#123;</span><br><span class=\"line\">        var timestamp = TimeGen();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (timestamp &lt;= lastTimestamp)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//新的时间戳要大于旧的时间戳，才算作有效时间戳</span></span><br><span class=\"line\">            timestamp = TimeGen();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> timestamp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<h1 id=\"生成一个记录标识的需求，例如：\"><a href=\"#生成一个记录标识的需求，例如：\" class=\"headerlink\" title=\"生成一个记录标识的需求，例如：\"></a>生成一个记录标识的需求，例如：</h1><ol>\n<li>消息标识：message-id</li>\n<li>订单标识：order-id</li>\n<li>帖子标识：tiezi-id</li>\n</ol>\n<p>这个记录标识往往就是数据库中的唯一主键，数据库上会建立聚集索引（<code>cluster index</code>），即在物理存储上以这个字段排序。</p>","more":"<p>这个记录标识上的查询，往往又有分页或者排序的业务需求，例如：</p>\n<ul>\n<li>拉取最新的一页消息：selectmessage-id/ order by time/ limit 100</li>\n<li>拉取最新的一页订单：selectorder-id/ order by time/ limit 100</li>\n<li>拉取最新的一页帖子：selecttiezi-id/ order by time/ limit 100<br>所以往往要有一个time字段，并且在time字段上建立普通索引（non-cluster index）。</li>\n</ul>\n<p>我们都知道普通索引存储的是实际记录的指针，其访问效率会比聚集索引慢，如果记录标识在生成时能够基本按照时间有序，则可以省去这个time字段的索引查询：<br><code>select message-id/ (order by message-id)/limit 100</code><br>再次强调，能这么做的前提是，message-id的生成基本是趋势时间递增的。</p>\n<p>两大核心需求：</p>\n<ol>\n<li>全局唯一</li>\n<li>趋势有序</li>\n</ol>\n<h2 id=\"常见方法、不足、优化\"><a href=\"#常见方法、不足、优化\" class=\"headerlink\" title=\"常见方法、不足、优化\"></a>常见方法、不足、优化</h2><h3 id=\"1-用数据库的-auto-increment\"><a href=\"#1-用数据库的-auto-increment\" class=\"headerlink\" title=\"1.用数据库的 auto_increment\"></a>1.用数据库的 auto_increment</h3><h4 id=\"优点：\"><a href=\"#优点：\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><ol>\n<li>简单，使用数据库已有的功能</li>\n<li>能够保证唯一性</li>\n<li>能够保证递增性</li>\n<li>步长固定</li>\n</ol>\n<h4 id=\"缺点：\"><a href=\"#缺点：\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><ol>\n<li>可用性难以保证：数据库常见架构是一主多从+读写分离，生成自增ID是写请求，主库挂了就玩不转了</li>\n<li>扩展性差，性能有上限：因为写入是单点，数据库主库的写性能决定ID的生成性能上限，并且难以扩展</li>\n</ol>\n<h4 id=\"改进方法：\"><a href=\"#改进方法：\" class=\"headerlink\" title=\"改进方法：\"></a><strong>改进方法</strong>：</h4><ol>\n<li>增加主库，避免写入单点</li>\n<li>数据水平切分，保证各主库生成的ID不重复</li>\n</ol>\n<p><img src=\"/images/technology/gen-id.png\" alt=\"pic\"></p>\n<p>如上图所述，由1个写库变成3个写库，每个写库设置不同的auto_increment初始值，以及相同的增长步长，以保证每个数据库生成的ID是不同的（上图中库0生成0,3,6,9…，库1生成1,4,7,10，库2生成2,5,8,11…）, 改进后的架构保证了可用性。</p>\n<p><strong>缺点是</strong>：</p>\n<ol>\n<li>丧失了ID生成的“绝对递增性”：先访问库0生成0,3，再访问库1生成1，可能导致在非常短的时间内，ID生成不是绝对递增的（这个问题不大，我们的目标是趋势递增，不是绝对递增）</li>\n<li>数据库的写压力依然很大，每次生成ID都要访问数据库<br>为了解决上述两个问题，引出了第二个常见的方案</li>\n</ol>\n<h3 id=\"单点批量ID生成服务\"><a href=\"#单点批量ID生成服务\" class=\"headerlink\" title=\"单点批量ID生成服务\"></a>单点批量ID生成服务</h3><p>分布式系统之所以难，很重要的原因之一是“没有一个全局时钟，难以保证绝对的时序”，要想保证绝对的时序，还是只能使用单点服务，用本地时钟保证“绝对时序”。数据库写压力大，是因为每次生成ID都访问了数据库，可以使用批量的方式降低数据库写压力。</p>\n<p><img src=\"/images/technology/gen-id2.png\" alt=\"pic\"></p>\n<p>如上图所述，数据库使用双master保证可用性，数据库中只存储当前ID的最大值，例如0。ID生成服务假设每次批量拉取6个ID，服务访问数据库，将当前ID的最大值修改为5，这样应用访问ID生成服务索要ID，ID生成服务不需要每次访问数据库，就能依次派发0,1,2,3,4,5这些ID了，当ID发完后，再将ID的最大值修改为11，就能再次派发6,7,8,9,10,11这些ID了，于是数据库的压力就降低到原来的1/6了。</p>\n<h4 id=\"优点：-1\"><a href=\"#优点：-1\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><ol>\n<li>保证了ID生成的绝对递增有序</li>\n<li>大大的降低了数据库的压力，ID生成可以做到每秒生成几万几十万个</li>\n</ol>\n<h4 id=\"缺点：-1\"><a href=\"#缺点：-1\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><ol>\n<li>服务仍然是单点</li>\n<li>如果服务挂了，服务重启起来之后，继续生成ID可能会不连续，中间出现空洞（服务内存是保存着0,1,2,3,4,5，数据库中max-id是5，分配到3时，服务重启了，下次会从6开始分配，4和5就成了空洞，不过这个问题也不大）</li>\n<li>虽然每秒可以生成几万几十万个ID，但毕竟还是有性能上限，无法进行水平扩展</li>\n</ol>\n<h4 id=\"改进方法：-1\"><a href=\"#改进方法：-1\" class=\"headerlink\" title=\"改进方法：\"></a><strong>改进方法</strong>：</h4><p><strong> 单点服务的常用高可用优化方案是“备用服务”，也叫“影子服务”，</strong> 所以我们能用以下方法优化上述缺点（1）：</p>\n<p><img src=\"/images/technology/gen-id3.png\" alt=\"pic\"><br>如上图，对外提供的服务是主服务，有一个影子服务时刻处于备用状态，当主服务挂了的时候影子服务顶上。这个切换的过程对调用方是透明的，可以自动完成，常用的技术是vip+keepalived，具体就不在这里展开。</p>\n<h3 id=\"uuid\"><a href=\"#uuid\" class=\"headerlink\" title=\"uuid\"></a>uuid</h3><p>上述方案来生成ID，虽然性能大增，但由于是单点系统，总还是存在性能上限的。同时，上述两种方案，不管是数据库还是服务来生成ID，业务方Application都需要进行一次远程调用，比较耗时。有没有一种本地生成ID的方法，即高性能，又时延低呢？</p>\n<p>uuid是一种常见的方案：<code>string ID = GenUUID();</code></p>\n<h4 id=\"优点：-2\"><a href=\"#优点：-2\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><ol>\n<li>本地生成ID，不需要进行远程调用，时延低</li>\n<li>扩展性好，基本可以认为没有性能上限</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// com_create_guid()</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">guid</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (function_exists(<span class=\"string\">'com_create_guid'</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> com_create_guid();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        mt_srand((double)microtime()*<span class=\"number\">10000</span>);<span class=\"comment\">//optional for php 4.2.0 and up.</span></span><br><span class=\"line\">        $charid = strtoupper(md5(uniqid(rand(), <span class=\"keyword\">true</span>)));</span><br><span class=\"line\">        $hyphen = chr(<span class=\"number\">45</span>);<span class=\"comment\">// \"-\"</span></span><br><span class=\"line\">        $uuid = chr(<span class=\"number\">123</span>)<span class=\"comment\">// \"&#123;\"</span></span><br><span class=\"line\">                .substr($charid, <span class=\"number\">0</span>, <span class=\"number\">8</span>).$hyphen</span><br><span class=\"line\">                .substr($charid, <span class=\"number\">8</span>, <span class=\"number\">4</span>).$hyphen</span><br><span class=\"line\">                .substr($charid,<span class=\"number\">12</span>, <span class=\"number\">4</span>).$hyphen</span><br><span class=\"line\">                .substr($charid,<span class=\"number\">16</span>, <span class=\"number\">4</span>).$hyphen</span><br><span class=\"line\">                .substr($charid,<span class=\"number\">20</span>,<span class=\"number\">12</span>)</span><br><span class=\"line\">                .chr(<span class=\"number\">125</span>);<span class=\"comment\">// \"&#125;\"</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> $uuid;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> guid();</span><br></pre></td></tr></table></figure>\n<h4 id=\"缺点：-2\"><a href=\"#缺点：-2\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><ol>\n<li>无法保证趋势递增</li>\n<li>uuid过长，往往用字符串表示，作为主键建立索引查询效率低，常见优化方案为“转化为两个uint64整数存储”或者“折半存储”（折半后不能保证唯一性）</li>\n</ol>\n<h3 id=\"取当前毫秒数\"><a href=\"#取当前毫秒数\" class=\"headerlink\" title=\"取当前毫秒数\"></a>取当前毫秒数</h3><p>uuid是一个本地算法，生成性能高，但无法保证趋势递增，且作为字符串ID检索效率低，有没有一种能保证递增的本地算法呢？<br>取当前毫秒数是一种常见方案：<code>uint64 ID = GenTimeMS();</code></p>\n<h4 id=\"优点：-3\"><a href=\"#优点：-3\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><ol>\n<li>本地生成ID，不需要进行远程调用，时延低</li>\n<li>生成的ID趋势递增</li>\n<li>生成的ID是整数，建立索引后查询效率高</li>\n</ol>\n<h4 id=\"缺点：-3\"><a href=\"#缺点：-3\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><p>（1）如果并发量超过1000，会生成重复的ID, 当然，使用微秒可以降低冲突概率，但每秒最多只能生成1000000个ID，再多的话就一定会冲突了，所以使用微秒并不从根本上解决问题。</p>\n<h3 id=\"类snowflake算法-snowflake\"><a href=\"#类snowflake算法-snowflake\" class=\"headerlink\" title=\"类snowflake算法 snowflake\"></a>类snowflake算法 <a href=\"https://github.com/twitter/snowflake\">snowflake</a></h3><p>snowflake是twitter开源的分布式ID生成算法.</p>\n<p>0—0000000000 0000000000 0000000000 0000000000 0 — 00000 —00000 —000000000000</p>\n<p><img src=\"/images/technology/snowflake-64bit.jpg\" alt=\"pic\"></p>\n<p>“41bit的时间戳可以支持该算法使用年限：(时间差的毫秒数)”, (1L &lt;&lt; 41) / (3600L <em> 24 </em> 365 * 1000.0)，其中1L为长整形，位移41位为 ： 2199023255552 /31536000000=69.73057000101471<br>“10bit的工作机器id数量：{0}”, (1L &lt;&lt; 10) - 1  为： 1023<br>“12bit序列id数量：{0}”, (1L &lt;&lt; 12) - 1 为：4095</p>\n<p>一个long型的ID，使用其中<code>41bit</code>作为毫秒数，<code>10bit</code>作为机器编号，<code>12bit</code>作为毫秒内序列号。这个算法<strong>单机每秒</strong>内理论上最多可以生成<code>1000 * (2^12-1) 或 1000 * ((1 &lt;&lt; 12)- 1)</code>，也就是4096000个ID。</p>\n<p>借鉴snowflake的思想，结合各公司的业务逻辑和并发量，可以实现自己的分布式ID生成算法。</p>\n<p>举例，假设某公司ID生成器服务的需求如下：</p>\n<ol>\n<li>单机高峰并发量小于1W，预计未来5年单机高峰并发量小于10W</li>\n<li>有2个机房，预计未来5年机房数量小于4个</li>\n<li>每个机房机器数小于100台</li>\n<li>目前有5个业务线有ID生成需求，预计未来业务线数量小于10个</li>\n</ol>\n<p>分析过程如下：</p>\n<ol>\n<li>高位取从2016年1月1日到现在的毫秒数（假设系统ID生成器服务在这个时间之后上线），假设系统至少运行10年，那至少需要 <code>10年*365天*24小时*3600秒*1000毫秒=320*10^9</code>，差不多预留39bit给毫秒</li>\n<li>每秒的单机高峰并发量小于10W，即平均每毫秒的单机高峰并发量小于100，差不多预留7bit给每毫秒内序列号</li>\n<li>5年内机房数小于4个，预留2bit给机房标识</li>\n<li>每个机房小于100台机器，预留7bit给每个机房内的服务器标识</li>\n<li>业务线小于10个，预留4bit给业务线标识</li>\n</ol>\n<h4 id=\"优点：-4\"><a href=\"#优点：-4\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><p>这样设计的64bit标识，可以保证：</p>\n<ol>\n<li>每个业务线、每个机房、每个机器生成的ID都是不同的</li>\n<li>同一个机器，每个毫秒内生成的ID都是不同的</li>\n<li>同一个机器，同一个毫秒内，以序列号区区分保证生成的ID是不同的</li>\n<li>将毫秒数放在最高位，保证生成的ID是趋势递增的</li>\n</ol>\n<h4 id=\"缺点：-4\"><a href=\"#缺点：-4\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><p>（1）由于“没有一个全局时钟”，每台服务器分配的ID是绝对递增的，但从全局看，生成的ID只是趋势递增的（有些服务器的时间早，有些服务器的时间晚）<br>最后一个容易忽略的问题：<br>生成的ID，例如<code>message-id/ order-id/ tiezi-id</code>，在数据量大时往往需要分库分表，这些ID经常作为取模分库分表的依据，为了分库分表后数据均匀，ID生成往往有“取模随机性”的需求，所以我们通常把<strong>每秒内的序列号放在ID的最末位</strong>，保证生成的ID是随机的。<br>又如果，我们在跨毫秒时，序列号总是归0，<strong>会使得序列号为0的ID比较多，导致生成的ID取模后不均匀</strong>。解决方法是，<strong>序列号不是每次都归0，而是归一个0到9的随机数</strong>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Snowflake</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//工作机器id的bit段拆分为前5个bit标记workerid，后5个bit标记datacenterid</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> WorkerIdBits = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> DatacenterIdBits = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"comment\">//序列号bit数</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> SequenceBits = <span class=\"number\">12</span>;</span><br><span class=\"line\">    <span class=\"comment\">//最大编号限制</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">long</span> MaxWorkerId = -<span class=\"number\">1L</span> ^ (-<span class=\"number\">1L</span> &lt;&lt; WorkerIdBits);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">long</span> MaxDatacenterId = -<span class=\"number\">1L</span> ^ (-<span class=\"number\">1L</span> &lt;&lt; DatacenterIdBits);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"keyword\">long</span> SequenceMask = -<span class=\"number\">1L</span> ^ (-<span class=\"number\">1L</span> &lt;&lt; SequenceBits);</span><br><span class=\"line\">    <span class=\"comment\">//位左运算移动量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> WorkerIdShift = SequenceBits;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> DatacenterIdShift = SequenceBits + WorkerIdBits;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> TimestampLeftShift = SequenceBits + WorkerIdBits + DatacenterIdBits;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//序列号记录</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">long</span> _sequence = <span class=\"number\">0L</span>;</span><br><span class=\"line\">    <span class=\"comment\">//时间戳记录</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">long</span> _lastTimestamp = -<span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">long</span> WorkerId &#123; get; <span class=\"keyword\">protected</span> set; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">long</span> DatacenterId &#123; get; <span class=\"keyword\">protected</span> set; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Snowflake</span><span class=\"params\">(<span class=\"keyword\">long</span> workerId, <span class=\"keyword\">long</span> datacenterId, <span class=\"keyword\">long</span> sequence = <span class=\"number\">0</span>L)</span> </span><br><span class=\"line\">    </span>&#123;</span><br><span class=\"line\">        WorkerId = workerId;</span><br><span class=\"line\">        DatacenterId = datacenterId;</span><br><span class=\"line\">        _sequence = sequence;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\">// sanity check for workerId</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (workerId &gt; MaxWorkerId || workerId &lt; <span class=\"number\">0</span>) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ArgumentException( String.Format(<span class=\"string\">\"worker Id can't be greater than &#123;0&#125; or less than 0\"</span>, MaxWorkerId) );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (datacenterId &gt; MaxDatacenterId || datacenterId &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ArgumentException( String.Format(<span class=\"string\">\"datacenter Id can't be greater than &#123;0&#125; or less than 0\"</span>, MaxDatacenterId));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 格林时间戳</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">TimeGen</span><span class=\"params\">()</span></span><br><span class=\"line\">    </span>&#123;</span><br><span class=\"line\">        DateTime Jan1st1970 = <span class=\"keyword\">new</span> DateTime(<span class=\"number\">1970</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, DateTimeKind.Utc);<span class=\"comment\">//</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">long</span>)(DateTime.UtcNow - Jan1st1970).TotalMilliseconds;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    readonly object _lock = <span class=\"keyword\">new</span> Object();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> virtual <span class=\"keyword\">long</span> <span class=\"title\">NextId</span><span class=\"params\">()</span></span><br><span class=\"line\">    </span>&#123;</span><br><span class=\"line\">        lock (_lock)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            var timestamp = TimeGen();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (timestamp &lt; _lastTimestamp)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> InvalidSystemClock(String.Format(</span><br><span class=\"line\">                    <span class=\"string\">\"发现最新时间戳少&#123;0&#125;毫秒的异常\"</span>, _lastTimestamp - timestamp));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (_lastTimestamp == timestamp)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                _sequence = (_sequence + <span class=\"number\">1</span>) &amp; SequenceMask;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (_sequence == <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//序列号超过限制，重新取时间戳</span></span><br><span class=\"line\">                    timestamp = TilNextMillis(_lastTimestamp);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                _sequence = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            _lastTimestamp = timestamp;</span><br><span class=\"line\">            <span class=\"comment\">//snowflake算法</span></span><br><span class=\"line\">            var id = (timestamp &lt;&lt; TimestampLeftShift) |</span><br><span class=\"line\">                     (DatacenterId &lt;&lt; DatacenterIdShift) |</span><br><span class=\"line\">                     (WorkerId &lt;&lt; WorkerIdShift) | _sequence;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 重新取时间戳</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> virtual <span class=\"keyword\">long</span> <span class=\"title\">TilNextMillis</span><span class=\"params\">(<span class=\"keyword\">long</span> lastTimestamp)</span></span><br><span class=\"line\">    </span>&#123;</span><br><span class=\"line\">        var timestamp = TimeGen();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (timestamp &lt;= lastTimestamp)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//新的时间戳要大于旧的时间戳，才算作有效时间戳</span></span><br><span class=\"line\">            timestamp = TimeGen();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> timestamp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"成长记","date":"2015-06-22T06:50:38.000Z","updated":"2015-06-22T06:50:38.000Z","_content":"\n\n# 给你90天，成为不一样的自己\n\n为了改变我的三分钟热度性格，我曾给自己提出一个要求，就是以\"22天习惯养成\"为基础。只不过，我要求自己，如果真正开始一件事就至少要坚持90天以上，而一旦坚持了90天，接下来的继续也就十分容易了。它对我的确受益匪浅，我想把它也分享给已在职场的你。如果你的确认真坚持了，I AM SURE U WILL FIND A DIFFERENT U.\n<!-- more -->\n## 不赖床，比你往常订好闹钟的时间往前调至少20分钟\n\n## 上班第一件事：先梳理工作\n\n## 忽略别人的缺点，吸纳他的优点\n\n## 远离爱抱怨的同事和朋友，不说同事或者老板闲话\n\n## 每月重列购物清单，作为自己的奖励\n\n## 戒掉你的微信朋友圈和其他社交网络\n\n可以改成每天午间吃完饭或者晚上睡觉前查看一下一天的更新。 如果不是很忙的时候，你可以选择浏览职业相关的论坛或者网页学点东西。 我最近比较迷恋知乎，自从开始看知乎以后，觉得知识面上升了不少，推荐你也试试。\n\n## 健身，一辈子的习惯\n\n可能每次挥汗如雨的时候，你都有种放弃的感觉，但之后身心都会特别轻松。 相信我，健身带来的改变不只是身体上的，更多的是精神！！！\n\n## 保持阅读习惯\n\n每个月至少买四本书，有时间的话，每周看一本，实在觉得时间不够，两周读一本。 读书给你变化是潜移默化的，它也能带来内心的平静。 为了多读书，我的方法是：先看拿到手的书有多少页，将其拆分，用总页数除以7，得到的数就是你每天必须要读的页数。（我想你的时间应该比我多一些，因为我每天侍候完孩子的吃喝拉撒睡就得11点了）； 记住，如果你用我的这个方法，这个必读页数就是每天必须完成的。 如果你有大把时间可以将它一口气读完，当然最好； 如果没有完整时间，这个方法能迫使你放弃那些没时间读书的借口。\n\n## 做事给自己设置deadline\n\n## 总结，练习\n\n> 当回忆自己前几个月，或者前几年都做过什么，常常想不起来，记录自己的event-time-log 是一个好习惯，而且更能感知时间\n\n## 投资你自己\n\n多去接触比自己优秀的圈子，或者自己想去发展的方向，你会得到不一样的收获。\n\n## 打造数据自己的完整作品\n\n## TEFCAS\n\nT----尝试 E----行动 F----反馈，确认核实 C----检查 A----调整 S----成功 [思维导图](http://www.jianshu.com/p/e9054cb333e8)\n\n# 要去学一门技术。那么：\n\n1. How：去找专家的 \"实作方法\" 课、\"实作方法\" 书，快速地跟着 TA 做。（请先一模一样地跟着做，不要自作聪明地改，也不要去问为什么。）\n2. What：接着把 \"成果\" 做一点小修改，看看会不会有效果。\n3. Why：把东西改得有效果了以后，再去查 Why。\n\n五天都重复这样的循环，你就会了，至少能掌握这门学问的 60%。我保证，就这么简单。 前提是：在前三个小时里，你能按捺住你的好奇心，别问 Why 与 What。否则你学五个月都学不出来。\n\n人很犯贱，做事情前都要先问为什么，否则就不想做。然后知道为什么后，就会开始想 What to do 。而这就是 \"最惨的地方\"。 初学东西时绝对不要用大脑，诀窍是 `“用肌肉学习”。`\n\n如果你一开始用大脑学，`就掉入了一个大陷阱`，这也是很多人学东西学不起来的原因。 `人的肌肉都是有记忆的，只要重复去做，就会记住`。 只要一件事情，重复练五次，肌肉就会带着这件事的记忆。所以 \"为什么\" 不要问太多遍，先做就对了，也不要一边做一边改成自己想要的。 也就是说在初学阶段绝对不能让 \"大脑\" 介入你的学习训练过程。\n\n\n可以去学习那些西方的寓言小故事可以很有趣的，如:[塞翁失马](http://sivers.org/horses)\n","source":"_posts/2015/grown-up.md","raw":"---\ntitle: 成长记\ndate: 2015-06-22 14:50:38\nupdated: 2015-06-22 14:50:38\ntags:\n- 随笔\ncategories:\n---\n\n\n# 给你90天，成为不一样的自己\n\n为了改变我的三分钟热度性格，我曾给自己提出一个要求，就是以\"22天习惯养成\"为基础。只不过，我要求自己，如果真正开始一件事就至少要坚持90天以上，而一旦坚持了90天，接下来的继续也就十分容易了。它对我的确受益匪浅，我想把它也分享给已在职场的你。如果你的确认真坚持了，I AM SURE U WILL FIND A DIFFERENT U.\n<!-- more -->\n## 不赖床，比你往常订好闹钟的时间往前调至少20分钟\n\n## 上班第一件事：先梳理工作\n\n## 忽略别人的缺点，吸纳他的优点\n\n## 远离爱抱怨的同事和朋友，不说同事或者老板闲话\n\n## 每月重列购物清单，作为自己的奖励\n\n## 戒掉你的微信朋友圈和其他社交网络\n\n可以改成每天午间吃完饭或者晚上睡觉前查看一下一天的更新。 如果不是很忙的时候，你可以选择浏览职业相关的论坛或者网页学点东西。 我最近比较迷恋知乎，自从开始看知乎以后，觉得知识面上升了不少，推荐你也试试。\n\n## 健身，一辈子的习惯\n\n可能每次挥汗如雨的时候，你都有种放弃的感觉，但之后身心都会特别轻松。 相信我，健身带来的改变不只是身体上的，更多的是精神！！！\n\n## 保持阅读习惯\n\n每个月至少买四本书，有时间的话，每周看一本，实在觉得时间不够，两周读一本。 读书给你变化是潜移默化的，它也能带来内心的平静。 为了多读书，我的方法是：先看拿到手的书有多少页，将其拆分，用总页数除以7，得到的数就是你每天必须要读的页数。（我想你的时间应该比我多一些，因为我每天侍候完孩子的吃喝拉撒睡就得11点了）； 记住，如果你用我的这个方法，这个必读页数就是每天必须完成的。 如果你有大把时间可以将它一口气读完，当然最好； 如果没有完整时间，这个方法能迫使你放弃那些没时间读书的借口。\n\n## 做事给自己设置deadline\n\n## 总结，练习\n\n> 当回忆自己前几个月，或者前几年都做过什么，常常想不起来，记录自己的event-time-log 是一个好习惯，而且更能感知时间\n\n## 投资你自己\n\n多去接触比自己优秀的圈子，或者自己想去发展的方向，你会得到不一样的收获。\n\n## 打造数据自己的完整作品\n\n## TEFCAS\n\nT----尝试 E----行动 F----反馈，确认核实 C----检查 A----调整 S----成功 [思维导图](http://www.jianshu.com/p/e9054cb333e8)\n\n# 要去学一门技术。那么：\n\n1. How：去找专家的 \"实作方法\" 课、\"实作方法\" 书，快速地跟着 TA 做。（请先一模一样地跟着做，不要自作聪明地改，也不要去问为什么。）\n2. What：接着把 \"成果\" 做一点小修改，看看会不会有效果。\n3. Why：把东西改得有效果了以后，再去查 Why。\n\n五天都重复这样的循环，你就会了，至少能掌握这门学问的 60%。我保证，就这么简单。 前提是：在前三个小时里，你能按捺住你的好奇心，别问 Why 与 What。否则你学五个月都学不出来。\n\n人很犯贱，做事情前都要先问为什么，否则就不想做。然后知道为什么后，就会开始想 What to do 。而这就是 \"最惨的地方\"。 初学东西时绝对不要用大脑，诀窍是 `“用肌肉学习”。`\n\n如果你一开始用大脑学，`就掉入了一个大陷阱`，这也是很多人学东西学不起来的原因。 `人的肌肉都是有记忆的，只要重复去做，就会记住`。 只要一件事情，重复练五次，肌肉就会带着这件事的记忆。所以 \"为什么\" 不要问太多遍，先做就对了，也不要一边做一边改成自己想要的。 也就是说在初学阶段绝对不能让 \"大脑\" 介入你的学习训练过程。\n\n\n可以去学习那些西方的寓言小故事可以很有趣的，如:[塞翁失马](http://sivers.org/horses)\n","slug":"grown-up","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp8s000swsnna0ww2iph","content":"<h1 id=\"给你90天，成为不一样的自己\"><a href=\"#给你90天，成为不一样的自己\" class=\"headerlink\" title=\"给你90天，成为不一样的自己\"></a>给你90天，成为不一样的自己</h1><p>为了改变我的三分钟热度性格，我曾给自己提出一个要求，就是以”22天习惯养成”为基础。只不过，我要求自己，如果真正开始一件事就至少要坚持90天以上，而一旦坚持了90天，接下来的继续也就十分容易了。它对我的确受益匪浅，我想把它也分享给已在职场的你。如果你的确认真坚持了，I AM SURE U WILL FIND A DIFFERENT U.<br><a id=\"more\"></a></p>\n<h2 id=\"不赖床，比你往常订好闹钟的时间往前调至少20分钟\"><a href=\"#不赖床，比你往常订好闹钟的时间往前调至少20分钟\" class=\"headerlink\" title=\"不赖床，比你往常订好闹钟的时间往前调至少20分钟\"></a>不赖床，比你往常订好闹钟的时间往前调至少20分钟</h2><h2 id=\"上班第一件事：先梳理工作\"><a href=\"#上班第一件事：先梳理工作\" class=\"headerlink\" title=\"上班第一件事：先梳理工作\"></a>上班第一件事：先梳理工作</h2><h2 id=\"忽略别人的缺点，吸纳他的优点\"><a href=\"#忽略别人的缺点，吸纳他的优点\" class=\"headerlink\" title=\"忽略别人的缺点，吸纳他的优点\"></a>忽略别人的缺点，吸纳他的优点</h2><h2 id=\"远离爱抱怨的同事和朋友，不说同事或者老板闲话\"><a href=\"#远离爱抱怨的同事和朋友，不说同事或者老板闲话\" class=\"headerlink\" title=\"远离爱抱怨的同事和朋友，不说同事或者老板闲话\"></a>远离爱抱怨的同事和朋友，不说同事或者老板闲话</h2><h2 id=\"每月重列购物清单，作为自己的奖励\"><a href=\"#每月重列购物清单，作为自己的奖励\" class=\"headerlink\" title=\"每月重列购物清单，作为自己的奖励\"></a>每月重列购物清单，作为自己的奖励</h2><h2 id=\"戒掉你的微信朋友圈和其他社交网络\"><a href=\"#戒掉你的微信朋友圈和其他社交网络\" class=\"headerlink\" title=\"戒掉你的微信朋友圈和其他社交网络\"></a>戒掉你的微信朋友圈和其他社交网络</h2><p>可以改成每天午间吃完饭或者晚上睡觉前查看一下一天的更新。 如果不是很忙的时候，你可以选择浏览职业相关的论坛或者网页学点东西。 我最近比较迷恋知乎，自从开始看知乎以后，觉得知识面上升了不少，推荐你也试试。</p>\n<h2 id=\"健身，一辈子的习惯\"><a href=\"#健身，一辈子的习惯\" class=\"headerlink\" title=\"健身，一辈子的习惯\"></a>健身，一辈子的习惯</h2><p>可能每次挥汗如雨的时候，你都有种放弃的感觉，但之后身心都会特别轻松。 相信我，健身带来的改变不只是身体上的，更多的是精神！！！</p>\n<h2 id=\"保持阅读习惯\"><a href=\"#保持阅读习惯\" class=\"headerlink\" title=\"保持阅读习惯\"></a>保持阅读习惯</h2><p>每个月至少买四本书，有时间的话，每周看一本，实在觉得时间不够，两周读一本。 读书给你变化是潜移默化的，它也能带来内心的平静。 为了多读书，我的方法是：先看拿到手的书有多少页，将其拆分，用总页数除以7，得到的数就是你每天必须要读的页数。（我想你的时间应该比我多一些，因为我每天侍候完孩子的吃喝拉撒睡就得11点了）； 记住，如果你用我的这个方法，这个必读页数就是每天必须完成的。 如果你有大把时间可以将它一口气读完，当然最好； 如果没有完整时间，这个方法能迫使你放弃那些没时间读书的借口。</p>\n<h2 id=\"做事给自己设置deadline\"><a href=\"#做事给自己设置deadline\" class=\"headerlink\" title=\"做事给自己设置deadline\"></a>做事给自己设置deadline</h2><h2 id=\"总结，练习\"><a href=\"#总结，练习\" class=\"headerlink\" title=\"总结，练习\"></a>总结，练习</h2><blockquote>\n<p>当回忆自己前几个月，或者前几年都做过什么，常常想不起来，记录自己的event-time-log 是一个好习惯，而且更能感知时间</p>\n</blockquote>\n<h2 id=\"投资你自己\"><a href=\"#投资你自己\" class=\"headerlink\" title=\"投资你自己\"></a>投资你自己</h2><p>多去接触比自己优秀的圈子，或者自己想去发展的方向，你会得到不一样的收获。</p>\n<h2 id=\"打造数据自己的完整作品\"><a href=\"#打造数据自己的完整作品\" class=\"headerlink\" title=\"打造数据自己的完整作品\"></a>打造数据自己的完整作品</h2><h2 id=\"TEFCAS\"><a href=\"#TEFCAS\" class=\"headerlink\" title=\"TEFCAS\"></a>TEFCAS</h2><p>T—-尝试 E—-行动 F—-反馈，确认核实 C—-检查 A—-调整 S—-成功 <a href=\"http://www.jianshu.com/p/e9054cb333e8\" target=\"_blank\" rel=\"external\">思维导图</a></p>\n<h1 id=\"要去学一门技术。那么：\"><a href=\"#要去学一门技术。那么：\" class=\"headerlink\" title=\"要去学一门技术。那么：\"></a>要去学一门技术。那么：</h1><ol>\n<li>How：去找专家的 “实作方法” 课、”实作方法” 书，快速地跟着 TA 做。（请先一模一样地跟着做，不要自作聪明地改，也不要去问为什么。）</li>\n<li>What：接着把 “成果” 做一点小修改，看看会不会有效果。</li>\n<li>Why：把东西改得有效果了以后，再去查 Why。</li>\n</ol>\n<p>五天都重复这样的循环，你就会了，至少能掌握这门学问的 60%。我保证，就这么简单。 前提是：在前三个小时里，你能按捺住你的好奇心，别问 Why 与 What。否则你学五个月都学不出来。</p>\n<p>人很犯贱，做事情前都要先问为什么，否则就不想做。然后知道为什么后，就会开始想 What to do 。而这就是 “最惨的地方”。 初学东西时绝对不要用大脑，诀窍是 <code>“用肌肉学习”。</code></p>\n<p>如果你一开始用大脑学，<code>就掉入了一个大陷阱</code>，这也是很多人学东西学不起来的原因。 <code>人的肌肉都是有记忆的，只要重复去做，就会记住</code>。 只要一件事情，重复练五次，肌肉就会带着这件事的记忆。所以 “为什么” 不要问太多遍，先做就对了，也不要一边做一边改成自己想要的。 也就是说在初学阶段绝对不能让 “大脑” 介入你的学习训练过程。</p>\n<p>可以去学习那些西方的寓言小故事可以很有趣的，如:<a href=\"http://sivers.org/horses\" target=\"_blank\" rel=\"external\">塞翁失马</a></p>\n","excerpt":"<h1 id=\"给你90天，成为不一样的自己\"><a href=\"#给你90天，成为不一样的自己\" class=\"headerlink\" title=\"给你90天，成为不一样的自己\"></a>给你90天，成为不一样的自己</h1><p>为了改变我的三分钟热度性格，我曾给自己提出一个要求，就是以”22天习惯养成”为基础。只不过，我要求自己，如果真正开始一件事就至少要坚持90天以上，而一旦坚持了90天，接下来的继续也就十分容易了。它对我的确受益匪浅，我想把它也分享给已在职场的你。如果你的确认真坚持了，I AM SURE U WILL FIND A DIFFERENT U.<br>","more":"</p>\n<h2 id=\"不赖床，比你往常订好闹钟的时间往前调至少20分钟\"><a href=\"#不赖床，比你往常订好闹钟的时间往前调至少20分钟\" class=\"headerlink\" title=\"不赖床，比你往常订好闹钟的时间往前调至少20分钟\"></a>不赖床，比你往常订好闹钟的时间往前调至少20分钟</h2><h2 id=\"上班第一件事：先梳理工作\"><a href=\"#上班第一件事：先梳理工作\" class=\"headerlink\" title=\"上班第一件事：先梳理工作\"></a>上班第一件事：先梳理工作</h2><h2 id=\"忽略别人的缺点，吸纳他的优点\"><a href=\"#忽略别人的缺点，吸纳他的优点\" class=\"headerlink\" title=\"忽略别人的缺点，吸纳他的优点\"></a>忽略别人的缺点，吸纳他的优点</h2><h2 id=\"远离爱抱怨的同事和朋友，不说同事或者老板闲话\"><a href=\"#远离爱抱怨的同事和朋友，不说同事或者老板闲话\" class=\"headerlink\" title=\"远离爱抱怨的同事和朋友，不说同事或者老板闲话\"></a>远离爱抱怨的同事和朋友，不说同事或者老板闲话</h2><h2 id=\"每月重列购物清单，作为自己的奖励\"><a href=\"#每月重列购物清单，作为自己的奖励\" class=\"headerlink\" title=\"每月重列购物清单，作为自己的奖励\"></a>每月重列购物清单，作为自己的奖励</h2><h2 id=\"戒掉你的微信朋友圈和其他社交网络\"><a href=\"#戒掉你的微信朋友圈和其他社交网络\" class=\"headerlink\" title=\"戒掉你的微信朋友圈和其他社交网络\"></a>戒掉你的微信朋友圈和其他社交网络</h2><p>可以改成每天午间吃完饭或者晚上睡觉前查看一下一天的更新。 如果不是很忙的时候，你可以选择浏览职业相关的论坛或者网页学点东西。 我最近比较迷恋知乎，自从开始看知乎以后，觉得知识面上升了不少，推荐你也试试。</p>\n<h2 id=\"健身，一辈子的习惯\"><a href=\"#健身，一辈子的习惯\" class=\"headerlink\" title=\"健身，一辈子的习惯\"></a>健身，一辈子的习惯</h2><p>可能每次挥汗如雨的时候，你都有种放弃的感觉，但之后身心都会特别轻松。 相信我，健身带来的改变不只是身体上的，更多的是精神！！！</p>\n<h2 id=\"保持阅读习惯\"><a href=\"#保持阅读习惯\" class=\"headerlink\" title=\"保持阅读习惯\"></a>保持阅读习惯</h2><p>每个月至少买四本书，有时间的话，每周看一本，实在觉得时间不够，两周读一本。 读书给你变化是潜移默化的，它也能带来内心的平静。 为了多读书，我的方法是：先看拿到手的书有多少页，将其拆分，用总页数除以7，得到的数就是你每天必须要读的页数。（我想你的时间应该比我多一些，因为我每天侍候完孩子的吃喝拉撒睡就得11点了）； 记住，如果你用我的这个方法，这个必读页数就是每天必须完成的。 如果你有大把时间可以将它一口气读完，当然最好； 如果没有完整时间，这个方法能迫使你放弃那些没时间读书的借口。</p>\n<h2 id=\"做事给自己设置deadline\"><a href=\"#做事给自己设置deadline\" class=\"headerlink\" title=\"做事给自己设置deadline\"></a>做事给自己设置deadline</h2><h2 id=\"总结，练习\"><a href=\"#总结，练习\" class=\"headerlink\" title=\"总结，练习\"></a>总结，练习</h2><blockquote>\n<p>当回忆自己前几个月，或者前几年都做过什么，常常想不起来，记录自己的event-time-log 是一个好习惯，而且更能感知时间</p>\n</blockquote>\n<h2 id=\"投资你自己\"><a href=\"#投资你自己\" class=\"headerlink\" title=\"投资你自己\"></a>投资你自己</h2><p>多去接触比自己优秀的圈子，或者自己想去发展的方向，你会得到不一样的收获。</p>\n<h2 id=\"打造数据自己的完整作品\"><a href=\"#打造数据自己的完整作品\" class=\"headerlink\" title=\"打造数据自己的完整作品\"></a>打造数据自己的完整作品</h2><h2 id=\"TEFCAS\"><a href=\"#TEFCAS\" class=\"headerlink\" title=\"TEFCAS\"></a>TEFCAS</h2><p>T—-尝试 E—-行动 F—-反馈，确认核实 C—-检查 A—-调整 S—-成功 <a href=\"http://www.jianshu.com/p/e9054cb333e8\">思维导图</a></p>\n<h1 id=\"要去学一门技术。那么：\"><a href=\"#要去学一门技术。那么：\" class=\"headerlink\" title=\"要去学一门技术。那么：\"></a>要去学一门技术。那么：</h1><ol>\n<li>How：去找专家的 “实作方法” 课、”实作方法” 书，快速地跟着 TA 做。（请先一模一样地跟着做，不要自作聪明地改，也不要去问为什么。）</li>\n<li>What：接着把 “成果” 做一点小修改，看看会不会有效果。</li>\n<li>Why：把东西改得有效果了以后，再去查 Why。</li>\n</ol>\n<p>五天都重复这样的循环，你就会了，至少能掌握这门学问的 60%。我保证，就这么简单。 前提是：在前三个小时里，你能按捺住你的好奇心，别问 Why 与 What。否则你学五个月都学不出来。</p>\n<p>人很犯贱，做事情前都要先问为什么，否则就不想做。然后知道为什么后，就会开始想 What to do 。而这就是 “最惨的地方”。 初学东西时绝对不要用大脑，诀窍是 <code>“用肌肉学习”。</code></p>\n<p>如果你一开始用大脑学，<code>就掉入了一个大陷阱</code>，这也是很多人学东西学不起来的原因。 <code>人的肌肉都是有记忆的，只要重复去做，就会记住</code>。 只要一件事情，重复练五次，肌肉就会带着这件事的记忆。所以 “为什么” 不要问太多遍，先做就对了，也不要一边做一边改成自己想要的。 也就是说在初学阶段绝对不能让 “大脑” 介入你的学习训练过程。</p>\n<p>可以去学习那些西方的寓言小故事可以很有趣的，如:<a href=\"http://sivers.org/horses\">塞翁失马</a></p>"},{"title":"gulp tutorial","date":"2016-07-15T02:58:29.000Z","updated":"2016-07-15T02:58:29.000Z","_content":"### 安装nodejs\n之前已经安装nodejs,npm 了\n\n``` cli\n  //安装中文镜像源文件\n  npm install cnpm -g --registry=https://registry.npm.taobao.org\n  npm uninstall xxx\n  //查看已经安装的插件\n  npm list\n```\n<!-- more -->\n### 安装gulp,新建package.json文件\n\n全局安装 `cnpm install gulp -g` ,之后  `cnpm init` 初始化, `cnpm install gulp --save-dev`\n我们全局安装了gulp，项目也安装了gulp，全局安装gulp是为了执行gulp任务，这句本地安装gulp则是为了调用gulp插件的功能。\n查看 `package.json` 帮助文档，命令提示符执行 `cnpm help package.json`。\n\n### 安装gulp插件,运行demo\ngulpfile.js是gulp项目的配置文件，是位于项目根目录的普通js文件（其实将gulpfile.js放入其他文件夹下亦可）,下面是一个demo：\n\n``` javascript\n\n  //导入工具包 require('node_modules里对应模块')\n  var gulp = require('gulp'), //本地安装gulp所用到的地方\n    less = require('gulp-less');\n\n  //定义一个testLess任务（自定义任务名称）\n  gulp.task('testLess', function () {\n    gulp.src('src/less/index.less') //该任务针对的文件\n        .pipe(less()) //该任务调用的模块\n        .pipe(gulp.dest('src/css')); //将会在src/css下生成index.css\n  });\n\n  gulp.task('default',['testLess', 'elseTask']); //定义默认任务 elseTask为其他任务，该示例没有定义elseTask任务\n\n  //gulp.task(name[, deps], fn) 定义任务  name：任务名称 deps：依赖任务名称 fn：回调函数\n  //gulp.src(globs[, options]) 执行任务处理的文件  globs：处理的文件路径(字符串或者字符串数组)\n  //gulp.dest(path[, options]) 处理完后文件生成路径\n```\n运行 `gulp testLess`、 `gulp default` or  `gulp`\n\n\n### gulp 和 laravel 的使用\n\n```\nnpm install -g gulp\ngulp -v\n\n```\nlaravel 包文件中包含 package.json 文件， `npm install` 安装包含的glup和laravel-elixir\n\n#### Elixir 使用\n包含 `gulpfile.js`文件\n``` javascript\nelixir(function(mix) {\n    mix.less('app.less');\n});\n```\nmix.less 任务可以用于编译Less文件，在本例中该文件名为 app.less ，这个文件位于 resources/assets/less 目录下，其内容如下\n\n\n[Laravel Elixir](http://www.tuicool.com/articles/YRV7Fz)\n","source":"_posts/2015/gulp-tutorial.md","raw":"---\ntitle: gulp tutorial\ndate: 2016-07-15 10:58:29\nupdated: 2016-07-15 10:58:29\ntags:\ncategories:\n---\n### 安装nodejs\n之前已经安装nodejs,npm 了\n\n``` cli\n  //安装中文镜像源文件\n  npm install cnpm -g --registry=https://registry.npm.taobao.org\n  npm uninstall xxx\n  //查看已经安装的插件\n  npm list\n```\n<!-- more -->\n### 安装gulp,新建package.json文件\n\n全局安装 `cnpm install gulp -g` ,之后  `cnpm init` 初始化, `cnpm install gulp --save-dev`\n我们全局安装了gulp，项目也安装了gulp，全局安装gulp是为了执行gulp任务，这句本地安装gulp则是为了调用gulp插件的功能。\n查看 `package.json` 帮助文档，命令提示符执行 `cnpm help package.json`。\n\n### 安装gulp插件,运行demo\ngulpfile.js是gulp项目的配置文件，是位于项目根目录的普通js文件（其实将gulpfile.js放入其他文件夹下亦可）,下面是一个demo：\n\n``` javascript\n\n  //导入工具包 require('node_modules里对应模块')\n  var gulp = require('gulp'), //本地安装gulp所用到的地方\n    less = require('gulp-less');\n\n  //定义一个testLess任务（自定义任务名称）\n  gulp.task('testLess', function () {\n    gulp.src('src/less/index.less') //该任务针对的文件\n        .pipe(less()) //该任务调用的模块\n        .pipe(gulp.dest('src/css')); //将会在src/css下生成index.css\n  });\n\n  gulp.task('default',['testLess', 'elseTask']); //定义默认任务 elseTask为其他任务，该示例没有定义elseTask任务\n\n  //gulp.task(name[, deps], fn) 定义任务  name：任务名称 deps：依赖任务名称 fn：回调函数\n  //gulp.src(globs[, options]) 执行任务处理的文件  globs：处理的文件路径(字符串或者字符串数组)\n  //gulp.dest(path[, options]) 处理完后文件生成路径\n```\n运行 `gulp testLess`、 `gulp default` or  `gulp`\n\n\n### gulp 和 laravel 的使用\n\n```\nnpm install -g gulp\ngulp -v\n\n```\nlaravel 包文件中包含 package.json 文件， `npm install` 安装包含的glup和laravel-elixir\n\n#### Elixir 使用\n包含 `gulpfile.js`文件\n``` javascript\nelixir(function(mix) {\n    mix.less('app.less');\n});\n```\nmix.less 任务可以用于编译Less文件，在本例中该文件名为 app.less ，这个文件位于 resources/assets/less 目录下，其内容如下\n\n\n[Laravel Elixir](http://www.tuicool.com/articles/YRV7Fz)\n","slug":"gulp-tutorial","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp92000uwsnnmxwg4h66","content":"<h3 id=\"安装nodejs\"><a href=\"#安装nodejs\" class=\"headerlink\" title=\"安装nodejs\"></a>安装nodejs</h3><p>之前已经安装nodejs,npm 了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//安装中文镜像源文件</span><br><span class=\"line\">npm install cnpm -g --registry=https://registry.npm.taobao.org</span><br><span class=\"line\">npm uninstall xxx</span><br><span class=\"line\">//查看已经安装的插件</span><br><span class=\"line\">npm list</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"安装gulp-新建package-json文件\"><a href=\"#安装gulp-新建package-json文件\" class=\"headerlink\" title=\"安装gulp,新建package.json文件\"></a>安装gulp,新建package.json文件</h3><p>全局安装 <code>cnpm install gulp -g</code> ,之后  <code>cnpm init</code> 初始化, <code>cnpm install gulp --save-dev</code><br>我们全局安装了gulp，项目也安装了gulp，全局安装gulp是为了执行gulp任务，这句本地安装gulp则是为了调用gulp插件的功能。<br>查看 <code>package.json</code> 帮助文档，命令提示符执行 <code>cnpm help package.json</code>。</p>\n<h3 id=\"安装gulp插件-运行demo\"><a href=\"#安装gulp插件-运行demo\" class=\"headerlink\" title=\"安装gulp插件,运行demo\"></a>安装gulp插件,运行demo</h3><p>gulpfile.js是gulp项目的配置文件，是位于项目根目录的普通js文件（其实将gulpfile.js放入其他文件夹下亦可）,下面是一个demo：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//导入工具包 require('node_modules里对应模块')</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>), <span class=\"comment\">//本地安装gulp所用到的地方</span></span><br><span class=\"line\">  less = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-less'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义一个testLess任务（自定义任务名称）</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'testLess'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  gulp.src(<span class=\"string\">'src/less/index.less'</span>) <span class=\"comment\">//该任务针对的文件</span></span><br><span class=\"line\">      .pipe(less()) <span class=\"comment\">//该任务调用的模块</span></span><br><span class=\"line\">      .pipe(gulp.dest(<span class=\"string\">'src/css'</span>)); <span class=\"comment\">//将会在src/css下生成index.css</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>,[<span class=\"string\">'testLess'</span>, <span class=\"string\">'elseTask'</span>]); <span class=\"comment\">//定义默认任务 elseTask为其他任务，该示例没有定义elseTask任务</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//gulp.task(name[, deps], fn) 定义任务  name：任务名称 deps：依赖任务名称 fn：回调函数</span></span><br><span class=\"line\"><span class=\"comment\">//gulp.src(globs[, options]) 执行任务处理的文件  globs：处理的文件路径(字符串或者字符串数组)</span></span><br><span class=\"line\"><span class=\"comment\">//gulp.dest(path[, options]) 处理完后文件生成路径</span></span><br></pre></td></tr></table></figure>\n<p>运行 <code>gulp testLess</code>、 <code>gulp default</code> or  <code>gulp</code></p>\n<h3 id=\"gulp-和-laravel-的使用\"><a href=\"#gulp-和-laravel-的使用\" class=\"headerlink\" title=\"gulp 和 laravel 的使用\"></a>gulp 和 laravel 的使用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g gulp</span><br><span class=\"line\">gulp -v</span><br></pre></td></tr></table></figure>\n<p>laravel 包文件中包含 package.json 文件， <code>npm install</code> 安装包含的glup和laravel-elixir</p>\n<h4 id=\"Elixir-使用\"><a href=\"#Elixir-使用\" class=\"headerlink\" title=\"Elixir 使用\"></a>Elixir 使用</h4><p>包含 <code>gulpfile.js</code>文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">elixir(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mix</span>) </span>&#123;</span><br><span class=\"line\">    mix.less(<span class=\"string\">'app.less'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>mix.less 任务可以用于编译Less文件，在本例中该文件名为 app.less ，这个文件位于 resources/assets/less 目录下，其内容如下</p>\n<p><a href=\"http://www.tuicool.com/articles/YRV7Fz\" target=\"_blank\" rel=\"external\">Laravel Elixir</a></p>\n","excerpt":"<h3 id=\"安装nodejs\"><a href=\"#安装nodejs\" class=\"headerlink\" title=\"安装nodejs\"></a>安装nodejs</h3><p>之前已经安装nodejs,npm 了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//安装中文镜像源文件</span><br><span class=\"line\">npm install cnpm -g --registry=https://registry.npm.taobao.org</span><br><span class=\"line\">npm uninstall xxx</span><br><span class=\"line\">//查看已经安装的插件</span><br><span class=\"line\">npm list</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"安装gulp-新建package-json文件\"><a href=\"#安装gulp-新建package-json文件\" class=\"headerlink\" title=\"安装gulp,新建package.json文件\"></a>安装gulp,新建package.json文件</h3><p>全局安装 <code>cnpm install gulp -g</code> ,之后  <code>cnpm init</code> 初始化, <code>cnpm install gulp --save-dev</code><br>我们全局安装了gulp，项目也安装了gulp，全局安装gulp是为了执行gulp任务，这句本地安装gulp则是为了调用gulp插件的功能。<br>查看 <code>package.json</code> 帮助文档，命令提示符执行 <code>cnpm help package.json</code>。</p>\n<h3 id=\"安装gulp插件-运行demo\"><a href=\"#安装gulp插件-运行demo\" class=\"headerlink\" title=\"安装gulp插件,运行demo\"></a>安装gulp插件,运行demo</h3><p>gulpfile.js是gulp项目的配置文件，是位于项目根目录的普通js文件（其实将gulpfile.js放入其他文件夹下亦可）,下面是一个demo：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//导入工具包 require('node_modules里对应模块')</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>), <span class=\"comment\">//本地安装gulp所用到的地方</span></span><br><span class=\"line\">  less = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-less'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义一个testLess任务（自定义任务名称）</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'testLess'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  gulp.src(<span class=\"string\">'src/less/index.less'</span>) <span class=\"comment\">//该任务针对的文件</span></span><br><span class=\"line\">      .pipe(less()) <span class=\"comment\">//该任务调用的模块</span></span><br><span class=\"line\">      .pipe(gulp.dest(<span class=\"string\">'src/css'</span>)); <span class=\"comment\">//将会在src/css下生成index.css</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>,[<span class=\"string\">'testLess'</span>, <span class=\"string\">'elseTask'</span>]); <span class=\"comment\">//定义默认任务 elseTask为其他任务，该示例没有定义elseTask任务</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//gulp.task(name[, deps], fn) 定义任务  name：任务名称 deps：依赖任务名称 fn：回调函数</span></span><br><span class=\"line\"><span class=\"comment\">//gulp.src(globs[, options]) 执行任务处理的文件  globs：处理的文件路径(字符串或者字符串数组)</span></span><br><span class=\"line\"><span class=\"comment\">//gulp.dest(path[, options]) 处理完后文件生成路径</span></span><br></pre></td></tr></table></figure>\n<p>运行 <code>gulp testLess</code>、 <code>gulp default</code> or  <code>gulp</code></p>\n<h3 id=\"gulp-和-laravel-的使用\"><a href=\"#gulp-和-laravel-的使用\" class=\"headerlink\" title=\"gulp 和 laravel 的使用\"></a>gulp 和 laravel 的使用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g gulp</span><br><span class=\"line\">gulp -v</span><br></pre></td></tr></table></figure>\n<p>laravel 包文件中包含 package.json 文件， <code>npm install</code> 安装包含的glup和laravel-elixir</p>\n<h4 id=\"Elixir-使用\"><a href=\"#Elixir-使用\" class=\"headerlink\" title=\"Elixir 使用\"></a>Elixir 使用</h4><p>包含 <code>gulpfile.js</code>文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">elixir(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mix</span>) </span>&#123;</span><br><span class=\"line\">    mix.less(<span class=\"string\">'app.less'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>mix.less 任务可以用于编译Less文件，在本例中该文件名为 app.less ，这个文件位于 resources/assets/less 目录下，其内容如下</p>\n<p><a href=\"http://www.tuicool.com/articles/YRV7Fz\">Laravel Elixir</a></p>"},{"title":"如何快乐的去工作","date":"2015-10-15T02:58:29.000Z","updated":"2015-10-15T02:58:29.000Z","_content":"\n## 如何快乐的去工作\n\n### 简化工作的高效法则\n\n我们创造了那么多条条框框，中间部门和协调人员，对每个员工进行问责制，之后考核量化kpi，有增加了很多了复杂度。当我责怪一个人的时候，而不是责怪清晰度、问责制、衡量方法的时候，我们在无效之后有增加了很多。<!--more-->\n\n**我们创造的组织，应该让人们觉得合作得益于个人。** 把界限划分、中间部门取消掉，和所有复杂的中间结构。不要强求清晰度，选择模糊（go for fuzziness）。我们要的不适“速度”，而是（how） 怎样去合作，而不是去做很多可量化的事情，而是去想怎么让自己的组织得益于个人。\n\n### 改善工作的快乐之道\n\n是否感觉快乐是，90％是我们的大脑如何理解这个世界的，改变我们关于快乐和成功的定义准则，只有10%是外界影响的，其他的要靠我们自己的行为去改变。\n\n很多学校和社会的组织告诉你，只要你努力了我就会成功，我成功了我就会更快乐。当你成功了之后，比如说你取得很好的成绩，接下来你必须取得更好的成绩；有了一份好工作，你必须下次有个更好的工作，这样才能使你一直保持更快乐。其实这个是错误，落后的观念。如果快乐在成功的相反面，你永远不会得到快乐。我们的大脑在经历这快乐优势论的过程，当大脑出现积极表现，会使你的智商提高、创造力提高、精力也提高了，多巴胺的分泌增加了。多巴胺不仅会让你的感到快乐，同时还可以打开大脑中所有的学习中心，让你另一种方式来适应这个世界。\n\n怎样找到一种方法是我们的大脑更积极，我们会更努力、更快速、更聪明。\n\n> **记日记**－记录过去24小时值得你感恩、成功的事情，大脑过一遍你会更积极\n>\n> **锻炼**－像锻炼身体一样去锻炼大脑\n>\n> **冥想** —克服注意力不集中的问题，专心去处理好一件事情，减少大脑的疲劳\n>\n> **善举**－赞美身边的人，给自己的sns上的朋友发一些赞美的邮件等小的善举\n\n\n\n 积极心理学，积极去的去学习去做一件好的良性循环的事情，持续21天，就会初步养成积极的心里反应，这或许是一场革命。\n\n\n\n### 工作和生活如何平衡（balance）\n\n生活的含义很丰富，在工作和生活中找到平衡点，试图用旅行、运动、以及瑜伽，做50个俯卧撑等来放松自己，但是试问自己，真的有效吗？其实我们忽略了一点：知性生活、精神生活、情感生活，才是这个快节奏的社会中让我们慢下来的方法。寻找平衡点不需要我嘛颠覆原来的生活，和周围的人相处的温暖（comfortable）就好。苦苦寻找的其实就在不经意处。\n\n### 舒缓工作焦虑症的9个TIps（9 ways to feel less anxiou\n\n### at work）\n\n1. 深呼吸，并承认自己的焦虑（take a deep breath and acknowledge that you're anxious）\n2. 别喝咖啡，喝点茶，能让你放松(instead of coffee,caffeine-free chamomile tea,it's relaxing)\n3. 午餐时看自己喜欢的节目(whatch a show you like during lunch break )\n4. 把自己看做一个气球，以七秒为周期进行呼吸转换，这样能消除杂念 (visualize filling up a balloon,exhale in 7-second intervals ，it clears your mind)\n5. 工作间隙抽出十分钟来进行放松(take ten minutes to yourself during your work day)\n6. 和朋友聊天，聊一些和工作无关的事情（talk with a friend,something unrelated to work)\n7. 别吃糖果，吃点自然食物，比如杏仁儿(instead of sugary treats,try natural energy snacks like almonds !)\n8. 整理桌面(get rid of your clutter)\n9. 重要的是晚上好好睡一觉(make sure to get a good night's sleep)\n","source":"_posts/2015/how-to-happy-work.md","raw":"---\ntitle: 如何快乐的去工作\ndate: 2015-10-15 10:58:29\nupdated: 2015-10-15 10:58:29\ntags: work\ncategories:\n---\n\n## 如何快乐的去工作\n\n### 简化工作的高效法则\n\n我们创造了那么多条条框框，中间部门和协调人员，对每个员工进行问责制，之后考核量化kpi，有增加了很多了复杂度。当我责怪一个人的时候，而不是责怪清晰度、问责制、衡量方法的时候，我们在无效之后有增加了很多。<!--more-->\n\n**我们创造的组织，应该让人们觉得合作得益于个人。** 把界限划分、中间部门取消掉，和所有复杂的中间结构。不要强求清晰度，选择模糊（go for fuzziness）。我们要的不适“速度”，而是（how） 怎样去合作，而不是去做很多可量化的事情，而是去想怎么让自己的组织得益于个人。\n\n### 改善工作的快乐之道\n\n是否感觉快乐是，90％是我们的大脑如何理解这个世界的，改变我们关于快乐和成功的定义准则，只有10%是外界影响的，其他的要靠我们自己的行为去改变。\n\n很多学校和社会的组织告诉你，只要你努力了我就会成功，我成功了我就会更快乐。当你成功了之后，比如说你取得很好的成绩，接下来你必须取得更好的成绩；有了一份好工作，你必须下次有个更好的工作，这样才能使你一直保持更快乐。其实这个是错误，落后的观念。如果快乐在成功的相反面，你永远不会得到快乐。我们的大脑在经历这快乐优势论的过程，当大脑出现积极表现，会使你的智商提高、创造力提高、精力也提高了，多巴胺的分泌增加了。多巴胺不仅会让你的感到快乐，同时还可以打开大脑中所有的学习中心，让你另一种方式来适应这个世界。\n\n怎样找到一种方法是我们的大脑更积极，我们会更努力、更快速、更聪明。\n\n> **记日记**－记录过去24小时值得你感恩、成功的事情，大脑过一遍你会更积极\n>\n> **锻炼**－像锻炼身体一样去锻炼大脑\n>\n> **冥想** —克服注意力不集中的问题，专心去处理好一件事情，减少大脑的疲劳\n>\n> **善举**－赞美身边的人，给自己的sns上的朋友发一些赞美的邮件等小的善举\n\n\n\n 积极心理学，积极去的去学习去做一件好的良性循环的事情，持续21天，就会初步养成积极的心里反应，这或许是一场革命。\n\n\n\n### 工作和生活如何平衡（balance）\n\n生活的含义很丰富，在工作和生活中找到平衡点，试图用旅行、运动、以及瑜伽，做50个俯卧撑等来放松自己，但是试问自己，真的有效吗？其实我们忽略了一点：知性生活、精神生活、情感生活，才是这个快节奏的社会中让我们慢下来的方法。寻找平衡点不需要我嘛颠覆原来的生活，和周围的人相处的温暖（comfortable）就好。苦苦寻找的其实就在不经意处。\n\n### 舒缓工作焦虑症的9个TIps（9 ways to feel less anxiou\n\n### at work）\n\n1. 深呼吸，并承认自己的焦虑（take a deep breath and acknowledge that you're anxious）\n2. 别喝咖啡，喝点茶，能让你放松(instead of coffee,caffeine-free chamomile tea,it's relaxing)\n3. 午餐时看自己喜欢的节目(whatch a show you like during lunch break )\n4. 把自己看做一个气球，以七秒为周期进行呼吸转换，这样能消除杂念 (visualize filling up a balloon,exhale in 7-second intervals ，it clears your mind)\n5. 工作间隙抽出十分钟来进行放松(take ten minutes to yourself during your work day)\n6. 和朋友聊天，聊一些和工作无关的事情（talk with a friend,something unrelated to work)\n7. 别吃糖果，吃点自然食物，比如杏仁儿(instead of sugary treats,try natural energy snacks like almonds !)\n8. 整理桌面(get rid of your clutter)\n9. 重要的是晚上好好睡一觉(make sure to get a good night's sleep)\n","slug":"how-to-happy-work","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp92000wwsnntuqxt5m6","content":"<h2 id=\"如何快乐的去工作\"><a href=\"#如何快乐的去工作\" class=\"headerlink\" title=\"如何快乐的去工作\"></a>如何快乐的去工作</h2><h3 id=\"简化工作的高效法则\"><a href=\"#简化工作的高效法则\" class=\"headerlink\" title=\"简化工作的高效法则\"></a>简化工作的高效法则</h3><p>我们创造了那么多条条框框，中间部门和协调人员，对每个员工进行问责制，之后考核量化kpi，有增加了很多了复杂度。当我责怪一个人的时候，而不是责怪清晰度、问责制、衡量方法的时候，我们在无效之后有增加了很多。<a id=\"more\"></a></p>\n<p><strong>我们创造的组织，应该让人们觉得合作得益于个人。</strong> 把界限划分、中间部门取消掉，和所有复杂的中间结构。不要强求清晰度，选择模糊（go for fuzziness）。我们要的不适“速度”，而是（how） 怎样去合作，而不是去做很多可量化的事情，而是去想怎么让自己的组织得益于个人。</p>\n<h3 id=\"改善工作的快乐之道\"><a href=\"#改善工作的快乐之道\" class=\"headerlink\" title=\"改善工作的快乐之道\"></a>改善工作的快乐之道</h3><p>是否感觉快乐是，90％是我们的大脑如何理解这个世界的，改变我们关于快乐和成功的定义准则，只有10%是外界影响的，其他的要靠我们自己的行为去改变。</p>\n<p>很多学校和社会的组织告诉你，只要你努力了我就会成功，我成功了我就会更快乐。当你成功了之后，比如说你取得很好的成绩，接下来你必须取得更好的成绩；有了一份好工作，你必须下次有个更好的工作，这样才能使你一直保持更快乐。其实这个是错误，落后的观念。如果快乐在成功的相反面，你永远不会得到快乐。我们的大脑在经历这快乐优势论的过程，当大脑出现积极表现，会使你的智商提高、创造力提高、精力也提高了，多巴胺的分泌增加了。多巴胺不仅会让你的感到快乐，同时还可以打开大脑中所有的学习中心，让你另一种方式来适应这个世界。</p>\n<p>怎样找到一种方法是我们的大脑更积极，我们会更努力、更快速、更聪明。</p>\n<blockquote>\n<p><strong>记日记</strong>－记录过去24小时值得你感恩、成功的事情，大脑过一遍你会更积极</p>\n<p><strong>锻炼</strong>－像锻炼身体一样去锻炼大脑</p>\n<p><strong>冥想</strong> —克服注意力不集中的问题，专心去处理好一件事情，减少大脑的疲劳</p>\n<p><strong>善举</strong>－赞美身边的人，给自己的sns上的朋友发一些赞美的邮件等小的善举</p>\n</blockquote>\n<p> 积极心理学，积极去的去学习去做一件好的良性循环的事情，持续21天，就会初步养成积极的心里反应，这或许是一场革命。</p>\n<h3 id=\"工作和生活如何平衡（balance）\"><a href=\"#工作和生活如何平衡（balance）\" class=\"headerlink\" title=\"工作和生活如何平衡（balance）\"></a>工作和生活如何平衡（balance）</h3><p>生活的含义很丰富，在工作和生活中找到平衡点，试图用旅行、运动、以及瑜伽，做50个俯卧撑等来放松自己，但是试问自己，真的有效吗？其实我们忽略了一点：知性生活、精神生活、情感生活，才是这个快节奏的社会中让我们慢下来的方法。寻找平衡点不需要我嘛颠覆原来的生活，和周围的人相处的温暖（comfortable）就好。苦苦寻找的其实就在不经意处。</p>\n<h3 id=\"舒缓工作焦虑症的9个TIps（9-ways-to-feel-less-anxiou\"><a href=\"#舒缓工作焦虑症的9个TIps（9-ways-to-feel-less-anxiou\" class=\"headerlink\" title=\"舒缓工作焦虑症的9个TIps（9 ways to feel less anxiou\"></a>舒缓工作焦虑症的9个TIps（9 ways to feel less anxiou</h3><h3 id=\"at-work）\"><a href=\"#at-work）\" class=\"headerlink\" title=\"at work）\"></a>at work）</h3><ol>\n<li>深呼吸，并承认自己的焦虑（take a deep breath and acknowledge that you’re anxious）</li>\n<li>别喝咖啡，喝点茶，能让你放松(instead of coffee,caffeine-free chamomile tea,it’s relaxing)</li>\n<li>午餐时看自己喜欢的节目(whatch a show you like during lunch break )</li>\n<li>把自己看做一个气球，以七秒为周期进行呼吸转换，这样能消除杂念 (visualize filling up a balloon,exhale in 7-second intervals ，it clears your mind)</li>\n<li>工作间隙抽出十分钟来进行放松(take ten minutes to yourself during your work day)</li>\n<li>和朋友聊天，聊一些和工作无关的事情（talk with a friend,something unrelated to work)</li>\n<li>别吃糖果，吃点自然食物，比如杏仁儿(instead of sugary treats,try natural energy snacks like almonds !)</li>\n<li>整理桌面(get rid of your clutter)</li>\n<li>重要的是晚上好好睡一觉(make sure to get a good night’s sleep)</li>\n</ol>\n","excerpt":"<h2 id=\"如何快乐的去工作\"><a href=\"#如何快乐的去工作\" class=\"headerlink\" title=\"如何快乐的去工作\"></a>如何快乐的去工作</h2><h3 id=\"简化工作的高效法则\"><a href=\"#简化工作的高效法则\" class=\"headerlink\" title=\"简化工作的高效法则\"></a>简化工作的高效法则</h3><p>我们创造了那么多条条框框，中间部门和协调人员，对每个员工进行问责制，之后考核量化kpi，有增加了很多了复杂度。当我责怪一个人的时候，而不是责怪清晰度、问责制、衡量方法的时候，我们在无效之后有增加了很多。","more":"</p>\n<p><strong>我们创造的组织，应该让人们觉得合作得益于个人。</strong> 把界限划分、中间部门取消掉，和所有复杂的中间结构。不要强求清晰度，选择模糊（go for fuzziness）。我们要的不适“速度”，而是（how） 怎样去合作，而不是去做很多可量化的事情，而是去想怎么让自己的组织得益于个人。</p>\n<h3 id=\"改善工作的快乐之道\"><a href=\"#改善工作的快乐之道\" class=\"headerlink\" title=\"改善工作的快乐之道\"></a>改善工作的快乐之道</h3><p>是否感觉快乐是，90％是我们的大脑如何理解这个世界的，改变我们关于快乐和成功的定义准则，只有10%是外界影响的，其他的要靠我们自己的行为去改变。</p>\n<p>很多学校和社会的组织告诉你，只要你努力了我就会成功，我成功了我就会更快乐。当你成功了之后，比如说你取得很好的成绩，接下来你必须取得更好的成绩；有了一份好工作，你必须下次有个更好的工作，这样才能使你一直保持更快乐。其实这个是错误，落后的观念。如果快乐在成功的相反面，你永远不会得到快乐。我们的大脑在经历这快乐优势论的过程，当大脑出现积极表现，会使你的智商提高、创造力提高、精力也提高了，多巴胺的分泌增加了。多巴胺不仅会让你的感到快乐，同时还可以打开大脑中所有的学习中心，让你另一种方式来适应这个世界。</p>\n<p>怎样找到一种方法是我们的大脑更积极，我们会更努力、更快速、更聪明。</p>\n<blockquote>\n<p><strong>记日记</strong>－记录过去24小时值得你感恩、成功的事情，大脑过一遍你会更积极</p>\n<p><strong>锻炼</strong>－像锻炼身体一样去锻炼大脑</p>\n<p><strong>冥想</strong> —克服注意力不集中的问题，专心去处理好一件事情，减少大脑的疲劳</p>\n<p><strong>善举</strong>－赞美身边的人，给自己的sns上的朋友发一些赞美的邮件等小的善举</p>\n</blockquote>\n<p> 积极心理学，积极去的去学习去做一件好的良性循环的事情，持续21天，就会初步养成积极的心里反应，这或许是一场革命。</p>\n<h3 id=\"工作和生活如何平衡（balance）\"><a href=\"#工作和生活如何平衡（balance）\" class=\"headerlink\" title=\"工作和生活如何平衡（balance）\"></a>工作和生活如何平衡（balance）</h3><p>生活的含义很丰富，在工作和生活中找到平衡点，试图用旅行、运动、以及瑜伽，做50个俯卧撑等来放松自己，但是试问自己，真的有效吗？其实我们忽略了一点：知性生活、精神生活、情感生活，才是这个快节奏的社会中让我们慢下来的方法。寻找平衡点不需要我嘛颠覆原来的生活，和周围的人相处的温暖（comfortable）就好。苦苦寻找的其实就在不经意处。</p>\n<h3 id=\"舒缓工作焦虑症的9个TIps（9-ways-to-feel-less-anxiou\"><a href=\"#舒缓工作焦虑症的9个TIps（9-ways-to-feel-less-anxiou\" class=\"headerlink\" title=\"舒缓工作焦虑症的9个TIps（9 ways to feel less anxiou\"></a>舒缓工作焦虑症的9个TIps（9 ways to feel less anxiou</h3><h3 id=\"at-work）\"><a href=\"#at-work）\" class=\"headerlink\" title=\"at work）\"></a>at work）</h3><ol>\n<li>深呼吸，并承认自己的焦虑（take a deep breath and acknowledge that you’re anxious）</li>\n<li>别喝咖啡，喝点茶，能让你放松(instead of coffee,caffeine-free chamomile tea,it’s relaxing)</li>\n<li>午餐时看自己喜欢的节目(whatch a show you like during lunch break )</li>\n<li>把自己看做一个气球，以七秒为周期进行呼吸转换，这样能消除杂念 (visualize filling up a balloon,exhale in 7-second intervals ，it clears your mind)</li>\n<li>工作间隙抽出十分钟来进行放松(take ten minutes to yourself during your work day)</li>\n<li>和朋友聊天，聊一些和工作无关的事情（talk with a friend,something unrelated to work)</li>\n<li>别吃糖果，吃点自然食物，比如杏仁儿(instead of sugary treats,try natural energy snacks like almonds !)</li>\n<li>整理桌面(get rid of your clutter)</li>\n<li>重要的是晚上好好睡一觉(make sure to get a good night’s sleep)</li>\n</ol>"},{"layout":"scaffold","title":"怎样会来事？","date":"2015-06-21T09:25:46.000Z","_content":"\n## 何为会来事？\n创造双赢局面甚至创造多赢局面。那种总是能够看透那些不明显的利益取向，进而创造出来多赢的局面来。\n1.即便你完全不会来事，只能独来独往，现在的这个世界也会给你一条还算不错的的路。\n2.只要认真面对，在任何环境里，都能知道办法创造多赢的局面。<!-- more -->\n3.我知道不会来事确实很吃亏……\n4.善于创造多赢局面，好多研究一下，好好实践。\n5.全无恶意，是坦荡的根本\n\n### 社交\n所谓的”面子“获取一切，想得美。其实应该自己本身是有价值的。看看幼儿园的小朋友交换玩具就知道了，多的和少的，甚至没有的，他都会有分别心的，那个是好好朋友那个不是。\n所有的人都喜欢甚至偏爱一种交换--公平交换\n\n\n> - 所谓的友谊其实是一种某种意义上的一种“交换关系”。培养自己的交换价值，你才能赢取更多。\n> - 不是因为他们要好才各自变得优秀，而是因为他们都很优秀才会非常要好。\n> - 面对求人，或者求己的情况，要承认自己能力有限，是保持心理健康的前提。\n> - 而一个人的能力越是渺小，他的欲望就会显得越发强烈。\n> - 针对个体来说，比人脉更重要的是他拥有的资源。\n\n\n那么总结起来，可以概括：\n1.专心做自己可以提升自己的事情，学习并拥有更多、更好的技能，成为一个其他人都值得交往的人。\n2.学会独善其身，以不给他人制造麻烦为美德，用自己的独立赢得尊重。\n\n### 其实自己在工作生活的认真思考，好好分享出来，本身就会赢得更多。而不是总是关注那些离自己很远的事情，形而无用的东西。\n","source":"_posts/2015/hui-lai-shi.md","raw":"layout: scaffold\ntitle: 怎样会来事？\ndate: 2015-06-21 17:25:46\ntags:\n---\n\n## 何为会来事？\n创造双赢局面甚至创造多赢局面。那种总是能够看透那些不明显的利益取向，进而创造出来多赢的局面来。\n1.即便你完全不会来事，只能独来独往，现在的这个世界也会给你一条还算不错的的路。\n2.只要认真面对，在任何环境里，都能知道办法创造多赢的局面。<!-- more -->\n3.我知道不会来事确实很吃亏……\n4.善于创造多赢局面，好多研究一下，好好实践。\n5.全无恶意，是坦荡的根本\n\n### 社交\n所谓的”面子“获取一切，想得美。其实应该自己本身是有价值的。看看幼儿园的小朋友交换玩具就知道了，多的和少的，甚至没有的，他都会有分别心的，那个是好好朋友那个不是。\n所有的人都喜欢甚至偏爱一种交换--公平交换\n\n\n> - 所谓的友谊其实是一种某种意义上的一种“交换关系”。培养自己的交换价值，你才能赢取更多。\n> - 不是因为他们要好才各自变得优秀，而是因为他们都很优秀才会非常要好。\n> - 面对求人，或者求己的情况，要承认自己能力有限，是保持心理健康的前提。\n> - 而一个人的能力越是渺小，他的欲望就会显得越发强烈。\n> - 针对个体来说，比人脉更重要的是他拥有的资源。\n\n\n那么总结起来，可以概括：\n1.专心做自己可以提升自己的事情，学习并拥有更多、更好的技能，成为一个其他人都值得交往的人。\n2.学会独善其身，以不给他人制造麻烦为美德，用自己的独立赢得尊重。\n\n### 其实自己在工作生活的认真思考，好好分享出来，本身就会赢得更多。而不是总是关注那些离自己很远的事情，形而无用的东西。\n","slug":"hui-lai-shi","published":1,"updated":"2017-01-04T03:53:16.142Z","comments":1,"photos":[],"link":"","_id":"cixitbp92000ywsnnqkp6l5qq","content":"<h2 id=\"何为会来事？\"><a href=\"#何为会来事？\" class=\"headerlink\" title=\"何为会来事？\"></a>何为会来事？</h2><p>创造双赢局面甚至创造多赢局面。那种总是能够看透那些不明显的利益取向，进而创造出来多赢的局面来。<br>1.即便你完全不会来事，只能独来独往，现在的这个世界也会给你一条还算不错的的路。<br>2.只要认真面对，在任何环境里，都能知道办法创造多赢的局面。<a id=\"more\"></a><br>3.我知道不会来事确实很吃亏……<br>4.善于创造多赢局面，好多研究一下，好好实践。<br>5.全无恶意，是坦荡的根本</p>\n<h3 id=\"社交\"><a href=\"#社交\" class=\"headerlink\" title=\"社交\"></a>社交</h3><p>所谓的”面子“获取一切，想得美。其实应该自己本身是有价值的。看看幼儿园的小朋友交换玩具就知道了，多的和少的，甚至没有的，他都会有分别心的，那个是好好朋友那个不是。<br>所有的人都喜欢甚至偏爱一种交换–公平交换</p>\n<blockquote>\n<ul>\n<li>所谓的友谊其实是一种某种意义上的一种“交换关系”。培养自己的交换价值，你才能赢取更多。</li>\n<li>不是因为他们要好才各自变得优秀，而是因为他们都很优秀才会非常要好。</li>\n<li>面对求人，或者求己的情况，要承认自己能力有限，是保持心理健康的前提。</li>\n<li>而一个人的能力越是渺小，他的欲望就会显得越发强烈。</li>\n<li>针对个体来说，比人脉更重要的是他拥有的资源。</li>\n</ul>\n</blockquote>\n<p>那么总结起来，可以概括：<br>1.专心做自己可以提升自己的事情，学习并拥有更多、更好的技能，成为一个其他人都值得交往的人。<br>2.学会独善其身，以不给他人制造麻烦为美德，用自己的独立赢得尊重。</p>\n<h3 id=\"其实自己在工作生活的认真思考，好好分享出来，本身就会赢得更多。而不是总是关注那些离自己很远的事情，形而无用的东西。\"><a href=\"#其实自己在工作生活的认真思考，好好分享出来，本身就会赢得更多。而不是总是关注那些离自己很远的事情，形而无用的东西。\" class=\"headerlink\" title=\"其实自己在工作生活的认真思考，好好分享出来，本身就会赢得更多。而不是总是关注那些离自己很远的事情，形而无用的东西。\"></a>其实自己在工作生活的认真思考，好好分享出来，本身就会赢得更多。而不是总是关注那些离自己很远的事情，形而无用的东西。</h3>","excerpt":"<h2 id=\"何为会来事？\"><a href=\"#何为会来事？\" class=\"headerlink\" title=\"何为会来事？\"></a>何为会来事？</h2><p>创造双赢局面甚至创造多赢局面。那种总是能够看透那些不明显的利益取向，进而创造出来多赢的局面来。<br>1.即便你完全不会来事，只能独来独往，现在的这个世界也会给你一条还算不错的的路。<br>2.只要认真面对，在任何环境里，都能知道办法创造多赢的局面。","more":"<br>3.我知道不会来事确实很吃亏……<br>4.善于创造多赢局面，好多研究一下，好好实践。<br>5.全无恶意，是坦荡的根本</p>\n<h3 id=\"社交\"><a href=\"#社交\" class=\"headerlink\" title=\"社交\"></a>社交</h3><p>所谓的”面子“获取一切，想得美。其实应该自己本身是有价值的。看看幼儿园的小朋友交换玩具就知道了，多的和少的，甚至没有的，他都会有分别心的，那个是好好朋友那个不是。<br>所有的人都喜欢甚至偏爱一种交换–公平交换</p>\n<blockquote>\n<ul>\n<li>所谓的友谊其实是一种某种意义上的一种“交换关系”。培养自己的交换价值，你才能赢取更多。</li>\n<li>不是因为他们要好才各自变得优秀，而是因为他们都很优秀才会非常要好。</li>\n<li>面对求人，或者求己的情况，要承认自己能力有限，是保持心理健康的前提。</li>\n<li>而一个人的能力越是渺小，他的欲望就会显得越发强烈。</li>\n<li>针对个体来说，比人脉更重要的是他拥有的资源。</li>\n</ul>\n</blockquote>\n<p>那么总结起来，可以概括：<br>1.专心做自己可以提升自己的事情，学习并拥有更多、更好的技能，成为一个其他人都值得交往的人。<br>2.学会独善其身，以不给他人制造麻烦为美德，用自己的独立赢得尊重。</p>\n<h3 id=\"其实自己在工作生活的认真思考，好好分享出来，本身就会赢得更多。而不是总是关注那些离自己很远的事情，形而无用的东西。\"><a href=\"#其实自己在工作生活的认真思考，好好分享出来，本身就会赢得更多。而不是总是关注那些离自己很远的事情，形而无用的东西。\" class=\"headerlink\" title=\"其实自己在工作生活的认真思考，好好分享出来，本身就会赢得更多。而不是总是关注那些离自己很远的事情，形而无用的东西。\"></a>其实自己在工作生活的认真思考，好好分享出来，本身就会赢得更多。而不是总是关注那些离自己很远的事情，形而无用的东西。</h3>"},{"title":"mac 常见环境安装配置","date":"2015-07-29T05:42:55.000Z","updated":"2015-07-29T05:42:55.000Z","_content":"\n## Homebrew\n``` bash\n  //install\n  ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n  //use\n  brew search /apache*/\n  brew install wget\n  brew uninstall wget\n\n```\n> [官网](http://brew.sh/)\n\n<!--more-->\n## zsh bash\n```bash\n   sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n｀cat /etc/shells｀ 查看所有的sh\n`chsh -s /bin/bash`  或者 `chsh -s /bin/zsh`\n\n[zsh](http://ohmyz.sh/)\n## apache\nmac自带一个版本，如果安装新的\n```bash\n  brew install apache\n```\n\n## nginx\n自动安装依赖\n``` bash\n  brew install nginx\n\n  sudo nginx\n  nginx -s reload|reopen|stop|quit\n  nginx -t\n```\n默认启用的8080端口，可以更改配置文件来设置端口。\n```bash\n  vim /usr/local/etc/nginx/nginx.conf\n```\n默认访问目录：\n```bash\n  /usr/local/Cellar/nginx/$version/html\n```\n## mysql\n```bash\n  brew install mysql\n```\n安装完成之后：\nWe've installed your MySQL database without a root password. To secure it run:\n    `mysql_secure_installation`\nTo connect run:\n    `mysql -uroot`\nTo have launchd start mysql now and restart at login:\n  `brew services start mysql`\nOr, if you don't want/need a background service you can just run:\n  `mysql.server start`\n\n在5.7版本之后，其自动初始化数据库，用｀mysql.erver start｀ 启动 ，`mysql -uroot` 链接使用.\n在之前的需要初始化数据库。\n``` bash\nmysql_install_db --verbose --user='whoami' --basedir=\"$(brew --prefix mysql)\" --datadir=/usr/local/var/mysql --tmpdir=/tmp\n```\n`mysqladmin -u root password 'password'`\n\n## php\n\n> [参考](https://github.com/Homebrew/homebrew-php)\n安装完成之后：\n\nTo enable PHP in Apache add the following to httpd.conf and restart Apache:\n    `LoadModule php5_module    /usr/local/opt/php56/libexec/apache2/libphp5.so`\n\nThe php.ini file can be found in:\n    `/usr/local/etc/php/5.6/php.ini`\n\n✩✩✩✩ Extensions ✩✩✩✩\n\nIf you are having issues with custom extension compiling, ensure that\nyou are using the brew version, by placing /usr/local/bin before /usr/sbin in your PATH:\n\n      PATH=\"/usr/local/bin:$PATH\"\n\nPHP56 Extensions will always be compiled against this PHP. Please install them\nusing --without-homebrew-php to enable compiling against system PHP.\n\n✩✩✩✩ PHP CLI ✩✩✩✩\n\nIf you wish to swap the PHP you use on the command line, you should add the following to ~/.bashrc,\n~/.zshrc, ~/.profile or your shell's equivalent configuration file:\n\n      export PATH=\"$(brew --prefix homebrew/php/php56)/bin:$PATH\"\n\n✩✩✩✩ FPM ✩✩✩✩\n\n加入launchctl启动控制\nTo launch php-fpm on startup:\n    mkdir -p ~/Library/LaunchAgents\n    cp /usr/local/opt/php56/homebrew.mxcl.php56.plist ~/Library/LaunchAgents/\n    launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.php56.plist\n\nThe control script is located at /usr/local/opt/php56/sbin/php56-fpm\n\nOS X 10.8 and newer come with php-fpm pre-installed, to ensure you are using the brew version you need to make sure /usr/local/sbin is before /usr/sbin in your PATH:\n\n  PATH=\"/usr/local/sbin:$PATH\"\n\nYou may also need to edit the plist to use the correct \"UserName\".\n\nPlease note that the plist was called 'homebrew-php.josegonzalez.php56.plist' in old versions\nof this formula.\n\nTo have launchd start homebrew/php/php56 now and restart at login:\n  brew services start homebrew/php/php56\n  brew services restart homebrew/php/php56\n\n\n\n## mac 的一些工具\n\n```bash\n  cd ~\n  //自己的环境变量\n  curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile\n  // 一些颜色设置，并不好用（可选）\n  # curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt\n  //unix的自定义别名\n  curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases\n\n```\n一些工具替换产品\n> - Terminal → [iTerm](https://www.iterm2.com/)\n> - Finder → [TotalFinder](http://totalfinder.binaryage.com/) / [Path Finder](http://www.cocoatech.com/pathfinder/)\n> - Spotlight → [QuickSilver](https://qsapp.com/) / [Alfred](https://www.alfredapp.com/)\n\n[Terminal cheatsheet](https://github.com/0nn0/terminal-mac-cheatsheet)\n\n## xcode\nxcode-select --install\n\n## rvm\n```bash\n  curl -sSL https://get.rvm.io | bash -s stable\n  rvm install 2.3.1\n  rvm use 2.3.1\n```\n## nvm\n\n```bash\n  brew install nvm\n  nvm install 4\n  nvm use 4\n```\n\n## atom\n```bash\n  brew cask install atom\n\n```\n","source":"_posts/2015/mac-web.md","raw":"---\ntitle: mac 常见环境安装配置\ndate: 2015-07-29 13:42:55\nupdated: 2015-07-29 13:42:55\ntags:\ncategories:\n---\n\n## Homebrew\n``` bash\n  //install\n  ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n  //use\n  brew search /apache*/\n  brew install wget\n  brew uninstall wget\n\n```\n> [官网](http://brew.sh/)\n\n<!--more-->\n## zsh bash\n```bash\n   sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n｀cat /etc/shells｀ 查看所有的sh\n`chsh -s /bin/bash`  或者 `chsh -s /bin/zsh`\n\n[zsh](http://ohmyz.sh/)\n## apache\nmac自带一个版本，如果安装新的\n```bash\n  brew install apache\n```\n\n## nginx\n自动安装依赖\n``` bash\n  brew install nginx\n\n  sudo nginx\n  nginx -s reload|reopen|stop|quit\n  nginx -t\n```\n默认启用的8080端口，可以更改配置文件来设置端口。\n```bash\n  vim /usr/local/etc/nginx/nginx.conf\n```\n默认访问目录：\n```bash\n  /usr/local/Cellar/nginx/$version/html\n```\n## mysql\n```bash\n  brew install mysql\n```\n安装完成之后：\nWe've installed your MySQL database without a root password. To secure it run:\n    `mysql_secure_installation`\nTo connect run:\n    `mysql -uroot`\nTo have launchd start mysql now and restart at login:\n  `brew services start mysql`\nOr, if you don't want/need a background service you can just run:\n  `mysql.server start`\n\n在5.7版本之后，其自动初始化数据库，用｀mysql.erver start｀ 启动 ，`mysql -uroot` 链接使用.\n在之前的需要初始化数据库。\n``` bash\nmysql_install_db --verbose --user='whoami' --basedir=\"$(brew --prefix mysql)\" --datadir=/usr/local/var/mysql --tmpdir=/tmp\n```\n`mysqladmin -u root password 'password'`\n\n## php\n\n> [参考](https://github.com/Homebrew/homebrew-php)\n安装完成之后：\n\nTo enable PHP in Apache add the following to httpd.conf and restart Apache:\n    `LoadModule php5_module    /usr/local/opt/php56/libexec/apache2/libphp5.so`\n\nThe php.ini file can be found in:\n    `/usr/local/etc/php/5.6/php.ini`\n\n✩✩✩✩ Extensions ✩✩✩✩\n\nIf you are having issues with custom extension compiling, ensure that\nyou are using the brew version, by placing /usr/local/bin before /usr/sbin in your PATH:\n\n      PATH=\"/usr/local/bin:$PATH\"\n\nPHP56 Extensions will always be compiled against this PHP. Please install them\nusing --without-homebrew-php to enable compiling against system PHP.\n\n✩✩✩✩ PHP CLI ✩✩✩✩\n\nIf you wish to swap the PHP you use on the command line, you should add the following to ~/.bashrc,\n~/.zshrc, ~/.profile or your shell's equivalent configuration file:\n\n      export PATH=\"$(brew --prefix homebrew/php/php56)/bin:$PATH\"\n\n✩✩✩✩ FPM ✩✩✩✩\n\n加入launchctl启动控制\nTo launch php-fpm on startup:\n    mkdir -p ~/Library/LaunchAgents\n    cp /usr/local/opt/php56/homebrew.mxcl.php56.plist ~/Library/LaunchAgents/\n    launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.php56.plist\n\nThe control script is located at /usr/local/opt/php56/sbin/php56-fpm\n\nOS X 10.8 and newer come with php-fpm pre-installed, to ensure you are using the brew version you need to make sure /usr/local/sbin is before /usr/sbin in your PATH:\n\n  PATH=\"/usr/local/sbin:$PATH\"\n\nYou may also need to edit the plist to use the correct \"UserName\".\n\nPlease note that the plist was called 'homebrew-php.josegonzalez.php56.plist' in old versions\nof this formula.\n\nTo have launchd start homebrew/php/php56 now and restart at login:\n  brew services start homebrew/php/php56\n  brew services restart homebrew/php/php56\n\n\n\n## mac 的一些工具\n\n```bash\n  cd ~\n  //自己的环境变量\n  curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile\n  // 一些颜色设置，并不好用（可选）\n  # curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt\n  //unix的自定义别名\n  curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases\n\n```\n一些工具替换产品\n> - Terminal → [iTerm](https://www.iterm2.com/)\n> - Finder → [TotalFinder](http://totalfinder.binaryage.com/) / [Path Finder](http://www.cocoatech.com/pathfinder/)\n> - Spotlight → [QuickSilver](https://qsapp.com/) / [Alfred](https://www.alfredapp.com/)\n\n[Terminal cheatsheet](https://github.com/0nn0/terminal-mac-cheatsheet)\n\n## xcode\nxcode-select --install\n\n## rvm\n```bash\n  curl -sSL https://get.rvm.io | bash -s stable\n  rvm install 2.3.1\n  rvm use 2.3.1\n```\n## nvm\n\n```bash\n  brew install nvm\n  nvm install 4\n  nvm use 4\n```\n\n## atom\n```bash\n  brew cask install atom\n\n```\n","slug":"mac-web","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp92000zwsnne7xd3706","content":"<h2 id=\"Homebrew\"><a href=\"#Homebrew\" class=\"headerlink\" title=\"Homebrew\"></a>Homebrew</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//install</span><br><span class=\"line\">ruby <span class=\"_\">-e</span> <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">//use</span><br><span class=\"line\">brew search /apache*/</span><br><span class=\"line\">brew install wget</span><br><span class=\"line\">brew uninstall wget</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"http://brew.sh/\" target=\"_blank\" rel=\"external\">官网</a></p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"zsh-bash\"><a href=\"#zsh-bash\" class=\"headerlink\" title=\"zsh bash\"></a>zsh bash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span></span><br></pre></td></tr></table></figure>\n<p>｀cat /etc/shells｀ 查看所有的sh<br><code>chsh -s /bin/bash</code>  或者 <code>chsh -s /bin/zsh</code></p>\n<p><a href=\"http://ohmyz.sh/\" target=\"_blank\" rel=\"external\">zsh</a></p>\n<h2 id=\"apache\"><a href=\"#apache\" class=\"headerlink\" title=\"apache\"></a>apache</h2><p>mac自带一个版本，如果安装新的<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install apache</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h2><p>自动安装依赖<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install nginx</span><br><span class=\"line\"></span><br><span class=\"line\">sudo nginx</span><br><span class=\"line\">nginx <span class=\"_\">-s</span> reload|reopen|stop|quit</span><br><span class=\"line\">nginx -t</span><br></pre></td></tr></table></figure></p>\n<p>默认启用的8080端口，可以更改配置文件来设置端口。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/<span class=\"built_in\">local</span>/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure></p>\n<p>默认访问目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/<span class=\"built_in\">local</span>/Cellar/nginx/<span class=\"variable\">$version</span>/html</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"mysql\"><a href=\"#mysql\" class=\"headerlink\" title=\"mysql\"></a>mysql</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install mysql</span><br></pre></td></tr></table></figure>\n<p>安装完成之后：<br>We’ve installed your MySQL database without a root password. To secure it run:<br>    <code>mysql_secure_installation</code><br>To connect run:<br>    <code>mysql -uroot</code><br>To have launchd start mysql now and restart at login:<br>  <code>brew services start mysql</code><br>Or, if you don’t want/need a background service you can just run:<br>  <code>mysql.server start</code></p>\n<p>在5.7版本之后，其自动初始化数据库，用｀mysql.erver start｀ 启动 ，<code>mysql -uroot</code> 链接使用.<br>在之前的需要初始化数据库。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql_install_db --verbose --user=<span class=\"string\">'whoami'</span> --basedir=<span class=\"string\">\"<span class=\"variable\">$(brew --prefix mysql)</span>\"</span> --datadir=/usr/<span class=\"built_in\">local</span>/var/mysql --tmpdir=/tmp</span><br></pre></td></tr></table></figure></p>\n<p><code>mysqladmin -u root password &#39;password&#39;</code></p>\n<h2 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php\"></a>php</h2><blockquote>\n<p><a href=\"https://github.com/Homebrew/homebrew-php\" target=\"_blank\" rel=\"external\">参考</a><br>安装完成之后：</p>\n</blockquote>\n<p>To enable PHP in Apache add the following to httpd.conf and restart Apache:<br>    <code>LoadModule php5_module    /usr/local/opt/php56/libexec/apache2/libphp5.so</code></p>\n<p>The php.ini file can be found in:<br>    <code>/usr/local/etc/php/5.6/php.ini</code></p>\n<p>✩✩✩✩ Extensions ✩✩✩✩</p>\n<p>If you are having issues with custom extension compiling, ensure that<br>you are using the brew version, by placing /usr/local/bin before /usr/sbin in your PATH:</p>\n<pre><code>PATH=&quot;/usr/local/bin:$PATH&quot;\n</code></pre><p>PHP56 Extensions will always be compiled against this PHP. Please install them<br>using –without-homebrew-php to enable compiling against system PHP.</p>\n<p>✩✩✩✩ PHP CLI ✩✩✩✩</p>\n<p>If you wish to swap the PHP you use on the command line, you should add the following to ~/.bashrc,<br>~/.zshrc, ~/.profile or your shell’s equivalent configuration file:</p>\n<pre><code>export PATH=&quot;$(brew --prefix homebrew/php/php56)/bin:$PATH&quot;\n</code></pre><p>✩✩✩✩ FPM ✩✩✩✩</p>\n<p>加入launchctl启动控制<br>To launch php-fpm on startup:<br>    mkdir -p ~/Library/LaunchAgents<br>    cp /usr/local/opt/php56/homebrew.mxcl.php56.plist ~/Library/LaunchAgents/<br>    launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.php56.plist</p>\n<p>The control script is located at /usr/local/opt/php56/sbin/php56-fpm</p>\n<p>OS X 10.8 and newer come with php-fpm pre-installed, to ensure you are using the brew version you need to make sure /usr/local/sbin is before /usr/sbin in your PATH:</p>\n<p>  PATH=”/usr/local/sbin:$PATH”</p>\n<p>You may also need to edit the plist to use the correct “UserName”.</p>\n<p>Please note that the plist was called ‘homebrew-php.josegonzalez.php56.plist’ in old versions<br>of this formula.</p>\n<p>To have launchd start homebrew/php/php56 now and restart at login:<br>  brew services start homebrew/php/php56<br>  brew services restart homebrew/php/php56</p>\n<h2 id=\"mac-的一些工具\"><a href=\"#mac-的一些工具\" class=\"headerlink\" title=\"mac 的一些工具\"></a>mac 的一些工具</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">//自己的环境变量</span><br><span class=\"line\">curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile</span><br><span class=\"line\">// 一些颜色设置，并不好用（可选）</span><br><span class=\"line\"><span class=\"comment\"># curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt</span></span><br><span class=\"line\">//unix的自定义别名</span><br><span class=\"line\">curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases</span><br></pre></td></tr></table></figure>\n<p>一些工具替换产品</p>\n<blockquote>\n<ul>\n<li>Terminal → <a href=\"https://www.iterm2.com/\" target=\"_blank\" rel=\"external\">iTerm</a></li>\n<li>Finder → <a href=\"http://totalfinder.binaryage.com/\" target=\"_blank\" rel=\"external\">TotalFinder</a> / <a href=\"http://www.cocoatech.com/pathfinder/\" target=\"_blank\" rel=\"external\">Path Finder</a></li>\n<li>Spotlight → <a href=\"https://qsapp.com/\" target=\"_blank\" rel=\"external\">QuickSilver</a> / <a href=\"https://www.alfredapp.com/\" target=\"_blank\" rel=\"external\">Alfred</a></li>\n</ul>\n</blockquote>\n<p><a href=\"https://github.com/0nn0/terminal-mac-cheatsheet\" target=\"_blank\" rel=\"external\">Terminal cheatsheet</a></p>\n<h2 id=\"xcode\"><a href=\"#xcode\" class=\"headerlink\" title=\"xcode\"></a>xcode</h2><p>xcode-select –install</p>\n<h2 id=\"rvm\"><a href=\"#rvm\" class=\"headerlink\" title=\"rvm\"></a>rvm</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl <span class=\"_\">-s</span>SL https://get.rvm.io | bash <span class=\"_\">-s</span> stable</span><br><span class=\"line\">rvm install 2.3.1</span><br><span class=\"line\">rvm use 2.3.1</span><br></pre></td></tr></table></figure>\n<h2 id=\"nvm\"><a href=\"#nvm\" class=\"headerlink\" title=\"nvm\"></a>nvm</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install nvm</span><br><span class=\"line\">nvm install 4</span><br><span class=\"line\">nvm use 4</span><br></pre></td></tr></table></figure>\n<h2 id=\"atom\"><a href=\"#atom\" class=\"headerlink\" title=\"atom\"></a>atom</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew cask install atom</span><br></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"Homebrew\"><a href=\"#Homebrew\" class=\"headerlink\" title=\"Homebrew\"></a>Homebrew</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//install</span><br><span class=\"line\">ruby <span class=\"_\">-e</span> <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">//use</span><br><span class=\"line\">brew search /apache*/</span><br><span class=\"line\">brew install wget</span><br><span class=\"line\">brew uninstall wget</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"http://brew.sh/\">官网</a></p>\n</blockquote>","more":"<h2 id=\"zsh-bash\"><a href=\"#zsh-bash\" class=\"headerlink\" title=\"zsh bash\"></a>zsh bash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span></span><br></pre></td></tr></table></figure>\n<p>｀cat /etc/shells｀ 查看所有的sh<br><code>chsh -s /bin/bash</code>  或者 <code>chsh -s /bin/zsh</code></p>\n<p><a href=\"http://ohmyz.sh/\">zsh</a></p>\n<h2 id=\"apache\"><a href=\"#apache\" class=\"headerlink\" title=\"apache\"></a>apache</h2><p>mac自带一个版本，如果安装新的<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install apache</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h2><p>自动安装依赖<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install nginx</span><br><span class=\"line\"></span><br><span class=\"line\">sudo nginx</span><br><span class=\"line\">nginx <span class=\"_\">-s</span> reload|reopen|stop|quit</span><br><span class=\"line\">nginx -t</span><br></pre></td></tr></table></figure></p>\n<p>默认启用的8080端口，可以更改配置文件来设置端口。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/<span class=\"built_in\">local</span>/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure></p>\n<p>默认访问目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/<span class=\"built_in\">local</span>/Cellar/nginx/<span class=\"variable\">$version</span>/html</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"mysql\"><a href=\"#mysql\" class=\"headerlink\" title=\"mysql\"></a>mysql</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install mysql</span><br></pre></td></tr></table></figure>\n<p>安装完成之后：<br>We’ve installed your MySQL database without a root password. To secure it run:<br>    <code>mysql_secure_installation</code><br>To connect run:<br>    <code>mysql -uroot</code><br>To have launchd start mysql now and restart at login:<br>  <code>brew services start mysql</code><br>Or, if you don’t want/need a background service you can just run:<br>  <code>mysql.server start</code></p>\n<p>在5.7版本之后，其自动初始化数据库，用｀mysql.erver start｀ 启动 ，<code>mysql -uroot</code> 链接使用.<br>在之前的需要初始化数据库。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql_install_db --verbose --user=<span class=\"string\">'whoami'</span> --basedir=<span class=\"string\">\"<span class=\"variable\">$(brew --prefix mysql)</span>\"</span> --datadir=/usr/<span class=\"built_in\">local</span>/var/mysql --tmpdir=/tmp</span><br></pre></td></tr></table></figure></p>\n<p><code>mysqladmin -u root password &#39;password&#39;</code></p>\n<h2 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php\"></a>php</h2><blockquote>\n<p><a href=\"https://github.com/Homebrew/homebrew-php\">参考</a><br>安装完成之后：</p>\n</blockquote>\n<p>To enable PHP in Apache add the following to httpd.conf and restart Apache:<br>    <code>LoadModule php5_module    /usr/local/opt/php56/libexec/apache2/libphp5.so</code></p>\n<p>The php.ini file can be found in:<br>    <code>/usr/local/etc/php/5.6/php.ini</code></p>\n<p>✩✩✩✩ Extensions ✩✩✩✩</p>\n<p>If you are having issues with custom extension compiling, ensure that<br>you are using the brew version, by placing /usr/local/bin before /usr/sbin in your PATH:</p>\n<pre><code>PATH=&quot;/usr/local/bin:$PATH&quot;\n</code></pre><p>PHP56 Extensions will always be compiled against this PHP. Please install them<br>using –without-homebrew-php to enable compiling against system PHP.</p>\n<p>✩✩✩✩ PHP CLI ✩✩✩✩</p>\n<p>If you wish to swap the PHP you use on the command line, you should add the following to ~/.bashrc,<br>~/.zshrc, ~/.profile or your shell’s equivalent configuration file:</p>\n<pre><code>export PATH=&quot;$(brew --prefix homebrew/php/php56)/bin:$PATH&quot;\n</code></pre><p>✩✩✩✩ FPM ✩✩✩✩</p>\n<p>加入launchctl启动控制<br>To launch php-fpm on startup:<br>    mkdir -p ~/Library/LaunchAgents<br>    cp /usr/local/opt/php56/homebrew.mxcl.php56.plist ~/Library/LaunchAgents/<br>    launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.php56.plist</p>\n<p>The control script is located at /usr/local/opt/php56/sbin/php56-fpm</p>\n<p>OS X 10.8 and newer come with php-fpm pre-installed, to ensure you are using the brew version you need to make sure /usr/local/sbin is before /usr/sbin in your PATH:</p>\n<p>  PATH=”/usr/local/sbin:$PATH”</p>\n<p>You may also need to edit the plist to use the correct “UserName”.</p>\n<p>Please note that the plist was called ‘homebrew-php.josegonzalez.php56.plist’ in old versions<br>of this formula.</p>\n<p>To have launchd start homebrew/php/php56 now and restart at login:<br>  brew services start homebrew/php/php56<br>  brew services restart homebrew/php/php56</p>\n<h2 id=\"mac-的一些工具\"><a href=\"#mac-的一些工具\" class=\"headerlink\" title=\"mac 的一些工具\"></a>mac 的一些工具</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">//自己的环境变量</span><br><span class=\"line\">curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile</span><br><span class=\"line\">// 一些颜色设置，并不好用（可选）</span><br><span class=\"line\"><span class=\"comment\"># curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt</span></span><br><span class=\"line\">//unix的自定义别名</span><br><span class=\"line\">curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases</span><br></pre></td></tr></table></figure>\n<p>一些工具替换产品</p>\n<blockquote>\n<ul>\n<li>Terminal → <a href=\"https://www.iterm2.com/\">iTerm</a></li>\n<li>Finder → <a href=\"http://totalfinder.binaryage.com/\">TotalFinder</a> / <a href=\"http://www.cocoatech.com/pathfinder/\">Path Finder</a></li>\n<li>Spotlight → <a href=\"https://qsapp.com/\">QuickSilver</a> / <a href=\"https://www.alfredapp.com/\">Alfred</a></li>\n</ul>\n</blockquote>\n<p><a href=\"https://github.com/0nn0/terminal-mac-cheatsheet\">Terminal cheatsheet</a></p>\n<h2 id=\"xcode\"><a href=\"#xcode\" class=\"headerlink\" title=\"xcode\"></a>xcode</h2><p>xcode-select –install</p>\n<h2 id=\"rvm\"><a href=\"#rvm\" class=\"headerlink\" title=\"rvm\"></a>rvm</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl <span class=\"_\">-s</span>SL https://get.rvm.io | bash <span class=\"_\">-s</span> stable</span><br><span class=\"line\">rvm install 2.3.1</span><br><span class=\"line\">rvm use 2.3.1</span><br></pre></td></tr></table></figure>\n<h2 id=\"nvm\"><a href=\"#nvm\" class=\"headerlink\" title=\"nvm\"></a>nvm</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install nvm</span><br><span class=\"line\">nvm install 4</span><br><span class=\"line\">nvm use 4</span><br></pre></td></tr></table></figure>\n<h2 id=\"atom\"><a href=\"#atom\" class=\"headerlink\" title=\"atom\"></a>atom</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew cask install atom</span><br></pre></td></tr></table></figure>"},{"title":"Markdown","date":"2015-03-14T16:43:20.000Z","_content":"\n## markdown 在 sublime text 3 中使用\n\n作为Windows/Mac/Linux下强大的文本编辑器，st提供了对Markdown语言的支持。通过设置可实现markdown预览和转换功能。而本文介绍的Markdown Preview支持Mathjax语法和目录自动生成。(Windows下）,\n打开st，按下组合键Control + `，出现控制台，输入\n<!-- more -->\n\n``` bash\n\n\timport  urllib.request,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib.request.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())\n\n```\n\n当看到代码最后一行提示的时候说明安装成功，此时重启st，可在Preferences -> Package Settings看到Package Control。\n安装markdown preview\n按下键Ctrl+Shift+p调出命令面板，找到Package Control: install Pakage这一项。搜索markdown preview，点击安装。\n\n使用\nMarkdown Preview较常用的功能是preview in browser和Export HTML in Sublime Text，前者可以在浏览器看到预览效果，后者可将markdown保存为html文件。\n\npreview in browser据称是实时的，但是实践上还是需要在st保存，然后浏览器刷新才能看到新的效果，好在markdown写得多的话也不需要每敲一行看一次效果。\n\n快捷键\n\n新版本默认快捷键为 * ctrl+shift+m *\n\n旧版本下面配置：\nst支持自定义快捷键，markdown preview默认没有快捷键，我们可以自己为preview in browser设置快捷键。方法是在Preferences -> Key Bindings User打开的文件的中括号中添加以下代码(可在Key Bindings Default找到格式)：\n\n > { \"keys\": [\"alt+m\"], \"command\": \"markdown_preview\", \"args\": { \"target\": \"browser\"} }\n\n\"alt+m\"可设置为自己喜欢的按键。\n\n设置语法高亮和mathjax支持\n在Preferences ->Package Settings->Markdown Preview->Setting Default中的第31行和36行找到\n\n``` config\n\n\t\"enable_mathjax\": false,\n\t\"enable_highlight\": false,\n\n```\n将 两个false改为true即可。\n语法高亮跟编辑器的主题有关，可以在Preferences ->Color Scheme找自己喜欢的主题。\n关于目录生成，只要文章是按照markdown语法写作的。在需要生成目录的地方写\n[TOC]\n即可。\n\n## markdown 语法参考\n\n@changyuan\n\nEmphasis, aka italics, with *asterisks* or _underscores_.\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\nCombined emphasis with **asterisks and _underscores_**.\nStrikethrough uses two tildes. ~~Scratch this.~~\n\n[参考1](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)\n[参考2](https://guides.github.com/features/mastering-markdown/)\n\n\n## emoji表情参考\n:smile::thumbsup::thumbsup:\n~~emo~~\n[emoji表情参考](http://www.emoji-cheat-sheet.com/)\n","source":"_posts/2015/markdown.md","raw":"---\ntitle: Markdown\ndate: 2015-03-15 00:43:20\ntags:\n- tools\ncategories:\n---\n\n## markdown 在 sublime text 3 中使用\n\n作为Windows/Mac/Linux下强大的文本编辑器，st提供了对Markdown语言的支持。通过设置可实现markdown预览和转换功能。而本文介绍的Markdown Preview支持Mathjax语法和目录自动生成。(Windows下）,\n打开st，按下组合键Control + `，出现控制台，输入\n<!-- more -->\n\n``` bash\n\n\timport  urllib.request,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib.request.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())\n\n```\n\n当看到代码最后一行提示的时候说明安装成功，此时重启st，可在Preferences -> Package Settings看到Package Control。\n安装markdown preview\n按下键Ctrl+Shift+p调出命令面板，找到Package Control: install Pakage这一项。搜索markdown preview，点击安装。\n\n使用\nMarkdown Preview较常用的功能是preview in browser和Export HTML in Sublime Text，前者可以在浏览器看到预览效果，后者可将markdown保存为html文件。\n\npreview in browser据称是实时的，但是实践上还是需要在st保存，然后浏览器刷新才能看到新的效果，好在markdown写得多的话也不需要每敲一行看一次效果。\n\n快捷键\n\n新版本默认快捷键为 * ctrl+shift+m *\n\n旧版本下面配置：\nst支持自定义快捷键，markdown preview默认没有快捷键，我们可以自己为preview in browser设置快捷键。方法是在Preferences -> Key Bindings User打开的文件的中括号中添加以下代码(可在Key Bindings Default找到格式)：\n\n > { \"keys\": [\"alt+m\"], \"command\": \"markdown_preview\", \"args\": { \"target\": \"browser\"} }\n\n\"alt+m\"可设置为自己喜欢的按键。\n\n设置语法高亮和mathjax支持\n在Preferences ->Package Settings->Markdown Preview->Setting Default中的第31行和36行找到\n\n``` config\n\n\t\"enable_mathjax\": false,\n\t\"enable_highlight\": false,\n\n```\n将 两个false改为true即可。\n语法高亮跟编辑器的主题有关，可以在Preferences ->Color Scheme找自己喜欢的主题。\n关于目录生成，只要文章是按照markdown语法写作的。在需要生成目录的地方写\n[TOC]\n即可。\n\n## markdown 语法参考\n\n@changyuan\n\nEmphasis, aka italics, with *asterisks* or _underscores_.\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\nCombined emphasis with **asterisks and _underscores_**.\nStrikethrough uses two tildes. ~~Scratch this.~~\n\n[参考1](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)\n[参考2](https://guides.github.com/features/mastering-markdown/)\n\n\n## emoji表情参考\n:smile::thumbsup::thumbsup:\n~~emo~~\n[emoji表情参考](http://www.emoji-cheat-sheet.com/)\n","slug":"markdown","published":1,"updated":"2017-01-04T03:57:43.839Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp920012wsnnodokbeht","content":"<h2 id=\"markdown-在-sublime-text-3-中使用\"><a href=\"#markdown-在-sublime-text-3-中使用\" class=\"headerlink\" title=\"markdown 在 sublime text 3 中使用\"></a>markdown 在 sublime text 3 中使用</h2><p>作为Windows/Mac/Linux下强大的文本编辑器，st提供了对Markdown语言的支持。通过设置可实现markdown预览和转换功能。而本文介绍的Markdown Preview支持Mathjax语法和目录自动生成。(Windows下）,<br>打开st，按下组合键Control + `，出现控制台，输入<br><a id=\"more\"></a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import  urllib.request,os;pf=<span class=\"string\">'Package Control.sublime-package'</span>;ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),<span class=\"string\">'wb'</span>).write(urllib.request.urlopen(<span class=\"string\">'http://sublime.wbond.net/'</span>+pf.replace(<span class=\"string\">' '</span>,<span class=\"string\">'%20'</span>)).read())</span><br></pre></td></tr></table></figure>\n<p>当看到代码最后一行提示的时候说明安装成功，此时重启st，可在Preferences -&gt; Package Settings看到Package Control。<br>安装markdown preview<br>按下键Ctrl+Shift+p调出命令面板，找到Package Control: install Pakage这一项。搜索markdown preview，点击安装。</p>\n<p>使用<br>Markdown Preview较常用的功能是preview in browser和Export HTML in Sublime Text，前者可以在浏览器看到预览效果，后者可将markdown保存为html文件。</p>\n<p>preview in browser据称是实时的，但是实践上还是需要在st保存，然后浏览器刷新才能看到新的效果，好在markdown写得多的话也不需要每敲一行看一次效果。</p>\n<p>快捷键</p>\n<p>新版本默认快捷键为 <em> ctrl+shift+m </em></p>\n<p>旧版本下面配置：<br>st支持自定义快捷键，markdown preview默认没有快捷键，我们可以自己为preview in browser设置快捷键。方法是在Preferences -&gt; Key Bindings User打开的文件的中括号中添加以下代码(可在Key Bindings Default找到格式)：</p>\n<blockquote>\n<p>{ “keys”: [“alt+m”], “command”: “markdown_preview”, “args”: { “target”: “browser”} }</p>\n</blockquote>\n<p>“alt+m”可设置为自己喜欢的按键。</p>\n<p>设置语法高亮和mathjax支持<br>在Preferences -&gt;Package Settings-&gt;Markdown Preview-&gt;Setting Default中的第31行和36行找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&quot;enable_mathjax&quot;: false,</span><br><span class=\"line\">&quot;enable_highlight&quot;: false,</span><br></pre></td></tr></table></figure>\n<p>将 两个false改为true即可。<br>语法高亮跟编辑器的主题有关，可以在Preferences -&gt;Color Scheme找自己喜欢的主题。<br>关于目录生成，只要文章是按照markdown语法写作的。在需要生成目录的地方写<br>[TOC]<br>即可。</p>\n<h2 id=\"markdown-语法参考\"><a href=\"#markdown-语法参考\" class=\"headerlink\" title=\"markdown 语法参考\"></a>markdown 语法参考</h2><p>@changyuan</p>\n<p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.<br>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.<br>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.<br>Strikethrough uses two tildes. <del>Scratch this.</del></p>\n<p><a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\" target=\"_blank\" rel=\"external\">参考1</a><br><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"external\">参考2</a></p>\n<h2 id=\"emoji表情参考\"><a href=\"#emoji表情参考\" class=\"headerlink\" title=\"emoji表情参考\"></a>emoji表情参考</h2><p>:smile::thumbsup::thumbsup:<br><del>emo</del><br><a href=\"http://www.emoji-cheat-sheet.com/\" target=\"_blank\" rel=\"external\">emoji表情参考</a></p>\n","excerpt":"<h2 id=\"markdown-在-sublime-text-3-中使用\"><a href=\"#markdown-在-sublime-text-3-中使用\" class=\"headerlink\" title=\"markdown 在 sublime text 3 中使用\"></a>markdown 在 sublime text 3 中使用</h2><p>作为Windows/Mac/Linux下强大的文本编辑器，st提供了对Markdown语言的支持。通过设置可实现markdown预览和转换功能。而本文介绍的Markdown Preview支持Mathjax语法和目录自动生成。(Windows下）,<br>打开st，按下组合键Control + `，出现控制台，输入<br>","more":"</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import  urllib.request,os;pf=<span class=\"string\">'Package Control.sublime-package'</span>;ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),<span class=\"string\">'wb'</span>).write(urllib.request.urlopen(<span class=\"string\">'http://sublime.wbond.net/'</span>+pf.replace(<span class=\"string\">' '</span>,<span class=\"string\">'%20'</span>)).read())</span><br></pre></td></tr></table></figure>\n<p>当看到代码最后一行提示的时候说明安装成功，此时重启st，可在Preferences -&gt; Package Settings看到Package Control。<br>安装markdown preview<br>按下键Ctrl+Shift+p调出命令面板，找到Package Control: install Pakage这一项。搜索markdown preview，点击安装。</p>\n<p>使用<br>Markdown Preview较常用的功能是preview in browser和Export HTML in Sublime Text，前者可以在浏览器看到预览效果，后者可将markdown保存为html文件。</p>\n<p>preview in browser据称是实时的，但是实践上还是需要在st保存，然后浏览器刷新才能看到新的效果，好在markdown写得多的话也不需要每敲一行看一次效果。</p>\n<p>快捷键</p>\n<p>新版本默认快捷键为 <em> ctrl+shift+m </em></p>\n<p>旧版本下面配置：<br>st支持自定义快捷键，markdown preview默认没有快捷键，我们可以自己为preview in browser设置快捷键。方法是在Preferences -&gt; Key Bindings User打开的文件的中括号中添加以下代码(可在Key Bindings Default找到格式)：</p>\n<blockquote>\n<p>{ “keys”: [“alt+m”], “command”: “markdown_preview”, “args”: { “target”: “browser”} }</p>\n</blockquote>\n<p>“alt+m”可设置为自己喜欢的按键。</p>\n<p>设置语法高亮和mathjax支持<br>在Preferences -&gt;Package Settings-&gt;Markdown Preview-&gt;Setting Default中的第31行和36行找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&quot;enable_mathjax&quot;: false,</span><br><span class=\"line\">&quot;enable_highlight&quot;: false,</span><br></pre></td></tr></table></figure>\n<p>将 两个false改为true即可。<br>语法高亮跟编辑器的主题有关，可以在Preferences -&gt;Color Scheme找自己喜欢的主题。<br>关于目录生成，只要文章是按照markdown语法写作的。在需要生成目录的地方写<br>[TOC]<br>即可。</p>\n<h2 id=\"markdown-语法参考\"><a href=\"#markdown-语法参考\" class=\"headerlink\" title=\"markdown 语法参考\"></a>markdown 语法参考</h2><p>@changyuan</p>\n<p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.<br>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.<br>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.<br>Strikethrough uses two tildes. <del>Scratch this.</del></p>\n<p><a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\">参考1</a><br><a href=\"https://guides.github.com/features/mastering-markdown/\">参考2</a></p>\n<h2 id=\"emoji表情参考\"><a href=\"#emoji表情参考\" class=\"headerlink\" title=\"emoji表情参考\"></a>emoji表情参考</h2><p>:smile::thumbsup::thumbsup:<br><del>emo</del><br><a href=\"http://www.emoji-cheat-sheet.com/\">emoji表情参考</a></p>"},{"title":"nodejs 基础","date":"2015-11-14T07:44:47.000Z","updated":"2015-11-14T07:44:47.000Z","_content":"\nNode.js 是单进程单线程应用程序，但是通过事件和回调支持并发，所以性能非常高。Node.js 的每一个 API 都是异步的，并作为一个独立线程运行，使用异步函数调用，并处理并发。Node.js 基本上所有的事件机制都是用设计模式中观察者模式实现。Node.js 单线程类似进入一个while(true)的事件循环，直到没有事件观察者退出，每个异步事件都生成一个事件观察者，如果有事件发生就调用该回调函数。\n<!-- more -->\n### 安装\n```bash\n\t#mac\n    brew install nvm\n\t#linux\n    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash\n\t# 查看远程版本\n    nvm ls-remote \n\tnvm install v7.1.0\n\tnvm use v7.1.0\n\n\tnvm list\n\t# 注册一个cnpm\n\tnpm install -g cnpm --registry=https://registry.npm.taobao.org\n\t# 切换源\n\tnpm config get registry\n\tnpm config set registry https://registry.npm.taobao.org\n\t\n\n```\n\n\n### 阻塞代码实例\n```javascript\nvar fs = require(\"fs\");\n\nvar data = fs.readFileSync('input.txt');\n\nconsole.log(data.toString());\nconsole.log(\"程序执行结束!\");\n```\n\n### 非阻塞代码实例\n```javascript\nvar fs = require(\"fs\");\n\nfs.readFile('input.txt', function (err, data) {\n    if (err) return console.error(err);\n    console.log(data.toString());\n});\n\nconsole.log(\"程序执行结束!\");\n```\n\n","source":"_posts/2015/nodejs.md","raw":"---\ntitle: nodejs 基础\ndate: 2015-11-14 15:44:47\nupdated: 2015-11-14 15:44:47\ntags:\ncategories:\n---\n\nNode.js 是单进程单线程应用程序，但是通过事件和回调支持并发，所以性能非常高。Node.js 的每一个 API 都是异步的，并作为一个独立线程运行，使用异步函数调用，并处理并发。Node.js 基本上所有的事件机制都是用设计模式中观察者模式实现。Node.js 单线程类似进入一个while(true)的事件循环，直到没有事件观察者退出，每个异步事件都生成一个事件观察者，如果有事件发生就调用该回调函数。\n<!-- more -->\n### 安装\n```bash\n\t#mac\n    brew install nvm\n\t#linux\n    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash\n\t# 查看远程版本\n    nvm ls-remote \n\tnvm install v7.1.0\n\tnvm use v7.1.0\n\n\tnvm list\n\t# 注册一个cnpm\n\tnpm install -g cnpm --registry=https://registry.npm.taobao.org\n\t# 切换源\n\tnpm config get registry\n\tnpm config set registry https://registry.npm.taobao.org\n\t\n\n```\n\n\n### 阻塞代码实例\n```javascript\nvar fs = require(\"fs\");\n\nvar data = fs.readFileSync('input.txt');\n\nconsole.log(data.toString());\nconsole.log(\"程序执行结束!\");\n```\n\n### 非阻塞代码实例\n```javascript\nvar fs = require(\"fs\");\n\nfs.readFile('input.txt', function (err, data) {\n    if (err) return console.error(err);\n    console.log(data.toString());\n});\n\nconsole.log(\"程序执行结束!\");\n```\n\n","slug":"nodejs","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp920013wsnnrnw1xdoi","content":"<p>Node.js 是单进程单线程应用程序，但是通过事件和回调支持并发，所以性能非常高。Node.js 的每一个 API 都是异步的，并作为一个独立线程运行，使用异步函数调用，并处理并发。Node.js 基本上所有的事件机制都是用设计模式中观察者模式实现。Node.js 单线程类似进入一个while(true)的事件循环，直到没有事件观察者退出，每个异步事件都生成一个事件观察者，如果有事件发生就调用该回调函数。<br><a id=\"more\"></a></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#mac</span></span><br><span class=\"line\">   brew install nvm</span><br><span class=\"line\"><span class=\"comment\">#linux</span></span><br><span class=\"line\">   curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash</span><br><span class=\"line\"><span class=\"comment\"># 查看远程版本</span></span><br><span class=\"line\">   nvm ls-remote </span><br><span class=\"line\">nvm install v7.1.0</span><br><span class=\"line\">nvm use v7.1.0</span><br><span class=\"line\"></span><br><span class=\"line\">nvm list</span><br><span class=\"line\"><span class=\"comment\"># 注册一个cnpm</span></span><br><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class=\"line\"><span class=\"comment\"># 切换源</span></span><br><span class=\"line\">npm config get registry</span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<h3 id=\"阻塞代码实例\"><a href=\"#阻塞代码实例\" class=\"headerlink\" title=\"阻塞代码实例\"></a>阻塞代码实例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = fs.readFileSync(<span class=\"string\">'input.txt'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(data.toString());</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"程序执行结束!\"</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"非阻塞代码实例\"><a href=\"#非阻塞代码实例\" class=\"headerlink\" title=\"非阻塞代码实例\"></a>非阻塞代码实例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readFile(<span class=\"string\">'input.txt'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">return</span> <span class=\"built_in\">console</span>.error(err);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(data.toString());</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"程序执行结束!\"</span>);</span><br></pre></td></tr></table></figure>\n","excerpt":"<p>Node.js 是单进程单线程应用程序，但是通过事件和回调支持并发，所以性能非常高。Node.js 的每一个 API 都是异步的，并作为一个独立线程运行，使用异步函数调用，并处理并发。Node.js 基本上所有的事件机制都是用设计模式中观察者模式实现。Node.js 单线程类似进入一个while(true)的事件循环，直到没有事件观察者退出，每个异步事件都生成一个事件观察者，如果有事件发生就调用该回调函数。<br>","more":"</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#mac</span></span><br><span class=\"line\">   brew install nvm</span><br><span class=\"line\"><span class=\"comment\">#linux</span></span><br><span class=\"line\">   curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash</span><br><span class=\"line\"><span class=\"comment\"># 查看远程版本</span></span><br><span class=\"line\">   nvm ls-remote </span><br><span class=\"line\">nvm install v7.1.0</span><br><span class=\"line\">nvm use v7.1.0</span><br><span class=\"line\"></span><br><span class=\"line\">nvm list</span><br><span class=\"line\"><span class=\"comment\"># 注册一个cnpm</span></span><br><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class=\"line\"><span class=\"comment\"># 切换源</span></span><br><span class=\"line\">npm config get registry</span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<h3 id=\"阻塞代码实例\"><a href=\"#阻塞代码实例\" class=\"headerlink\" title=\"阻塞代码实例\"></a>阻塞代码实例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = fs.readFileSync(<span class=\"string\">'input.txt'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(data.toString());</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"程序执行结束!\"</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"非阻塞代码实例\"><a href=\"#非阻塞代码实例\" class=\"headerlink\" title=\"非阻塞代码实例\"></a>非阻塞代码实例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readFile(<span class=\"string\">'input.txt'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">return</span> <span class=\"built_in\">console</span>.error(err);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(data.toString());</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"程序执行结束!\"</span>);</span><br></pre></td></tr></table></figure>"},{"title":"YC创业课笔记","date":"2015-06-20T08:43:09.000Z","_content":"\n# 成为有完整作品的人\n\n`成长的最靠谱起点是什么？Sam的这篇文章里有个很好的建议`：\n\n> No matter what you choose, build stuff and be around smart people. \"Stuff\" can be a lot of different things。 Building stuffs----做出东西来。\n\n我个人最看中人的这个特质。人群中只有少数人最终能拿出完整的作品----人与人之间的差异是如此之大，乃至于少数人有作品，更少数人有好的作品，只极少数极少数人才可能作出传世的作品；而与此同时，绝大多数人（万分之九千九百九十九的人）一辈子都没有像样的作品，他们连一篇作文都写不明白。\n<!-- more -->\n从一开始就要想尽一切办法做出完整的作品来，哪怕最初的作品很差----但必须完整。那些有完整作品的人，能力、耐力、学习能力都会超出他人许多倍。无论看起来多简单的作品，只要是完整的，其表面之下的复杂程度是那些没做出过东西的人全然无法想像的。\n\n另外一个很自然的现象是，如果一个人能做出像样的东西来，那么他身边的聪明人密度无论如何都会比其他人的高出很多。\n\n# 伟大的公司的几个要素\n\n- Great Idea （创见）\n- Great Product （产品）\n- Great Team （团队）\n- Great Execution （执行）\n\n前前后后需要考虑的东西：\n\n> 这是否是真实的需求？（或者说：是否是真真切切需要解决的问题？----人们真的很擅长杜撰伪问题......） 市场是否足够大？（或者换个说法，跑道是否足够长？） 市场成长是否足够快？（一个\"快\"字可能会顺带解决很多很多问题......） 如果真的因为这个创见创业了，那么，公司成长的策略是什么？ 公司如何进行必要的防御？策略又是什么？\n\n当这些问题都需要认真回答，并且需要得到满意答复的时候，我们就会发现很多的\"点子\"其实不过是垃圾----根本无法满足我们的追求。\n\n# 逻辑陷阱\n\n不是所有的事情都是非此即彼，\n\n> 反过来不一定成立吧？\n\n或者更简洁一点：\n\n> 不一定吧？\n\n然后花一点时间多想想有哪些可能的反例...... 许多年来，这种简单的思考让我避开了很多可能导致严重后果的陷阱。 我也会常常这样问自己：\n\n> 嗯，很有道理...... 不过，需要看情况吧？在什么情况下这个对，而在什么情况下这个并不见得对，甚至干脆是错的呢？ 嗯，那些时不时自言自语的不全都是精神病患者。\n\n# 从自己的问题入手，一个好的行为模式\n\n- 目的\n- 手段\n- 结果\n\n- 我们的目的是：避免最终做出一个实际上没人真用的东西......\n\n- 我们的手段是：\"先从解决自己的问题开始\"。\n- 我们采取这个手段的结果是：如果我自己就有这个需求，那么它一定是真实的需求；而后，也一定会有其他人也有这个需求...... 继而问自己这个问题要足够重要、解决方案要足够有效、市场要足够大、成长空间要足够广阔......\n\n不过，\"先从解决自己的需求/问题开始\"有更值得一提的众多好处：\n\n> 因为是自己的问题，我们会对解决它有更多的热情和耐心 因为是自己的问题，我们会对解决方案有更精准的判断标准 因为是自己的问题，我们更容易体会到解决它的成就感，甚至产生使命感----这多么求之难得的东西！\n\n# 转换焦点看问题，避免单一\n\n> fall in love with the problem, not the solution. 爱上问题和麻烦，而不是去解决（转换态度）\n\n> It is your job to listen to their problems, and translate those into what is going to build the best and simplest solution for them... 于是，有人能做到\"不是用户要什么就给什么\"，原因在于关注焦点并不在于问题本身，而是想尽一切办法找到那需求的根源----即，关注焦点在于更本质的、更深层次的原因，而后给出最好、最简的解决方式。\n\n当我有足够的时间思考之时，我常常这样玩：\n\n> **目的、手段、结果**：我现在这样想，可能是因为我更关注结果，如果我更关注手段，那我会想什么呢？...... **过去、现在、将来**：我现在这么想，可能是因为我想未来更多一些，要是我更关注现在，那我会想什么呢？ **优点、缺点**：我刚才想这事儿的时候，我关注它的缺点更多一些，；那我要是关注优点更多一些，会想什么呢？\n\n# 如何让自己变得更聪明？\n\n如何判断一个人是否聪明？\n\n1. 此人是否拥有足够多且清晰准确的概念？\n2. 对这些概念之间的联系是否足够清晰准确？\n3. 是否有足够系统的方法论？\n4. 是否有一定的成功经验？\n\n必要、清晰、且准确的概念，是一切思考的基石。 如何有效的思考，那些常常审视自己思考质量的人，都会很认真地定义自己所使用的概念：(科学方法论)\n\n## 应该形成的思考方式\n\n> 这个概念有必要存在吗？ 它指的究竟是什么？ 反过来，它所指的究竟不是什么？ 它与什么类似？但有什么不同？ 使用它的时候要注意什么？ 用错的时候可能产生什么样的后果？\n\n那些**有作品的人**，就是\"成功人士\"，他们已经做出像样的东西，\"成功\"的程度不一样而已，而他们的成长速度一定很快、更快。更为重要的是，要看这些人的多个作品----作品与作品之间的差异，基本上就是他们进步程度的展现。 另外一个判断方式是看他有无长期持续做的事情，然后去看他做得如何。懂得**长期持续做事**的人，通常不笨，也通常没办法做不好那件事儿。 谁比谁的智商差多少，只不过聪明的人有一套自己的方法论，他们知道如何快速习得，快速迭代的而已。\n\n# 如何寻找合伙人？\n\n- 我了解这个人吗？\n- 他的优点、缺点都是什么？\n- 他信任你吗？有多信任？反过来呢？\n- 他出了任何问题，你都愿意帮助他吗？反过来呢？\n- 未来的若干年中，你们能做到荣辱与共吗？\n\n合伙人的最重要素质是什么？ 答案其实与选择婚姻伴侣一样：找到勇于主动承担责任的人，并且双方（或多方）都必须是肯于承担责任的人。哦，对了，勇于承担责任的人有个共同的特征，出了问题的时候，他们会先在自己身上找问题。\n\n# 直觉靠谱吗？(intuitive,counter-intuitive)\n\n直觉虽然显现为瞬间不假思索的判断，但它不是没有来历的，它实际上是经验、训练和知识的长期积累瞬间内共同发挥作用的结果，而不是无理由的猜测。 随着经验的增加，训练的辅助，知识的积累，所谓的\"直觉\"也在不断发展,如此看来，人与人之间的直觉质量常常有着天壤之别。\n\n1. 如果你在某个领域是真正的专家----只有名头没有真知\"砖家\"的不算数，在那个领域里，你不仅要相信你的直觉，还要刻意打磨你的直觉----通过持续的观察、思考、训练和自我成长。\n2. 如果你不是那个领域里真的专家，你的直觉就是个屁。\n\n  > Sam是在回答\"如何寻找现在以及将来10年里成长最快的市场\"时说：这个时候，年轻人应该相信你的直觉。Sam的这个回答固然有些含混，但也确实至少部分正确，因为正在\"感受并发现飞速成长的东西\"确实是年轻人比老年人更有经验的领域。\n\n# 如何精通自己的用户?\n\n- 想尽一切办法亲自去找用户----而不是采用程序员喜欢的自动的方式；\n- 做更深入的，能够获得用户真实答案的调查\n- 关注各种各样的进阶指标，DAU、Retention之类......\n\n我的一个项目合伙人（他做出来的产品不用任何PR都可以初期每天增长几万用户）曾经跟我分享他的方法论：\n\n> 我就想，如果我做出来之后，放在那里，会不会有陌生人主动来用？会不会有很多陌生人来用？他们会不会把这个东西推荐给身边的人？\n\n还有一个普适的方法论：无论做什么，都可以再问一遍：\"**更本质的是什么**？\"\n\n> 如果用户有这么个需求，那么更本质的原因是什么？ 于是，就有了很多这样的思考： 用户要什么就给什么是不对的，因为大多数用户不可能对你的产品有全面深入长期的打算。 一切能够满足人性弱点的产品都是令用户热爱的。比如，如果你能让用户再懒一点再懒一点，那他们就会爱你多一些再多一些。\n\n关于精通用户的方法论，还可以再推荐出自斯坦福教授Nir Eyal的一本书：(Hooked: How to Build Habit-Forming Products。)[<https://www.amazon.com/Hooked-How-Build-Habit-Forming-Products-ebook/dp/B00HJ4A43S?ie=UTF8&*Version*=1&*entries*=0>]\n\n# 不停得学习，学习无终点\n\n- 学很多值得学的东西\n- 仔细琢磨你感兴趣的日常生活中的痛点(正如自己总会莫名的焦虑，对未来没有信心等)\n- 多与牛人在一起（这是怎样找到合伙人的诀窍）\n\n# 认真、仔细、不怕麻烦\n\n1. 直接应聘去清洁公司上班，买各种可以买得到的书去看，有培训班就马上去参加......\n2. 研究一切可以找得到的关于这个领域内其它公司的资料，把搜索引擎上可以找的资料前1000条全都读一遍......要是上市公司的话，就直接去查找S1文件......\n3. 公司还小的时候，不可能像Facebook一样有个Growth Team，那么就靠自己来，一切都手动，不要自动----因为自动会有遗漏，且有可能浮于表面......\n4. 公司大了，有钱了，也不是直接烧钱打网络广告，而是罗列一切可能的渠道，而后一个一个地尝试。一次只试验一个渠道，失败了，就退回分支，去尝试另外一个选择----直至遍历所有可能性......\n\n我见过很多团队，他们东施效颦地信奉一些教条：\n\n> 我们是一个有信仰的团队。 我们坚信这个方向是绝对没有问题的。 我们只是需要坚持、坚持、再坚持......\n\n什么时候应该转型？没有标准答案,什么时候应该继续坚持？没有标准答案。 有一点倒是可以值得参考，就是成长速度快不快？不快，那就要小心了。\n\n# 优秀的人需要怎样的激励\n\n- autonomy 自治\n- mastery 精通\n- purpose 追求\n\n# 不是每个人都适合创业的\n\nSam在第一课里说，创业是一个非常机会均匀的领域：\n\n> One of the exciting things about startups is that they are a surprisingly even playing field. Young and inexperienced, you can do this. Old and experienced, you can do this, too. 但也有需要注意的情况。在创业这件事儿上，年轻人更有优势。其他的不说，面对失败的能力，还是年轻人更强，他们更输的起----因为对他们来说，这本来就是常态。除此之外，年轻人常常有更大的野心，他们有更多的持续战斗力。\n\n# 复杂的模式思考常常难以表达清楚\n\n- capturing value\n- lies people tell\n- how to build a monopoly\n- last mover advantage\n- history of innovation\n- psychology of competition\n\n一个观察：21世纪开始，有大量的公司把各种单独不能赚钱的技术整合起来，形成了垄断优势。 三个策略（顺序不分前后）： 从垄断一个小的，甚至没人认为值得垄断的市场开始 比老二好十倍（From Zero to One里有详述） 善用后发优势\n\n这一点我个人比较容易理解：那些思维复杂且缜密的人，往往最终会拥有一个与绝大多数人不可能相同的价值判断（或者模式）体系。而他们的每一个结论，常常要么显得平淡无奇，要么显得荒诞不经。当他们必须向他人----即，那些头脑比他们简单单得多的人----传递思考结果的时候，是很困难的，因为他们的每句话都可能实际上与显现的并不完全相同，也总是被各种误解。而又为了传递清楚，他们常常不得不从许多个角度去阐释一个问题，可这其实又给头脑简单的人增加了一个困难：把一件事儿理解成许多件事儿......\n\n**他擅长用模式思考能力去识别他人有意无意的谎言**\n\n(YC 创业课)[<http://zhibimo.com/read/xiaolai/growth/competition-is-for-losers.html>]\n","source":"_posts/2015/yc-create-note.md","raw":"---\ntitle: YC创业课笔记\ndate: 2015-06-20T16:43:09.000Z\ntags:\n  - 创业\n  - 读书\ncategories: null\n---\n\n# 成为有完整作品的人\n\n`成长的最靠谱起点是什么？Sam的这篇文章里有个很好的建议`：\n\n> No matter what you choose, build stuff and be around smart people. \"Stuff\" can be a lot of different things。 Building stuffs----做出东西来。\n\n我个人最看中人的这个特质。人群中只有少数人最终能拿出完整的作品----人与人之间的差异是如此之大，乃至于少数人有作品，更少数人有好的作品，只极少数极少数人才可能作出传世的作品；而与此同时，绝大多数人（万分之九千九百九十九的人）一辈子都没有像样的作品，他们连一篇作文都写不明白。\n<!-- more -->\n从一开始就要想尽一切办法做出完整的作品来，哪怕最初的作品很差----但必须完整。那些有完整作品的人，能力、耐力、学习能力都会超出他人许多倍。无论看起来多简单的作品，只要是完整的，其表面之下的复杂程度是那些没做出过东西的人全然无法想像的。\n\n另外一个很自然的现象是，如果一个人能做出像样的东西来，那么他身边的聪明人密度无论如何都会比其他人的高出很多。\n\n# 伟大的公司的几个要素\n\n- Great Idea （创见）\n- Great Product （产品）\n- Great Team （团队）\n- Great Execution （执行）\n\n前前后后需要考虑的东西：\n\n> 这是否是真实的需求？（或者说：是否是真真切切需要解决的问题？----人们真的很擅长杜撰伪问题......） 市场是否足够大？（或者换个说法，跑道是否足够长？） 市场成长是否足够快？（一个\"快\"字可能会顺带解决很多很多问题......） 如果真的因为这个创见创业了，那么，公司成长的策略是什么？ 公司如何进行必要的防御？策略又是什么？\n\n当这些问题都需要认真回答，并且需要得到满意答复的时候，我们就会发现很多的\"点子\"其实不过是垃圾----根本无法满足我们的追求。\n\n# 逻辑陷阱\n\n不是所有的事情都是非此即彼，\n\n> 反过来不一定成立吧？\n\n或者更简洁一点：\n\n> 不一定吧？\n\n然后花一点时间多想想有哪些可能的反例...... 许多年来，这种简单的思考让我避开了很多可能导致严重后果的陷阱。 我也会常常这样问自己：\n\n> 嗯，很有道理...... 不过，需要看情况吧？在什么情况下这个对，而在什么情况下这个并不见得对，甚至干脆是错的呢？ 嗯，那些时不时自言自语的不全都是精神病患者。\n\n# 从自己的问题入手，一个好的行为模式\n\n- 目的\n- 手段\n- 结果\n\n- 我们的目的是：避免最终做出一个实际上没人真用的东西......\n\n- 我们的手段是：\"先从解决自己的问题开始\"。\n- 我们采取这个手段的结果是：如果我自己就有这个需求，那么它一定是真实的需求；而后，也一定会有其他人也有这个需求...... 继而问自己这个问题要足够重要、解决方案要足够有效、市场要足够大、成长空间要足够广阔......\n\n不过，\"先从解决自己的需求/问题开始\"有更值得一提的众多好处：\n\n> 因为是自己的问题，我们会对解决它有更多的热情和耐心 因为是自己的问题，我们会对解决方案有更精准的判断标准 因为是自己的问题，我们更容易体会到解决它的成就感，甚至产生使命感----这多么求之难得的东西！\n\n# 转换焦点看问题，避免单一\n\n> fall in love with the problem, not the solution. 爱上问题和麻烦，而不是去解决（转换态度）\n\n> It is your job to listen to their problems, and translate those into what is going to build the best and simplest solution for them... 于是，有人能做到\"不是用户要什么就给什么\"，原因在于关注焦点并不在于问题本身，而是想尽一切办法找到那需求的根源----即，关注焦点在于更本质的、更深层次的原因，而后给出最好、最简的解决方式。\n\n当我有足够的时间思考之时，我常常这样玩：\n\n> **目的、手段、结果**：我现在这样想，可能是因为我更关注结果，如果我更关注手段，那我会想什么呢？...... **过去、现在、将来**：我现在这么想，可能是因为我想未来更多一些，要是我更关注现在，那我会想什么呢？ **优点、缺点**：我刚才想这事儿的时候，我关注它的缺点更多一些，；那我要是关注优点更多一些，会想什么呢？\n\n# 如何让自己变得更聪明？\n\n如何判断一个人是否聪明？\n\n1. 此人是否拥有足够多且清晰准确的概念？\n2. 对这些概念之间的联系是否足够清晰准确？\n3. 是否有足够系统的方法论？\n4. 是否有一定的成功经验？\n\n必要、清晰、且准确的概念，是一切思考的基石。 如何有效的思考，那些常常审视自己思考质量的人，都会很认真地定义自己所使用的概念：(科学方法论)\n\n## 应该形成的思考方式\n\n> 这个概念有必要存在吗？ 它指的究竟是什么？ 反过来，它所指的究竟不是什么？ 它与什么类似？但有什么不同？ 使用它的时候要注意什么？ 用错的时候可能产生什么样的后果？\n\n那些**有作品的人**，就是\"成功人士\"，他们已经做出像样的东西，\"成功\"的程度不一样而已，而他们的成长速度一定很快、更快。更为重要的是，要看这些人的多个作品----作品与作品之间的差异，基本上就是他们进步程度的展现。 另外一个判断方式是看他有无长期持续做的事情，然后去看他做得如何。懂得**长期持续做事**的人，通常不笨，也通常没办法做不好那件事儿。 谁比谁的智商差多少，只不过聪明的人有一套自己的方法论，他们知道如何快速习得，快速迭代的而已。\n\n# 如何寻找合伙人？\n\n- 我了解这个人吗？\n- 他的优点、缺点都是什么？\n- 他信任你吗？有多信任？反过来呢？\n- 他出了任何问题，你都愿意帮助他吗？反过来呢？\n- 未来的若干年中，你们能做到荣辱与共吗？\n\n合伙人的最重要素质是什么？ 答案其实与选择婚姻伴侣一样：找到勇于主动承担责任的人，并且双方（或多方）都必须是肯于承担责任的人。哦，对了，勇于承担责任的人有个共同的特征，出了问题的时候，他们会先在自己身上找问题。\n\n# 直觉靠谱吗？(intuitive,counter-intuitive)\n\n直觉虽然显现为瞬间不假思索的判断，但它不是没有来历的，它实际上是经验、训练和知识的长期积累瞬间内共同发挥作用的结果，而不是无理由的猜测。 随着经验的增加，训练的辅助，知识的积累，所谓的\"直觉\"也在不断发展,如此看来，人与人之间的直觉质量常常有着天壤之别。\n\n1. 如果你在某个领域是真正的专家----只有名头没有真知\"砖家\"的不算数，在那个领域里，你不仅要相信你的直觉，还要刻意打磨你的直觉----通过持续的观察、思考、训练和自我成长。\n2. 如果你不是那个领域里真的专家，你的直觉就是个屁。\n\n  > Sam是在回答\"如何寻找现在以及将来10年里成长最快的市场\"时说：这个时候，年轻人应该相信你的直觉。Sam的这个回答固然有些含混，但也确实至少部分正确，因为正在\"感受并发现飞速成长的东西\"确实是年轻人比老年人更有经验的领域。\n\n# 如何精通自己的用户?\n\n- 想尽一切办法亲自去找用户----而不是采用程序员喜欢的自动的方式；\n- 做更深入的，能够获得用户真实答案的调查\n- 关注各种各样的进阶指标，DAU、Retention之类......\n\n我的一个项目合伙人（他做出来的产品不用任何PR都可以初期每天增长几万用户）曾经跟我分享他的方法论：\n\n> 我就想，如果我做出来之后，放在那里，会不会有陌生人主动来用？会不会有很多陌生人来用？他们会不会把这个东西推荐给身边的人？\n\n还有一个普适的方法论：无论做什么，都可以再问一遍：\"**更本质的是什么**？\"\n\n> 如果用户有这么个需求，那么更本质的原因是什么？ 于是，就有了很多这样的思考： 用户要什么就给什么是不对的，因为大多数用户不可能对你的产品有全面深入长期的打算。 一切能够满足人性弱点的产品都是令用户热爱的。比如，如果你能让用户再懒一点再懒一点，那他们就会爱你多一些再多一些。\n\n关于精通用户的方法论，还可以再推荐出自斯坦福教授Nir Eyal的一本书：(Hooked: How to Build Habit-Forming Products。)[<https://www.amazon.com/Hooked-How-Build-Habit-Forming-Products-ebook/dp/B00HJ4A43S?ie=UTF8&*Version*=1&*entries*=0>]\n\n# 不停得学习，学习无终点\n\n- 学很多值得学的东西\n- 仔细琢磨你感兴趣的日常生活中的痛点(正如自己总会莫名的焦虑，对未来没有信心等)\n- 多与牛人在一起（这是怎样找到合伙人的诀窍）\n\n# 认真、仔细、不怕麻烦\n\n1. 直接应聘去清洁公司上班，买各种可以买得到的书去看，有培训班就马上去参加......\n2. 研究一切可以找得到的关于这个领域内其它公司的资料，把搜索引擎上可以找的资料前1000条全都读一遍......要是上市公司的话，就直接去查找S1文件......\n3. 公司还小的时候，不可能像Facebook一样有个Growth Team，那么就靠自己来，一切都手动，不要自动----因为自动会有遗漏，且有可能浮于表面......\n4. 公司大了，有钱了，也不是直接烧钱打网络广告，而是罗列一切可能的渠道，而后一个一个地尝试。一次只试验一个渠道，失败了，就退回分支，去尝试另外一个选择----直至遍历所有可能性......\n\n我见过很多团队，他们东施效颦地信奉一些教条：\n\n> 我们是一个有信仰的团队。 我们坚信这个方向是绝对没有问题的。 我们只是需要坚持、坚持、再坚持......\n\n什么时候应该转型？没有标准答案,什么时候应该继续坚持？没有标准答案。 有一点倒是可以值得参考，就是成长速度快不快？不快，那就要小心了。\n\n# 优秀的人需要怎样的激励\n\n- autonomy 自治\n- mastery 精通\n- purpose 追求\n\n# 不是每个人都适合创业的\n\nSam在第一课里说，创业是一个非常机会均匀的领域：\n\n> One of the exciting things about startups is that they are a surprisingly even playing field. Young and inexperienced, you can do this. Old and experienced, you can do this, too. 但也有需要注意的情况。在创业这件事儿上，年轻人更有优势。其他的不说，面对失败的能力，还是年轻人更强，他们更输的起----因为对他们来说，这本来就是常态。除此之外，年轻人常常有更大的野心，他们有更多的持续战斗力。\n\n# 复杂的模式思考常常难以表达清楚\n\n- capturing value\n- lies people tell\n- how to build a monopoly\n- last mover advantage\n- history of innovation\n- psychology of competition\n\n一个观察：21世纪开始，有大量的公司把各种单独不能赚钱的技术整合起来，形成了垄断优势。 三个策略（顺序不分前后）： 从垄断一个小的，甚至没人认为值得垄断的市场开始 比老二好十倍（From Zero to One里有详述） 善用后发优势\n\n这一点我个人比较容易理解：那些思维复杂且缜密的人，往往最终会拥有一个与绝大多数人不可能相同的价值判断（或者模式）体系。而他们的每一个结论，常常要么显得平淡无奇，要么显得荒诞不经。当他们必须向他人----即，那些头脑比他们简单单得多的人----传递思考结果的时候，是很困难的，因为他们的每句话都可能实际上与显现的并不完全相同，也总是被各种误解。而又为了传递清楚，他们常常不得不从许多个角度去阐释一个问题，可这其实又给头脑简单的人增加了一个困难：把一件事儿理解成许多件事儿......\n\n**他擅长用模式思考能力去识别他人有意无意的谎言**\n\n(YC 创业课)[<http://zhibimo.com/read/xiaolai/growth/competition-is-for-losers.html>]\n","slug":"yc-create-note","published":1,"updated":"2017-01-04T04:01:05.910Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9c0015wsnnawru9tpa","content":"<h1 id=\"成为有完整作品的人\"><a href=\"#成为有完整作品的人\" class=\"headerlink\" title=\"成为有完整作品的人\"></a>成为有完整作品的人</h1><p><code>成长的最靠谱起点是什么？Sam的这篇文章里有个很好的建议</code>：</p>\n<blockquote>\n<p>No matter what you choose, build stuff and be around smart people. “Stuff” can be a lot of different things。 Building stuffs—-做出东西来。</p>\n</blockquote>\n<p>我个人最看中人的这个特质。人群中只有少数人最终能拿出完整的作品—-人与人之间的差异是如此之大，乃至于少数人有作品，更少数人有好的作品，只极少数极少数人才可能作出传世的作品；而与此同时，绝大多数人（万分之九千九百九十九的人）一辈子都没有像样的作品，他们连一篇作文都写不明白。<br><a id=\"more\"></a><br>从一开始就要想尽一切办法做出完整的作品来，哪怕最初的作品很差—-但必须完整。那些有完整作品的人，能力、耐力、学习能力都会超出他人许多倍。无论看起来多简单的作品，只要是完整的，其表面之下的复杂程度是那些没做出过东西的人全然无法想像的。</p>\n<p>另外一个很自然的现象是，如果一个人能做出像样的东西来，那么他身边的聪明人密度无论如何都会比其他人的高出很多。</p>\n<h1 id=\"伟大的公司的几个要素\"><a href=\"#伟大的公司的几个要素\" class=\"headerlink\" title=\"伟大的公司的几个要素\"></a>伟大的公司的几个要素</h1><ul>\n<li>Great Idea （创见）</li>\n<li>Great Product （产品）</li>\n<li>Great Team （团队）</li>\n<li>Great Execution （执行）</li>\n</ul>\n<p>前前后后需要考虑的东西：</p>\n<blockquote>\n<p>这是否是真实的需求？（或者说：是否是真真切切需要解决的问题？—-人们真的很擅长杜撰伪问题……） 市场是否足够大？（或者换个说法，跑道是否足够长？） 市场成长是否足够快？（一个”快”字可能会顺带解决很多很多问题……） 如果真的因为这个创见创业了，那么，公司成长的策略是什么？ 公司如何进行必要的防御？策略又是什么？</p>\n</blockquote>\n<p>当这些问题都需要认真回答，并且需要得到满意答复的时候，我们就会发现很多的”点子”其实不过是垃圾—-根本无法满足我们的追求。</p>\n<h1 id=\"逻辑陷阱\"><a href=\"#逻辑陷阱\" class=\"headerlink\" title=\"逻辑陷阱\"></a>逻辑陷阱</h1><p>不是所有的事情都是非此即彼，</p>\n<blockquote>\n<p>反过来不一定成立吧？</p>\n</blockquote>\n<p>或者更简洁一点：</p>\n<blockquote>\n<p>不一定吧？</p>\n</blockquote>\n<p>然后花一点时间多想想有哪些可能的反例…… 许多年来，这种简单的思考让我避开了很多可能导致严重后果的陷阱。 我也会常常这样问自己：</p>\n<blockquote>\n<p>嗯，很有道理…… 不过，需要看情况吧？在什么情况下这个对，而在什么情况下这个并不见得对，甚至干脆是错的呢？ 嗯，那些时不时自言自语的不全都是精神病患者。</p>\n</blockquote>\n<h1 id=\"从自己的问题入手，一个好的行为模式\"><a href=\"#从自己的问题入手，一个好的行为模式\" class=\"headerlink\" title=\"从自己的问题入手，一个好的行为模式\"></a>从自己的问题入手，一个好的行为模式</h1><ul>\n<li>目的</li>\n<li>手段</li>\n<li><p>结果</p>\n</li>\n<li><p>我们的目的是：避免最终做出一个实际上没人真用的东西……</p>\n</li>\n<li><p>我们的手段是：”先从解决自己的问题开始”。</p>\n</li>\n<li>我们采取这个手段的结果是：如果我自己就有这个需求，那么它一定是真实的需求；而后，也一定会有其他人也有这个需求…… 继而问自己这个问题要足够重要、解决方案要足够有效、市场要足够大、成长空间要足够广阔……</li>\n</ul>\n<p>不过，”先从解决自己的需求/问题开始”有更值得一提的众多好处：</p>\n<blockquote>\n<p>因为是自己的问题，我们会对解决它有更多的热情和耐心 因为是自己的问题，我们会对解决方案有更精准的判断标准 因为是自己的问题，我们更容易体会到解决它的成就感，甚至产生使命感—-这多么求之难得的东西！</p>\n</blockquote>\n<h1 id=\"转换焦点看问题，避免单一\"><a href=\"#转换焦点看问题，避免单一\" class=\"headerlink\" title=\"转换焦点看问题，避免单一\"></a>转换焦点看问题，避免单一</h1><blockquote>\n<p>fall in love with the problem, not the solution. 爱上问题和麻烦，而不是去解决（转换态度）</p>\n<p>It is your job to listen to their problems, and translate those into what is going to build the best and simplest solution for them… 于是，有人能做到”不是用户要什么就给什么”，原因在于关注焦点并不在于问题本身，而是想尽一切办法找到那需求的根源—-即，关注焦点在于更本质的、更深层次的原因，而后给出最好、最简的解决方式。</p>\n</blockquote>\n<p>当我有足够的时间思考之时，我常常这样玩：</p>\n<blockquote>\n<p><strong>目的、手段、结果</strong>：我现在这样想，可能是因为我更关注结果，如果我更关注手段，那我会想什么呢？…… <strong>过去、现在、将来</strong>：我现在这么想，可能是因为我想未来更多一些，要是我更关注现在，那我会想什么呢？ <strong>优点、缺点</strong>：我刚才想这事儿的时候，我关注它的缺点更多一些，；那我要是关注优点更多一些，会想什么呢？</p>\n</blockquote>\n<h1 id=\"如何让自己变得更聪明？\"><a href=\"#如何让自己变得更聪明？\" class=\"headerlink\" title=\"如何让自己变得更聪明？\"></a>如何让自己变得更聪明？</h1><p>如何判断一个人是否聪明？</p>\n<ol>\n<li>此人是否拥有足够多且清晰准确的概念？</li>\n<li>对这些概念之间的联系是否足够清晰准确？</li>\n<li>是否有足够系统的方法论？</li>\n<li>是否有一定的成功经验？</li>\n</ol>\n<p>必要、清晰、且准确的概念，是一切思考的基石。 如何有效的思考，那些常常审视自己思考质量的人，都会很认真地定义自己所使用的概念：(科学方法论)</p>\n<h2 id=\"应该形成的思考方式\"><a href=\"#应该形成的思考方式\" class=\"headerlink\" title=\"应该形成的思考方式\"></a>应该形成的思考方式</h2><blockquote>\n<p>这个概念有必要存在吗？ 它指的究竟是什么？ 反过来，它所指的究竟不是什么？ 它与什么类似？但有什么不同？ 使用它的时候要注意什么？ 用错的时候可能产生什么样的后果？</p>\n</blockquote>\n<p>那些<strong>有作品的人</strong>，就是”成功人士”，他们已经做出像样的东西，”成功”的程度不一样而已，而他们的成长速度一定很快、更快。更为重要的是，要看这些人的多个作品—-作品与作品之间的差异，基本上就是他们进步程度的展现。 另外一个判断方式是看他有无长期持续做的事情，然后去看他做得如何。懂得<strong>长期持续做事</strong>的人，通常不笨，也通常没办法做不好那件事儿。 谁比谁的智商差多少，只不过聪明的人有一套自己的方法论，他们知道如何快速习得，快速迭代的而已。</p>\n<h1 id=\"如何寻找合伙人？\"><a href=\"#如何寻找合伙人？\" class=\"headerlink\" title=\"如何寻找合伙人？\"></a>如何寻找合伙人？</h1><ul>\n<li>我了解这个人吗？</li>\n<li>他的优点、缺点都是什么？</li>\n<li>他信任你吗？有多信任？反过来呢？</li>\n<li>他出了任何问题，你都愿意帮助他吗？反过来呢？</li>\n<li>未来的若干年中，你们能做到荣辱与共吗？</li>\n</ul>\n<p>合伙人的最重要素质是什么？ 答案其实与选择婚姻伴侣一样：找到勇于主动承担责任的人，并且双方（或多方）都必须是肯于承担责任的人。哦，对了，勇于承担责任的人有个共同的特征，出了问题的时候，他们会先在自己身上找问题。</p>\n<h1 id=\"直觉靠谱吗？-intuitive-counter-intuitive\"><a href=\"#直觉靠谱吗？-intuitive-counter-intuitive\" class=\"headerlink\" title=\"直觉靠谱吗？(intuitive,counter-intuitive)\"></a>直觉靠谱吗？(intuitive,counter-intuitive)</h1><p>直觉虽然显现为瞬间不假思索的判断，但它不是没有来历的，它实际上是经验、训练和知识的长期积累瞬间内共同发挥作用的结果，而不是无理由的猜测。 随着经验的增加，训练的辅助，知识的积累，所谓的”直觉”也在不断发展,如此看来，人与人之间的直觉质量常常有着天壤之别。</p>\n<ol>\n<li>如果你在某个领域是真正的专家—-只有名头没有真知”砖家”的不算数，在那个领域里，你不仅要相信你的直觉，还要刻意打磨你的直觉—-通过持续的观察、思考、训练和自我成长。</li>\n<li><p>如果你不是那个领域里真的专家，你的直觉就是个屁。</p>\n<blockquote>\n<p>Sam是在回答”如何寻找现在以及将来10年里成长最快的市场”时说：这个时候，年轻人应该相信你的直觉。Sam的这个回答固然有些含混，但也确实至少部分正确，因为正在”感受并发现飞速成长的东西”确实是年轻人比老年人更有经验的领域。</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"如何精通自己的用户\"><a href=\"#如何精通自己的用户\" class=\"headerlink\" title=\"如何精通自己的用户?\"></a>如何精通自己的用户?</h1><ul>\n<li>想尽一切办法亲自去找用户—-而不是采用程序员喜欢的自动的方式；</li>\n<li>做更深入的，能够获得用户真实答案的调查</li>\n<li>关注各种各样的进阶指标，DAU、Retention之类……</li>\n</ul>\n<p>我的一个项目合伙人（他做出来的产品不用任何PR都可以初期每天增长几万用户）曾经跟我分享他的方法论：</p>\n<blockquote>\n<p>我就想，如果我做出来之后，放在那里，会不会有陌生人主动来用？会不会有很多陌生人来用？他们会不会把这个东西推荐给身边的人？</p>\n</blockquote>\n<p>还有一个普适的方法论：无论做什么，都可以再问一遍：”<strong>更本质的是什么</strong>？”</p>\n<blockquote>\n<p>如果用户有这么个需求，那么更本质的原因是什么？ 于是，就有了很多这样的思考： 用户要什么就给什么是不对的，因为大多数用户不可能对你的产品有全面深入长期的打算。 一切能够满足人性弱点的产品都是令用户热爱的。比如，如果你能让用户再懒一点再懒一点，那他们就会爱你多一些再多一些。</p>\n</blockquote>\n<p>关于精通用户的方法论，还可以再推荐出自斯坦福教授Nir Eyal的一本书：(Hooked: How to Build Habit-Forming Products。)[<a href=\"https://www.amazon.com/Hooked-How-Build-Habit-Forming-Products-ebook/dp/B00HJ4A43S?ie=UTF8&amp;*Version*=1&amp;*entries*=0\" target=\"_blank\" rel=\"external\">https://www.amazon.com/Hooked-How-Build-Habit-Forming-Products-ebook/dp/B00HJ4A43S?ie=UTF8&amp;*Version*=1&amp;*entries*=0</a>]</p>\n<h1 id=\"不停得学习，学习无终点\"><a href=\"#不停得学习，学习无终点\" class=\"headerlink\" title=\"不停得学习，学习无终点\"></a>不停得学习，学习无终点</h1><ul>\n<li>学很多值得学的东西</li>\n<li>仔细琢磨你感兴趣的日常生活中的痛点(正如自己总会莫名的焦虑，对未来没有信心等)</li>\n<li>多与牛人在一起（这是怎样找到合伙人的诀窍）</li>\n</ul>\n<h1 id=\"认真、仔细、不怕麻烦\"><a href=\"#认真、仔细、不怕麻烦\" class=\"headerlink\" title=\"认真、仔细、不怕麻烦\"></a>认真、仔细、不怕麻烦</h1><ol>\n<li>直接应聘去清洁公司上班，买各种可以买得到的书去看，有培训班就马上去参加……</li>\n<li>研究一切可以找得到的关于这个领域内其它公司的资料，把搜索引擎上可以找的资料前1000条全都读一遍……要是上市公司的话，就直接去查找S1文件……</li>\n<li>公司还小的时候，不可能像Facebook一样有个Growth Team，那么就靠自己来，一切都手动，不要自动—-因为自动会有遗漏，且有可能浮于表面……</li>\n<li>公司大了，有钱了，也不是直接烧钱打网络广告，而是罗列一切可能的渠道，而后一个一个地尝试。一次只试验一个渠道，失败了，就退回分支，去尝试另外一个选择—-直至遍历所有可能性……</li>\n</ol>\n<p>我见过很多团队，他们东施效颦地信奉一些教条：</p>\n<blockquote>\n<p>我们是一个有信仰的团队。 我们坚信这个方向是绝对没有问题的。 我们只是需要坚持、坚持、再坚持……</p>\n</blockquote>\n<p>什么时候应该转型？没有标准答案,什么时候应该继续坚持？没有标准答案。 有一点倒是可以值得参考，就是成长速度快不快？不快，那就要小心了。</p>\n<h1 id=\"优秀的人需要怎样的激励\"><a href=\"#优秀的人需要怎样的激励\" class=\"headerlink\" title=\"优秀的人需要怎样的激励\"></a>优秀的人需要怎样的激励</h1><ul>\n<li>autonomy 自治</li>\n<li>mastery 精通</li>\n<li>purpose 追求</li>\n</ul>\n<h1 id=\"不是每个人都适合创业的\"><a href=\"#不是每个人都适合创业的\" class=\"headerlink\" title=\"不是每个人都适合创业的\"></a>不是每个人都适合创业的</h1><p>Sam在第一课里说，创业是一个非常机会均匀的领域：</p>\n<blockquote>\n<p>One of the exciting things about startups is that they are a surprisingly even playing field. Young and inexperienced, you can do this. Old and experienced, you can do this, too. 但也有需要注意的情况。在创业这件事儿上，年轻人更有优势。其他的不说，面对失败的能力，还是年轻人更强，他们更输的起—-因为对他们来说，这本来就是常态。除此之外，年轻人常常有更大的野心，他们有更多的持续战斗力。</p>\n</blockquote>\n<h1 id=\"复杂的模式思考常常难以表达清楚\"><a href=\"#复杂的模式思考常常难以表达清楚\" class=\"headerlink\" title=\"复杂的模式思考常常难以表达清楚\"></a>复杂的模式思考常常难以表达清楚</h1><ul>\n<li>capturing value</li>\n<li>lies people tell</li>\n<li>how to build a monopoly</li>\n<li>last mover advantage</li>\n<li>history of innovation</li>\n<li>psychology of competition</li>\n</ul>\n<p>一个观察：21世纪开始，有大量的公司把各种单独不能赚钱的技术整合起来，形成了垄断优势。 三个策略（顺序不分前后）： 从垄断一个小的，甚至没人认为值得垄断的市场开始 比老二好十倍（From Zero to One里有详述） 善用后发优势</p>\n<p>这一点我个人比较容易理解：那些思维复杂且缜密的人，往往最终会拥有一个与绝大多数人不可能相同的价值判断（或者模式）体系。而他们的每一个结论，常常要么显得平淡无奇，要么显得荒诞不经。当他们必须向他人—-即，那些头脑比他们简单单得多的人—-传递思考结果的时候，是很困难的，因为他们的每句话都可能实际上与显现的并不完全相同，也总是被各种误解。而又为了传递清楚，他们常常不得不从许多个角度去阐释一个问题，可这其实又给头脑简单的人增加了一个困难：把一件事儿理解成许多件事儿……</p>\n<p><strong>他擅长用模式思考能力去识别他人有意无意的谎言</strong></p>\n<p>(YC 创业课)[<a href=\"http://zhibimo.com/read/xiaolai/growth/competition-is-for-losers.html\" target=\"_blank\" rel=\"external\">http://zhibimo.com/read/xiaolai/growth/competition-is-for-losers.html</a>]</p>\n","excerpt":"<h1 id=\"成为有完整作品的人\"><a href=\"#成为有完整作品的人\" class=\"headerlink\" title=\"成为有完整作品的人\"></a>成为有完整作品的人</h1><p><code>成长的最靠谱起点是什么？Sam的这篇文章里有个很好的建议</code>：</p>\n<blockquote>\n<p>No matter what you choose, build stuff and be around smart people. “Stuff” can be a lot of different things。 Building stuffs—-做出东西来。</p>\n</blockquote>\n<p>我个人最看中人的这个特质。人群中只有少数人最终能拿出完整的作品—-人与人之间的差异是如此之大，乃至于少数人有作品，更少数人有好的作品，只极少数极少数人才可能作出传世的作品；而与此同时，绝大多数人（万分之九千九百九十九的人）一辈子都没有像样的作品，他们连一篇作文都写不明白。<br>","more":"<br>从一开始就要想尽一切办法做出完整的作品来，哪怕最初的作品很差—-但必须完整。那些有完整作品的人，能力、耐力、学习能力都会超出他人许多倍。无论看起来多简单的作品，只要是完整的，其表面之下的复杂程度是那些没做出过东西的人全然无法想像的。</p>\n<p>另外一个很自然的现象是，如果一个人能做出像样的东西来，那么他身边的聪明人密度无论如何都会比其他人的高出很多。</p>\n<h1 id=\"伟大的公司的几个要素\"><a href=\"#伟大的公司的几个要素\" class=\"headerlink\" title=\"伟大的公司的几个要素\"></a>伟大的公司的几个要素</h1><ul>\n<li>Great Idea （创见）</li>\n<li>Great Product （产品）</li>\n<li>Great Team （团队）</li>\n<li>Great Execution （执行）</li>\n</ul>\n<p>前前后后需要考虑的东西：</p>\n<blockquote>\n<p>这是否是真实的需求？（或者说：是否是真真切切需要解决的问题？—-人们真的很擅长杜撰伪问题……） 市场是否足够大？（或者换个说法，跑道是否足够长？） 市场成长是否足够快？（一个”快”字可能会顺带解决很多很多问题……） 如果真的因为这个创见创业了，那么，公司成长的策略是什么？ 公司如何进行必要的防御？策略又是什么？</p>\n</blockquote>\n<p>当这些问题都需要认真回答，并且需要得到满意答复的时候，我们就会发现很多的”点子”其实不过是垃圾—-根本无法满足我们的追求。</p>\n<h1 id=\"逻辑陷阱\"><a href=\"#逻辑陷阱\" class=\"headerlink\" title=\"逻辑陷阱\"></a>逻辑陷阱</h1><p>不是所有的事情都是非此即彼，</p>\n<blockquote>\n<p>反过来不一定成立吧？</p>\n</blockquote>\n<p>或者更简洁一点：</p>\n<blockquote>\n<p>不一定吧？</p>\n</blockquote>\n<p>然后花一点时间多想想有哪些可能的反例…… 许多年来，这种简单的思考让我避开了很多可能导致严重后果的陷阱。 我也会常常这样问自己：</p>\n<blockquote>\n<p>嗯，很有道理…… 不过，需要看情况吧？在什么情况下这个对，而在什么情况下这个并不见得对，甚至干脆是错的呢？ 嗯，那些时不时自言自语的不全都是精神病患者。</p>\n</blockquote>\n<h1 id=\"从自己的问题入手，一个好的行为模式\"><a href=\"#从自己的问题入手，一个好的行为模式\" class=\"headerlink\" title=\"从自己的问题入手，一个好的行为模式\"></a>从自己的问题入手，一个好的行为模式</h1><ul>\n<li>目的</li>\n<li>手段</li>\n<li><p>结果</p>\n</li>\n<li><p>我们的目的是：避免最终做出一个实际上没人真用的东西……</p>\n</li>\n<li><p>我们的手段是：”先从解决自己的问题开始”。</p>\n</li>\n<li>我们采取这个手段的结果是：如果我自己就有这个需求，那么它一定是真实的需求；而后，也一定会有其他人也有这个需求…… 继而问自己这个问题要足够重要、解决方案要足够有效、市场要足够大、成长空间要足够广阔……</li>\n</ul>\n<p>不过，”先从解决自己的需求/问题开始”有更值得一提的众多好处：</p>\n<blockquote>\n<p>因为是自己的问题，我们会对解决它有更多的热情和耐心 因为是自己的问题，我们会对解决方案有更精准的判断标准 因为是自己的问题，我们更容易体会到解决它的成就感，甚至产生使命感—-这多么求之难得的东西！</p>\n</blockquote>\n<h1 id=\"转换焦点看问题，避免单一\"><a href=\"#转换焦点看问题，避免单一\" class=\"headerlink\" title=\"转换焦点看问题，避免单一\"></a>转换焦点看问题，避免单一</h1><blockquote>\n<p>fall in love with the problem, not the solution. 爱上问题和麻烦，而不是去解决（转换态度）</p>\n<p>It is your job to listen to their problems, and translate those into what is going to build the best and simplest solution for them… 于是，有人能做到”不是用户要什么就给什么”，原因在于关注焦点并不在于问题本身，而是想尽一切办法找到那需求的根源—-即，关注焦点在于更本质的、更深层次的原因，而后给出最好、最简的解决方式。</p>\n</blockquote>\n<p>当我有足够的时间思考之时，我常常这样玩：</p>\n<blockquote>\n<p><strong>目的、手段、结果</strong>：我现在这样想，可能是因为我更关注结果，如果我更关注手段，那我会想什么呢？…… <strong>过去、现在、将来</strong>：我现在这么想，可能是因为我想未来更多一些，要是我更关注现在，那我会想什么呢？ <strong>优点、缺点</strong>：我刚才想这事儿的时候，我关注它的缺点更多一些，；那我要是关注优点更多一些，会想什么呢？</p>\n</blockquote>\n<h1 id=\"如何让自己变得更聪明？\"><a href=\"#如何让自己变得更聪明？\" class=\"headerlink\" title=\"如何让自己变得更聪明？\"></a>如何让自己变得更聪明？</h1><p>如何判断一个人是否聪明？</p>\n<ol>\n<li>此人是否拥有足够多且清晰准确的概念？</li>\n<li>对这些概念之间的联系是否足够清晰准确？</li>\n<li>是否有足够系统的方法论？</li>\n<li>是否有一定的成功经验？</li>\n</ol>\n<p>必要、清晰、且准确的概念，是一切思考的基石。 如何有效的思考，那些常常审视自己思考质量的人，都会很认真地定义自己所使用的概念：(科学方法论)</p>\n<h2 id=\"应该形成的思考方式\"><a href=\"#应该形成的思考方式\" class=\"headerlink\" title=\"应该形成的思考方式\"></a>应该形成的思考方式</h2><blockquote>\n<p>这个概念有必要存在吗？ 它指的究竟是什么？ 反过来，它所指的究竟不是什么？ 它与什么类似？但有什么不同？ 使用它的时候要注意什么？ 用错的时候可能产生什么样的后果？</p>\n</blockquote>\n<p>那些<strong>有作品的人</strong>，就是”成功人士”，他们已经做出像样的东西，”成功”的程度不一样而已，而他们的成长速度一定很快、更快。更为重要的是，要看这些人的多个作品—-作品与作品之间的差异，基本上就是他们进步程度的展现。 另外一个判断方式是看他有无长期持续做的事情，然后去看他做得如何。懂得<strong>长期持续做事</strong>的人，通常不笨，也通常没办法做不好那件事儿。 谁比谁的智商差多少，只不过聪明的人有一套自己的方法论，他们知道如何快速习得，快速迭代的而已。</p>\n<h1 id=\"如何寻找合伙人？\"><a href=\"#如何寻找合伙人？\" class=\"headerlink\" title=\"如何寻找合伙人？\"></a>如何寻找合伙人？</h1><ul>\n<li>我了解这个人吗？</li>\n<li>他的优点、缺点都是什么？</li>\n<li>他信任你吗？有多信任？反过来呢？</li>\n<li>他出了任何问题，你都愿意帮助他吗？反过来呢？</li>\n<li>未来的若干年中，你们能做到荣辱与共吗？</li>\n</ul>\n<p>合伙人的最重要素质是什么？ 答案其实与选择婚姻伴侣一样：找到勇于主动承担责任的人，并且双方（或多方）都必须是肯于承担责任的人。哦，对了，勇于承担责任的人有个共同的特征，出了问题的时候，他们会先在自己身上找问题。</p>\n<h1 id=\"直觉靠谱吗？-intuitive-counter-intuitive\"><a href=\"#直觉靠谱吗？-intuitive-counter-intuitive\" class=\"headerlink\" title=\"直觉靠谱吗？(intuitive,counter-intuitive)\"></a>直觉靠谱吗？(intuitive,counter-intuitive)</h1><p>直觉虽然显现为瞬间不假思索的判断，但它不是没有来历的，它实际上是经验、训练和知识的长期积累瞬间内共同发挥作用的结果，而不是无理由的猜测。 随着经验的增加，训练的辅助，知识的积累，所谓的”直觉”也在不断发展,如此看来，人与人之间的直觉质量常常有着天壤之别。</p>\n<ol>\n<li>如果你在某个领域是真正的专家—-只有名头没有真知”砖家”的不算数，在那个领域里，你不仅要相信你的直觉，还要刻意打磨你的直觉—-通过持续的观察、思考、训练和自我成长。</li>\n<li><p>如果你不是那个领域里真的专家，你的直觉就是个屁。</p>\n<blockquote>\n<p>Sam是在回答”如何寻找现在以及将来10年里成长最快的市场”时说：这个时候，年轻人应该相信你的直觉。Sam的这个回答固然有些含混，但也确实至少部分正确，因为正在”感受并发现飞速成长的东西”确实是年轻人比老年人更有经验的领域。</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"如何精通自己的用户\"><a href=\"#如何精通自己的用户\" class=\"headerlink\" title=\"如何精通自己的用户?\"></a>如何精通自己的用户?</h1><ul>\n<li>想尽一切办法亲自去找用户—-而不是采用程序员喜欢的自动的方式；</li>\n<li>做更深入的，能够获得用户真实答案的调查</li>\n<li>关注各种各样的进阶指标，DAU、Retention之类……</li>\n</ul>\n<p>我的一个项目合伙人（他做出来的产品不用任何PR都可以初期每天增长几万用户）曾经跟我分享他的方法论：</p>\n<blockquote>\n<p>我就想，如果我做出来之后，放在那里，会不会有陌生人主动来用？会不会有很多陌生人来用？他们会不会把这个东西推荐给身边的人？</p>\n</blockquote>\n<p>还有一个普适的方法论：无论做什么，都可以再问一遍：”<strong>更本质的是什么</strong>？”</p>\n<blockquote>\n<p>如果用户有这么个需求，那么更本质的原因是什么？ 于是，就有了很多这样的思考： 用户要什么就给什么是不对的，因为大多数用户不可能对你的产品有全面深入长期的打算。 一切能够满足人性弱点的产品都是令用户热爱的。比如，如果你能让用户再懒一点再懒一点，那他们就会爱你多一些再多一些。</p>\n</blockquote>\n<p>关于精通用户的方法论，还可以再推荐出自斯坦福教授Nir Eyal的一本书：(Hooked: How to Build Habit-Forming Products。)[<a href=\"https://www.amazon.com/Hooked-How-Build-Habit-Forming-Products-ebook/dp/B00HJ4A43S?ie=UTF8&amp;*Version*=1&amp;*entries*=0\">https://www.amazon.com/Hooked-How-Build-Habit-Forming-Products-ebook/dp/B00HJ4A43S?ie=UTF8&amp;*Version*=1&amp;*entries*=0</a>]</p>\n<h1 id=\"不停得学习，学习无终点\"><a href=\"#不停得学习，学习无终点\" class=\"headerlink\" title=\"不停得学习，学习无终点\"></a>不停得学习，学习无终点</h1><ul>\n<li>学很多值得学的东西</li>\n<li>仔细琢磨你感兴趣的日常生活中的痛点(正如自己总会莫名的焦虑，对未来没有信心等)</li>\n<li>多与牛人在一起（这是怎样找到合伙人的诀窍）</li>\n</ul>\n<h1 id=\"认真、仔细、不怕麻烦\"><a href=\"#认真、仔细、不怕麻烦\" class=\"headerlink\" title=\"认真、仔细、不怕麻烦\"></a>认真、仔细、不怕麻烦</h1><ol>\n<li>直接应聘去清洁公司上班，买各种可以买得到的书去看，有培训班就马上去参加……</li>\n<li>研究一切可以找得到的关于这个领域内其它公司的资料，把搜索引擎上可以找的资料前1000条全都读一遍……要是上市公司的话，就直接去查找S1文件……</li>\n<li>公司还小的时候，不可能像Facebook一样有个Growth Team，那么就靠自己来，一切都手动，不要自动—-因为自动会有遗漏，且有可能浮于表面……</li>\n<li>公司大了，有钱了，也不是直接烧钱打网络广告，而是罗列一切可能的渠道，而后一个一个地尝试。一次只试验一个渠道，失败了，就退回分支，去尝试另外一个选择—-直至遍历所有可能性……</li>\n</ol>\n<p>我见过很多团队，他们东施效颦地信奉一些教条：</p>\n<blockquote>\n<p>我们是一个有信仰的团队。 我们坚信这个方向是绝对没有问题的。 我们只是需要坚持、坚持、再坚持……</p>\n</blockquote>\n<p>什么时候应该转型？没有标准答案,什么时候应该继续坚持？没有标准答案。 有一点倒是可以值得参考，就是成长速度快不快？不快，那就要小心了。</p>\n<h1 id=\"优秀的人需要怎样的激励\"><a href=\"#优秀的人需要怎样的激励\" class=\"headerlink\" title=\"优秀的人需要怎样的激励\"></a>优秀的人需要怎样的激励</h1><ul>\n<li>autonomy 自治</li>\n<li>mastery 精通</li>\n<li>purpose 追求</li>\n</ul>\n<h1 id=\"不是每个人都适合创业的\"><a href=\"#不是每个人都适合创业的\" class=\"headerlink\" title=\"不是每个人都适合创业的\"></a>不是每个人都适合创业的</h1><p>Sam在第一课里说，创业是一个非常机会均匀的领域：</p>\n<blockquote>\n<p>One of the exciting things about startups is that they are a surprisingly even playing field. Young and inexperienced, you can do this. Old and experienced, you can do this, too. 但也有需要注意的情况。在创业这件事儿上，年轻人更有优势。其他的不说，面对失败的能力，还是年轻人更强，他们更输的起—-因为对他们来说，这本来就是常态。除此之外，年轻人常常有更大的野心，他们有更多的持续战斗力。</p>\n</blockquote>\n<h1 id=\"复杂的模式思考常常难以表达清楚\"><a href=\"#复杂的模式思考常常难以表达清楚\" class=\"headerlink\" title=\"复杂的模式思考常常难以表达清楚\"></a>复杂的模式思考常常难以表达清楚</h1><ul>\n<li>capturing value</li>\n<li>lies people tell</li>\n<li>how to build a monopoly</li>\n<li>last mover advantage</li>\n<li>history of innovation</li>\n<li>psychology of competition</li>\n</ul>\n<p>一个观察：21世纪开始，有大量的公司把各种单独不能赚钱的技术整合起来，形成了垄断优势。 三个策略（顺序不分前后）： 从垄断一个小的，甚至没人认为值得垄断的市场开始 比老二好十倍（From Zero to One里有详述） 善用后发优势</p>\n<p>这一点我个人比较容易理解：那些思维复杂且缜密的人，往往最终会拥有一个与绝大多数人不可能相同的价值判断（或者模式）体系。而他们的每一个结论，常常要么显得平淡无奇，要么显得荒诞不经。当他们必须向他人—-即，那些头脑比他们简单单得多的人—-传递思考结果的时候，是很困难的，因为他们的每句话都可能实际上与显现的并不完全相同，也总是被各种误解。而又为了传递清楚，他们常常不得不从许多个角度去阐释一个问题，可这其实又给头脑简单的人增加了一个困难：把一件事儿理解成许多件事儿……</p>\n<p><strong>他擅长用模式思考能力去识别他人有意无意的谎言</strong></p>\n<p>(YC 创业课)[<a href=\"http://zhibimo.com/read/xiaolai/growth/competition-is-for-losers.html\">http://zhibimo.com/read/xiaolai/growth/competition-is-for-losers.html</a>]</p>"},{"title":"倒排索引","date":"2016-08-11T03:19:01.000Z","updated":"2016-08-11T03:19:01.000Z","_content":"\n### 正排索引和倒排索引\n\n**倒排索引**（英语：Inverted index），也常被称为**反向索引**、**置入档案**或**反向档案**，被用来存储在全文搜索下某个单词在一个文档或者一组文档中的存储位置的映射。它是文档检索系统中最常用的数据结构。\n<!--more-->\n有两种不同的反向索引形式：\n\n一条记录的水平反向索引（或者反向档案索引）包含每个引用单词的文档的列表。\n一个单词的水平反向索引（或者完全反向索引）又包含每个单词在一个文档中的位置。\n后者的形式提供了更多的兼容性（比如短语搜索），但是需要更多的时间和空间来创建。\n\n所谓的正排索引是从索引文档到关键词到内容，倒排索引则是相反从关键词到词频，位置，目录等信息，现在通常用于搜索的。由于互联网上的数据量无限大，不可能存储足够多的文档，所以正排索引用处不大。\n\n\n有两种不同的反向索引形式：\n\n- 一条记录的水平反向索引（或者反向档案索引）包含每个引用单词的文档的[列表](https://zh.wikipedia.org/wiki/%E5%88%97%E8%A1%A8)。\n\n- 一个单词的水平反向索引（或者完全反向索引）又包含每个单词在一个文档中的位置。\n\n\n  ​我们就能得到下面的反向文件索引：\n\n- ![{\\displaystyleT_{0}=}](https://wikimedia.org/api/rest_v1/media/math/render/svg/1ab3d9202f18a678affe9a339511bef0a7b8b110)`\"it is what it is\"`\n- ![{\\displaystyleT_{1}=}](https://wikimedia.org/api/rest_v1/media/math/render/svg/57ac5840245616f79874f4635b3bcb2e3da344dd)`\"what is it\"`\n- ![{\\displaystyleT_{2}=}](https://wikimedia.org/api/rest_v1/media/math/render/svg/5713cf5634b3846b4d68c3383b65db289511d8bf)`\"it is a banana\"`\n\n```\n\"a\":      {2}\n\"banana\": {2}\n\"is\":     {0, 1, 2}\n\"it\":     {0, 1, 2}\n\"what\":   {0, 1}\n```\n检索的条件\"what\", \"is\" 和 \"it\" 将对应这个集合： ![coll](https://wikimedia.org/api/rest_v1/media/math/render/svg/576f880df65391031d612f3d9130ebd81575f6a1)\n\n对相同的文字，我们得到后面这些完全反向索引，有文档数量和当前查询的单词结果组成的的成对数据。 同样，文档数量和当前查询的单词结果都从零开始。所以，`\"banana\": {(2, 3)}` 就是说 \"banana\"在第三个文档里 ( {\\displaystyle T_{2}} T_{2})，而且在第三个文档的位置是第四个单词(地址为 3)。\n\n```\n\"a\":      {(2, 2)}\n\"banana\": {(2, 3)}\n\"is\":     {(0, 1), (0, 4), (1, 1), (2, 1)}\n\"it\":     {(0, 0), (0, 3), (1, 2), (2, 0)}\n\"what\":   {(0, 2), (1, 0)}\n```\n\n如果我们执行短语搜索\"what is it\" 我们得到这个短语的全部单词各自的结果所在文档为文档0和文档1。但是这个短语检索的连续的条件仅仅在文档1得到。\n\n反向索引数据结构是典型的搜索引擎检索算法重要的部分。\n一个搜索引擎执行的目标就是优化查询的速度：找到某个单词在文档中出现的地方。以前，正向索引开发出来用来存储每个文档的单词的列表，接着掉头来开发了一种反向索引。 正向索引的查询往往满足每个文档有序频繁的全文查询和每个单词在校验文档中的验证这样的查询。\n实际上，时间、内存、处理器等等资源的限制，技术上正向索引是不能实现的。\n为了替代正向索引的每个文档的单词列表，能列出每个查询的单词所有所在文档的列表的反向索引数据结构开发了出来。\n随着反向索引的创建，如今的查询能通过立即的单词标示迅速获取结果（经过随机存储）。随机存储也通常被认为快于顺序存储。\n\n### 构建方法\n\n#### 简单法\n  索引的构建[4]  相当于从正排表到倒排表的建立过程。当我们分析完网页时 ,得到的是以网页为主码的索引表。当索引建立完成后 ,应得到倒排表 ,具体流程如图所示：\n  流程描述如下：\n  1）将文档分析称单词term标记，\n  2）使用hash去重单词term\n  　　3）对单词生成倒排列表\n  　　倒排列表就是文档编号DocID，没有包含其他的信息（如词频，单词位置等），这就是简单的索引。\n  　　这个简单索引功能可以用于小数据，例如索引几千个文档。然而它有两点限制：\n  　　1）需要有足够的内存来存储倒排表，对于搜索引擎来说， 都是G级别数据，特别是当规模不断扩大时 ,我们根本不可能提供这么多的内存。\n  　　2）算法是顺序执行，不便于并行处理。\n\n\n####  合并法\n  归并法[4]  ,即每次将内存中数据写入磁盘时，包括词典在内的所有中间结果信息都被写入磁盘，这样内存所有内容都可以被清空，后续建立索引可以使用全部的定额内存。\n  归并索引\n  归并索引\n  如图 归并示意图：\n  合并流程：\n  1）页面分析，生成临时倒排数据索引A，B，当临时倒排数据索引A，B占满内存后，将内存索引A，B写入临时文件生成临时倒排文件，\n  　　2) 对生成的多个临时倒排文件 ,执行多路归并 ,输出得到最终的倒排文件 ( inverted file)。\n  合并流程\n  合并流程\n  索引创建过程中的页面分析 ,特别是中文分词为主要时间开销。算法的第二步相对很快。这样创建算法的优化集中在中文分词效率上。\n\n>[参考1]: http://blog.csdn.net/hguisu/article/details/7962350\n>[baike]: http://baike.baidu.com/view/676861.htm\n>[wikipedia]: https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95\n>[参考2]: http://blog.csdn.net/hguisu/article/details/7962350\n","source":"_posts/2016/Inverted-index.md","raw":"---\ntitle: 倒排索引\ndate: 2016-08-11 11:19:01\nupdated: 2016-08-11 11:19:01\ntags:\ncategories:\n---\n\n### 正排索引和倒排索引\n\n**倒排索引**（英语：Inverted index），也常被称为**反向索引**、**置入档案**或**反向档案**，被用来存储在全文搜索下某个单词在一个文档或者一组文档中的存储位置的映射。它是文档检索系统中最常用的数据结构。\n<!--more-->\n有两种不同的反向索引形式：\n\n一条记录的水平反向索引（或者反向档案索引）包含每个引用单词的文档的列表。\n一个单词的水平反向索引（或者完全反向索引）又包含每个单词在一个文档中的位置。\n后者的形式提供了更多的兼容性（比如短语搜索），但是需要更多的时间和空间来创建。\n\n所谓的正排索引是从索引文档到关键词到内容，倒排索引则是相反从关键词到词频，位置，目录等信息，现在通常用于搜索的。由于互联网上的数据量无限大，不可能存储足够多的文档，所以正排索引用处不大。\n\n\n有两种不同的反向索引形式：\n\n- 一条记录的水平反向索引（或者反向档案索引）包含每个引用单词的文档的[列表](https://zh.wikipedia.org/wiki/%E5%88%97%E8%A1%A8)。\n\n- 一个单词的水平反向索引（或者完全反向索引）又包含每个单词在一个文档中的位置。\n\n\n  ​我们就能得到下面的反向文件索引：\n\n- ![{\\displaystyleT_{0}=}](https://wikimedia.org/api/rest_v1/media/math/render/svg/1ab3d9202f18a678affe9a339511bef0a7b8b110)`\"it is what it is\"`\n- ![{\\displaystyleT_{1}=}](https://wikimedia.org/api/rest_v1/media/math/render/svg/57ac5840245616f79874f4635b3bcb2e3da344dd)`\"what is it\"`\n- ![{\\displaystyleT_{2}=}](https://wikimedia.org/api/rest_v1/media/math/render/svg/5713cf5634b3846b4d68c3383b65db289511d8bf)`\"it is a banana\"`\n\n```\n\"a\":      {2}\n\"banana\": {2}\n\"is\":     {0, 1, 2}\n\"it\":     {0, 1, 2}\n\"what\":   {0, 1}\n```\n检索的条件\"what\", \"is\" 和 \"it\" 将对应这个集合： ![coll](https://wikimedia.org/api/rest_v1/media/math/render/svg/576f880df65391031d612f3d9130ebd81575f6a1)\n\n对相同的文字，我们得到后面这些完全反向索引，有文档数量和当前查询的单词结果组成的的成对数据。 同样，文档数量和当前查询的单词结果都从零开始。所以，`\"banana\": {(2, 3)}` 就是说 \"banana\"在第三个文档里 ( {\\displaystyle T_{2}} T_{2})，而且在第三个文档的位置是第四个单词(地址为 3)。\n\n```\n\"a\":      {(2, 2)}\n\"banana\": {(2, 3)}\n\"is\":     {(0, 1), (0, 4), (1, 1), (2, 1)}\n\"it\":     {(0, 0), (0, 3), (1, 2), (2, 0)}\n\"what\":   {(0, 2), (1, 0)}\n```\n\n如果我们执行短语搜索\"what is it\" 我们得到这个短语的全部单词各自的结果所在文档为文档0和文档1。但是这个短语检索的连续的条件仅仅在文档1得到。\n\n反向索引数据结构是典型的搜索引擎检索算法重要的部分。\n一个搜索引擎执行的目标就是优化查询的速度：找到某个单词在文档中出现的地方。以前，正向索引开发出来用来存储每个文档的单词的列表，接着掉头来开发了一种反向索引。 正向索引的查询往往满足每个文档有序频繁的全文查询和每个单词在校验文档中的验证这样的查询。\n实际上，时间、内存、处理器等等资源的限制，技术上正向索引是不能实现的。\n为了替代正向索引的每个文档的单词列表，能列出每个查询的单词所有所在文档的列表的反向索引数据结构开发了出来。\n随着反向索引的创建，如今的查询能通过立即的单词标示迅速获取结果（经过随机存储）。随机存储也通常被认为快于顺序存储。\n\n### 构建方法\n\n#### 简单法\n  索引的构建[4]  相当于从正排表到倒排表的建立过程。当我们分析完网页时 ,得到的是以网页为主码的索引表。当索引建立完成后 ,应得到倒排表 ,具体流程如图所示：\n  流程描述如下：\n  1）将文档分析称单词term标记，\n  2）使用hash去重单词term\n  　　3）对单词生成倒排列表\n  　　倒排列表就是文档编号DocID，没有包含其他的信息（如词频，单词位置等），这就是简单的索引。\n  　　这个简单索引功能可以用于小数据，例如索引几千个文档。然而它有两点限制：\n  　　1）需要有足够的内存来存储倒排表，对于搜索引擎来说， 都是G级别数据，特别是当规模不断扩大时 ,我们根本不可能提供这么多的内存。\n  　　2）算法是顺序执行，不便于并行处理。\n\n\n####  合并法\n  归并法[4]  ,即每次将内存中数据写入磁盘时，包括词典在内的所有中间结果信息都被写入磁盘，这样内存所有内容都可以被清空，后续建立索引可以使用全部的定额内存。\n  归并索引\n  归并索引\n  如图 归并示意图：\n  合并流程：\n  1）页面分析，生成临时倒排数据索引A，B，当临时倒排数据索引A，B占满内存后，将内存索引A，B写入临时文件生成临时倒排文件，\n  　　2) 对生成的多个临时倒排文件 ,执行多路归并 ,输出得到最终的倒排文件 ( inverted file)。\n  合并流程\n  合并流程\n  索引创建过程中的页面分析 ,特别是中文分词为主要时间开销。算法的第二步相对很快。这样创建算法的优化集中在中文分词效率上。\n\n>[参考1]: http://blog.csdn.net/hguisu/article/details/7962350\n>[baike]: http://baike.baidu.com/view/676861.htm\n>[wikipedia]: https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95\n>[参考2]: http://blog.csdn.net/hguisu/article/details/7962350\n","slug":"Inverted-index","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9c0017wsnnfiah2drk","content":"<h3 id=\"正排索引和倒排索引\"><a href=\"#正排索引和倒排索引\" class=\"headerlink\" title=\"正排索引和倒排索引\"></a>正排索引和倒排索引</h3><p><strong>倒排索引</strong>（英语：Inverted index），也常被称为<strong>反向索引</strong>、<strong>置入档案</strong>或<strong>反向档案</strong>，被用来存储在全文搜索下某个单词在一个文档或者一组文档中的存储位置的映射。它是文档检索系统中最常用的数据结构。<br><a id=\"more\"></a><br>有两种不同的反向索引形式：</p>\n<p>一条记录的水平反向索引（或者反向档案索引）包含每个引用单词的文档的列表。<br>一个单词的水平反向索引（或者完全反向索引）又包含每个单词在一个文档中的位置。<br>后者的形式提供了更多的兼容性（比如短语搜索），但是需要更多的时间和空间来创建。</p>\n<p>所谓的正排索引是从索引文档到关键词到内容，倒排索引则是相反从关键词到词频，位置，目录等信息，现在通常用于搜索的。由于互联网上的数据量无限大，不可能存储足够多的文档，所以正排索引用处不大。</p>\n<p>有两种不同的反向索引形式：</p>\n<ul>\n<li><p>一条记录的水平反向索引（或者反向档案索引）包含每个引用单词的文档的<a href=\"https://zh.wikipedia.org/wiki/%E5%88%97%E8%A1%A8\" target=\"_blank\" rel=\"external\">列表</a>。</p>\n</li>\n<li><p>一个单词的水平反向索引（或者完全反向索引）又包含每个单词在一个文档中的位置。</p>\n</li>\n</ul>\n<p>  ​我们就能得到下面的反向文件索引：</p>\n<ul>\n<li><img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/1ab3d9202f18a678affe9a339511bef0a7b8b110\" alt=\"{\\displaystyleT_{0}=}\"><code>&quot;it is what it is&quot;</code></li>\n<li><img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/57ac5840245616f79874f4635b3bcb2e3da344dd\" alt=\"{\\displaystyleT_{1}=}\"><code>&quot;what is it&quot;</code></li>\n<li><img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/5713cf5634b3846b4d68c3383b65db289511d8bf\" alt=\"{\\displaystyleT_{2}=}\"><code>&quot;it is a banana&quot;</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;a&quot;:      &#123;2&#125;</span><br><span class=\"line\">&quot;banana&quot;: &#123;2&#125;</span><br><span class=\"line\">&quot;is&quot;:     &#123;0, 1, 2&#125;</span><br><span class=\"line\">&quot;it&quot;:     &#123;0, 1, 2&#125;</span><br><span class=\"line\">&quot;what&quot;:   &#123;0, 1&#125;</span><br></pre></td></tr></table></figure>\n<p>检索的条件”what”, “is” 和 “it” 将对应这个集合： <img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/576f880df65391031d612f3d9130ebd81575f6a1\" alt=\"coll\"></p>\n<p>对相同的文字，我们得到后面这些完全反向索引，有文档数量和当前查询的单词结果组成的的成对数据。 同样，文档数量和当前查询的单词结果都从零开始。所以，<code>&quot;banana&quot;: {(2, 3)}</code> 就是说 “banana”在第三个文档里 ( {\\displaystyle T<em>{2}} T</em>{2})，而且在第三个文档的位置是第四个单词(地址为 3)。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;a&quot;:      &#123;(2, 2)&#125;</span><br><span class=\"line\">&quot;banana&quot;: &#123;(2, 3)&#125;</span><br><span class=\"line\">&quot;is&quot;:     &#123;(0, 1), (0, 4), (1, 1), (2, 1)&#125;</span><br><span class=\"line\">&quot;it&quot;:     &#123;(0, 0), (0, 3), (1, 2), (2, 0)&#125;</span><br><span class=\"line\">&quot;what&quot;:   &#123;(0, 2), (1, 0)&#125;</span><br></pre></td></tr></table></figure>\n<p>如果我们执行短语搜索”what is it” 我们得到这个短语的全部单词各自的结果所在文档为文档0和文档1。但是这个短语检索的连续的条件仅仅在文档1得到。</p>\n<p>反向索引数据结构是典型的搜索引擎检索算法重要的部分。<br>一个搜索引擎执行的目标就是优化查询的速度：找到某个单词在文档中出现的地方。以前，正向索引开发出来用来存储每个文档的单词的列表，接着掉头来开发了一种反向索引。 正向索引的查询往往满足每个文档有序频繁的全文查询和每个单词在校验文档中的验证这样的查询。<br>实际上，时间、内存、处理器等等资源的限制，技术上正向索引是不能实现的。<br>为了替代正向索引的每个文档的单词列表，能列出每个查询的单词所有所在文档的列表的反向索引数据结构开发了出来。<br>随着反向索引的创建，如今的查询能通过立即的单词标示迅速获取结果（经过随机存储）。随机存储也通常被认为快于顺序存储。</p>\n<h3 id=\"构建方法\"><a href=\"#构建方法\" class=\"headerlink\" title=\"构建方法\"></a>构建方法</h3><h4 id=\"简单法\"><a href=\"#简单法\" class=\"headerlink\" title=\"简单法\"></a>简单法</h4><p>  索引的构建[4]  相当于从正排表到倒排表的建立过程。当我们分析完网页时 ,得到的是以网页为主码的索引表。当索引建立完成后 ,应得到倒排表 ,具体流程如图所示：<br>  流程描述如下：<br>  1）将文档分析称单词term标记，<br>  2）使用hash去重单词term<br>  　　3）对单词生成倒排列表<br>  　　倒排列表就是文档编号DocID，没有包含其他的信息（如词频，单词位置等），这就是简单的索引。<br>  　　这个简单索引功能可以用于小数据，例如索引几千个文档。然而它有两点限制：<br>  　　1）需要有足够的内存来存储倒排表，对于搜索引擎来说， 都是G级别数据，特别是当规模不断扩大时 ,我们根本不可能提供这么多的内存。<br>  　　2）算法是顺序执行，不便于并行处理。</p>\n<h4 id=\"合并法\"><a href=\"#合并法\" class=\"headerlink\" title=\"合并法\"></a>合并法</h4><p>  归并法[4]  ,即每次将内存中数据写入磁盘时，包括词典在内的所有中间结果信息都被写入磁盘，这样内存所有内容都可以被清空，后续建立索引可以使用全部的定额内存。<br>  归并索引<br>  归并索引<br>  如图 归并示意图：<br>  合并流程：<br>  1）页面分析，生成临时倒排数据索引A，B，当临时倒排数据索引A，B占满内存后，将内存索引A，B写入临时文件生成临时倒排文件，<br>  　　2) 对生成的多个临时倒排文件 ,执行多路归并 ,输出得到最终的倒排文件 ( inverted file)。<br>  合并流程<br>  合并流程<br>  索引创建过程中的页面分析 ,特别是中文分词为主要时间开销。算法的第二步相对很快。这样创建算法的优化集中在中文分词效率上。</p>\n<blockquote>\n<p>[参考1]: <a href=\"http://blog.csdn.net/hguisu/article/details/7962350\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/hguisu/article/details/7962350</a></p>\n<p>[baike]: <a href=\"http://baike.baidu.com/view/676861.htm\" target=\"_blank\" rel=\"external\">http://baike.baidu.com/view/676861.htm</a></p>\n<p>[wikipedia]: <a href=\"https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95\" target=\"_blank\" rel=\"external\">https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95</a></p>\n<p>[参考2]: <a href=\"http://blog.csdn.net/hguisu/article/details/7962350\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/hguisu/article/details/7962350</a></p>\n</blockquote>\n","excerpt":"<h3 id=\"正排索引和倒排索引\"><a href=\"#正排索引和倒排索引\" class=\"headerlink\" title=\"正排索引和倒排索引\"></a>正排索引和倒排索引</h3><p><strong>倒排索引</strong>（英语：Inverted index），也常被称为<strong>反向索引</strong>、<strong>置入档案</strong>或<strong>反向档案</strong>，被用来存储在全文搜索下某个单词在一个文档或者一组文档中的存储位置的映射。它是文档检索系统中最常用的数据结构。<br>","more":"<br>有两种不同的反向索引形式：</p>\n<p>一条记录的水平反向索引（或者反向档案索引）包含每个引用单词的文档的列表。<br>一个单词的水平反向索引（或者完全反向索引）又包含每个单词在一个文档中的位置。<br>后者的形式提供了更多的兼容性（比如短语搜索），但是需要更多的时间和空间来创建。</p>\n<p>所谓的正排索引是从索引文档到关键词到内容，倒排索引则是相反从关键词到词频，位置，目录等信息，现在通常用于搜索的。由于互联网上的数据量无限大，不可能存储足够多的文档，所以正排索引用处不大。</p>\n<p>有两种不同的反向索引形式：</p>\n<ul>\n<li><p>一条记录的水平反向索引（或者反向档案索引）包含每个引用单词的文档的<a href=\"https://zh.wikipedia.org/wiki/%E5%88%97%E8%A1%A8\">列表</a>。</p>\n</li>\n<li><p>一个单词的水平反向索引（或者完全反向索引）又包含每个单词在一个文档中的位置。</p>\n</li>\n</ul>\n<p>  ​我们就能得到下面的反向文件索引：</p>\n<ul>\n<li><img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/1ab3d9202f18a678affe9a339511bef0a7b8b110\" alt=\"{\\displaystyleT_{0}=}\"><code>&quot;it is what it is&quot;</code></li>\n<li><img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/57ac5840245616f79874f4635b3bcb2e3da344dd\" alt=\"{\\displaystyleT_{1}=}\"><code>&quot;what is it&quot;</code></li>\n<li><img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/5713cf5634b3846b4d68c3383b65db289511d8bf\" alt=\"{\\displaystyleT_{2}=}\"><code>&quot;it is a banana&quot;</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;a&quot;:      &#123;2&#125;</span><br><span class=\"line\">&quot;banana&quot;: &#123;2&#125;</span><br><span class=\"line\">&quot;is&quot;:     &#123;0, 1, 2&#125;</span><br><span class=\"line\">&quot;it&quot;:     &#123;0, 1, 2&#125;</span><br><span class=\"line\">&quot;what&quot;:   &#123;0, 1&#125;</span><br></pre></td></tr></table></figure>\n<p>检索的条件”what”, “is” 和 “it” 将对应这个集合： <img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/576f880df65391031d612f3d9130ebd81575f6a1\" alt=\"coll\"></p>\n<p>对相同的文字，我们得到后面这些完全反向索引，有文档数量和当前查询的单词结果组成的的成对数据。 同样，文档数量和当前查询的单词结果都从零开始。所以，<code>&quot;banana&quot;: {(2, 3)}</code> 就是说 “banana”在第三个文档里 ( {\\displaystyle T<em>{2}} T</em>{2})，而且在第三个文档的位置是第四个单词(地址为 3)。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;a&quot;:      &#123;(2, 2)&#125;</span><br><span class=\"line\">&quot;banana&quot;: &#123;(2, 3)&#125;</span><br><span class=\"line\">&quot;is&quot;:     &#123;(0, 1), (0, 4), (1, 1), (2, 1)&#125;</span><br><span class=\"line\">&quot;it&quot;:     &#123;(0, 0), (0, 3), (1, 2), (2, 0)&#125;</span><br><span class=\"line\">&quot;what&quot;:   &#123;(0, 2), (1, 0)&#125;</span><br></pre></td></tr></table></figure>\n<p>如果我们执行短语搜索”what is it” 我们得到这个短语的全部单词各自的结果所在文档为文档0和文档1。但是这个短语检索的连续的条件仅仅在文档1得到。</p>\n<p>反向索引数据结构是典型的搜索引擎检索算法重要的部分。<br>一个搜索引擎执行的目标就是优化查询的速度：找到某个单词在文档中出现的地方。以前，正向索引开发出来用来存储每个文档的单词的列表，接着掉头来开发了一种反向索引。 正向索引的查询往往满足每个文档有序频繁的全文查询和每个单词在校验文档中的验证这样的查询。<br>实际上，时间、内存、处理器等等资源的限制，技术上正向索引是不能实现的。<br>为了替代正向索引的每个文档的单词列表，能列出每个查询的单词所有所在文档的列表的反向索引数据结构开发了出来。<br>随着反向索引的创建，如今的查询能通过立即的单词标示迅速获取结果（经过随机存储）。随机存储也通常被认为快于顺序存储。</p>\n<h3 id=\"构建方法\"><a href=\"#构建方法\" class=\"headerlink\" title=\"构建方法\"></a>构建方法</h3><h4 id=\"简单法\"><a href=\"#简单法\" class=\"headerlink\" title=\"简单法\"></a>简单法</h4><p>  索引的构建[4]  相当于从正排表到倒排表的建立过程。当我们分析完网页时 ,得到的是以网页为主码的索引表。当索引建立完成后 ,应得到倒排表 ,具体流程如图所示：<br>  流程描述如下：<br>  1）将文档分析称单词term标记，<br>  2）使用hash去重单词term<br>  　　3）对单词生成倒排列表<br>  　　倒排列表就是文档编号DocID，没有包含其他的信息（如词频，单词位置等），这就是简单的索引。<br>  　　这个简单索引功能可以用于小数据，例如索引几千个文档。然而它有两点限制：<br>  　　1）需要有足够的内存来存储倒排表，对于搜索引擎来说， 都是G级别数据，特别是当规模不断扩大时 ,我们根本不可能提供这么多的内存。<br>  　　2）算法是顺序执行，不便于并行处理。</p>\n<h4 id=\"合并法\"><a href=\"#合并法\" class=\"headerlink\" title=\"合并法\"></a>合并法</h4><p>  归并法[4]  ,即每次将内存中数据写入磁盘时，包括词典在内的所有中间结果信息都被写入磁盘，这样内存所有内容都可以被清空，后续建立索引可以使用全部的定额内存。<br>  归并索引<br>  归并索引<br>  如图 归并示意图：<br>  合并流程：<br>  1）页面分析，生成临时倒排数据索引A，B，当临时倒排数据索引A，B占满内存后，将内存索引A，B写入临时文件生成临时倒排文件，<br>  　　2) 对生成的多个临时倒排文件 ,执行多路归并 ,输出得到最终的倒排文件 ( inverted file)。<br>  合并流程<br>  合并流程<br>  索引创建过程中的页面分析 ,特别是中文分词为主要时间开销。算法的第二步相对很快。这样创建算法的优化集中在中文分词效率上。</p>\n<blockquote>\n<p>[参考1]: <a href=\"http://blog.csdn.net/hguisu/article/details/7962350\">http://blog.csdn.net/hguisu/article/details/7962350</a></p>\n<p>[baike]: <a href=\"http://baike.baidu.com/view/676861.htm\">http://baike.baidu.com/view/676861.htm</a></p>\n<p>[wikipedia]: <a href=\"https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95\">https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95</a></p>\n<p>[参考2]: <a href=\"http://blog.csdn.net/hguisu/article/details/7962350\">http://blog.csdn.net/hguisu/article/details/7962350</a></p>\n</blockquote>"},{"title":"MangoDB 学习指南","date":"2016-11-02T09:27:38.000Z","updated":"2016-11-02T09:27:38.000Z","_content":"\n\n### 安装篇\n\n####  下载安装\n```\n    curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.2.10.tgz\n    tar zxvf mongodb-linux-x86_64-rhel62-3.2.10.tgz\n    mv mongodb-linux-x86_64-rhel62-3.2.10 /usr/local/\n    mv mongodb-linux-x86_64-rhel62-3.2.10 mongodb\n\n    mkdir /data/db\n    touch /var/logs/mongodb/mongodb.logs\n    cd mongdb/bin && vim mongodb.conf\n\n```\n<!-- more -->\n#### 配置mongodb.conf\n```\ndbpath=/data/db\nlogpath=/var/logs/mongodb\nport=27017\n#fork=true\n#nohttpinterface=true\n\n```\n####　重新绑定mongodb的配置文件地址和访问IP\n\n`/usr/local/mongodb/bin/mongod --bind_ip localhost -f /usr/local/mongodb/mongodb.conf`\n可以通过 `/usr/local/mongodb/bin/mongod --help` 查看帮助 ，其中 -f（--config） 配置文件，--bind_ip 绑定ip\n`/usr/local/mongodb/bin/mongod --config /usr/local/mongodb/mongodb.conf` 添加到 `/etc/rc.d/rc.local` 开机启动\n\n\n####  测试\n其中 `mongod --config /usr/local/mongodb/mongodb.conf` 服务之后，启动 `/usr/local/mongodb/bin/mongo` 客户端，支持JavaScript 版本，`show dbs` 查看数据库，`db.version()` 查看版本\n\n##### 查看当前mongodb进程信息\nps -ef | grep mongod  //查看进程号码\ncat /proc/24283/limits //查看具体信息\n\n### php的扩展与测试\n[扩展包地址](https://pecl.php.net/package/mongodb)\n```\ncd mongodb-1.1.9\n/usr/php/bin/phpize\n./configure --with-php-config=/usr/askphp/bin/php-config \nmake;make install\n\n```\n\n#### PHP代码\n##### 创建集合\n```php\n    $m = new \\MongoClient();\n    $db = $m->selectDB(\"test\");\n    $collection = $db->createCollection(\"my_col\");\n```\n##### 插入文档\n```php    \n    $m = new \\MongoClient();\n    $db = $m->selectDB(\"test\");\n    $collection = $db->my_col;\n    $document = array(\n                \"title\" => \"MongoDB\",\n                \"description\" => \"database\",\n                \"likes\" => 100,\n                \"url\" => \"http://www.baidu.com\",\n                \"by\"=>\"change.net\"\n                );\n    $ret_ins  = $collection->insert($document);\n```\n\n##### 查找文档\n```php\n    $m = new \\MongoClient();\n    $db = $m->selectDB(\"test\");\n    $collection = $db->my_col;\n    $cursor = $collection->find();\n    foreach ($cursor as $document) {\n        echo $document[\"title\"] . \"\\n\";\n    }\n```\n##### 更新文档\n```php\n    $m = new \\MongoClient();\n    $db = $m->selectDB(\"test\");\n    $collection = $db->my_col;\n    $collection->update(array(\"title\"=>\"MongoDB\"), array('$set'=>array(\"title\"=>\"MongoDB\")));\n    $cursor = $collection->find();\n    foreach ($cursor as $document) {\n        echo $document[\"title\"] . \"\\n\";\n    }\n```\n##### 删除文档\n```php\n    $m = new \\MongoClient();\n    $db = $m->selectDB(\"test\");\n    $collection = $db->my_col;\n    $collection->remove(array(\"title\"=>\"MongoDB\"),  array(\"justOne\" => true));\n\n    $cursor = $collection->find();\n    foreach ($cursor as $document) {\n        echo $document[\"title\"] . \"\\n\";\n    }\n```\n\n---\n### 使用篇\n\n#### Start Mongod && Command\n\n```sql\n\nmongod\nps aux | grep mongo\n\n-- Start the Mongo Shell\nmongo\nshow dbs\nuse meals-development\nshow collections\nshow users\nshow roles\nshow profile\nshow databases\n\ndb.auth()\ndb.help()\n-- collection 为集合的意思 查看更多帮助，查询帮助\ndb.collection.help()\ndb.collection.find().help()\n\ndb.collection.findOne()\ndb.collection.find().toArray()\n\n\ndb.collection.insert()\ndb.collection.update()\ndb.collection.save()\ndb.collection.remove()\ndb.collection.drop()\ndb.collection.createIndex()\ndb.getSiblingDB()\n\n```\n#### Data Types 类型比较\n[参考](https://docs.mongodb.com/v3.2/core/shell-types/#types)\n##### Date\n- Date() method which returns the current date as a string.\n- new Date() constructor which returns a Date object using the ISODate() wrapper.\n- ISODate() constructor which returns a Date object using the ISODate() wrapper.\n\n##### ObjectId\nnew ObjectId\n\n##### NumberLong &&  NumberInt\nNumberLong(\"2090845886852\")。demo：\n> db.collection.insert( { _id: 10, calc: NumberLong(\"2090845886852\") } )\n> db.collection.update( { _id: 10 },{$set:{ calc: NumberLong(\"2555555000000\")}})\n\n> db.collection.update( { _id: 10 },{$inc:{ calc: NumberLong(5) } } )\n\n#### Check Types\n\n- instanceof -- mydoc._id instanceof ObjectId\n- typeof -- typeof mydoc._id\n\n\n\n#### SQL &&  MongoDB Mapping Chart\n[sql与nosql的不同于区别参考](https://gist.github.com/aponxi/4380516)\n##### Executables\n|MySQL/Oracle\t | MongoDB\n---|---|---\nDatabase Server | mysqld/oracle| mongod\nDatabase Client | mysql/sqlplus| mongo\n##### Terminology and Concepts\nSQL Terms/Concepts\t | MongoDB Terms/Concepts\n---|---|\ndatabase |\tdatabase\ntable |\tcollection\nrow\t| document or BSON document\ncolumn\t| field\nindex |\tindex\ntable joins | embedded documents and linking\nprimary key,Specify any unique column or column combination as primary key.|primary key,In MongoDB, the primary key is automatically set to the _id field.\n\n\n#### Create and Alter and CURD\n\n\n```sql\ndb.users.insert( {\n    user_id: \"abc123\",\n    age: 55,\n    status: \"A\"\n } )\n \n -- However, you can also explicitly create a collection:\n db.createCollection(\"users\")\n \n db.users.ensureIndex( { user_id: 1 } )\n db.users.ensureIndex( { user_id: 1, age: -1 } )\n db.users.drop()\n \n \n db.users.find()\n db.users.find(\n    { },\n    { user_id: 1, status: 1 }\n)\n\ndb.users.find(\n    { },\n    { user_id: 1, status: 1, _id: 0 }\n)\n\ndb.users.find(\n    { status: \"A\" },\n    { user_id: 1, status: 1, _id: 0 }\n)\ndb.users.find(\n   { age: { $gt: 25, $lte: 50 } }\n)\ndb.users.find(\n   { user_id: /^bc/ }\n)\ndb.users.find( { status: \"A\" } ).sort( { user_id: 1 } )\n\ndb.users.count()\ndb.users.find().count()\n\ndb.users.count( { user_id: { $exists: true } } )\ndb.users.find( { user_id: { $exists: true } } ).count()\n\ndb.users.count( { age: { $gt: 30 } } )\ndb.users.find( { age: { $gt: 30 } } ).count()\n\ndb.users.distinct( \"status\" )\n\ndb.users.findOne()\ndb.users.find().limit(1)\n\ndb.users.find().limit(5).skip(10)\ndb.users.find( { status: \"A\" } ).explain()\n\ndb.users.update(\n   { age: { $gt: 25 } },\n   { $set: { status: \"C\" } },\n   { multi: true }\n)\n\ndb.users.update(\n   { status: \"A\" } ,\n   { $inc: { age: 3 } },\n   { multi: true }\n)\n\n\ndb.users.remove( { status: \"D\" } )\ndb.users.remove( )\n```\n\n#### 详细使用\n##### INSERTING DATA\n\n```sql\ndb.customers.insert({  \n    first_name: \"chris\",\n    last_name:  \"aiv\" \n})\n\n--Append a lot of data into a customer\ndb.customers.insert({  \n    first_name: \"Peter\",\n    age: 32,\n    address: {\n        street: \"120 Main St\",\n        city: \"Chicago\",\n        state: \"Illinois\",\n        zip: \"38475\"\n    },\n    phone: {\n        home: \"5555555555\",\n        work: \"4444444444\",\n        mobile: \"3333333333\"\n    },\n    services: [\n        {\n            service_id: \"time warner\"\n        },\n        {\n            service_id: \"pge\"\n        },\n        {\n            service_id: \"moviepass\"\n        }\n    ],\n    services_count: 3\n});\n\n-- Append data to a customer\n\ndb.customers.insert({  \n    first_name: \"Billy\",\n    last_name:  \"Corgan\",\n    gender: \"m\"\n})\n\n-- Insert multiple customers in one query\n\ndb.customers.insert([  \n    {\n    first_name: \"Jimmy\",\n    last_name:  \"Hendrix\"\n    },\n    {\n    first_name: \"Jimmy\",\n    last_name:  \"Page\"\n    },\n    {\n    first_name: \"Kurt\",\n    last_name:  \"Cobain\"\n    },\n    {\n    first_name: \"Adrian\",\n    last_name:  \"Belew\"\n    },\n    {\n    first_name: \"Billy\",\n    last_name:  \"Corgan\"\n    }\n])\n\n\n```\n##### FINDING DATA\n\n```sql\ndb.customers.find({ first_name: \"Peter\"}, { services: 1})  \ndb.customers.find({ first_name: \"Peter\"}, { \"services.service_id\": 1})  \ndb.customers.findOne(  \n    { first_name: /^billy$/i },\n    { first_name: 1 }\n)\n\ndb.customers.find({  \n    gender: \"male\"\n})\n\ndb.customers.find({  \n    gender: /(m|male)/i, first_name: /^billy$/i \n})\n\n```\n##### UPDATING DATA\n\n```sql\n-- 慎用，破坏式的更新\ndb.customers.update(  \n    { first_name: \"Jimmy\" },\n    { last_name:  \"Hendrix\"}\n)\n-- Gentel Update \ndb.customers.update(  \n    { last_name: /^hendrix$/i },\n    { $set: { first_name: \"Jimmy\" } }\n)\n\n-- Increment a value in a field\ndb.customers.update(  \n    { first_name: \"Billy\" },\n    { $inc: { age: 1 }\n    }\n)\n\n-- Update or Insert a field using an object ID\ndb.customers.update(  \n    { _id: ObjectId(\"581fef808e5fac221dea48ef\") },\n    {\n        $set: {\n            first_name:\"Lucy\",\n            gender: \"m\",\n            age: 40,\n            birthdate: new Date(\"2016-11-02\")\n        }\n    }\n)\n-- Update a field using someones first name\ndb.customers.update(  \n    { first_name: \"Jimmy\" },\n    {\n        $set: {\n            gender: \"male\",\n            age: 50,\n            birthdate: new Date(\"Aug 20, 1985\")\n        }\n    },\n    { upsert: true }\n)\n-- Add to an existing document\ndb.customers.update(  \n    { first_name: \"Jimmy\" },\n    { $push: {\n        services: {\n            service_id: 'hosting windows',\n            service_name: \"windows hosting\"\n        }\n        }\n    }\n)\n-- 第三个参数,如果条件默认不存在，则新增为true表示新增的，默认为false，第四个参数表示全部更新\ndb.customers.update({first_name:\"jack\"},{$inc:{age:2}},true);\ndb.customers.update({first_name:\"Jimmy\"},{$inc:{age:3}},false,true);\ndb.customers.update({first_name:\"Kurt\"},{$inc:{age:-2}});\n\n\n```\n\n##### REMOVING DATA\n\n```sql\n--Remove a field\ndb.customers.update(  \n    { last_name: \"Page\" },\n    { \n        $unset: { age: 1 }\n    }\n)\n\ndb.customers.update({first_name:\"jack\"},{$inc:{age:1}})\n--Remove a customer\ndb.customers.remove(  \n    //!!! DO NOT US THIS\n    { first_name: \"Billy\"}, true \n)\n-- Remove any customer above the age of 31\ndb.customers.remove(  \n    { age: { $gt: 31 } }\n    , true\n)\n```\n##### DELETING DATA\n\n```sql\n-- Delete a collection\ndb.customers.drop()\n```\n\n##### SEARCHING DATA\n\n```sql\n{\n  _id: 1,\n  name: { first: 'John', last: 'Backus' },\n  birth: new Date('Dec 03, 1924'),\n  death: new Date('Mar 17, 2007'),\n  contribs: [ 'Fortran', 'ALGOL', 'Backus-Naur Form', 'FP' ],\n  awards: [\n            { award: 'National Medal',\n              year: 1975,\n              by: 'NSF' },\n            { award: 'Turing Award',\n              year: 1977,\n              by: 'ACM' }\n          ]\n}\ndb.users.find({awards: {$elemMatch: {award:'National Medal', year:1975}}})\n\n\n--  $gt,gte,$lt,$lte,$ne\ndb.col.find({\"by\":\"菜鸟教程\"}).pretty()\ndb.col.find({\"likes\":{$lt:50}}).pretty()\ndb.col.find({\"likes\":{$ne:50}}).pretty()\ndb.users.find({\"likes\" : {$gt : 100}})\n\n-- and or 使用\ndb.customers.find({$or: [{key1: value1}, {key2:value2}]}).pretty()\ndb.col.find({\"likes\": {$gt:50}, $or: [{\"by\": \"教程\"},{\"title\": \"MongoDB 教程\"}]}).pretty()\n//支持js\ndb.customers.find({$where:function(){ return this.first_name==\"jack\"}})\n\n-- 正则查询\n\ndb.customers.find({name:{$regex:\"yaolan.com\"}})\n-- 或者\ndb.customers.find({name:/yaolan.com/})\n-- 不区分大小写\ndb.customers.find({name:{$regex:\"yaolan.com\",$options:\"$i\"}})\n\n```\n\n\n#### 关于统计，排序，分页，分组等\n- db.collections.help() 查看更多操作\n- db.collection.find().help();\n\n```sql\ndb.customers.distinct(\"first_name\");\ndb.customers.count({first_name:\"Jimmy\",age:{$gt:1}});\ndb.customers.count({first_name:\"Jimmy\",age:{$in:[8,90]}});\n\n-- 用于分页\ndb.customers.find().limit(2).skip(1)\n-- 用于排序，其中value为1 或 -1 分别为升降序\ndb.customers.find().sort({first_name:1});\ndb.customers.find().sort({first_name:-1});\n\n-- 分组 \n-- key ：按照那个字段分组\n-- initial:初始化函数\n-- reduce 函数第一个参数当前文档，第二个参数为前一个集合对象\n-- condition: 这个就是过滤条件。\n-- finalize: 每一组文档执行完后，多会触发此方法，那么在每组集合里面加上count也就是它的活了\ndb.customers.group({\n    key:{age:true},\n    initial:{customers:[]},\n    reduce:function(curr,prev){ prev.customers.push(curr.first_name) }\n});\n\ndb.customers.group({\n    key:{age:true},\n    initial:{obj:[]},\n    reduce:function(curr,prev){ \n        prev.obj.push(curr.first_name); \n        prev.obj.push(curr.last_name);\n        prev.obj.push({address:\"abc\"});\n    }\n});\n\n-- 存储整个值\ndb.customers.group({\n    key:{age:true},\n    initial:{obj:[]},\n    reduce:function(curr,prev){ \n        prev.obj.push(JSON.stringify(curr)); \n    }\n});\n\n-- 删选条件加，每次执行完事件\ndb.customers.group({\n    key:{age:true},\n    initial:{obj:[]},\n    condition:{age:{$gt:7}},\n    reduce:function(curr,prev){ \n        prev.list = JSON.stringify(curr);   \n    },\n    finalize:function(prev){\n        prev.count =  prev.obj.length;\n    }\n});\n\n```\n\n\n##### aggregate 聚合\n按照age分组，并以sum的value累计计算和, 聚合，实例类似sql语句： `select by_user, count(*) from mycol group by by_user`，在上面的例子中，我们通过字段by_user字段对数据进行分组，并计算by_user字段相同值的总和。\n\n``` sql\ndb.customers.aggregate([{$group : {_id : \"$by_user\", num_tutorial : {$sum : 1}}}])\n\n\ndb.customers.aggregate([{$group : {_id: \"$age\",num:{$sum:2}}}])\ndb.customers.aggregate([{$group : {_id: \"$age\",num:{$avg:1}}}])\n```\n##### 管道的概念\n管道在Unix和Linux中一般用于将当前命令的输出结果作为下一个命令的参数。\n>- $project：修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档。\n>- $match：用于过滤数据，只输出符合条件的文档。`$match`使用MongoDB的标准查询操作。\n>- $limit：用来限制MongoDB聚合管道返回的文档数。\n>- $skip：在聚合管道中跳过指定数量的文档，并返回余下的文档。\n>- $unwind：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。\n>- $group：将集合中的文档分组，可用于统计结果。\n>- $sort：将输入文档排序后输出。\n>- $geoNear：输出接近某一地理位置的有序文档。\n\n```sql\n\n    db.article.aggregate(\n        { $project : {\n            title : 1 ,\n            author : 1 ,\n        }}\n     );\n\n    db.customers.aggregate({$project:{first_name:1,age:1}})\n\n\n    db.article.aggregate(\n    { $project : {\n        _id : 0 ,\n        title : 1 ,\n        author : 1\n    }});\n    -- $match用于获取分数大于70小于或等于90记录，然后将符合条件的记录送到下一阶段$group管道操作符进行处理。\n    db.articles.aggregate( [\n        { $match : { score : { $gt : 70, $lte : 90 } } },\n        { $group: { _id: null, count: { $sum: 1 } } }\n       ] );\n\n    -- 经过$skip管道操作符处理后，前五个文档被\"过滤\"掉。\n    db.article.aggregate({ $skip : 5 });\n\n```\n\n### mapReduce \nMap-Reduce是一种计算模型，简单的说就是将大批量的工作（数据）分解（MAP）执行，然后再将结果合并成最终结果（REDUCE）。\n> map ：映射函数 (生成键值对序列,作为 reduce 函数参数)。\n> reduce 统计函数，reduce函数的任务就是将key-values变成key-value，也就是把values数组变成一个单一的值value。。\n> out 统计结果存放集合 (不指定则使用临时集合,在客户端断开后自动删除)。\n> query 一个筛选条件，只有满足条件的文档才会调用map函数。（query。limit，sort可以随意组合）\n> sort 和limit结合的sort排序参数（也是在发往map函数前给文档排序），可以优化分组机制\n> limit 发往map函数的文档数量的上限（要是没有limit，单独使用sort的用处不大）\n\n```sql\ndb.collection.mapReduce(\n   function() {emit(key,value);},  //map 函数\n   function(key,values) {return reduceFunction},   //reduce 函数\n   {\n      out: collection,\n      query: document,\n      sort: document,\n      limit: number\n   }\n)\n\n-- demo\ndb.posts.mapReduce( \n   function() { emit(this.user_name,1); }, \n   function(key, values) {return Array.sum(values)}, \n      {  \n         query:{status:\"active\"},  \n         out:\"post_total\" \n      }\n)\n\n```\n### 游标 \n针对这样的操作，result其实并没有获取到customers中的文档，而是申明一个“查询结构”,for或者next()一次性加载过来，然后让游标逐行读取，当我们枚举完了之后，游标销毁。\nvar result = db.customers.find().limit(2).skip(1)\nvar result = db.customers.find();\nresult.forEach(function(curr){\n    print(curr.first_name);\n});\n\n\n### 索引 \n```\n-- 性能分析函数\ndb.customers.find({age:7}).explain();\n-- hint 强制使用索引\ndb.customers.find({gender:\"M\"},{user_name:1,_id:0}).hint({gender:1,user_name:1})\ndb.customers.find({gender:\"M\"},{user_name:1,_id:0}).hint({gender:1,user_name:1}).explain();\n\n-- 建立索引 (`ensureIndex` 将要被 `createIndex` 替代)\ndb.customers.ensureIndex({\"first_name\":1})\ndb.customers.createIndex({\"first_name\":1})\ndb.customers.createIndexes([{\"first_name\":1},{\"age\":-1}])\n-- 唯一索引\ndb.customers.ensureIndex({\"first_name\":1},{\"unique\":true})\n-- 联合索引\ndb.customers.ensureIndex({\"first_name\":1,\"age\":-1})\ndb.customers.createIndexes([{\"first_name\":1},{\"age\":-1}])\n-- 查看索引\ndb.customers.getIndexes();\n--删除索引\ndb.customers.dropIndex(\"first_name_1\") \ndb.customers.dropIndex({\"first_name\":1})\ndb.customers.dropIndexes();\n```\n\n\n### Mongodb复制\nmongod --help\n#### 主从读写分离（旧版本的，将用replica 副本集代替）\n通过主数据库的`OpLog`日志来复制,如果配置成功可看见`sync_pullOpLog`\n```sql\n-- 一主两从，主服务器不写默认端口 27017\nmongod --dbpath=E:\\MongoDB\\datamaster --master\nmongod --dbpath=E:\\MongoDB\\dataslave --port=27018 --slave --source=127.0.0.1:27017\nmongod --dbpath=E:\\MongoDB\\dataslave1 --port=27019 --slave --source=127.0.0.1:27017\n-- 测试同步\nmongo 127.0.0.1:27017\ndb.users.insert({name:\"tom\",age:10})\ndb.users.insert({name:\"lucy\",age:13})\n\n-- 在从服务器上查看\ndb.usrs.find();\n```\n主从配置好之后，从服务器默认是不可读取的，如果出现了 `error: { \"$err\" : \"not master and slaveok=false\", \"code\" : 13435 }` 这个错误，需要在从服务器上执行`rs.slaveok()`,之后再从服务器上查询即可。\n\n#### 副本集(代替旧的主从)（ --replSet）\n1. 该集群没有特定的主数据库\n2. 如果哪个主数据库宕机了，集群中就会推选出一个从属数据库作为主数据库顶上，这就具备了自动故障恢复功能\n> N 个节点的集群(至少3个)\n> 任何节点可作为主节点\n> 所有写入操作都在主节点上\n> 自动故障转移\n> 自动恢复\n\n![replica](/images/replica.jpg)\n\n我们使用同一个MongoDB来做MongoDB主从的实验， 操作步骤如下：\n关闭正在运行的MongoDB服务器。\n`mongod --port 27017 --dbpath=E:\\MongoDB\\datamaster --replSet rs0`\n以上实例会启动一个名为rs0的MongoDB实例，其端口号为27017。\n启动后打开命令提示框并连接上mongoDB服务。\n在Mongo客户端使用命令`rs.initiate()`来启动一个新的副本集。\n我们可以使用`rs.conf()`来查看副本集的配置\n查看副本集状态使用 `rs.status()` 命令\n\n在不同机机子上，需要建立集群名称,具体可以参考如下：（示例在一个机子上，用端口区分）\n```\nmongod --dbpath=E:\\MongoDB\\replsetmaster --port=27017  --replSet replset\nmongod --dbpath=E:\\MongoDB\\replsetslave --port=27018 --replSet replset\nmongod --dbpath=E:\\MongoDB\\replsetslave1 --port=27019  --replSet replset\n-- 在任意一个`mongo` 初始化副本集，replset 为上面的副本集名称\n\nrs.initiate({\n    _id:\"replset\",\n    members:[\n    {\n        _id:0,\n        host:\"127.0.0.1:27017\"\n    },\n    {\n        _id:1,\n        host:\"127.0.0.1:27018\"\n    },\n    {\n        _id:2,\n        host:\"127.0.0.1:27019\"\n    }\n    ]\n})\n\n\n-- 测试同步\nmongo 127.0.0.1:27017\ndb.users.insert({name:\"tom\",age:10})\ndb.users.insert({name:\"lucy\",age:13})\n\n-- 在第二个服务器上查看\ndb.usrs.find();\n-- 如果出现错误`not master and slaveok=false` ,默认是从主节点读写数据的，副本节点上不允许读，需要设置副本节点可以读,然后执行 `db.getMongo().setSlaveOk()` 或者`rs.slaveOk()`即可\n\n\n-- rs.addArb() 使用这个追加一个仲裁服务器\nmongod --dbpath=xxxx --port=27020 --replSet replset\nrs.addArb(\"192.168.1.2:27020\")\n\n-- rs.add 陆续增加更多的副本\nrs.add(\"192.168.1.2:27021\")\n\n```\n最后查看副本集状态使用 `rs.status()` 命令。判断当前运行的Mongo服务是否为主节点可以使用命令`db.isMaster()`,MongoDB的副本集与我们常见的主从有所不同，主从在主机宕机后所有服务将停止，而副本集在主机宕机后，副本会接管主节点成为主节点，不会出现宕机，无缝切换\n\n\n### 分片技术（Shard）\n在Mongodb里面存在另一种集群(cluster)，就是分片技术,可以满足MongoDB数据量大量增长的需求。\n> 复制所有的写入操作到主节点\n> 延迟的敏感数据会在主节点查询\n> 单个副本集限制在12个节点\n> 当请求量巨大时会出现内存不足。\n> 本地磁盘不足\n> 垂直扩展价格昂贵\n\n![MongoDB Cluster](/images/mongo-cluster.jpg)\n>- Shard:用于存储实际的数据块，实际生产环境中一个shard server角色可由几台机器组个一个replica set承担，防止主机单点故障\n>- Config Server:mongod实例，存储了整个 ClusterMetadata，其中包括 chunk信息。\n>- Query Routers: 前端路由，客户端由此接入，且让整个集群看上去像单一数据库，前端应用可以透明使用。\n\n模拟在单机上启用不同的端口，分片\n```\n-- 服务器分布\nShard Server 1：27020\nShard Server 2：27021\nShard Server 3：27022\nShard Server 4：27023\nConfig Server ：27100\nRoute Process：40000\n\n-- 1. 启动Shard Server\nmkdir -p /www/mongoDB/shard/s0\nmkdir -p /www/mongoDB/shard/s1\nmkdir -p /www/mongoDB/shard/s2\nmkdir -p /www/mongoDB/shard/s3\nmkdir -p /www/mongoDB/shard/log\n\n/usr/local/mongoDB/bin/mongod --port 27020 --dbpath=E:/MongoDB/shard/s0 --logpath=E:/MongoDB/shard/log/s0.log --logappend\n/usr/local/mongoDB/bin/mongod --port 27021 --dbpath=E:/MongoDB/shard/s1 --logpath=E:/MongoDB/shard/log/s1.log --logappend\n/usr/local/mongoDB/bin/mongod --port 27022 --dbpath=E:/MongoDB/shard/s2 --logpath=E:/MongoDB/shard/log/s2.log --logappend\n/usr/local/mongoDB/bin/mongod --port 27023 --dbpath=E:/MongoDB/shard/s3 --logpath=E:/MongoDB/shard/log/s3.log --logappend\n\n-- 2. 启动Config Server,这里只有一台config server 如果不是一台，添加 `--configsvr` 参数\nmkdir -p /www/mongoDB/shard/config\n/usr/local/mongoDB/bin/mongod --port 27100 --configsvr --dbpath=E:/MongoDB/shard/config --logpath=E:/MongoDB/shard/log/config.log --logappend\n\n-- 3. 启动Route Process，mongos启动参数中，chunkSize这一项是用来指定chunk的大小的，单位是MB，默认大小为200MB.\n\n/usr/local/mongoDB/bin/mongos --port 40000 --configdb localhost:27100 --logpath=E:/MongoDB/shard/log/route.log --chunkSize 200\n\n-- 4. 配置Sharding,使用MongoDB Shell登录到mongos，添加Shard节点,然后按照普通的mongo数据库那样，将数据库连接接入接口40000\n/usr/local/mongoDB/bin/mongo admin --port 40000\n\n\ndb.runCommand({ addshard:\"localhost:27020\" })\ndb.runCommand({ addshard:\"localhost:27021\" })\ndb.runCommand({ addshard:\"localhost:27022\" })\ndb.runCommand({ addshard:\"localhost:27023\" })\ndb.runCommand({ enablesharding:\"test\" })\ndb.runCommand({ shardcollection: \"users\", key: { id:1,time:1}})\n-- 或者下面写写法是一样的\nsh.addShard(\"localhost:27020\");\nsh.addShard(\"localhost:27021\");\nsh.addShard(\"localhost:27022\");\nsh.addShard(\"localhost:27023\");\nsh.enableSharding(\"test\");\n-- sh.shardCollection(\"<database>.<collection>\", shard-key-pattern) 按照collection的key来分片\nsh.shardCollection(\"test.users\",{\"name\":1,\"_id\":1});\n\n-- 5. 插入数据,测试分片\n    use test\n\n    for(var i=0;i<=100000;i++) {\n        db.users.insert({name:\"lucy\"+i,age:i});\n    }\n\n-- 6. 查看分片信息\nsh.status()\n\n```\n\n\n\n### 安全管理\n1. 以安全认证模式启动\nmongod --auth --dbpath /usr/mongo/data -f /var/mongo.log\n使用--auth选项启动mongod进程即可启用认证模式。\n或者，也可以修改`/etc/mongodb.conf`，设置`auth=true`，重启mongod进程。\n2. 添加用户\n\n```\n-- 创建用户\ndb.createUser({  \n    \"user\": \"chrisaiv\",\n    \"pwd\": \"password\",\n    \"roles\": [\n        { role: \"clusterAdmin\", db: \"admin\" },\n        { role: \"readAnyDatabase\", db: \"admin\" },\n        \"readWrite\"\n        ]\n    },\n    { w: \"majority\", wtimeout: 5000 }\n)\n\n测试数据库安全认证: `db.auth(\"admin\", \"123456\")`\n\n\n```\n3. 为数据库写数据（同步到磁盘）加锁\n`db.runCommand({fsync:1,lock:1})`\n说明：该操作已经对数据库上锁，不允许执行写数据操作，一般在执行数据库备份时有用。\n\n4. 查看当前锁状态\n`db.currentOp()`\n\n5. 解锁\n`use local\ndb.$cmd.sys.unlock.findOne()`\n说明：\n执行解锁，结果如下所示：\n`db.currentOp()`\n\n\n### 数据备份、恢复与迁移管理 \n```sql\n\nmongodump -h dbhost -d dbname -c collection -o dbdirectory\nmongorestore -h dbhost -d dbname -c collection --directoryperdb dbdirectory\n\n-- 备份全部数据库\nmkdir testbak\nmongodump \n-- 备份指定数据库\nmongodump -d pagedb\n-- 备份一个数据库中的某个集合\nmongodump -d pagedb -c page\n-- 恢复全部数据库\ncd testbak\nmongorestore --drop\n-- 恢复某个数据库的数据\ncd testbak\nmongorestore -d pagedb --drop\n\n-- 恢复某个数据库的某个集合的数据\nmongorestore -d pagedb -c page --drop\n-- 向MongoDB导入数据\nmongoimport -d pagedb -c page --type csv --headerline --drop < csvORtsvFile.csv\n-- 将文件csvORtsvFile.csv的数据导入到pagedb数据库的page集合中，使用cvs或tsv文件的列名作为集合的列名。\n-- 需要注意的是，使用`--headerline`选项时，只支持csv和tsv文件。\n-- type支持的类型有三个：csv、tsv、json\n\n\n\n### MongoDB 监控\n```sql\nmongostat \nmongotop\nmongotop 10   -- 等待时间\nmongotop --locks  -- 报告每个数据库的锁的使用\n```\n### MongoDB 自动增长\nMongoDB 没有像 SQL 一样有自动增长的功能， MongoDB 的 _id 是系统自动生成的12字节唯一标识。`db.createCollection(\"counters\")`,通过`db.counters.insert({_id:\"productid\",sequence_value:0})` 来实现\n\n```javascript\nfunction getNextSequenceValue(sequenceName){\n   var sequenceDocument = db.counters.findAndModify(\n      {\n         query:{_id: sequenceName },\n         update: {$inc:{sequence_value:1}},\n         new:true\n      });\n   return sequenceDocument.sequence_value;\n}\n```\n\n```sql\n    db.products.insert({\n       \"_id\":getNextSequenceValue(\"productid\"),\n       \"product_name\":\"Apple iPhone\",\n       \"category\":\"mobiles\"\n    })\n\n    db.products.insert({\n   \"_id\":getNextSequenceValue(\"productid\"),\n   \"product_name\":\"Samsung S3\",\n   \"category\":\"mobiles\"})\n\n   db.products.find()\n```\n### 关于ObjectId\n> 前4个字节表示时间戳\n> 接下来的3个字节是机器标识码\n> 紧接的两个字节由进程id组成（PID）\n> 最后三个字节是随机数。\n```sql\n    newObjectId = ObjectId()\n    myObjectId = ObjectId(\"5349b4ddd2781d08c09890f4\")\n    ObjectId(\"5349b4ddd2781d08c09890f4\").getTimestamp()\n\n    new ObjectId().str\n```\n\n### GridFS \nGridFS 用于存储和恢复那些超过16M（BSON文件限制）的文件(如：图片、音频、视频等)。\nGridFS 也是文件存储的一种方式，但是它是存储在MonoDB的集合中。\nGridFS 可以更好的存储大于16M的文件。\nGridFS 会将大文件对象分割成多个小的chunk(文件片段),一般为256k/个,每个chunk将作为MongoDB的一个文档(document)被存储在chunks集合中。\nGridFS 用两个集合来存储一个文件：`fs.files`与`fs.chunks`。\n```sql\n --fs.files\n{\n   \"filename\": \"test.txt\",\n   \"chunkSize\": NumberInt(261120),\n   \"uploadDate\": ISODate(\"2014-04-13T11:32:33.557Z\"),\n   \"md5\": \"7b762939321e146569b07f72c62cca4f\",\n   \"length\": NumberInt(646)\n}\n\n-- fs.chunks\n{\n   \"files_id\": ObjectId(\"534a75d19f54bfec8a2fe44b\"),\n   \"n\": NumberInt(0),\n   \"data\": \"Mongo Binary Data\"\n}\n\n-- 添加文件\nmongofiles.exe -d gridfs put song.mp3\ndb.fs.files.find()\n\n--_id 获取区块(chunk)\ndb.fs.chunks.find({files_id:ObjectId('534a811bf8b4aa4d33fdf94d')})\n\n```\n\n- [参考](https://docs.mongodb.com/v3.2/tutorial/access-mongo-shell-help/)\n","source":"_posts/2016/MangoDB-cheatsheet.md","raw":"---\ntitle: MangoDB 学习指南\ndate: 2016-11-02 17:27:38\nupdated: 2016-11-02 17:27:38\ntags:\n  - db\ncategories:\n---\n\n\n### 安装篇\n\n####  下载安装\n```\n    curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.2.10.tgz\n    tar zxvf mongodb-linux-x86_64-rhel62-3.2.10.tgz\n    mv mongodb-linux-x86_64-rhel62-3.2.10 /usr/local/\n    mv mongodb-linux-x86_64-rhel62-3.2.10 mongodb\n\n    mkdir /data/db\n    touch /var/logs/mongodb/mongodb.logs\n    cd mongdb/bin && vim mongodb.conf\n\n```\n<!-- more -->\n#### 配置mongodb.conf\n```\ndbpath=/data/db\nlogpath=/var/logs/mongodb\nport=27017\n#fork=true\n#nohttpinterface=true\n\n```\n####　重新绑定mongodb的配置文件地址和访问IP\n\n`/usr/local/mongodb/bin/mongod --bind_ip localhost -f /usr/local/mongodb/mongodb.conf`\n可以通过 `/usr/local/mongodb/bin/mongod --help` 查看帮助 ，其中 -f（--config） 配置文件，--bind_ip 绑定ip\n`/usr/local/mongodb/bin/mongod --config /usr/local/mongodb/mongodb.conf` 添加到 `/etc/rc.d/rc.local` 开机启动\n\n\n####  测试\n其中 `mongod --config /usr/local/mongodb/mongodb.conf` 服务之后，启动 `/usr/local/mongodb/bin/mongo` 客户端，支持JavaScript 版本，`show dbs` 查看数据库，`db.version()` 查看版本\n\n##### 查看当前mongodb进程信息\nps -ef | grep mongod  //查看进程号码\ncat /proc/24283/limits //查看具体信息\n\n### php的扩展与测试\n[扩展包地址](https://pecl.php.net/package/mongodb)\n```\ncd mongodb-1.1.9\n/usr/php/bin/phpize\n./configure --with-php-config=/usr/askphp/bin/php-config \nmake;make install\n\n```\n\n#### PHP代码\n##### 创建集合\n```php\n    $m = new \\MongoClient();\n    $db = $m->selectDB(\"test\");\n    $collection = $db->createCollection(\"my_col\");\n```\n##### 插入文档\n```php    \n    $m = new \\MongoClient();\n    $db = $m->selectDB(\"test\");\n    $collection = $db->my_col;\n    $document = array(\n                \"title\" => \"MongoDB\",\n                \"description\" => \"database\",\n                \"likes\" => 100,\n                \"url\" => \"http://www.baidu.com\",\n                \"by\"=>\"change.net\"\n                );\n    $ret_ins  = $collection->insert($document);\n```\n\n##### 查找文档\n```php\n    $m = new \\MongoClient();\n    $db = $m->selectDB(\"test\");\n    $collection = $db->my_col;\n    $cursor = $collection->find();\n    foreach ($cursor as $document) {\n        echo $document[\"title\"] . \"\\n\";\n    }\n```\n##### 更新文档\n```php\n    $m = new \\MongoClient();\n    $db = $m->selectDB(\"test\");\n    $collection = $db->my_col;\n    $collection->update(array(\"title\"=>\"MongoDB\"), array('$set'=>array(\"title\"=>\"MongoDB\")));\n    $cursor = $collection->find();\n    foreach ($cursor as $document) {\n        echo $document[\"title\"] . \"\\n\";\n    }\n```\n##### 删除文档\n```php\n    $m = new \\MongoClient();\n    $db = $m->selectDB(\"test\");\n    $collection = $db->my_col;\n    $collection->remove(array(\"title\"=>\"MongoDB\"),  array(\"justOne\" => true));\n\n    $cursor = $collection->find();\n    foreach ($cursor as $document) {\n        echo $document[\"title\"] . \"\\n\";\n    }\n```\n\n---\n### 使用篇\n\n#### Start Mongod && Command\n\n```sql\n\nmongod\nps aux | grep mongo\n\n-- Start the Mongo Shell\nmongo\nshow dbs\nuse meals-development\nshow collections\nshow users\nshow roles\nshow profile\nshow databases\n\ndb.auth()\ndb.help()\n-- collection 为集合的意思 查看更多帮助，查询帮助\ndb.collection.help()\ndb.collection.find().help()\n\ndb.collection.findOne()\ndb.collection.find().toArray()\n\n\ndb.collection.insert()\ndb.collection.update()\ndb.collection.save()\ndb.collection.remove()\ndb.collection.drop()\ndb.collection.createIndex()\ndb.getSiblingDB()\n\n```\n#### Data Types 类型比较\n[参考](https://docs.mongodb.com/v3.2/core/shell-types/#types)\n##### Date\n- Date() method which returns the current date as a string.\n- new Date() constructor which returns a Date object using the ISODate() wrapper.\n- ISODate() constructor which returns a Date object using the ISODate() wrapper.\n\n##### ObjectId\nnew ObjectId\n\n##### NumberLong &&  NumberInt\nNumberLong(\"2090845886852\")。demo：\n> db.collection.insert( { _id: 10, calc: NumberLong(\"2090845886852\") } )\n> db.collection.update( { _id: 10 },{$set:{ calc: NumberLong(\"2555555000000\")}})\n\n> db.collection.update( { _id: 10 },{$inc:{ calc: NumberLong(5) } } )\n\n#### Check Types\n\n- instanceof -- mydoc._id instanceof ObjectId\n- typeof -- typeof mydoc._id\n\n\n\n#### SQL &&  MongoDB Mapping Chart\n[sql与nosql的不同于区别参考](https://gist.github.com/aponxi/4380516)\n##### Executables\n|MySQL/Oracle\t | MongoDB\n---|---|---\nDatabase Server | mysqld/oracle| mongod\nDatabase Client | mysql/sqlplus| mongo\n##### Terminology and Concepts\nSQL Terms/Concepts\t | MongoDB Terms/Concepts\n---|---|\ndatabase |\tdatabase\ntable |\tcollection\nrow\t| document or BSON document\ncolumn\t| field\nindex |\tindex\ntable joins | embedded documents and linking\nprimary key,Specify any unique column or column combination as primary key.|primary key,In MongoDB, the primary key is automatically set to the _id field.\n\n\n#### Create and Alter and CURD\n\n\n```sql\ndb.users.insert( {\n    user_id: \"abc123\",\n    age: 55,\n    status: \"A\"\n } )\n \n -- However, you can also explicitly create a collection:\n db.createCollection(\"users\")\n \n db.users.ensureIndex( { user_id: 1 } )\n db.users.ensureIndex( { user_id: 1, age: -1 } )\n db.users.drop()\n \n \n db.users.find()\n db.users.find(\n    { },\n    { user_id: 1, status: 1 }\n)\n\ndb.users.find(\n    { },\n    { user_id: 1, status: 1, _id: 0 }\n)\n\ndb.users.find(\n    { status: \"A\" },\n    { user_id: 1, status: 1, _id: 0 }\n)\ndb.users.find(\n   { age: { $gt: 25, $lte: 50 } }\n)\ndb.users.find(\n   { user_id: /^bc/ }\n)\ndb.users.find( { status: \"A\" } ).sort( { user_id: 1 } )\n\ndb.users.count()\ndb.users.find().count()\n\ndb.users.count( { user_id: { $exists: true } } )\ndb.users.find( { user_id: { $exists: true } } ).count()\n\ndb.users.count( { age: { $gt: 30 } } )\ndb.users.find( { age: { $gt: 30 } } ).count()\n\ndb.users.distinct( \"status\" )\n\ndb.users.findOne()\ndb.users.find().limit(1)\n\ndb.users.find().limit(5).skip(10)\ndb.users.find( { status: \"A\" } ).explain()\n\ndb.users.update(\n   { age: { $gt: 25 } },\n   { $set: { status: \"C\" } },\n   { multi: true }\n)\n\ndb.users.update(\n   { status: \"A\" } ,\n   { $inc: { age: 3 } },\n   { multi: true }\n)\n\n\ndb.users.remove( { status: \"D\" } )\ndb.users.remove( )\n```\n\n#### 详细使用\n##### INSERTING DATA\n\n```sql\ndb.customers.insert({  \n    first_name: \"chris\",\n    last_name:  \"aiv\" \n})\n\n--Append a lot of data into a customer\ndb.customers.insert({  \n    first_name: \"Peter\",\n    age: 32,\n    address: {\n        street: \"120 Main St\",\n        city: \"Chicago\",\n        state: \"Illinois\",\n        zip: \"38475\"\n    },\n    phone: {\n        home: \"5555555555\",\n        work: \"4444444444\",\n        mobile: \"3333333333\"\n    },\n    services: [\n        {\n            service_id: \"time warner\"\n        },\n        {\n            service_id: \"pge\"\n        },\n        {\n            service_id: \"moviepass\"\n        }\n    ],\n    services_count: 3\n});\n\n-- Append data to a customer\n\ndb.customers.insert({  \n    first_name: \"Billy\",\n    last_name:  \"Corgan\",\n    gender: \"m\"\n})\n\n-- Insert multiple customers in one query\n\ndb.customers.insert([  \n    {\n    first_name: \"Jimmy\",\n    last_name:  \"Hendrix\"\n    },\n    {\n    first_name: \"Jimmy\",\n    last_name:  \"Page\"\n    },\n    {\n    first_name: \"Kurt\",\n    last_name:  \"Cobain\"\n    },\n    {\n    first_name: \"Adrian\",\n    last_name:  \"Belew\"\n    },\n    {\n    first_name: \"Billy\",\n    last_name:  \"Corgan\"\n    }\n])\n\n\n```\n##### FINDING DATA\n\n```sql\ndb.customers.find({ first_name: \"Peter\"}, { services: 1})  \ndb.customers.find({ first_name: \"Peter\"}, { \"services.service_id\": 1})  \ndb.customers.findOne(  \n    { first_name: /^billy$/i },\n    { first_name: 1 }\n)\n\ndb.customers.find({  \n    gender: \"male\"\n})\n\ndb.customers.find({  \n    gender: /(m|male)/i, first_name: /^billy$/i \n})\n\n```\n##### UPDATING DATA\n\n```sql\n-- 慎用，破坏式的更新\ndb.customers.update(  \n    { first_name: \"Jimmy\" },\n    { last_name:  \"Hendrix\"}\n)\n-- Gentel Update \ndb.customers.update(  \n    { last_name: /^hendrix$/i },\n    { $set: { first_name: \"Jimmy\" } }\n)\n\n-- Increment a value in a field\ndb.customers.update(  \n    { first_name: \"Billy\" },\n    { $inc: { age: 1 }\n    }\n)\n\n-- Update or Insert a field using an object ID\ndb.customers.update(  \n    { _id: ObjectId(\"581fef808e5fac221dea48ef\") },\n    {\n        $set: {\n            first_name:\"Lucy\",\n            gender: \"m\",\n            age: 40,\n            birthdate: new Date(\"2016-11-02\")\n        }\n    }\n)\n-- Update a field using someones first name\ndb.customers.update(  \n    { first_name: \"Jimmy\" },\n    {\n        $set: {\n            gender: \"male\",\n            age: 50,\n            birthdate: new Date(\"Aug 20, 1985\")\n        }\n    },\n    { upsert: true }\n)\n-- Add to an existing document\ndb.customers.update(  \n    { first_name: \"Jimmy\" },\n    { $push: {\n        services: {\n            service_id: 'hosting windows',\n            service_name: \"windows hosting\"\n        }\n        }\n    }\n)\n-- 第三个参数,如果条件默认不存在，则新增为true表示新增的，默认为false，第四个参数表示全部更新\ndb.customers.update({first_name:\"jack\"},{$inc:{age:2}},true);\ndb.customers.update({first_name:\"Jimmy\"},{$inc:{age:3}},false,true);\ndb.customers.update({first_name:\"Kurt\"},{$inc:{age:-2}});\n\n\n```\n\n##### REMOVING DATA\n\n```sql\n--Remove a field\ndb.customers.update(  \n    { last_name: \"Page\" },\n    { \n        $unset: { age: 1 }\n    }\n)\n\ndb.customers.update({first_name:\"jack\"},{$inc:{age:1}})\n--Remove a customer\ndb.customers.remove(  \n    //!!! DO NOT US THIS\n    { first_name: \"Billy\"}, true \n)\n-- Remove any customer above the age of 31\ndb.customers.remove(  \n    { age: { $gt: 31 } }\n    , true\n)\n```\n##### DELETING DATA\n\n```sql\n-- Delete a collection\ndb.customers.drop()\n```\n\n##### SEARCHING DATA\n\n```sql\n{\n  _id: 1,\n  name: { first: 'John', last: 'Backus' },\n  birth: new Date('Dec 03, 1924'),\n  death: new Date('Mar 17, 2007'),\n  contribs: [ 'Fortran', 'ALGOL', 'Backus-Naur Form', 'FP' ],\n  awards: [\n            { award: 'National Medal',\n              year: 1975,\n              by: 'NSF' },\n            { award: 'Turing Award',\n              year: 1977,\n              by: 'ACM' }\n          ]\n}\ndb.users.find({awards: {$elemMatch: {award:'National Medal', year:1975}}})\n\n\n--  $gt,gte,$lt,$lte,$ne\ndb.col.find({\"by\":\"菜鸟教程\"}).pretty()\ndb.col.find({\"likes\":{$lt:50}}).pretty()\ndb.col.find({\"likes\":{$ne:50}}).pretty()\ndb.users.find({\"likes\" : {$gt : 100}})\n\n-- and or 使用\ndb.customers.find({$or: [{key1: value1}, {key2:value2}]}).pretty()\ndb.col.find({\"likes\": {$gt:50}, $or: [{\"by\": \"教程\"},{\"title\": \"MongoDB 教程\"}]}).pretty()\n//支持js\ndb.customers.find({$where:function(){ return this.first_name==\"jack\"}})\n\n-- 正则查询\n\ndb.customers.find({name:{$regex:\"yaolan.com\"}})\n-- 或者\ndb.customers.find({name:/yaolan.com/})\n-- 不区分大小写\ndb.customers.find({name:{$regex:\"yaolan.com\",$options:\"$i\"}})\n\n```\n\n\n#### 关于统计，排序，分页，分组等\n- db.collections.help() 查看更多操作\n- db.collection.find().help();\n\n```sql\ndb.customers.distinct(\"first_name\");\ndb.customers.count({first_name:\"Jimmy\",age:{$gt:1}});\ndb.customers.count({first_name:\"Jimmy\",age:{$in:[8,90]}});\n\n-- 用于分页\ndb.customers.find().limit(2).skip(1)\n-- 用于排序，其中value为1 或 -1 分别为升降序\ndb.customers.find().sort({first_name:1});\ndb.customers.find().sort({first_name:-1});\n\n-- 分组 \n-- key ：按照那个字段分组\n-- initial:初始化函数\n-- reduce 函数第一个参数当前文档，第二个参数为前一个集合对象\n-- condition: 这个就是过滤条件。\n-- finalize: 每一组文档执行完后，多会触发此方法，那么在每组集合里面加上count也就是它的活了\ndb.customers.group({\n    key:{age:true},\n    initial:{customers:[]},\n    reduce:function(curr,prev){ prev.customers.push(curr.first_name) }\n});\n\ndb.customers.group({\n    key:{age:true},\n    initial:{obj:[]},\n    reduce:function(curr,prev){ \n        prev.obj.push(curr.first_name); \n        prev.obj.push(curr.last_name);\n        prev.obj.push({address:\"abc\"});\n    }\n});\n\n-- 存储整个值\ndb.customers.group({\n    key:{age:true},\n    initial:{obj:[]},\n    reduce:function(curr,prev){ \n        prev.obj.push(JSON.stringify(curr)); \n    }\n});\n\n-- 删选条件加，每次执行完事件\ndb.customers.group({\n    key:{age:true},\n    initial:{obj:[]},\n    condition:{age:{$gt:7}},\n    reduce:function(curr,prev){ \n        prev.list = JSON.stringify(curr);   \n    },\n    finalize:function(prev){\n        prev.count =  prev.obj.length;\n    }\n});\n\n```\n\n\n##### aggregate 聚合\n按照age分组，并以sum的value累计计算和, 聚合，实例类似sql语句： `select by_user, count(*) from mycol group by by_user`，在上面的例子中，我们通过字段by_user字段对数据进行分组，并计算by_user字段相同值的总和。\n\n``` sql\ndb.customers.aggregate([{$group : {_id : \"$by_user\", num_tutorial : {$sum : 1}}}])\n\n\ndb.customers.aggregate([{$group : {_id: \"$age\",num:{$sum:2}}}])\ndb.customers.aggregate([{$group : {_id: \"$age\",num:{$avg:1}}}])\n```\n##### 管道的概念\n管道在Unix和Linux中一般用于将当前命令的输出结果作为下一个命令的参数。\n>- $project：修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档。\n>- $match：用于过滤数据，只输出符合条件的文档。`$match`使用MongoDB的标准查询操作。\n>- $limit：用来限制MongoDB聚合管道返回的文档数。\n>- $skip：在聚合管道中跳过指定数量的文档，并返回余下的文档。\n>- $unwind：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。\n>- $group：将集合中的文档分组，可用于统计结果。\n>- $sort：将输入文档排序后输出。\n>- $geoNear：输出接近某一地理位置的有序文档。\n\n```sql\n\n    db.article.aggregate(\n        { $project : {\n            title : 1 ,\n            author : 1 ,\n        }}\n     );\n\n    db.customers.aggregate({$project:{first_name:1,age:1}})\n\n\n    db.article.aggregate(\n    { $project : {\n        _id : 0 ,\n        title : 1 ,\n        author : 1\n    }});\n    -- $match用于获取分数大于70小于或等于90记录，然后将符合条件的记录送到下一阶段$group管道操作符进行处理。\n    db.articles.aggregate( [\n        { $match : { score : { $gt : 70, $lte : 90 } } },\n        { $group: { _id: null, count: { $sum: 1 } } }\n       ] );\n\n    -- 经过$skip管道操作符处理后，前五个文档被\"过滤\"掉。\n    db.article.aggregate({ $skip : 5 });\n\n```\n\n### mapReduce \nMap-Reduce是一种计算模型，简单的说就是将大批量的工作（数据）分解（MAP）执行，然后再将结果合并成最终结果（REDUCE）。\n> map ：映射函数 (生成键值对序列,作为 reduce 函数参数)。\n> reduce 统计函数，reduce函数的任务就是将key-values变成key-value，也就是把values数组变成一个单一的值value。。\n> out 统计结果存放集合 (不指定则使用临时集合,在客户端断开后自动删除)。\n> query 一个筛选条件，只有满足条件的文档才会调用map函数。（query。limit，sort可以随意组合）\n> sort 和limit结合的sort排序参数（也是在发往map函数前给文档排序），可以优化分组机制\n> limit 发往map函数的文档数量的上限（要是没有limit，单独使用sort的用处不大）\n\n```sql\ndb.collection.mapReduce(\n   function() {emit(key,value);},  //map 函数\n   function(key,values) {return reduceFunction},   //reduce 函数\n   {\n      out: collection,\n      query: document,\n      sort: document,\n      limit: number\n   }\n)\n\n-- demo\ndb.posts.mapReduce( \n   function() { emit(this.user_name,1); }, \n   function(key, values) {return Array.sum(values)}, \n      {  \n         query:{status:\"active\"},  \n         out:\"post_total\" \n      }\n)\n\n```\n### 游标 \n针对这样的操作，result其实并没有获取到customers中的文档，而是申明一个“查询结构”,for或者next()一次性加载过来，然后让游标逐行读取，当我们枚举完了之后，游标销毁。\nvar result = db.customers.find().limit(2).skip(1)\nvar result = db.customers.find();\nresult.forEach(function(curr){\n    print(curr.first_name);\n});\n\n\n### 索引 \n```\n-- 性能分析函数\ndb.customers.find({age:7}).explain();\n-- hint 强制使用索引\ndb.customers.find({gender:\"M\"},{user_name:1,_id:0}).hint({gender:1,user_name:1})\ndb.customers.find({gender:\"M\"},{user_name:1,_id:0}).hint({gender:1,user_name:1}).explain();\n\n-- 建立索引 (`ensureIndex` 将要被 `createIndex` 替代)\ndb.customers.ensureIndex({\"first_name\":1})\ndb.customers.createIndex({\"first_name\":1})\ndb.customers.createIndexes([{\"first_name\":1},{\"age\":-1}])\n-- 唯一索引\ndb.customers.ensureIndex({\"first_name\":1},{\"unique\":true})\n-- 联合索引\ndb.customers.ensureIndex({\"first_name\":1,\"age\":-1})\ndb.customers.createIndexes([{\"first_name\":1},{\"age\":-1}])\n-- 查看索引\ndb.customers.getIndexes();\n--删除索引\ndb.customers.dropIndex(\"first_name_1\") \ndb.customers.dropIndex({\"first_name\":1})\ndb.customers.dropIndexes();\n```\n\n\n### Mongodb复制\nmongod --help\n#### 主从读写分离（旧版本的，将用replica 副本集代替）\n通过主数据库的`OpLog`日志来复制,如果配置成功可看见`sync_pullOpLog`\n```sql\n-- 一主两从，主服务器不写默认端口 27017\nmongod --dbpath=E:\\MongoDB\\datamaster --master\nmongod --dbpath=E:\\MongoDB\\dataslave --port=27018 --slave --source=127.0.0.1:27017\nmongod --dbpath=E:\\MongoDB\\dataslave1 --port=27019 --slave --source=127.0.0.1:27017\n-- 测试同步\nmongo 127.0.0.1:27017\ndb.users.insert({name:\"tom\",age:10})\ndb.users.insert({name:\"lucy\",age:13})\n\n-- 在从服务器上查看\ndb.usrs.find();\n```\n主从配置好之后，从服务器默认是不可读取的，如果出现了 `error: { \"$err\" : \"not master and slaveok=false\", \"code\" : 13435 }` 这个错误，需要在从服务器上执行`rs.slaveok()`,之后再从服务器上查询即可。\n\n#### 副本集(代替旧的主从)（ --replSet）\n1. 该集群没有特定的主数据库\n2. 如果哪个主数据库宕机了，集群中就会推选出一个从属数据库作为主数据库顶上，这就具备了自动故障恢复功能\n> N 个节点的集群(至少3个)\n> 任何节点可作为主节点\n> 所有写入操作都在主节点上\n> 自动故障转移\n> 自动恢复\n\n![replica](/images/replica.jpg)\n\n我们使用同一个MongoDB来做MongoDB主从的实验， 操作步骤如下：\n关闭正在运行的MongoDB服务器。\n`mongod --port 27017 --dbpath=E:\\MongoDB\\datamaster --replSet rs0`\n以上实例会启动一个名为rs0的MongoDB实例，其端口号为27017。\n启动后打开命令提示框并连接上mongoDB服务。\n在Mongo客户端使用命令`rs.initiate()`来启动一个新的副本集。\n我们可以使用`rs.conf()`来查看副本集的配置\n查看副本集状态使用 `rs.status()` 命令\n\n在不同机机子上，需要建立集群名称,具体可以参考如下：（示例在一个机子上，用端口区分）\n```\nmongod --dbpath=E:\\MongoDB\\replsetmaster --port=27017  --replSet replset\nmongod --dbpath=E:\\MongoDB\\replsetslave --port=27018 --replSet replset\nmongod --dbpath=E:\\MongoDB\\replsetslave1 --port=27019  --replSet replset\n-- 在任意一个`mongo` 初始化副本集，replset 为上面的副本集名称\n\nrs.initiate({\n    _id:\"replset\",\n    members:[\n    {\n        _id:0,\n        host:\"127.0.0.1:27017\"\n    },\n    {\n        _id:1,\n        host:\"127.0.0.1:27018\"\n    },\n    {\n        _id:2,\n        host:\"127.0.0.1:27019\"\n    }\n    ]\n})\n\n\n-- 测试同步\nmongo 127.0.0.1:27017\ndb.users.insert({name:\"tom\",age:10})\ndb.users.insert({name:\"lucy\",age:13})\n\n-- 在第二个服务器上查看\ndb.usrs.find();\n-- 如果出现错误`not master and slaveok=false` ,默认是从主节点读写数据的，副本节点上不允许读，需要设置副本节点可以读,然后执行 `db.getMongo().setSlaveOk()` 或者`rs.slaveOk()`即可\n\n\n-- rs.addArb() 使用这个追加一个仲裁服务器\nmongod --dbpath=xxxx --port=27020 --replSet replset\nrs.addArb(\"192.168.1.2:27020\")\n\n-- rs.add 陆续增加更多的副本\nrs.add(\"192.168.1.2:27021\")\n\n```\n最后查看副本集状态使用 `rs.status()` 命令。判断当前运行的Mongo服务是否为主节点可以使用命令`db.isMaster()`,MongoDB的副本集与我们常见的主从有所不同，主从在主机宕机后所有服务将停止，而副本集在主机宕机后，副本会接管主节点成为主节点，不会出现宕机，无缝切换\n\n\n### 分片技术（Shard）\n在Mongodb里面存在另一种集群(cluster)，就是分片技术,可以满足MongoDB数据量大量增长的需求。\n> 复制所有的写入操作到主节点\n> 延迟的敏感数据会在主节点查询\n> 单个副本集限制在12个节点\n> 当请求量巨大时会出现内存不足。\n> 本地磁盘不足\n> 垂直扩展价格昂贵\n\n![MongoDB Cluster](/images/mongo-cluster.jpg)\n>- Shard:用于存储实际的数据块，实际生产环境中一个shard server角色可由几台机器组个一个replica set承担，防止主机单点故障\n>- Config Server:mongod实例，存储了整个 ClusterMetadata，其中包括 chunk信息。\n>- Query Routers: 前端路由，客户端由此接入，且让整个集群看上去像单一数据库，前端应用可以透明使用。\n\n模拟在单机上启用不同的端口，分片\n```\n-- 服务器分布\nShard Server 1：27020\nShard Server 2：27021\nShard Server 3：27022\nShard Server 4：27023\nConfig Server ：27100\nRoute Process：40000\n\n-- 1. 启动Shard Server\nmkdir -p /www/mongoDB/shard/s0\nmkdir -p /www/mongoDB/shard/s1\nmkdir -p /www/mongoDB/shard/s2\nmkdir -p /www/mongoDB/shard/s3\nmkdir -p /www/mongoDB/shard/log\n\n/usr/local/mongoDB/bin/mongod --port 27020 --dbpath=E:/MongoDB/shard/s0 --logpath=E:/MongoDB/shard/log/s0.log --logappend\n/usr/local/mongoDB/bin/mongod --port 27021 --dbpath=E:/MongoDB/shard/s1 --logpath=E:/MongoDB/shard/log/s1.log --logappend\n/usr/local/mongoDB/bin/mongod --port 27022 --dbpath=E:/MongoDB/shard/s2 --logpath=E:/MongoDB/shard/log/s2.log --logappend\n/usr/local/mongoDB/bin/mongod --port 27023 --dbpath=E:/MongoDB/shard/s3 --logpath=E:/MongoDB/shard/log/s3.log --logappend\n\n-- 2. 启动Config Server,这里只有一台config server 如果不是一台，添加 `--configsvr` 参数\nmkdir -p /www/mongoDB/shard/config\n/usr/local/mongoDB/bin/mongod --port 27100 --configsvr --dbpath=E:/MongoDB/shard/config --logpath=E:/MongoDB/shard/log/config.log --logappend\n\n-- 3. 启动Route Process，mongos启动参数中，chunkSize这一项是用来指定chunk的大小的，单位是MB，默认大小为200MB.\n\n/usr/local/mongoDB/bin/mongos --port 40000 --configdb localhost:27100 --logpath=E:/MongoDB/shard/log/route.log --chunkSize 200\n\n-- 4. 配置Sharding,使用MongoDB Shell登录到mongos，添加Shard节点,然后按照普通的mongo数据库那样，将数据库连接接入接口40000\n/usr/local/mongoDB/bin/mongo admin --port 40000\n\n\ndb.runCommand({ addshard:\"localhost:27020\" })\ndb.runCommand({ addshard:\"localhost:27021\" })\ndb.runCommand({ addshard:\"localhost:27022\" })\ndb.runCommand({ addshard:\"localhost:27023\" })\ndb.runCommand({ enablesharding:\"test\" })\ndb.runCommand({ shardcollection: \"users\", key: { id:1,time:1}})\n-- 或者下面写写法是一样的\nsh.addShard(\"localhost:27020\");\nsh.addShard(\"localhost:27021\");\nsh.addShard(\"localhost:27022\");\nsh.addShard(\"localhost:27023\");\nsh.enableSharding(\"test\");\n-- sh.shardCollection(\"<database>.<collection>\", shard-key-pattern) 按照collection的key来分片\nsh.shardCollection(\"test.users\",{\"name\":1,\"_id\":1});\n\n-- 5. 插入数据,测试分片\n    use test\n\n    for(var i=0;i<=100000;i++) {\n        db.users.insert({name:\"lucy\"+i,age:i});\n    }\n\n-- 6. 查看分片信息\nsh.status()\n\n```\n\n\n\n### 安全管理\n1. 以安全认证模式启动\nmongod --auth --dbpath /usr/mongo/data -f /var/mongo.log\n使用--auth选项启动mongod进程即可启用认证模式。\n或者，也可以修改`/etc/mongodb.conf`，设置`auth=true`，重启mongod进程。\n2. 添加用户\n\n```\n-- 创建用户\ndb.createUser({  \n    \"user\": \"chrisaiv\",\n    \"pwd\": \"password\",\n    \"roles\": [\n        { role: \"clusterAdmin\", db: \"admin\" },\n        { role: \"readAnyDatabase\", db: \"admin\" },\n        \"readWrite\"\n        ]\n    },\n    { w: \"majority\", wtimeout: 5000 }\n)\n\n测试数据库安全认证: `db.auth(\"admin\", \"123456\")`\n\n\n```\n3. 为数据库写数据（同步到磁盘）加锁\n`db.runCommand({fsync:1,lock:1})`\n说明：该操作已经对数据库上锁，不允许执行写数据操作，一般在执行数据库备份时有用。\n\n4. 查看当前锁状态\n`db.currentOp()`\n\n5. 解锁\n`use local\ndb.$cmd.sys.unlock.findOne()`\n说明：\n执行解锁，结果如下所示：\n`db.currentOp()`\n\n\n### 数据备份、恢复与迁移管理 \n```sql\n\nmongodump -h dbhost -d dbname -c collection -o dbdirectory\nmongorestore -h dbhost -d dbname -c collection --directoryperdb dbdirectory\n\n-- 备份全部数据库\nmkdir testbak\nmongodump \n-- 备份指定数据库\nmongodump -d pagedb\n-- 备份一个数据库中的某个集合\nmongodump -d pagedb -c page\n-- 恢复全部数据库\ncd testbak\nmongorestore --drop\n-- 恢复某个数据库的数据\ncd testbak\nmongorestore -d pagedb --drop\n\n-- 恢复某个数据库的某个集合的数据\nmongorestore -d pagedb -c page --drop\n-- 向MongoDB导入数据\nmongoimport -d pagedb -c page --type csv --headerline --drop < csvORtsvFile.csv\n-- 将文件csvORtsvFile.csv的数据导入到pagedb数据库的page集合中，使用cvs或tsv文件的列名作为集合的列名。\n-- 需要注意的是，使用`--headerline`选项时，只支持csv和tsv文件。\n-- type支持的类型有三个：csv、tsv、json\n\n\n\n### MongoDB 监控\n```sql\nmongostat \nmongotop\nmongotop 10   -- 等待时间\nmongotop --locks  -- 报告每个数据库的锁的使用\n```\n### MongoDB 自动增长\nMongoDB 没有像 SQL 一样有自动增长的功能， MongoDB 的 _id 是系统自动生成的12字节唯一标识。`db.createCollection(\"counters\")`,通过`db.counters.insert({_id:\"productid\",sequence_value:0})` 来实现\n\n```javascript\nfunction getNextSequenceValue(sequenceName){\n   var sequenceDocument = db.counters.findAndModify(\n      {\n         query:{_id: sequenceName },\n         update: {$inc:{sequence_value:1}},\n         new:true\n      });\n   return sequenceDocument.sequence_value;\n}\n```\n\n```sql\n    db.products.insert({\n       \"_id\":getNextSequenceValue(\"productid\"),\n       \"product_name\":\"Apple iPhone\",\n       \"category\":\"mobiles\"\n    })\n\n    db.products.insert({\n   \"_id\":getNextSequenceValue(\"productid\"),\n   \"product_name\":\"Samsung S3\",\n   \"category\":\"mobiles\"})\n\n   db.products.find()\n```\n### 关于ObjectId\n> 前4个字节表示时间戳\n> 接下来的3个字节是机器标识码\n> 紧接的两个字节由进程id组成（PID）\n> 最后三个字节是随机数。\n```sql\n    newObjectId = ObjectId()\n    myObjectId = ObjectId(\"5349b4ddd2781d08c09890f4\")\n    ObjectId(\"5349b4ddd2781d08c09890f4\").getTimestamp()\n\n    new ObjectId().str\n```\n\n### GridFS \nGridFS 用于存储和恢复那些超过16M（BSON文件限制）的文件(如：图片、音频、视频等)。\nGridFS 也是文件存储的一种方式，但是它是存储在MonoDB的集合中。\nGridFS 可以更好的存储大于16M的文件。\nGridFS 会将大文件对象分割成多个小的chunk(文件片段),一般为256k/个,每个chunk将作为MongoDB的一个文档(document)被存储在chunks集合中。\nGridFS 用两个集合来存储一个文件：`fs.files`与`fs.chunks`。\n```sql\n --fs.files\n{\n   \"filename\": \"test.txt\",\n   \"chunkSize\": NumberInt(261120),\n   \"uploadDate\": ISODate(\"2014-04-13T11:32:33.557Z\"),\n   \"md5\": \"7b762939321e146569b07f72c62cca4f\",\n   \"length\": NumberInt(646)\n}\n\n-- fs.chunks\n{\n   \"files_id\": ObjectId(\"534a75d19f54bfec8a2fe44b\"),\n   \"n\": NumberInt(0),\n   \"data\": \"Mongo Binary Data\"\n}\n\n-- 添加文件\nmongofiles.exe -d gridfs put song.mp3\ndb.fs.files.find()\n\n--_id 获取区块(chunk)\ndb.fs.chunks.find({files_id:ObjectId('534a811bf8b4aa4d33fdf94d')})\n\n```\n\n- [参考](https://docs.mongodb.com/v3.2/tutorial/access-mongo-shell-help/)\n","slug":"MangoDB-cheatsheet","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9c0019wsnn41ffg9p3","content":"<h3 id=\"安装篇\"><a href=\"#安装篇\" class=\"headerlink\" title=\"安装篇\"></a>安装篇</h3><h4 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.2.10.tgz</span><br><span class=\"line\">tar zxvf mongodb-linux-x86_64-rhel62-3.2.10.tgz</span><br><span class=\"line\">mv mongodb-linux-x86_64-rhel62-3.2.10 /usr/local/</span><br><span class=\"line\">mv mongodb-linux-x86_64-rhel62-3.2.10 mongodb</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir /data/db</span><br><span class=\"line\">touch /var/logs/mongodb/mongodb.logs</span><br><span class=\"line\">cd mongdb/bin &amp;&amp; vim mongodb.conf</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"配置mongodb-conf\"><a href=\"#配置mongodb-conf\" class=\"headerlink\" title=\"配置mongodb.conf\"></a>配置mongodb.conf</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dbpath=/data/db</span><br><span class=\"line\">logpath=/var/logs/mongodb</span><br><span class=\"line\">port=27017</span><br><span class=\"line\">#fork=true</span><br><span class=\"line\">#nohttpinterface=true</span><br></pre></td></tr></table></figure>\n<p>####　重新绑定mongodb的配置文件地址和访问IP</p>\n<p><code>/usr/local/mongodb/bin/mongod --bind_ip localhost -f /usr/local/mongodb/mongodb.conf</code><br>可以通过 <code>/usr/local/mongodb/bin/mongod --help</code> 查看帮助 ，其中 -f（–config） 配置文件，–bind_ip 绑定ip<br><code>/usr/local/mongodb/bin/mongod --config /usr/local/mongodb/mongodb.conf</code> 添加到 <code>/etc/rc.d/rc.local</code> 开机启动</p>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p>其中 <code>mongod --config /usr/local/mongodb/mongodb.conf</code> 服务之后，启动 <code>/usr/local/mongodb/bin/mongo</code> 客户端，支持JavaScript 版本，<code>show dbs</code> 查看数据库，<code>db.version()</code> 查看版本</p>\n<h5 id=\"查看当前mongodb进程信息\"><a href=\"#查看当前mongodb进程信息\" class=\"headerlink\" title=\"查看当前mongodb进程信息\"></a>查看当前mongodb进程信息</h5><p>ps -ef | grep mongod  //查看进程号码<br>cat /proc/24283/limits //查看具体信息</p>\n<h3 id=\"php的扩展与测试\"><a href=\"#php的扩展与测试\" class=\"headerlink\" title=\"php的扩展与测试\"></a>php的扩展与测试</h3><p><a href=\"https://pecl.php.net/package/mongodb\" target=\"_blank\" rel=\"external\">扩展包地址</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd mongodb-1.1.9</span><br><span class=\"line\">/usr/php/bin/phpize</span><br><span class=\"line\">./configure --with-php-config=/usr/askphp/bin/php-config </span><br><span class=\"line\">make;make install</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"PHP代码\"><a href=\"#PHP代码\" class=\"headerlink\" title=\"PHP代码\"></a>PHP代码</h4><h5 id=\"创建集合\"><a href=\"#创建集合\" class=\"headerlink\" title=\"创建集合\"></a>创建集合</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$m = <span class=\"keyword\">new</span> \\MongoClient();</span><br><span class=\"line\">$db = $m-&gt;selectDB(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">$collection = $db-&gt;createCollection(<span class=\"string\">\"my_col\"</span>);</span><br></pre></td></tr></table></figure>\n<h5 id=\"插入文档\"><a href=\"#插入文档\" class=\"headerlink\" title=\"插入文档\"></a>插入文档</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$m = <span class=\"keyword\">new</span> \\MongoClient();</span><br><span class=\"line\">$db = $m-&gt;selectDB(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">$collection = $db-&gt;my_col;</span><br><span class=\"line\">$document = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">            <span class=\"string\">\"title\"</span> =&gt; <span class=\"string\">\"MongoDB\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"description\"</span> =&gt; <span class=\"string\">\"database\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"likes\"</span> =&gt; <span class=\"number\">100</span>,</span><br><span class=\"line\">            <span class=\"string\">\"url\"</span> =&gt; <span class=\"string\">\"http://www.baidu.com\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"by\"</span>=&gt;<span class=\"string\">\"change.net\"</span></span><br><span class=\"line\">            );</span><br><span class=\"line\">$ret_ins  = $collection-&gt;insert($document);</span><br></pre></td></tr></table></figure>\n<h5 id=\"查找文档\"><a href=\"#查找文档\" class=\"headerlink\" title=\"查找文档\"></a>查找文档</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$m = <span class=\"keyword\">new</span> \\MongoClient();</span><br><span class=\"line\">$db = $m-&gt;selectDB(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">$collection = $db-&gt;my_col;</span><br><span class=\"line\">$cursor = $collection-&gt;find();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($cursor <span class=\"keyword\">as</span> $document) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $document[<span class=\"string\">\"title\"</span>] . <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"更新文档\"><a href=\"#更新文档\" class=\"headerlink\" title=\"更新文档\"></a>更新文档</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$m = <span class=\"keyword\">new</span> \\MongoClient();</span><br><span class=\"line\">$db = $m-&gt;selectDB(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">$collection = $db-&gt;my_col;</span><br><span class=\"line\">$collection-&gt;update(<span class=\"keyword\">array</span>(<span class=\"string\">\"title\"</span>=&gt;<span class=\"string\">\"MongoDB\"</span>), <span class=\"keyword\">array</span>(<span class=\"string\">'$set'</span>=&gt;<span class=\"keyword\">array</span>(<span class=\"string\">\"title\"</span>=&gt;<span class=\"string\">\"MongoDB\"</span>)));</span><br><span class=\"line\">$cursor = $collection-&gt;find();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($cursor <span class=\"keyword\">as</span> $document) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $document[<span class=\"string\">\"title\"</span>] . <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"删除文档\"><a href=\"#删除文档\" class=\"headerlink\" title=\"删除文档\"></a>删除文档</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$m = <span class=\"keyword\">new</span> \\MongoClient();</span><br><span class=\"line\">$db = $m-&gt;selectDB(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">$collection = $db-&gt;my_col;</span><br><span class=\"line\">$collection-&gt;remove(<span class=\"keyword\">array</span>(<span class=\"string\">\"title\"</span>=&gt;<span class=\"string\">\"MongoDB\"</span>),  <span class=\"keyword\">array</span>(<span class=\"string\">\"justOne\"</span> =&gt; <span class=\"keyword\">true</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">$cursor = $collection-&gt;find();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($cursor <span class=\"keyword\">as</span> $document) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $document[<span class=\"string\">\"title\"</span>] . <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"使用篇\"><a href=\"#使用篇\" class=\"headerlink\" title=\"使用篇\"></a>使用篇</h3><h4 id=\"Start-Mongod-amp-amp-Command\"><a href=\"#Start-Mongod-amp-amp-Command\" class=\"headerlink\" title=\"Start Mongod &amp;&amp; Command\"></a>Start Mongod &amp;&amp; Command</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">mongod</span><br><span class=\"line\">ps aux | grep mongo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Start the Mongo Shell</span></span><br><span class=\"line\">mongo</span><br><span class=\"line\"><span class=\"keyword\">show</span> dbs</span><br><span class=\"line\"><span class=\"keyword\">use</span> meals-development</span><br><span class=\"line\"><span class=\"keyword\">show</span> collections</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">users</span></span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">roles</span></span><br><span class=\"line\"><span class=\"keyword\">show</span> profile</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">databases</span></span><br><span class=\"line\"></span><br><span class=\"line\">db.auth()</span><br><span class=\"line\">db.help()</span><br><span class=\"line\"><span class=\"comment\">-- collection 为集合的意思 查看更多帮助，查询帮助</span></span><br><span class=\"line\">db.collection.help()</span><br><span class=\"line\">db.collection.find().help()</span><br><span class=\"line\"></span><br><span class=\"line\">db.collection.findOne()</span><br><span class=\"line\">db.collection.find().toArray()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.collection.insert()</span><br><span class=\"line\">db.collection.update()</span><br><span class=\"line\">db.collection.save()</span><br><span class=\"line\">db.collection.remove()</span><br><span class=\"line\">db.collection.drop()</span><br><span class=\"line\">db.collection.createIndex()</span><br><span class=\"line\">db.getSiblingDB()</span><br></pre></td></tr></table></figure>\n<h4 id=\"Data-Types-类型比较\"><a href=\"#Data-Types-类型比较\" class=\"headerlink\" title=\"Data Types 类型比较\"></a>Data Types 类型比较</h4><p><a href=\"https://docs.mongodb.com/v3.2/core/shell-types/#types\" target=\"_blank\" rel=\"external\">参考</a></p>\n<h5 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h5><ul>\n<li>Date() method which returns the current date as a string.</li>\n<li>new Date() constructor which returns a Date object using the ISODate() wrapper.</li>\n<li>ISODate() constructor which returns a Date object using the ISODate() wrapper.</li>\n</ul>\n<h5 id=\"ObjectId\"><a href=\"#ObjectId\" class=\"headerlink\" title=\"ObjectId\"></a>ObjectId</h5><p>new ObjectId</p>\n<h5 id=\"NumberLong-amp-amp-NumberInt\"><a href=\"#NumberLong-amp-amp-NumberInt\" class=\"headerlink\" title=\"NumberLong &amp;&amp;  NumberInt\"></a>NumberLong &amp;&amp;  NumberInt</h5><p>NumberLong(“2090845886852”)。demo：</p>\n<blockquote>\n<p>db.collection.insert( { _id: 10, calc: NumberLong(“2090845886852”) } )<br>db.collection.update( { _id: 10 },{$set:{ calc: NumberLong(“2555555000000”)}})</p>\n<p>db.collection.update( { _id: 10 },{$inc:{ calc: NumberLong(5) } } )</p>\n</blockquote>\n<h4 id=\"Check-Types\"><a href=\"#Check-Types\" class=\"headerlink\" title=\"Check Types\"></a>Check Types</h4><ul>\n<li>instanceof – mydoc._id instanceof ObjectId</li>\n<li>typeof – typeof mydoc._id</li>\n</ul>\n<h4 id=\"SQL-amp-amp-MongoDB-Mapping-Chart\"><a href=\"#SQL-amp-amp-MongoDB-Mapping-Chart\" class=\"headerlink\" title=\"SQL &amp;&amp;  MongoDB Mapping Chart\"></a>SQL &amp;&amp;  MongoDB Mapping Chart</h4><p><a href=\"https://gist.github.com/aponxi/4380516\" target=\"_blank\" rel=\"external\">sql与nosql的不同于区别参考</a></p>\n<h5 id=\"Executables\"><a href=\"#Executables\" class=\"headerlink\" title=\"Executables\"></a>Executables</h5><table>\n<thead>\n<tr>\n<th></th>\n<th>MySQL/Oracle</th>\n<th>MongoDB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Database Server</td>\n<td>mysqld/oracle</td>\n<td>mongod</td>\n</tr>\n<tr>\n<td>Database Client</td>\n<td>mysql/sqlplus</td>\n<td>mongo</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"Terminology-and-Concepts\"><a href=\"#Terminology-and-Concepts\" class=\"headerlink\" title=\"Terminology and Concepts\"></a>Terminology and Concepts</h5><table>\n<thead>\n<tr>\n<th>SQL Terms/Concepts</th>\n<th>MongoDB Terms/Concepts</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>database</td>\n<td>database</td>\n</tr>\n<tr>\n<td>table</td>\n<td>collection</td>\n</tr>\n<tr>\n<td>row</td>\n<td>document or BSON document</td>\n</tr>\n<tr>\n<td>column</td>\n<td>field</td>\n</tr>\n<tr>\n<td>index</td>\n<td>index</td>\n</tr>\n<tr>\n<td>table joins</td>\n<td>embedded documents and linking</td>\n</tr>\n<tr>\n<td>primary key,Specify any unique column or column combination as primary key.</td>\n<td>primary key,In MongoDB, the primary key is automatically set to the _id field.</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Create-and-Alter-and-CURD\"><a href=\"#Create-and-Alter-and-CURD\" class=\"headerlink\" title=\"Create and Alter and CURD\"></a>Create and Alter and CURD</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.users.insert( &#123;</span><br><span class=\"line\">    user_id: \"abc123\",</span><br><span class=\"line\">    age: 55,</span><br><span class=\"line\">    status: \"A\"</span><br><span class=\"line\"> &#125; )</span><br><span class=\"line\"> </span><br><span class=\"line\"> -- However, you can also explicitly create a collection:</span><br><span class=\"line\"> db.createCollection(\"users\")</span><br><span class=\"line\"> </span><br><span class=\"line\"> db.users.ensureIndex( &#123; user_id: 1 &#125; )</span><br><span class=\"line\"> db.users.ensureIndex( &#123; user_id: 1, age: -1 &#125; )</span><br><span class=\"line\"> db.users.drop()</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> db.users.find()</span><br><span class=\"line\"> db.users.find(</span><br><span class=\"line\">    &#123; &#125;,</span><br><span class=\"line\">    &#123; user_id: 1, status: 1 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.find(</span><br><span class=\"line\">    &#123; &#125;,</span><br><span class=\"line\">    &#123; user_id: 1, status: 1, _id: 0 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.find(</span><br><span class=\"line\">    &#123; status: \"A\" &#125;,</span><br><span class=\"line\">    &#123; user_id: 1, status: 1, _id: 0 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">db.users.find(</span><br><span class=\"line\">   &#123; age: &#123; $gt: 25, $lte: 50 &#125; &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">db.users.find(</span><br><span class=\"line\">   &#123; user_id: /^bc/ &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">db.users.find( &#123; status: \"A\" &#125; ).sort( &#123; user_id: 1 &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.count()</span><br><span class=\"line\">db.users.find().count()</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.count( &#123; user_id: &#123; $exists: true &#125; &#125; )</span><br><span class=\"line\">db.users.find( &#123; user_id: &#123; $exists: true &#125; &#125; ).count()</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.count( &#123; age: &#123; $gt: 30 &#125; &#125; )</span><br><span class=\"line\">db.users.find( &#123; age: &#123; $gt: 30 &#125; &#125; ).count()</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.distinct( \"status\" )</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.findOne()</span><br><span class=\"line\">db.users.find().limit(1)</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.find().limit(5).skip(10)</span><br><span class=\"line\">db.users.find( &#123; status: \"A\" &#125; ).explain()</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.update(</span><br><span class=\"line\">   &#123; age: &#123; $gt: 25 &#125; &#125;,</span><br><span class=\"line\">   &#123; $set: &#123; status: \"C\" &#125; &#125;,</span><br><span class=\"line\">   &#123; multi: true &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.update(</span><br><span class=\"line\">   &#123; status: \"A\" &#125; ,</span><br><span class=\"line\">   &#123; $inc: &#123; age: 3 &#125; &#125;,</span><br><span class=\"line\">   &#123; multi: true &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.users.remove( &#123; status: \"D\" &#125; )</span><br><span class=\"line\">db.users.remove( )</span><br></pre></td></tr></table></figure>\n<h4 id=\"详细使用\"><a href=\"#详细使用\" class=\"headerlink\" title=\"详细使用\"></a>详细使用</h4><h5 id=\"INSERTING-DATA\"><a href=\"#INSERTING-DATA\" class=\"headerlink\" title=\"INSERTING DATA\"></a>INSERTING DATA</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.customers.insert(&#123;  </span><br><span class=\"line\">    first_name: \"chris\",</span><br><span class=\"line\">    last_name:  \"aiv\" </span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">--Append a lot of data into a customer</span><br><span class=\"line\">db.customers.insert(&#123;  </span><br><span class=\"line\">    first_name: \"Peter\",</span><br><span class=\"line\">    age: 32,</span><br><span class=\"line\">    address: &#123;</span><br><span class=\"line\">        street: \"120 Main St\",</span><br><span class=\"line\">        city: \"Chicago\",</span><br><span class=\"line\">        state: \"Illinois\",</span><br><span class=\"line\">        zip: \"38475\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    phone: &#123;</span><br><span class=\"line\">        home: \"5555555555\",</span><br><span class=\"line\">        work: \"4444444444\",</span><br><span class=\"line\">        mobile: \"3333333333\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    services: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            service_id: \"time warner\"</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            service_id: \"pge\"</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            service_id: \"moviepass\"</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    services_count: 3</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- Append data to a customer</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.insert(&#123;  </span><br><span class=\"line\">    first_name: \"Billy\",</span><br><span class=\"line\">    last_name:  \"Corgan\",</span><br><span class=\"line\">    gender: \"m\"</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- Insert multiple customers in one query</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.insert([  </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    first_name: \"Jimmy\",</span><br><span class=\"line\">    last_name:  \"Hendrix\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    first_name: \"Jimmy\",</span><br><span class=\"line\">    last_name:  \"Page\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    first_name: \"Kurt\",</span><br><span class=\"line\">    last_name:  \"Cobain\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    first_name: \"Adrian\",</span><br><span class=\"line\">    last_name:  \"Belew\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    first_name: \"Billy\",</span><br><span class=\"line\">    last_name:  \"Corgan\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure>\n<h5 id=\"FINDING-DATA\"><a href=\"#FINDING-DATA\" class=\"headerlink\" title=\"FINDING DATA\"></a>FINDING DATA</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.customers.find(&#123; first_name: \"Peter\"&#125;, &#123; services: 1&#125;)  </span><br><span class=\"line\">db.customers.find(&#123; first_name: \"Peter\"&#125;, &#123; \"services.service_id\": 1&#125;)  </span><br><span class=\"line\">db.customers.findOne(  </span><br><span class=\"line\">    &#123; first_name: /^billy$/i &#125;,</span><br><span class=\"line\">    &#123; first_name: 1 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.find(&#123;  </span><br><span class=\"line\">    gender: \"male\"</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.find(&#123;  </span><br><span class=\"line\">    gender: /(m|male)/i, first_name: /^billy$/i </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h5 id=\"UPDATING-DATA\"><a href=\"#UPDATING-DATA\" class=\"headerlink\" title=\"UPDATING DATA\"></a>UPDATING DATA</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 慎用，破坏式的更新</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; first_name: \"Jimmy\" &#125;,</span><br><span class=\"line\">    &#123; last_name:  \"Hendrix\"&#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">-- Gentel Update </span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; last_name: /^hendrix$/i &#125;,</span><br><span class=\"line\">    &#123; $set: &#123; first_name: \"Jimmy\" &#125; &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">-- Increment a value in a field</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; first_name: \"Billy\" &#125;,</span><br><span class=\"line\">    &#123; $inc: &#123; age: 1 &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">-- Update or Insert a field using an object ID</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; _id: ObjectId(\"581fef808e5fac221dea48ef\") &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $set: &#123;</span><br><span class=\"line\">            first_name:\"Lucy\",</span><br><span class=\"line\">            gender: \"m\",</span><br><span class=\"line\">            age: 40,</span><br><span class=\"line\">            birthdate: new Date(\"2016-11-02\")</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">-- Update a field using someones first name</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; first_name: \"Jimmy\" &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $set: &#123;</span><br><span class=\"line\">            gender: \"male\",</span><br><span class=\"line\">            age: 50,</span><br><span class=\"line\">            birthdate: new Date(\"Aug 20, 1985\")</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123; upsert: true &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">-- Add to an existing document</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; first_name: \"Jimmy\" &#125;,</span><br><span class=\"line\">    &#123; $push: &#123;</span><br><span class=\"line\">        services: &#123;</span><br><span class=\"line\">            service_id: 'hosting windows',</span><br><span class=\"line\">            service_name: \"windows hosting\"</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">-- 第三个参数,如果条件默认不存在，则新增为true表示新增的，默认为false，第四个参数表示全部更新</span><br><span class=\"line\">db.customers.update(&#123;first_name:\"jack\"&#125;,&#123;$inc:&#123;age:2&#125;&#125;,true);</span><br><span class=\"line\">db.customers.update(&#123;first_name:\"Jimmy\"&#125;,&#123;$inc:&#123;age:3&#125;&#125;,false,true);</span><br><span class=\"line\">db.customers.update(&#123;first_name:\"Kurt\"&#125;,&#123;$inc:&#123;age:-2&#125;&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"REMOVING-DATA\"><a href=\"#REMOVING-DATA\" class=\"headerlink\" title=\"REMOVING DATA\"></a>REMOVING DATA</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--Remove a field</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; last_name: \"Page\" &#125;,</span><br><span class=\"line\">    &#123; </span><br><span class=\"line\">        $unset: &#123; age: 1 &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.update(&#123;first_name:\"jack\"&#125;,&#123;$inc:&#123;age:1&#125;&#125;)</span><br><span class=\"line\">--Remove a customer</span><br><span class=\"line\">db.customers.remove(  </span><br><span class=\"line\">    //!!! DO NOT US THIS</span><br><span class=\"line\">    &#123; first_name: \"Billy\"&#125;, true </span><br><span class=\"line\">)</span><br><span class=\"line\">-- Remove any customer above the age of 31</span><br><span class=\"line\">db.customers.remove(  </span><br><span class=\"line\">    &#123; age: &#123; $gt: 31 &#125; &#125;</span><br><span class=\"line\">    , true</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h5 id=\"DELETING-DATA\"><a href=\"#DELETING-DATA\" class=\"headerlink\" title=\"DELETING DATA\"></a>DELETING DATA</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- Delete a collection</span></span><br><span class=\"line\">db.customers.drop()</span><br></pre></td></tr></table></figure>\n<h5 id=\"SEARCHING-DATA\"><a href=\"#SEARCHING-DATA\" class=\"headerlink\" title=\"SEARCHING DATA\"></a>SEARCHING DATA</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  _id: 1,</span><br><span class=\"line\">  name: &#123; first: 'John', last: 'Backus' &#125;,</span><br><span class=\"line\">  birth: new Date('Dec 03, 1924'),</span><br><span class=\"line\">  death: new Date('Mar 17, 2007'),</span><br><span class=\"line\">  contribs: [ 'Fortran', 'ALGOL', 'Backus-Naur Form', 'FP' ],</span><br><span class=\"line\">  awards: [</span><br><span class=\"line\">            &#123; award: 'National Medal',</span><br><span class=\"line\">              year: 1975,</span><br><span class=\"line\">              by: 'NSF' &#125;,</span><br><span class=\"line\">            &#123; award: 'Turing Award',</span><br><span class=\"line\">              year: 1977,</span><br><span class=\"line\">              by: 'ACM' &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">db.users.find(&#123;awards: &#123;$elemMatch: &#123;award:'National Medal', year:1975&#125;&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">--  $gt,gte,$lt,$lte,$ne</span><br><span class=\"line\">db.col.find(&#123;\"by\":\"菜鸟教程\"&#125;).pretty()</span><br><span class=\"line\">db.col.find(&#123;\"likes\":&#123;$lt:50&#125;&#125;).pretty()</span><br><span class=\"line\">db.col.find(&#123;\"likes\":&#123;$ne:50&#125;&#125;).pretty()</span><br><span class=\"line\">db.users.find(&#123;\"likes\" : &#123;$gt : 100&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- and or 使用</span><br><span class=\"line\">db.customers.find(&#123;$or: [&#123;key1: value1&#125;, &#123;key2:value2&#125;]&#125;).pretty()</span><br><span class=\"line\">db.col.find(&#123;\"likes\": &#123;$gt:50&#125;, $or: [&#123;\"by\": \"教程\"&#125;,&#123;\"title\": \"MongoDB 教程\"&#125;]&#125;).pretty()</span><br><span class=\"line\">//支持js</span><br><span class=\"line\">db.customers.find(&#123;$where:function()&#123; return this.first_name==\"jack\"&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 正则查询</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.find(&#123;name:&#123;$regex:\"yaolan.com\"&#125;&#125;)</span><br><span class=\"line\">-- 或者</span><br><span class=\"line\">db.customers.find(&#123;name:/yaolan.com/&#125;)</span><br><span class=\"line\">-- 不区分大小写</span><br><span class=\"line\">db.customers.find(&#123;name:&#123;$regex:\"yaolan.com\",$options:\"$i\"&#125;&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"关于统计，排序，分页，分组等\"><a href=\"#关于统计，排序，分页，分组等\" class=\"headerlink\" title=\"关于统计，排序，分页，分组等\"></a>关于统计，排序，分页，分组等</h4><ul>\n<li>db.collections.help() 查看更多操作</li>\n<li>db.collection.find().help();</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.customers.distinct(\"first_name\");</span><br><span class=\"line\">db.customers.count(&#123;first_name:\"Jimmy\",age:&#123;$gt:1&#125;&#125;);</span><br><span class=\"line\">db.customers.count(&#123;first_name:\"Jimmy\",age:&#123;$in:[8,90]&#125;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 用于分页</span><br><span class=\"line\">db.customers.find().limit(2).skip(1)</span><br><span class=\"line\">-- 用于排序，其中value为1 或 -1 分别为升降序</span><br><span class=\"line\">db.customers.find().sort(&#123;first_name:1&#125;);</span><br><span class=\"line\">db.customers.find().sort(&#123;first_name:-1&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 分组 </span><br><span class=\"line\">-- key ：按照那个字段分组</span><br><span class=\"line\">-- initial:初始化函数</span><br><span class=\"line\">-- reduce 函数第一个参数当前文档，第二个参数为前一个集合对象</span><br><span class=\"line\">-- condition: 这个就是过滤条件。</span><br><span class=\"line\">-- finalize: 每一组文档执行完后，多会触发此方法，那么在每组集合里面加上count也就是它的活了</span><br><span class=\"line\">db.customers.group(&#123;</span><br><span class=\"line\">    key:&#123;age:true&#125;,</span><br><span class=\"line\">    initial:&#123;customers:[]&#125;,</span><br><span class=\"line\">    reduce:function(curr,prev)&#123; prev.customers.push(curr.first_name) &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.group(&#123;</span><br><span class=\"line\">    key:&#123;age:true&#125;,</span><br><span class=\"line\">    initial:&#123;obj:[]&#125;,</span><br><span class=\"line\">    reduce:function(curr,prev)&#123; </span><br><span class=\"line\">        prev.obj.push(curr.first_name); </span><br><span class=\"line\">        prev.obj.push(curr.last_name);</span><br><span class=\"line\">        prev.obj.push(&#123;address:\"abc\"&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 存储整个值</span><br><span class=\"line\">db.customers.group(&#123;</span><br><span class=\"line\">    key:&#123;age:true&#125;,</span><br><span class=\"line\">    initial:&#123;obj:[]&#125;,</span><br><span class=\"line\">    reduce:function(curr,prev)&#123; </span><br><span class=\"line\">        prev.obj.push(JSON.stringify(curr)); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 删选条件加，每次执行完事件</span><br><span class=\"line\">db.customers.group(&#123;</span><br><span class=\"line\">    key:&#123;age:true&#125;,</span><br><span class=\"line\">    initial:&#123;obj:[]&#125;,</span><br><span class=\"line\">    condition:&#123;age:&#123;$gt:7&#125;&#125;,</span><br><span class=\"line\">    reduce:function(curr,prev)&#123; </span><br><span class=\"line\">        prev.list = JSON.stringify(curr);   </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    finalize:function(prev)&#123;</span><br><span class=\"line\">        prev.count =  prev.obj.length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"aggregate-聚合\"><a href=\"#aggregate-聚合\" class=\"headerlink\" title=\"aggregate 聚合\"></a>aggregate 聚合</h5><p>按照age分组，并以sum的value累计计算和, 聚合，实例类似sql语句： <code>select by_user, count(*) from mycol group by by_user</code>，在上面的例子中，我们通过字段by_user字段对数据进行分组，并计算by_user字段相同值的总和。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.customers.aggregate([&#123;$group : &#123;_id : \"$by_user\", num_tutorial : &#123;$sum : 1&#125;&#125;&#125;])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.aggregate([&#123;$group : &#123;_id: \"$age\",num:&#123;$sum:2&#125;&#125;&#125;])</span><br><span class=\"line\">db.customers.aggregate([&#123;$group : &#123;_id: \"$age\",num:&#123;$avg:1&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure>\n<h5 id=\"管道的概念\"><a href=\"#管道的概念\" class=\"headerlink\" title=\"管道的概念\"></a>管道的概念</h5><p>管道在Unix和Linux中一般用于将当前命令的输出结果作为下一个命令的参数。</p>\n<blockquote>\n<ul>\n<li>$project：修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档。</li>\n<li>$match：用于过滤数据，只输出符合条件的文档。<code>$match</code>使用MongoDB的标准查询操作。</li>\n<li>$limit：用来限制MongoDB聚合管道返回的文档数。</li>\n<li>$skip：在聚合管道中跳过指定数量的文档，并返回余下的文档。</li>\n<li>$unwind：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。</li>\n<li>$group：将集合中的文档分组，可用于统计结果。</li>\n<li>$sort：将输入文档排序后输出。</li>\n<li>$geoNear：输出接近某一地理位置的有序文档。</li>\n</ul>\n</blockquote>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">db.article.aggregate(</span><br><span class=\"line\">    &#123; $project : &#123;</span><br><span class=\"line\">        title : 1 ,</span><br><span class=\"line\">        author : 1 ,</span><br><span class=\"line\">    &#125;&#125;</span><br><span class=\"line\"> );</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.aggregate(&#123;$project:&#123;first_name:1,age:1&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.article.aggregate(</span><br><span class=\"line\">&#123; $project : &#123;</span><br><span class=\"line\">    _id : 0 ,</span><br><span class=\"line\">    title : 1 ,</span><br><span class=\"line\">    author : 1</span><br><span class=\"line\">&#125;&#125;);</span><br><span class=\"line\">-- $match用于获取分数大于70小于或等于90记录，然后将符合条件的记录送到下一阶段$group管道操作符进行处理。</span><br><span class=\"line\">db.articles.aggregate( [</span><br><span class=\"line\">    &#123; $match : &#123; score : &#123; $gt : 70, $lte : 90 &#125; &#125; &#125;,</span><br><span class=\"line\">    &#123; $group: &#123; _id: null, count: &#123; $sum: 1 &#125; &#125; &#125;</span><br><span class=\"line\">   ] );</span><br><span class=\"line\"></span><br><span class=\"line\">-- 经过$skip管道操作符处理后，前五个文档被\"过滤\"掉。</span><br><span class=\"line\">db.article.aggregate(&#123; $skip : 5 &#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"mapReduce\"><a href=\"#mapReduce\" class=\"headerlink\" title=\"mapReduce\"></a>mapReduce</h3><p>Map-Reduce是一种计算模型，简单的说就是将大批量的工作（数据）分解（MAP）执行，然后再将结果合并成最终结果（REDUCE）。</p>\n<blockquote>\n<p>map ：映射函数 (生成键值对序列,作为 reduce 函数参数)。<br>reduce 统计函数，reduce函数的任务就是将key-values变成key-value，也就是把values数组变成一个单一的值value。。<br>out 统计结果存放集合 (不指定则使用临时集合,在客户端断开后自动删除)。<br>query 一个筛选条件，只有满足条件的文档才会调用map函数。（query。limit，sort可以随意组合）<br>sort 和limit结合的sort排序参数（也是在发往map函数前给文档排序），可以优化分组机制<br>limit 发往map函数的文档数量的上限（要是没有limit，单独使用sort的用处不大）</p>\n</blockquote>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.collection.mapReduce(</span><br><span class=\"line\">   function() &#123;emit(key,value);&#125;,  //map 函数</span><br><span class=\"line\">   function(key,values) &#123;return reduceFunction&#125;,   //reduce 函数</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      out: collection,</span><br><span class=\"line\">      query: document,</span><br><span class=\"line\">      sort: document,</span><br><span class=\"line\">      limit: number</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">-- demo</span><br><span class=\"line\">db.posts.mapReduce( </span><br><span class=\"line\">   function() &#123; emit(this.user_name,1); &#125;, </span><br><span class=\"line\">   function(key, values) &#123;return Array.sum(values)&#125;, </span><br><span class=\"line\">      &#123;  </span><br><span class=\"line\">         query:&#123;status:\"active\"&#125;,  </span><br><span class=\"line\">         out:\"post_total\" </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h3 id=\"游标\"><a href=\"#游标\" class=\"headerlink\" title=\"游标\"></a>游标</h3><p>针对这样的操作，result其实并没有获取到customers中的文档，而是申明一个“查询结构”,for或者next()一次性加载过来，然后让游标逐行读取，当我们枚举完了之后，游标销毁。<br>var result = db.customers.find().limit(2).skip(1)<br>var result = db.customers.find();<br>result.forEach(function(curr){<br>    print(curr.first_name);<br>});</p>\n<h3 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 性能分析函数</span><br><span class=\"line\">db.customers.find(&#123;age:7&#125;).explain();</span><br><span class=\"line\">-- hint 强制使用索引</span><br><span class=\"line\">db.customers.find(&#123;gender:&quot;M&quot;&#125;,&#123;user_name:1,_id:0&#125;).hint(&#123;gender:1,user_name:1&#125;)</span><br><span class=\"line\">db.customers.find(&#123;gender:&quot;M&quot;&#125;,&#123;user_name:1,_id:0&#125;).hint(&#123;gender:1,user_name:1&#125;).explain();</span><br><span class=\"line\"></span><br><span class=\"line\">-- 建立索引 (`ensureIndex` 将要被 `createIndex` 替代)</span><br><span class=\"line\">db.customers.ensureIndex(&#123;&quot;first_name&quot;:1&#125;)</span><br><span class=\"line\">db.customers.createIndex(&#123;&quot;first_name&quot;:1&#125;)</span><br><span class=\"line\">db.customers.createIndexes([&#123;&quot;first_name&quot;:1&#125;,&#123;&quot;age&quot;:-1&#125;])</span><br><span class=\"line\">-- 唯一索引</span><br><span class=\"line\">db.customers.ensureIndex(&#123;&quot;first_name&quot;:1&#125;,&#123;&quot;unique&quot;:true&#125;)</span><br><span class=\"line\">-- 联合索引</span><br><span class=\"line\">db.customers.ensureIndex(&#123;&quot;first_name&quot;:1,&quot;age&quot;:-1&#125;)</span><br><span class=\"line\">db.customers.createIndexes([&#123;&quot;first_name&quot;:1&#125;,&#123;&quot;age&quot;:-1&#125;])</span><br><span class=\"line\">-- 查看索引</span><br><span class=\"line\">db.customers.getIndexes();</span><br><span class=\"line\">--删除索引</span><br><span class=\"line\">db.customers.dropIndex(&quot;first_name_1&quot;) </span><br><span class=\"line\">db.customers.dropIndex(&#123;&quot;first_name&quot;:1&#125;)</span><br><span class=\"line\">db.customers.dropIndexes();</span><br></pre></td></tr></table></figure>\n<h3 id=\"Mongodb复制\"><a href=\"#Mongodb复制\" class=\"headerlink\" title=\"Mongodb复制\"></a>Mongodb复制</h3><p>mongod –help</p>\n<h4 id=\"主从读写分离（旧版本的，将用replica-副本集代替）\"><a href=\"#主从读写分离（旧版本的，将用replica-副本集代替）\" class=\"headerlink\" title=\"主从读写分离（旧版本的，将用replica 副本集代替）\"></a>主从读写分离（旧版本的，将用replica 副本集代替）</h4><p>通过主数据库的<code>OpLog</code>日志来复制,如果配置成功可看见<code>sync_pullOpLog</code><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 一主两从，主服务器不写默认端口 27017</span><br><span class=\"line\">mongod --dbpath=E:\\MongoDB\\datamaster --master</span><br><span class=\"line\">mongod --dbpath=E:\\MongoDB\\dataslave --port=27018 --slave --source=127.0.0.1:27017</span><br><span class=\"line\">mongod --dbpath=E:\\MongoDB\\dataslave1 --port=27019 --slave --source=127.0.0.1:27017</span><br><span class=\"line\">-- 测试同步</span><br><span class=\"line\">mongo 127.0.0.1:27017</span><br><span class=\"line\">db.users.insert(&#123;name:\"tom\",age:10&#125;)</span><br><span class=\"line\">db.users.insert(&#123;name:\"lucy\",age:13&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 在从服务器上查看</span><br><span class=\"line\">db.usrs.find();</span><br></pre></td></tr></table></figure></p>\n<p>主从配置好之后，从服务器默认是不可读取的，如果出现了 <code>error: { &quot;$err&quot; : &quot;not master and slaveok=false&quot;, &quot;code&quot; : 13435 }</code> 这个错误，需要在从服务器上执行<code>rs.slaveok()</code>,之后再从服务器上查询即可。</p>\n<h4 id=\"副本集-代替旧的主从-（-–replSet）\"><a href=\"#副本集-代替旧的主从-（-–replSet）\" class=\"headerlink\" title=\"副本集(代替旧的主从)（ –replSet）\"></a>副本集(代替旧的主从)（ –replSet）</h4><ol>\n<li>该集群没有特定的主数据库</li>\n<li>如果哪个主数据库宕机了，集群中就会推选出一个从属数据库作为主数据库顶上，这就具备了自动故障恢复功能<blockquote>\n<p>N 个节点的集群(至少3个)<br>任何节点可作为主节点<br>所有写入操作都在主节点上<br>自动故障转移<br>自动恢复</p>\n</blockquote>\n</li>\n</ol>\n<p><img src=\"/images/replica.jpg\" alt=\"replica\"></p>\n<p>我们使用同一个MongoDB来做MongoDB主从的实验， 操作步骤如下：<br>关闭正在运行的MongoDB服务器。<br><code>mongod --port 27017 --dbpath=E:\\MongoDB\\datamaster --replSet rs0</code><br>以上实例会启动一个名为rs0的MongoDB实例，其端口号为27017。<br>启动后打开命令提示框并连接上mongoDB服务。<br>在Mongo客户端使用命令<code>rs.initiate()</code>来启动一个新的副本集。<br>我们可以使用<code>rs.conf()</code>来查看副本集的配置<br>查看副本集状态使用 <code>rs.status()</code> 命令</p>\n<p>在不同机机子上，需要建立集群名称,具体可以参考如下：（示例在一个机子上，用端口区分）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --dbpath=E:\\MongoDB\\replsetmaster --port=27017  --replSet replset</span><br><span class=\"line\">mongod --dbpath=E:\\MongoDB\\replsetslave --port=27018 --replSet replset</span><br><span class=\"line\">mongod --dbpath=E:\\MongoDB\\replsetslave1 --port=27019  --replSet replset</span><br><span class=\"line\">-- 在任意一个`mongo` 初始化副本集，replset 为上面的副本集名称</span><br><span class=\"line\"></span><br><span class=\"line\">rs.initiate(&#123;</span><br><span class=\"line\">    _id:&quot;replset&quot;,</span><br><span class=\"line\">    members:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _id:0,</span><br><span class=\"line\">        host:&quot;127.0.0.1:27017&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _id:1,</span><br><span class=\"line\">        host:&quot;127.0.0.1:27018&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _id:2,</span><br><span class=\"line\">        host:&quot;127.0.0.1:27019&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">-- 测试同步</span><br><span class=\"line\">mongo 127.0.0.1:27017</span><br><span class=\"line\">db.users.insert(&#123;name:&quot;tom&quot;,age:10&#125;)</span><br><span class=\"line\">db.users.insert(&#123;name:&quot;lucy&quot;,age:13&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 在第二个服务器上查看</span><br><span class=\"line\">db.usrs.find();</span><br><span class=\"line\">-- 如果出现错误`not master and slaveok=false` ,默认是从主节点读写数据的，副本节点上不允许读，需要设置副本节点可以读,然后执行 `db.getMongo().setSlaveOk()` 或者`rs.slaveOk()`即可</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">-- rs.addArb() 使用这个追加一个仲裁服务器</span><br><span class=\"line\">mongod --dbpath=xxxx --port=27020 --replSet replset</span><br><span class=\"line\">rs.addArb(&quot;192.168.1.2:27020&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- rs.add 陆续增加更多的副本</span><br><span class=\"line\">rs.add(&quot;192.168.1.2:27021&quot;)</span><br></pre></td></tr></table></figure></p>\n<p>最后查看副本集状态使用 <code>rs.status()</code> 命令。判断当前运行的Mongo服务是否为主节点可以使用命令<code>db.isMaster()</code>,MongoDB的副本集与我们常见的主从有所不同，主从在主机宕机后所有服务将停止，而副本集在主机宕机后，副本会接管主节点成为主节点，不会出现宕机，无缝切换</p>\n<h3 id=\"分片技术（Shard）\"><a href=\"#分片技术（Shard）\" class=\"headerlink\" title=\"分片技术（Shard）\"></a>分片技术（Shard）</h3><p>在Mongodb里面存在另一种集群(cluster)，就是分片技术,可以满足MongoDB数据量大量增长的需求。</p>\n<blockquote>\n<p>复制所有的写入操作到主节点<br>延迟的敏感数据会在主节点查询<br>单个副本集限制在12个节点<br>当请求量巨大时会出现内存不足。<br>本地磁盘不足<br>垂直扩展价格昂贵</p>\n</blockquote>\n<p><img src=\"/images/mongo-cluster.jpg\" alt=\"MongoDB Cluster\"></p>\n<blockquote>\n<ul>\n<li>Shard:用于存储实际的数据块，实际生产环境中一个shard server角色可由几台机器组个一个replica set承担，防止主机单点故障</li>\n<li>Config Server:mongod实例，存储了整个 ClusterMetadata，其中包括 chunk信息。</li>\n<li>Query Routers: 前端路由，客户端由此接入，且让整个集群看上去像单一数据库，前端应用可以透明使用。</li>\n</ul>\n</blockquote>\n<p>模拟在单机上启用不同的端口，分片<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 服务器分布</span><br><span class=\"line\">Shard Server 1：27020</span><br><span class=\"line\">Shard Server 2：27021</span><br><span class=\"line\">Shard Server 3：27022</span><br><span class=\"line\">Shard Server 4：27023</span><br><span class=\"line\">Config Server ：27100</span><br><span class=\"line\">Route Process：40000</span><br><span class=\"line\"></span><br><span class=\"line\">-- 1. 启动Shard Server</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/s0</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/s1</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/s2</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/s3</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/log</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/local/mongoDB/bin/mongod --port 27020 --dbpath=E:/MongoDB/shard/s0 --logpath=E:/MongoDB/shard/log/s0.log --logappend</span><br><span class=\"line\">/usr/local/mongoDB/bin/mongod --port 27021 --dbpath=E:/MongoDB/shard/s1 --logpath=E:/MongoDB/shard/log/s1.log --logappend</span><br><span class=\"line\">/usr/local/mongoDB/bin/mongod --port 27022 --dbpath=E:/MongoDB/shard/s2 --logpath=E:/MongoDB/shard/log/s2.log --logappend</span><br><span class=\"line\">/usr/local/mongoDB/bin/mongod --port 27023 --dbpath=E:/MongoDB/shard/s3 --logpath=E:/MongoDB/shard/log/s3.log --logappend</span><br><span class=\"line\"></span><br><span class=\"line\">-- 2. 启动Config Server,这里只有一台config server 如果不是一台，添加 `--configsvr` 参数</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/config</span><br><span class=\"line\">/usr/local/mongoDB/bin/mongod --port 27100 --configsvr --dbpath=E:/MongoDB/shard/config --logpath=E:/MongoDB/shard/log/config.log --logappend</span><br><span class=\"line\"></span><br><span class=\"line\">-- 3. 启动Route Process，mongos启动参数中，chunkSize这一项是用来指定chunk的大小的，单位是MB，默认大小为200MB.</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/local/mongoDB/bin/mongos --port 40000 --configdb localhost:27100 --logpath=E:/MongoDB/shard/log/route.log --chunkSize 200</span><br><span class=\"line\"></span><br><span class=\"line\">-- 4. 配置Sharding,使用MongoDB Shell登录到mongos，添加Shard节点,然后按照普通的mongo数据库那样，将数据库连接接入接口40000</span><br><span class=\"line\">/usr/local/mongoDB/bin/mongo admin --port 40000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.runCommand(&#123; addshard:&quot;localhost:27020&quot; &#125;)</span><br><span class=\"line\">db.runCommand(&#123; addshard:&quot;localhost:27021&quot; &#125;)</span><br><span class=\"line\">db.runCommand(&#123; addshard:&quot;localhost:27022&quot; &#125;)</span><br><span class=\"line\">db.runCommand(&#123; addshard:&quot;localhost:27023&quot; &#125;)</span><br><span class=\"line\">db.runCommand(&#123; enablesharding:&quot;test&quot; &#125;)</span><br><span class=\"line\">db.runCommand(&#123; shardcollection: &quot;users&quot;, key: &#123; id:1,time:1&#125;&#125;)</span><br><span class=\"line\">-- 或者下面写写法是一样的</span><br><span class=\"line\">sh.addShard(&quot;localhost:27020&quot;);</span><br><span class=\"line\">sh.addShard(&quot;localhost:27021&quot;);</span><br><span class=\"line\">sh.addShard(&quot;localhost:27022&quot;);</span><br><span class=\"line\">sh.addShard(&quot;localhost:27023&quot;);</span><br><span class=\"line\">sh.enableSharding(&quot;test&quot;);</span><br><span class=\"line\">-- sh.shardCollection(&quot;&lt;database&gt;.&lt;collection&gt;&quot;, shard-key-pattern) 按照collection的key来分片</span><br><span class=\"line\">sh.shardCollection(&quot;test.users&quot;,&#123;&quot;name&quot;:1,&quot;_id&quot;:1&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 5. 插入数据,测试分片</span><br><span class=\"line\">    use test</span><br><span class=\"line\"></span><br><span class=\"line\">    for(var i=0;i&lt;=100000;i++) &#123;</span><br><span class=\"line\">        db.users.insert(&#123;name:&quot;lucy&quot;+i,age:i&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 6. 查看分片信息</span><br><span class=\"line\">sh.status()</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"安全管理\"><a href=\"#安全管理\" class=\"headerlink\" title=\"安全管理\"></a>安全管理</h3><ol>\n<li>以安全认证模式启动<br>mongod –auth –dbpath /usr/mongo/data -f /var/mongo.log<br>使用–auth选项启动mongod进程即可启用认证模式。<br>或者，也可以修改<code>/etc/mongodb.conf</code>，设置<code>auth=true</code>，重启mongod进程。</li>\n<li>添加用户</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 创建用户</span><br><span class=\"line\">db.createUser(&#123;  </span><br><span class=\"line\">    &quot;user&quot;: &quot;chrisaiv&quot;,</span><br><span class=\"line\">    &quot;pwd&quot;: &quot;password&quot;,</span><br><span class=\"line\">    &quot;roles&quot;: [</span><br><span class=\"line\">        &#123; role: &quot;clusterAdmin&quot;, db: &quot;admin&quot; &#125;,</span><br><span class=\"line\">        &#123; role: &quot;readAnyDatabase&quot;, db: &quot;admin&quot; &#125;,</span><br><span class=\"line\">        &quot;readWrite&quot;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123; w: &quot;majority&quot;, wtimeout: 5000 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">测试数据库安全认证: `db.auth(&quot;admin&quot;, &quot;123456&quot;)`</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>为数据库写数据（同步到磁盘）加锁<br><code>db.runCommand({fsync:1,lock:1})</code><br>说明：该操作已经对数据库上锁，不允许执行写数据操作，一般在执行数据库备份时有用。</p>\n</li>\n<li><p>查看当前锁状态<br><code>db.currentOp()</code></p>\n</li>\n<li><p>解锁<br><code>use local\ndb.$cmd.sys.unlock.findOne()</code><br>说明：<br>执行解锁，结果如下所示：<br><code>db.currentOp()</code></p>\n</li>\n</ol>\n<h3 id=\"数据备份、恢复与迁移管理\"><a href=\"#数据备份、恢复与迁移管理\" class=\"headerlink\" title=\"数据备份、恢复与迁移管理\"></a>数据备份、恢复与迁移管理</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">mongodump -h dbhost -d dbname -c collection -o dbdirectory</span><br><span class=\"line\">mongorestore -h dbhost -d dbname -c collection --directoryperdb dbdirectory</span><br><span class=\"line\"></span><br><span class=\"line\">-- 备份全部数据库</span><br><span class=\"line\">mkdir testbak</span><br><span class=\"line\">mongodump </span><br><span class=\"line\">-- 备份指定数据库</span><br><span class=\"line\">mongodump -d pagedb</span><br><span class=\"line\">-- 备份一个数据库中的某个集合</span><br><span class=\"line\">mongodump -d pagedb -c page</span><br><span class=\"line\">-- 恢复全部数据库</span><br><span class=\"line\">cd testbak</span><br><span class=\"line\">mongorestore --drop</span><br><span class=\"line\">-- 恢复某个数据库的数据</span><br><span class=\"line\">cd testbak</span><br><span class=\"line\">mongorestore -d pagedb --drop</span><br><span class=\"line\"></span><br><span class=\"line\">-- 恢复某个数据库的某个集合的数据</span><br><span class=\"line\">mongorestore -d pagedb -c page --drop</span><br><span class=\"line\">-- 向MongoDB导入数据</span><br><span class=\"line\">mongoimport -d pagedb -c page --type csv --headerline --drop &lt; csvORtsvFile.csv</span><br><span class=\"line\">-- 将文件csvORtsvFile.csv的数据导入到pagedb数据库的page集合中，使用cvs或tsv文件的列名作为集合的列名。</span><br><span class=\"line\">-- 需要注意的是，使用`--headerline`选项时，只支持csv和tsv文件。</span><br><span class=\"line\">-- type支持的类型有三个：csv、tsv、json</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### MongoDB 监控</span><br><span class=\"line\">```sql</span><br><span class=\"line\">mongostat </span><br><span class=\"line\">mongotop</span><br><span class=\"line\">mongotop 10   -- 等待时间</span><br><span class=\"line\">mongotop --locks  -- 报告每个数据库的锁的使用</span><br></pre></td></tr></table></figure>\n<h3 id=\"MongoDB-自动增长\"><a href=\"#MongoDB-自动增长\" class=\"headerlink\" title=\"MongoDB 自动增长\"></a>MongoDB 自动增长</h3><p>MongoDB 没有像 SQL 一样有自动增长的功能， MongoDB 的 _id 是系统自动生成的12字节唯一标识。<code>db.createCollection(&quot;counters&quot;)</code>,通过<code>db.counters.insert({_id:&quot;productid&quot;,sequence_value:0})</code> 来实现</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNextSequenceValue</span>(<span class=\"params\">sequenceName</span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> sequenceDocument = db.counters.findAndModify(</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">         query:&#123;_id: sequenceName &#125;,</span><br><span class=\"line\">         update: &#123;$inc:&#123;sequence_value:<span class=\"number\">1</span>&#125;&#125;,</span><br><span class=\"line\">         <span class=\"keyword\">new</span>:<span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> sequenceDocument.sequence_value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> db.products.insert(&#123;</span><br><span class=\"line\">    \"_id\":getNextSequenceValue(\"productid\"),</span><br><span class=\"line\">    \"product_name\":\"Apple iPhone\",</span><br><span class=\"line\">    \"category\":\"mobiles\"</span><br><span class=\"line\"> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"> db.products.insert(&#123;</span><br><span class=\"line\">\"_id\":getNextSequenceValue(\"productid\"),</span><br><span class=\"line\">\"product_name\":\"Samsung S3\",</span><br><span class=\"line\">\"category\":\"mobiles\"&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">db.products.find()</span><br></pre></td></tr></table></figure>\n<h3 id=\"关于ObjectId\"><a href=\"#关于ObjectId\" class=\"headerlink\" title=\"关于ObjectId\"></a>关于ObjectId</h3><blockquote>\n<p>前4个字节表示时间戳<br>接下来的3个字节是机器标识码<br>紧接的两个字节由进程id组成（PID）<br>最后三个字节是随机数。<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">newObjectId = ObjectId()</span><br><span class=\"line\">myObjectId = ObjectId(\"5349b4ddd2781d08c09890f4\")</span><br><span class=\"line\">ObjectId(\"5349b4ddd2781d08c09890f4\").getTimestamp()</span><br><span class=\"line\"></span><br><span class=\"line\">new ObjectId().str</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"GridFS\"><a href=\"#GridFS\" class=\"headerlink\" title=\"GridFS\"></a>GridFS</h3><p>GridFS 用于存储和恢复那些超过16M（BSON文件限制）的文件(如：图片、音频、视频等)。<br>GridFS 也是文件存储的一种方式，但是它是存储在MonoDB的集合中。<br>GridFS 可以更好的存储大于16M的文件。<br>GridFS 会将大文件对象分割成多个小的chunk(文件片段),一般为256k/个,每个chunk将作为MongoDB的一个文档(document)被存储在chunks集合中。<br>GridFS 用两个集合来存储一个文件：<code>fs.files</code>与<code>fs.chunks</code>。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> --fs.files</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   \"filename\": \"test.txt\",</span><br><span class=\"line\">   \"chunkSize\": NumberInt(261120),</span><br><span class=\"line\">   \"uploadDate\": ISODate(\"2014-04-13T11:32:33.557Z\"),</span><br><span class=\"line\">   \"md5\": \"7b762939321e146569b07f72c62cca4f\",</span><br><span class=\"line\">   \"length\": NumberInt(646)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-- fs.chunks</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   \"files_id\": ObjectId(\"534a75d19f54bfec8a2fe44b\"),</span><br><span class=\"line\">   \"n\": NumberInt(0),</span><br><span class=\"line\">   \"data\": \"Mongo Binary Data\"</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 添加文件</span><br><span class=\"line\">mongofiles.exe -d gridfs put song.mp3</span><br><span class=\"line\">db.fs.files.find()</span><br><span class=\"line\"></span><br><span class=\"line\">--_id 获取区块(chunk)</span><br><span class=\"line\">db.fs.chunks.find(&#123;files_id:ObjectId('534a811bf8b4aa4d33fdf94d')&#125;)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><a href=\"https://docs.mongodb.com/v3.2/tutorial/access-mongo-shell-help/\" target=\"_blank\" rel=\"external\">参考</a></li>\n</ul>\n","excerpt":"<h3 id=\"安装篇\"><a href=\"#安装篇\" class=\"headerlink\" title=\"安装篇\"></a>安装篇</h3><h4 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.2.10.tgz</span><br><span class=\"line\">tar zxvf mongodb-linux-x86_64-rhel62-3.2.10.tgz</span><br><span class=\"line\">mv mongodb-linux-x86_64-rhel62-3.2.10 /usr/local/</span><br><span class=\"line\">mv mongodb-linux-x86_64-rhel62-3.2.10 mongodb</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir /data/db</span><br><span class=\"line\">touch /var/logs/mongodb/mongodb.logs</span><br><span class=\"line\">cd mongdb/bin &amp;&amp; vim mongodb.conf</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"配置mongodb-conf\"><a href=\"#配置mongodb-conf\" class=\"headerlink\" title=\"配置mongodb.conf\"></a>配置mongodb.conf</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dbpath=/data/db</span><br><span class=\"line\">logpath=/var/logs/mongodb</span><br><span class=\"line\">port=27017</span><br><span class=\"line\">#fork=true</span><br><span class=\"line\">#nohttpinterface=true</span><br></pre></td></tr></table></figure>\n<p>####　重新绑定mongodb的配置文件地址和访问IP</p>\n<p><code>/usr/local/mongodb/bin/mongod --bind_ip localhost -f /usr/local/mongodb/mongodb.conf</code><br>可以通过 <code>/usr/local/mongodb/bin/mongod --help</code> 查看帮助 ，其中 -f（–config） 配置文件，–bind_ip 绑定ip<br><code>/usr/local/mongodb/bin/mongod --config /usr/local/mongodb/mongodb.conf</code> 添加到 <code>/etc/rc.d/rc.local</code> 开机启动</p>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p>其中 <code>mongod --config /usr/local/mongodb/mongodb.conf</code> 服务之后，启动 <code>/usr/local/mongodb/bin/mongo</code> 客户端，支持JavaScript 版本，<code>show dbs</code> 查看数据库，<code>db.version()</code> 查看版本</p>\n<h5 id=\"查看当前mongodb进程信息\"><a href=\"#查看当前mongodb进程信息\" class=\"headerlink\" title=\"查看当前mongodb进程信息\"></a>查看当前mongodb进程信息</h5><p>ps -ef | grep mongod  //查看进程号码<br>cat /proc/24283/limits //查看具体信息</p>\n<h3 id=\"php的扩展与测试\"><a href=\"#php的扩展与测试\" class=\"headerlink\" title=\"php的扩展与测试\"></a>php的扩展与测试</h3><p><a href=\"https://pecl.php.net/package/mongodb\">扩展包地址</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd mongodb-1.1.9</span><br><span class=\"line\">/usr/php/bin/phpize</span><br><span class=\"line\">./configure --with-php-config=/usr/askphp/bin/php-config </span><br><span class=\"line\">make;make install</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"PHP代码\"><a href=\"#PHP代码\" class=\"headerlink\" title=\"PHP代码\"></a>PHP代码</h4><h5 id=\"创建集合\"><a href=\"#创建集合\" class=\"headerlink\" title=\"创建集合\"></a>创建集合</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$m = <span class=\"keyword\">new</span> \\MongoClient();</span><br><span class=\"line\">$db = $m-&gt;selectDB(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">$collection = $db-&gt;createCollection(<span class=\"string\">\"my_col\"</span>);</span><br></pre></td></tr></table></figure>\n<h5 id=\"插入文档\"><a href=\"#插入文档\" class=\"headerlink\" title=\"插入文档\"></a>插入文档</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$m = <span class=\"keyword\">new</span> \\MongoClient();</span><br><span class=\"line\">$db = $m-&gt;selectDB(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">$collection = $db-&gt;my_col;</span><br><span class=\"line\">$document = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">            <span class=\"string\">\"title\"</span> =&gt; <span class=\"string\">\"MongoDB\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"description\"</span> =&gt; <span class=\"string\">\"database\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"likes\"</span> =&gt; <span class=\"number\">100</span>,</span><br><span class=\"line\">            <span class=\"string\">\"url\"</span> =&gt; <span class=\"string\">\"http://www.baidu.com\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"by\"</span>=&gt;<span class=\"string\">\"change.net\"</span></span><br><span class=\"line\">            );</span><br><span class=\"line\">$ret_ins  = $collection-&gt;insert($document);</span><br></pre></td></tr></table></figure>\n<h5 id=\"查找文档\"><a href=\"#查找文档\" class=\"headerlink\" title=\"查找文档\"></a>查找文档</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$m = <span class=\"keyword\">new</span> \\MongoClient();</span><br><span class=\"line\">$db = $m-&gt;selectDB(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">$collection = $db-&gt;my_col;</span><br><span class=\"line\">$cursor = $collection-&gt;find();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($cursor <span class=\"keyword\">as</span> $document) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $document[<span class=\"string\">\"title\"</span>] . <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"更新文档\"><a href=\"#更新文档\" class=\"headerlink\" title=\"更新文档\"></a>更新文档</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$m = <span class=\"keyword\">new</span> \\MongoClient();</span><br><span class=\"line\">$db = $m-&gt;selectDB(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">$collection = $db-&gt;my_col;</span><br><span class=\"line\">$collection-&gt;update(<span class=\"keyword\">array</span>(<span class=\"string\">\"title\"</span>=&gt;<span class=\"string\">\"MongoDB\"</span>), <span class=\"keyword\">array</span>(<span class=\"string\">'$set'</span>=&gt;<span class=\"keyword\">array</span>(<span class=\"string\">\"title\"</span>=&gt;<span class=\"string\">\"MongoDB\"</span>)));</span><br><span class=\"line\">$cursor = $collection-&gt;find();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($cursor <span class=\"keyword\">as</span> $document) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $document[<span class=\"string\">\"title\"</span>] . <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"删除文档\"><a href=\"#删除文档\" class=\"headerlink\" title=\"删除文档\"></a>删除文档</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$m = <span class=\"keyword\">new</span> \\MongoClient();</span><br><span class=\"line\">$db = $m-&gt;selectDB(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">$collection = $db-&gt;my_col;</span><br><span class=\"line\">$collection-&gt;remove(<span class=\"keyword\">array</span>(<span class=\"string\">\"title\"</span>=&gt;<span class=\"string\">\"MongoDB\"</span>),  <span class=\"keyword\">array</span>(<span class=\"string\">\"justOne\"</span> =&gt; <span class=\"keyword\">true</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">$cursor = $collection-&gt;find();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($cursor <span class=\"keyword\">as</span> $document) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $document[<span class=\"string\">\"title\"</span>] . <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"使用篇\"><a href=\"#使用篇\" class=\"headerlink\" title=\"使用篇\"></a>使用篇</h3><h4 id=\"Start-Mongod-amp-amp-Command\"><a href=\"#Start-Mongod-amp-amp-Command\" class=\"headerlink\" title=\"Start Mongod &amp;&amp; Command\"></a>Start Mongod &amp;&amp; Command</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">mongod</span><br><span class=\"line\">ps aux | grep mongo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Start the Mongo Shell</span></span><br><span class=\"line\">mongo</span><br><span class=\"line\"><span class=\"keyword\">show</span> dbs</span><br><span class=\"line\"><span class=\"keyword\">use</span> meals-development</span><br><span class=\"line\"><span class=\"keyword\">show</span> collections</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">users</span></span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">roles</span></span><br><span class=\"line\"><span class=\"keyword\">show</span> profile</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">databases</span></span><br><span class=\"line\"></span><br><span class=\"line\">db.auth()</span><br><span class=\"line\">db.help()</span><br><span class=\"line\"><span class=\"comment\">-- collection 为集合的意思 查看更多帮助，查询帮助</span></span><br><span class=\"line\">db.collection.help()</span><br><span class=\"line\">db.collection.find().help()</span><br><span class=\"line\"></span><br><span class=\"line\">db.collection.findOne()</span><br><span class=\"line\">db.collection.find().toArray()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.collection.insert()</span><br><span class=\"line\">db.collection.update()</span><br><span class=\"line\">db.collection.save()</span><br><span class=\"line\">db.collection.remove()</span><br><span class=\"line\">db.collection.drop()</span><br><span class=\"line\">db.collection.createIndex()</span><br><span class=\"line\">db.getSiblingDB()</span><br></pre></td></tr></table></figure>\n<h4 id=\"Data-Types-类型比较\"><a href=\"#Data-Types-类型比较\" class=\"headerlink\" title=\"Data Types 类型比较\"></a>Data Types 类型比较</h4><p><a href=\"https://docs.mongodb.com/v3.2/core/shell-types/#types\">参考</a></p>\n<h5 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h5><ul>\n<li>Date() method which returns the current date as a string.</li>\n<li>new Date() constructor which returns a Date object using the ISODate() wrapper.</li>\n<li>ISODate() constructor which returns a Date object using the ISODate() wrapper.</li>\n</ul>\n<h5 id=\"ObjectId\"><a href=\"#ObjectId\" class=\"headerlink\" title=\"ObjectId\"></a>ObjectId</h5><p>new ObjectId</p>\n<h5 id=\"NumberLong-amp-amp-NumberInt\"><a href=\"#NumberLong-amp-amp-NumberInt\" class=\"headerlink\" title=\"NumberLong &amp;&amp;  NumberInt\"></a>NumberLong &amp;&amp;  NumberInt</h5><p>NumberLong(“2090845886852”)。demo：</p>\n<blockquote>\n<p>db.collection.insert( { _id: 10, calc: NumberLong(“2090845886852”) } )<br>db.collection.update( { _id: 10 },{$set:{ calc: NumberLong(“2555555000000”)}})</p>\n<p>db.collection.update( { _id: 10 },{$inc:{ calc: NumberLong(5) } } )</p>\n</blockquote>\n<h4 id=\"Check-Types\"><a href=\"#Check-Types\" class=\"headerlink\" title=\"Check Types\"></a>Check Types</h4><ul>\n<li>instanceof – mydoc._id instanceof ObjectId</li>\n<li>typeof – typeof mydoc._id</li>\n</ul>\n<h4 id=\"SQL-amp-amp-MongoDB-Mapping-Chart\"><a href=\"#SQL-amp-amp-MongoDB-Mapping-Chart\" class=\"headerlink\" title=\"SQL &amp;&amp;  MongoDB Mapping Chart\"></a>SQL &amp;&amp;  MongoDB Mapping Chart</h4><p><a href=\"https://gist.github.com/aponxi/4380516\">sql与nosql的不同于区别参考</a></p>\n<h5 id=\"Executables\"><a href=\"#Executables\" class=\"headerlink\" title=\"Executables\"></a>Executables</h5><table>\n<thead>\n<tr>\n<th></th>\n<th>MySQL/Oracle</th>\n<th>MongoDB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Database Server</td>\n<td>mysqld/oracle</td>\n<td>mongod</td>\n</tr>\n<tr>\n<td>Database Client</td>\n<td>mysql/sqlplus</td>\n<td>mongo</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"Terminology-and-Concepts\"><a href=\"#Terminology-and-Concepts\" class=\"headerlink\" title=\"Terminology and Concepts\"></a>Terminology and Concepts</h5><table>\n<thead>\n<tr>\n<th>SQL Terms/Concepts</th>\n<th>MongoDB Terms/Concepts</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>database</td>\n<td>database</td>\n</tr>\n<tr>\n<td>table</td>\n<td>collection</td>\n</tr>\n<tr>\n<td>row</td>\n<td>document or BSON document</td>\n</tr>\n<tr>\n<td>column</td>\n<td>field</td>\n</tr>\n<tr>\n<td>index</td>\n<td>index</td>\n</tr>\n<tr>\n<td>table joins</td>\n<td>embedded documents and linking</td>\n</tr>\n<tr>\n<td>primary key,Specify any unique column or column combination as primary key.</td>\n<td>primary key,In MongoDB, the primary key is automatically set to the _id field.</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Create-and-Alter-and-CURD\"><a href=\"#Create-and-Alter-and-CURD\" class=\"headerlink\" title=\"Create and Alter and CURD\"></a>Create and Alter and CURD</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.users.insert( &#123;</span><br><span class=\"line\">    user_id: \"abc123\",</span><br><span class=\"line\">    age: 55,</span><br><span class=\"line\">    status: \"A\"</span><br><span class=\"line\"> &#125; )</span><br><span class=\"line\"> </span><br><span class=\"line\"> -- However, you can also explicitly create a collection:</span><br><span class=\"line\"> db.createCollection(\"users\")</span><br><span class=\"line\"> </span><br><span class=\"line\"> db.users.ensureIndex( &#123; user_id: 1 &#125; )</span><br><span class=\"line\"> db.users.ensureIndex( &#123; user_id: 1, age: -1 &#125; )</span><br><span class=\"line\"> db.users.drop()</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> db.users.find()</span><br><span class=\"line\"> db.users.find(</span><br><span class=\"line\">    &#123; &#125;,</span><br><span class=\"line\">    &#123; user_id: 1, status: 1 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.find(</span><br><span class=\"line\">    &#123; &#125;,</span><br><span class=\"line\">    &#123; user_id: 1, status: 1, _id: 0 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.find(</span><br><span class=\"line\">    &#123; status: \"A\" &#125;,</span><br><span class=\"line\">    &#123; user_id: 1, status: 1, _id: 0 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">db.users.find(</span><br><span class=\"line\">   &#123; age: &#123; $gt: 25, $lte: 50 &#125; &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">db.users.find(</span><br><span class=\"line\">   &#123; user_id: /^bc/ &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">db.users.find( &#123; status: \"A\" &#125; ).sort( &#123; user_id: 1 &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.count()</span><br><span class=\"line\">db.users.find().count()</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.count( &#123; user_id: &#123; $exists: true &#125; &#125; )</span><br><span class=\"line\">db.users.find( &#123; user_id: &#123; $exists: true &#125; &#125; ).count()</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.count( &#123; age: &#123; $gt: 30 &#125; &#125; )</span><br><span class=\"line\">db.users.find( &#123; age: &#123; $gt: 30 &#125; &#125; ).count()</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.distinct( \"status\" )</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.findOne()</span><br><span class=\"line\">db.users.find().limit(1)</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.find().limit(5).skip(10)</span><br><span class=\"line\">db.users.find( &#123; status: \"A\" &#125; ).explain()</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.update(</span><br><span class=\"line\">   &#123; age: &#123; $gt: 25 &#125; &#125;,</span><br><span class=\"line\">   &#123; $set: &#123; status: \"C\" &#125; &#125;,</span><br><span class=\"line\">   &#123; multi: true &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.users.update(</span><br><span class=\"line\">   &#123; status: \"A\" &#125; ,</span><br><span class=\"line\">   &#123; $inc: &#123; age: 3 &#125; &#125;,</span><br><span class=\"line\">   &#123; multi: true &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.users.remove( &#123; status: \"D\" &#125; )</span><br><span class=\"line\">db.users.remove( )</span><br></pre></td></tr></table></figure>\n<h4 id=\"详细使用\"><a href=\"#详细使用\" class=\"headerlink\" title=\"详细使用\"></a>详细使用</h4><h5 id=\"INSERTING-DATA\"><a href=\"#INSERTING-DATA\" class=\"headerlink\" title=\"INSERTING DATA\"></a>INSERTING DATA</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.customers.insert(&#123;  </span><br><span class=\"line\">    first_name: \"chris\",</span><br><span class=\"line\">    last_name:  \"aiv\" </span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">--Append a lot of data into a customer</span><br><span class=\"line\">db.customers.insert(&#123;  </span><br><span class=\"line\">    first_name: \"Peter\",</span><br><span class=\"line\">    age: 32,</span><br><span class=\"line\">    address: &#123;</span><br><span class=\"line\">        street: \"120 Main St\",</span><br><span class=\"line\">        city: \"Chicago\",</span><br><span class=\"line\">        state: \"Illinois\",</span><br><span class=\"line\">        zip: \"38475\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    phone: &#123;</span><br><span class=\"line\">        home: \"5555555555\",</span><br><span class=\"line\">        work: \"4444444444\",</span><br><span class=\"line\">        mobile: \"3333333333\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    services: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            service_id: \"time warner\"</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            service_id: \"pge\"</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            service_id: \"moviepass\"</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    services_count: 3</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- Append data to a customer</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.insert(&#123;  </span><br><span class=\"line\">    first_name: \"Billy\",</span><br><span class=\"line\">    last_name:  \"Corgan\",</span><br><span class=\"line\">    gender: \"m\"</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- Insert multiple customers in one query</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.insert([  </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    first_name: \"Jimmy\",</span><br><span class=\"line\">    last_name:  \"Hendrix\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    first_name: \"Jimmy\",</span><br><span class=\"line\">    last_name:  \"Page\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    first_name: \"Kurt\",</span><br><span class=\"line\">    last_name:  \"Cobain\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    first_name: \"Adrian\",</span><br><span class=\"line\">    last_name:  \"Belew\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    first_name: \"Billy\",</span><br><span class=\"line\">    last_name:  \"Corgan\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure>\n<h5 id=\"FINDING-DATA\"><a href=\"#FINDING-DATA\" class=\"headerlink\" title=\"FINDING DATA\"></a>FINDING DATA</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.customers.find(&#123; first_name: \"Peter\"&#125;, &#123; services: 1&#125;)  </span><br><span class=\"line\">db.customers.find(&#123; first_name: \"Peter\"&#125;, &#123; \"services.service_id\": 1&#125;)  </span><br><span class=\"line\">db.customers.findOne(  </span><br><span class=\"line\">    &#123; first_name: /^billy$/i &#125;,</span><br><span class=\"line\">    &#123; first_name: 1 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.find(&#123;  </span><br><span class=\"line\">    gender: \"male\"</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.find(&#123;  </span><br><span class=\"line\">    gender: /(m|male)/i, first_name: /^billy$/i </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h5 id=\"UPDATING-DATA\"><a href=\"#UPDATING-DATA\" class=\"headerlink\" title=\"UPDATING DATA\"></a>UPDATING DATA</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 慎用，破坏式的更新</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; first_name: \"Jimmy\" &#125;,</span><br><span class=\"line\">    &#123; last_name:  \"Hendrix\"&#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">-- Gentel Update </span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; last_name: /^hendrix$/i &#125;,</span><br><span class=\"line\">    &#123; $set: &#123; first_name: \"Jimmy\" &#125; &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">-- Increment a value in a field</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; first_name: \"Billy\" &#125;,</span><br><span class=\"line\">    &#123; $inc: &#123; age: 1 &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">-- Update or Insert a field using an object ID</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; _id: ObjectId(\"581fef808e5fac221dea48ef\") &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $set: &#123;</span><br><span class=\"line\">            first_name:\"Lucy\",</span><br><span class=\"line\">            gender: \"m\",</span><br><span class=\"line\">            age: 40,</span><br><span class=\"line\">            birthdate: new Date(\"2016-11-02\")</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">-- Update a field using someones first name</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; first_name: \"Jimmy\" &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $set: &#123;</span><br><span class=\"line\">            gender: \"male\",</span><br><span class=\"line\">            age: 50,</span><br><span class=\"line\">            birthdate: new Date(\"Aug 20, 1985\")</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123; upsert: true &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">-- Add to an existing document</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; first_name: \"Jimmy\" &#125;,</span><br><span class=\"line\">    &#123; $push: &#123;</span><br><span class=\"line\">        services: &#123;</span><br><span class=\"line\">            service_id: 'hosting windows',</span><br><span class=\"line\">            service_name: \"windows hosting\"</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">-- 第三个参数,如果条件默认不存在，则新增为true表示新增的，默认为false，第四个参数表示全部更新</span><br><span class=\"line\">db.customers.update(&#123;first_name:\"jack\"&#125;,&#123;$inc:&#123;age:2&#125;&#125;,true);</span><br><span class=\"line\">db.customers.update(&#123;first_name:\"Jimmy\"&#125;,&#123;$inc:&#123;age:3&#125;&#125;,false,true);</span><br><span class=\"line\">db.customers.update(&#123;first_name:\"Kurt\"&#125;,&#123;$inc:&#123;age:-2&#125;&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"REMOVING-DATA\"><a href=\"#REMOVING-DATA\" class=\"headerlink\" title=\"REMOVING DATA\"></a>REMOVING DATA</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--Remove a field</span><br><span class=\"line\">db.customers.update(  </span><br><span class=\"line\">    &#123; last_name: \"Page\" &#125;,</span><br><span class=\"line\">    &#123; </span><br><span class=\"line\">        $unset: &#123; age: 1 &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.update(&#123;first_name:\"jack\"&#125;,&#123;$inc:&#123;age:1&#125;&#125;)</span><br><span class=\"line\">--Remove a customer</span><br><span class=\"line\">db.customers.remove(  </span><br><span class=\"line\">    //!!! DO NOT US THIS</span><br><span class=\"line\">    &#123; first_name: \"Billy\"&#125;, true </span><br><span class=\"line\">)</span><br><span class=\"line\">-- Remove any customer above the age of 31</span><br><span class=\"line\">db.customers.remove(  </span><br><span class=\"line\">    &#123; age: &#123; $gt: 31 &#125; &#125;</span><br><span class=\"line\">    , true</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h5 id=\"DELETING-DATA\"><a href=\"#DELETING-DATA\" class=\"headerlink\" title=\"DELETING DATA\"></a>DELETING DATA</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- Delete a collection</span></span><br><span class=\"line\">db.customers.drop()</span><br></pre></td></tr></table></figure>\n<h5 id=\"SEARCHING-DATA\"><a href=\"#SEARCHING-DATA\" class=\"headerlink\" title=\"SEARCHING DATA\"></a>SEARCHING DATA</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  _id: 1,</span><br><span class=\"line\">  name: &#123; first: 'John', last: 'Backus' &#125;,</span><br><span class=\"line\">  birth: new Date('Dec 03, 1924'),</span><br><span class=\"line\">  death: new Date('Mar 17, 2007'),</span><br><span class=\"line\">  contribs: [ 'Fortran', 'ALGOL', 'Backus-Naur Form', 'FP' ],</span><br><span class=\"line\">  awards: [</span><br><span class=\"line\">            &#123; award: 'National Medal',</span><br><span class=\"line\">              year: 1975,</span><br><span class=\"line\">              by: 'NSF' &#125;,</span><br><span class=\"line\">            &#123; award: 'Turing Award',</span><br><span class=\"line\">              year: 1977,</span><br><span class=\"line\">              by: 'ACM' &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">db.users.find(&#123;awards: &#123;$elemMatch: &#123;award:'National Medal', year:1975&#125;&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">--  $gt,gte,$lt,$lte,$ne</span><br><span class=\"line\">db.col.find(&#123;\"by\":\"菜鸟教程\"&#125;).pretty()</span><br><span class=\"line\">db.col.find(&#123;\"likes\":&#123;$lt:50&#125;&#125;).pretty()</span><br><span class=\"line\">db.col.find(&#123;\"likes\":&#123;$ne:50&#125;&#125;).pretty()</span><br><span class=\"line\">db.users.find(&#123;\"likes\" : &#123;$gt : 100&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- and or 使用</span><br><span class=\"line\">db.customers.find(&#123;$or: [&#123;key1: value1&#125;, &#123;key2:value2&#125;]&#125;).pretty()</span><br><span class=\"line\">db.col.find(&#123;\"likes\": &#123;$gt:50&#125;, $or: [&#123;\"by\": \"教程\"&#125;,&#123;\"title\": \"MongoDB 教程\"&#125;]&#125;).pretty()</span><br><span class=\"line\">//支持js</span><br><span class=\"line\">db.customers.find(&#123;$where:function()&#123; return this.first_name==\"jack\"&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 正则查询</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.find(&#123;name:&#123;$regex:\"yaolan.com\"&#125;&#125;)</span><br><span class=\"line\">-- 或者</span><br><span class=\"line\">db.customers.find(&#123;name:/yaolan.com/&#125;)</span><br><span class=\"line\">-- 不区分大小写</span><br><span class=\"line\">db.customers.find(&#123;name:&#123;$regex:\"yaolan.com\",$options:\"$i\"&#125;&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"关于统计，排序，分页，分组等\"><a href=\"#关于统计，排序，分页，分组等\" class=\"headerlink\" title=\"关于统计，排序，分页，分组等\"></a>关于统计，排序，分页，分组等</h4><ul>\n<li>db.collections.help() 查看更多操作</li>\n<li>db.collection.find().help();</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.customers.distinct(\"first_name\");</span><br><span class=\"line\">db.customers.count(&#123;first_name:\"Jimmy\",age:&#123;$gt:1&#125;&#125;);</span><br><span class=\"line\">db.customers.count(&#123;first_name:\"Jimmy\",age:&#123;$in:[8,90]&#125;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 用于分页</span><br><span class=\"line\">db.customers.find().limit(2).skip(1)</span><br><span class=\"line\">-- 用于排序，其中value为1 或 -1 分别为升降序</span><br><span class=\"line\">db.customers.find().sort(&#123;first_name:1&#125;);</span><br><span class=\"line\">db.customers.find().sort(&#123;first_name:-1&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 分组 </span><br><span class=\"line\">-- key ：按照那个字段分组</span><br><span class=\"line\">-- initial:初始化函数</span><br><span class=\"line\">-- reduce 函数第一个参数当前文档，第二个参数为前一个集合对象</span><br><span class=\"line\">-- condition: 这个就是过滤条件。</span><br><span class=\"line\">-- finalize: 每一组文档执行完后，多会触发此方法，那么在每组集合里面加上count也就是它的活了</span><br><span class=\"line\">db.customers.group(&#123;</span><br><span class=\"line\">    key:&#123;age:true&#125;,</span><br><span class=\"line\">    initial:&#123;customers:[]&#125;,</span><br><span class=\"line\">    reduce:function(curr,prev)&#123; prev.customers.push(curr.first_name) &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.group(&#123;</span><br><span class=\"line\">    key:&#123;age:true&#125;,</span><br><span class=\"line\">    initial:&#123;obj:[]&#125;,</span><br><span class=\"line\">    reduce:function(curr,prev)&#123; </span><br><span class=\"line\">        prev.obj.push(curr.first_name); </span><br><span class=\"line\">        prev.obj.push(curr.last_name);</span><br><span class=\"line\">        prev.obj.push(&#123;address:\"abc\"&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 存储整个值</span><br><span class=\"line\">db.customers.group(&#123;</span><br><span class=\"line\">    key:&#123;age:true&#125;,</span><br><span class=\"line\">    initial:&#123;obj:[]&#125;,</span><br><span class=\"line\">    reduce:function(curr,prev)&#123; </span><br><span class=\"line\">        prev.obj.push(JSON.stringify(curr)); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 删选条件加，每次执行完事件</span><br><span class=\"line\">db.customers.group(&#123;</span><br><span class=\"line\">    key:&#123;age:true&#125;,</span><br><span class=\"line\">    initial:&#123;obj:[]&#125;,</span><br><span class=\"line\">    condition:&#123;age:&#123;$gt:7&#125;&#125;,</span><br><span class=\"line\">    reduce:function(curr,prev)&#123; </span><br><span class=\"line\">        prev.list = JSON.stringify(curr);   </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    finalize:function(prev)&#123;</span><br><span class=\"line\">        prev.count =  prev.obj.length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"aggregate-聚合\"><a href=\"#aggregate-聚合\" class=\"headerlink\" title=\"aggregate 聚合\"></a>aggregate 聚合</h5><p>按照age分组，并以sum的value累计计算和, 聚合，实例类似sql语句： <code>select by_user, count(*) from mycol group by by_user</code>，在上面的例子中，我们通过字段by_user字段对数据进行分组，并计算by_user字段相同值的总和。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.customers.aggregate([&#123;$group : &#123;_id : \"$by_user\", num_tutorial : &#123;$sum : 1&#125;&#125;&#125;])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.aggregate([&#123;$group : &#123;_id: \"$age\",num:&#123;$sum:2&#125;&#125;&#125;])</span><br><span class=\"line\">db.customers.aggregate([&#123;$group : &#123;_id: \"$age\",num:&#123;$avg:1&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure>\n<h5 id=\"管道的概念\"><a href=\"#管道的概念\" class=\"headerlink\" title=\"管道的概念\"></a>管道的概念</h5><p>管道在Unix和Linux中一般用于将当前命令的输出结果作为下一个命令的参数。</p>\n<blockquote>\n<ul>\n<li>$project：修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档。</li>\n<li>$match：用于过滤数据，只输出符合条件的文档。<code>$match</code>使用MongoDB的标准查询操作。</li>\n<li>$limit：用来限制MongoDB聚合管道返回的文档数。</li>\n<li>$skip：在聚合管道中跳过指定数量的文档，并返回余下的文档。</li>\n<li>$unwind：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。</li>\n<li>$group：将集合中的文档分组，可用于统计结果。</li>\n<li>$sort：将输入文档排序后输出。</li>\n<li>$geoNear：输出接近某一地理位置的有序文档。</li>\n</ul>\n</blockquote>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">db.article.aggregate(</span><br><span class=\"line\">    &#123; $project : &#123;</span><br><span class=\"line\">        title : 1 ,</span><br><span class=\"line\">        author : 1 ,</span><br><span class=\"line\">    &#125;&#125;</span><br><span class=\"line\"> );</span><br><span class=\"line\"></span><br><span class=\"line\">db.customers.aggregate(&#123;$project:&#123;first_name:1,age:1&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.article.aggregate(</span><br><span class=\"line\">&#123; $project : &#123;</span><br><span class=\"line\">    _id : 0 ,</span><br><span class=\"line\">    title : 1 ,</span><br><span class=\"line\">    author : 1</span><br><span class=\"line\">&#125;&#125;);</span><br><span class=\"line\">-- $match用于获取分数大于70小于或等于90记录，然后将符合条件的记录送到下一阶段$group管道操作符进行处理。</span><br><span class=\"line\">db.articles.aggregate( [</span><br><span class=\"line\">    &#123; $match : &#123; score : &#123; $gt : 70, $lte : 90 &#125; &#125; &#125;,</span><br><span class=\"line\">    &#123; $group: &#123; _id: null, count: &#123; $sum: 1 &#125; &#125; &#125;</span><br><span class=\"line\">   ] );</span><br><span class=\"line\"></span><br><span class=\"line\">-- 经过$skip管道操作符处理后，前五个文档被\"过滤\"掉。</span><br><span class=\"line\">db.article.aggregate(&#123; $skip : 5 &#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"mapReduce\"><a href=\"#mapReduce\" class=\"headerlink\" title=\"mapReduce\"></a>mapReduce</h3><p>Map-Reduce是一种计算模型，简单的说就是将大批量的工作（数据）分解（MAP）执行，然后再将结果合并成最终结果（REDUCE）。</p>\n<blockquote>\n<p>map ：映射函数 (生成键值对序列,作为 reduce 函数参数)。<br>reduce 统计函数，reduce函数的任务就是将key-values变成key-value，也就是把values数组变成一个单一的值value。。<br>out 统计结果存放集合 (不指定则使用临时集合,在客户端断开后自动删除)。<br>query 一个筛选条件，只有满足条件的文档才会调用map函数。（query。limit，sort可以随意组合）<br>sort 和limit结合的sort排序参数（也是在发往map函数前给文档排序），可以优化分组机制<br>limit 发往map函数的文档数量的上限（要是没有limit，单独使用sort的用处不大）</p>\n</blockquote>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.collection.mapReduce(</span><br><span class=\"line\">   function() &#123;emit(key,value);&#125;,  //map 函数</span><br><span class=\"line\">   function(key,values) &#123;return reduceFunction&#125;,   //reduce 函数</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      out: collection,</span><br><span class=\"line\">      query: document,</span><br><span class=\"line\">      sort: document,</span><br><span class=\"line\">      limit: number</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">-- demo</span><br><span class=\"line\">db.posts.mapReduce( </span><br><span class=\"line\">   function() &#123; emit(this.user_name,1); &#125;, </span><br><span class=\"line\">   function(key, values) &#123;return Array.sum(values)&#125;, </span><br><span class=\"line\">      &#123;  </span><br><span class=\"line\">         query:&#123;status:\"active\"&#125;,  </span><br><span class=\"line\">         out:\"post_total\" </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h3 id=\"游标\"><a href=\"#游标\" class=\"headerlink\" title=\"游标\"></a>游标</h3><p>针对这样的操作，result其实并没有获取到customers中的文档，而是申明一个“查询结构”,for或者next()一次性加载过来，然后让游标逐行读取，当我们枚举完了之后，游标销毁。<br>var result = db.customers.find().limit(2).skip(1)<br>var result = db.customers.find();<br>result.forEach(function(curr){<br>    print(curr.first_name);<br>});</p>\n<h3 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 性能分析函数</span><br><span class=\"line\">db.customers.find(&#123;age:7&#125;).explain();</span><br><span class=\"line\">-- hint 强制使用索引</span><br><span class=\"line\">db.customers.find(&#123;gender:&quot;M&quot;&#125;,&#123;user_name:1,_id:0&#125;).hint(&#123;gender:1,user_name:1&#125;)</span><br><span class=\"line\">db.customers.find(&#123;gender:&quot;M&quot;&#125;,&#123;user_name:1,_id:0&#125;).hint(&#123;gender:1,user_name:1&#125;).explain();</span><br><span class=\"line\"></span><br><span class=\"line\">-- 建立索引 (`ensureIndex` 将要被 `createIndex` 替代)</span><br><span class=\"line\">db.customers.ensureIndex(&#123;&quot;first_name&quot;:1&#125;)</span><br><span class=\"line\">db.customers.createIndex(&#123;&quot;first_name&quot;:1&#125;)</span><br><span class=\"line\">db.customers.createIndexes([&#123;&quot;first_name&quot;:1&#125;,&#123;&quot;age&quot;:-1&#125;])</span><br><span class=\"line\">-- 唯一索引</span><br><span class=\"line\">db.customers.ensureIndex(&#123;&quot;first_name&quot;:1&#125;,&#123;&quot;unique&quot;:true&#125;)</span><br><span class=\"line\">-- 联合索引</span><br><span class=\"line\">db.customers.ensureIndex(&#123;&quot;first_name&quot;:1,&quot;age&quot;:-1&#125;)</span><br><span class=\"line\">db.customers.createIndexes([&#123;&quot;first_name&quot;:1&#125;,&#123;&quot;age&quot;:-1&#125;])</span><br><span class=\"line\">-- 查看索引</span><br><span class=\"line\">db.customers.getIndexes();</span><br><span class=\"line\">--删除索引</span><br><span class=\"line\">db.customers.dropIndex(&quot;first_name_1&quot;) </span><br><span class=\"line\">db.customers.dropIndex(&#123;&quot;first_name&quot;:1&#125;)</span><br><span class=\"line\">db.customers.dropIndexes();</span><br></pre></td></tr></table></figure>\n<h3 id=\"Mongodb复制\"><a href=\"#Mongodb复制\" class=\"headerlink\" title=\"Mongodb复制\"></a>Mongodb复制</h3><p>mongod –help</p>\n<h4 id=\"主从读写分离（旧版本的，将用replica-副本集代替）\"><a href=\"#主从读写分离（旧版本的，将用replica-副本集代替）\" class=\"headerlink\" title=\"主从读写分离（旧版本的，将用replica 副本集代替）\"></a>主从读写分离（旧版本的，将用replica 副本集代替）</h4><p>通过主数据库的<code>OpLog</code>日志来复制,如果配置成功可看见<code>sync_pullOpLog</code><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 一主两从，主服务器不写默认端口 27017</span><br><span class=\"line\">mongod --dbpath=E:\\MongoDB\\datamaster --master</span><br><span class=\"line\">mongod --dbpath=E:\\MongoDB\\dataslave --port=27018 --slave --source=127.0.0.1:27017</span><br><span class=\"line\">mongod --dbpath=E:\\MongoDB\\dataslave1 --port=27019 --slave --source=127.0.0.1:27017</span><br><span class=\"line\">-- 测试同步</span><br><span class=\"line\">mongo 127.0.0.1:27017</span><br><span class=\"line\">db.users.insert(&#123;name:\"tom\",age:10&#125;)</span><br><span class=\"line\">db.users.insert(&#123;name:\"lucy\",age:13&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 在从服务器上查看</span><br><span class=\"line\">db.usrs.find();</span><br></pre></td></tr></table></figure></p>\n<p>主从配置好之后，从服务器默认是不可读取的，如果出现了 <code>error: { &quot;$err&quot; : &quot;not master and slaveok=false&quot;, &quot;code&quot; : 13435 }</code> 这个错误，需要在从服务器上执行<code>rs.slaveok()</code>,之后再从服务器上查询即可。</p>\n<h4 id=\"副本集-代替旧的主从-（-–replSet）\"><a href=\"#副本集-代替旧的主从-（-–replSet）\" class=\"headerlink\" title=\"副本集(代替旧的主从)（ –replSet）\"></a>副本集(代替旧的主从)（ –replSet）</h4><ol>\n<li>该集群没有特定的主数据库</li>\n<li>如果哪个主数据库宕机了，集群中就会推选出一个从属数据库作为主数据库顶上，这就具备了自动故障恢复功能<blockquote>\n<p>N 个节点的集群(至少3个)<br>任何节点可作为主节点<br>所有写入操作都在主节点上<br>自动故障转移<br>自动恢复</p>\n</blockquote>\n</li>\n</ol>\n<p><img src=\"/images/replica.jpg\" alt=\"replica\"></p>\n<p>我们使用同一个MongoDB来做MongoDB主从的实验， 操作步骤如下：<br>关闭正在运行的MongoDB服务器。<br><code>mongod --port 27017 --dbpath=E:\\MongoDB\\datamaster --replSet rs0</code><br>以上实例会启动一个名为rs0的MongoDB实例，其端口号为27017。<br>启动后打开命令提示框并连接上mongoDB服务。<br>在Mongo客户端使用命令<code>rs.initiate()</code>来启动一个新的副本集。<br>我们可以使用<code>rs.conf()</code>来查看副本集的配置<br>查看副本集状态使用 <code>rs.status()</code> 命令</p>\n<p>在不同机机子上，需要建立集群名称,具体可以参考如下：（示例在一个机子上，用端口区分）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --dbpath=E:\\MongoDB\\replsetmaster --port=27017  --replSet replset</span><br><span class=\"line\">mongod --dbpath=E:\\MongoDB\\replsetslave --port=27018 --replSet replset</span><br><span class=\"line\">mongod --dbpath=E:\\MongoDB\\replsetslave1 --port=27019  --replSet replset</span><br><span class=\"line\">-- 在任意一个`mongo` 初始化副本集，replset 为上面的副本集名称</span><br><span class=\"line\"></span><br><span class=\"line\">rs.initiate(&#123;</span><br><span class=\"line\">    _id:&quot;replset&quot;,</span><br><span class=\"line\">    members:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _id:0,</span><br><span class=\"line\">        host:&quot;127.0.0.1:27017&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _id:1,</span><br><span class=\"line\">        host:&quot;127.0.0.1:27018&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _id:2,</span><br><span class=\"line\">        host:&quot;127.0.0.1:27019&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">-- 测试同步</span><br><span class=\"line\">mongo 127.0.0.1:27017</span><br><span class=\"line\">db.users.insert(&#123;name:&quot;tom&quot;,age:10&#125;)</span><br><span class=\"line\">db.users.insert(&#123;name:&quot;lucy&quot;,age:13&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 在第二个服务器上查看</span><br><span class=\"line\">db.usrs.find();</span><br><span class=\"line\">-- 如果出现错误`not master and slaveok=false` ,默认是从主节点读写数据的，副本节点上不允许读，需要设置副本节点可以读,然后执行 `db.getMongo().setSlaveOk()` 或者`rs.slaveOk()`即可</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">-- rs.addArb() 使用这个追加一个仲裁服务器</span><br><span class=\"line\">mongod --dbpath=xxxx --port=27020 --replSet replset</span><br><span class=\"line\">rs.addArb(&quot;192.168.1.2:27020&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">-- rs.add 陆续增加更多的副本</span><br><span class=\"line\">rs.add(&quot;192.168.1.2:27021&quot;)</span><br></pre></td></tr></table></figure></p>\n<p>最后查看副本集状态使用 <code>rs.status()</code> 命令。判断当前运行的Mongo服务是否为主节点可以使用命令<code>db.isMaster()</code>,MongoDB的副本集与我们常见的主从有所不同，主从在主机宕机后所有服务将停止，而副本集在主机宕机后，副本会接管主节点成为主节点，不会出现宕机，无缝切换</p>\n<h3 id=\"分片技术（Shard）\"><a href=\"#分片技术（Shard）\" class=\"headerlink\" title=\"分片技术（Shard）\"></a>分片技术（Shard）</h3><p>在Mongodb里面存在另一种集群(cluster)，就是分片技术,可以满足MongoDB数据量大量增长的需求。</p>\n<blockquote>\n<p>复制所有的写入操作到主节点<br>延迟的敏感数据会在主节点查询<br>单个副本集限制在12个节点<br>当请求量巨大时会出现内存不足。<br>本地磁盘不足<br>垂直扩展价格昂贵</p>\n</blockquote>\n<p><img src=\"/images/mongo-cluster.jpg\" alt=\"MongoDB Cluster\"></p>\n<blockquote>\n<ul>\n<li>Shard:用于存储实际的数据块，实际生产环境中一个shard server角色可由几台机器组个一个replica set承担，防止主机单点故障</li>\n<li>Config Server:mongod实例，存储了整个 ClusterMetadata，其中包括 chunk信息。</li>\n<li>Query Routers: 前端路由，客户端由此接入，且让整个集群看上去像单一数据库，前端应用可以透明使用。</li>\n</ul>\n</blockquote>\n<p>模拟在单机上启用不同的端口，分片<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 服务器分布</span><br><span class=\"line\">Shard Server 1：27020</span><br><span class=\"line\">Shard Server 2：27021</span><br><span class=\"line\">Shard Server 3：27022</span><br><span class=\"line\">Shard Server 4：27023</span><br><span class=\"line\">Config Server ：27100</span><br><span class=\"line\">Route Process：40000</span><br><span class=\"line\"></span><br><span class=\"line\">-- 1. 启动Shard Server</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/s0</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/s1</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/s2</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/s3</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/log</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/local/mongoDB/bin/mongod --port 27020 --dbpath=E:/MongoDB/shard/s0 --logpath=E:/MongoDB/shard/log/s0.log --logappend</span><br><span class=\"line\">/usr/local/mongoDB/bin/mongod --port 27021 --dbpath=E:/MongoDB/shard/s1 --logpath=E:/MongoDB/shard/log/s1.log --logappend</span><br><span class=\"line\">/usr/local/mongoDB/bin/mongod --port 27022 --dbpath=E:/MongoDB/shard/s2 --logpath=E:/MongoDB/shard/log/s2.log --logappend</span><br><span class=\"line\">/usr/local/mongoDB/bin/mongod --port 27023 --dbpath=E:/MongoDB/shard/s3 --logpath=E:/MongoDB/shard/log/s3.log --logappend</span><br><span class=\"line\"></span><br><span class=\"line\">-- 2. 启动Config Server,这里只有一台config server 如果不是一台，添加 `--configsvr` 参数</span><br><span class=\"line\">mkdir -p /www/mongoDB/shard/config</span><br><span class=\"line\">/usr/local/mongoDB/bin/mongod --port 27100 --configsvr --dbpath=E:/MongoDB/shard/config --logpath=E:/MongoDB/shard/log/config.log --logappend</span><br><span class=\"line\"></span><br><span class=\"line\">-- 3. 启动Route Process，mongos启动参数中，chunkSize这一项是用来指定chunk的大小的，单位是MB，默认大小为200MB.</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/local/mongoDB/bin/mongos --port 40000 --configdb localhost:27100 --logpath=E:/MongoDB/shard/log/route.log --chunkSize 200</span><br><span class=\"line\"></span><br><span class=\"line\">-- 4. 配置Sharding,使用MongoDB Shell登录到mongos，添加Shard节点,然后按照普通的mongo数据库那样，将数据库连接接入接口40000</span><br><span class=\"line\">/usr/local/mongoDB/bin/mongo admin --port 40000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.runCommand(&#123; addshard:&quot;localhost:27020&quot; &#125;)</span><br><span class=\"line\">db.runCommand(&#123; addshard:&quot;localhost:27021&quot; &#125;)</span><br><span class=\"line\">db.runCommand(&#123; addshard:&quot;localhost:27022&quot; &#125;)</span><br><span class=\"line\">db.runCommand(&#123; addshard:&quot;localhost:27023&quot; &#125;)</span><br><span class=\"line\">db.runCommand(&#123; enablesharding:&quot;test&quot; &#125;)</span><br><span class=\"line\">db.runCommand(&#123; shardcollection: &quot;users&quot;, key: &#123; id:1,time:1&#125;&#125;)</span><br><span class=\"line\">-- 或者下面写写法是一样的</span><br><span class=\"line\">sh.addShard(&quot;localhost:27020&quot;);</span><br><span class=\"line\">sh.addShard(&quot;localhost:27021&quot;);</span><br><span class=\"line\">sh.addShard(&quot;localhost:27022&quot;);</span><br><span class=\"line\">sh.addShard(&quot;localhost:27023&quot;);</span><br><span class=\"line\">sh.enableSharding(&quot;test&quot;);</span><br><span class=\"line\">-- sh.shardCollection(&quot;&lt;database&gt;.&lt;collection&gt;&quot;, shard-key-pattern) 按照collection的key来分片</span><br><span class=\"line\">sh.shardCollection(&quot;test.users&quot;,&#123;&quot;name&quot;:1,&quot;_id&quot;:1&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 5. 插入数据,测试分片</span><br><span class=\"line\">    use test</span><br><span class=\"line\"></span><br><span class=\"line\">    for(var i=0;i&lt;=100000;i++) &#123;</span><br><span class=\"line\">        db.users.insert(&#123;name:&quot;lucy&quot;+i,age:i&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 6. 查看分片信息</span><br><span class=\"line\">sh.status()</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"安全管理\"><a href=\"#安全管理\" class=\"headerlink\" title=\"安全管理\"></a>安全管理</h3><ol>\n<li>以安全认证模式启动<br>mongod –auth –dbpath /usr/mongo/data -f /var/mongo.log<br>使用–auth选项启动mongod进程即可启用认证模式。<br>或者，也可以修改<code>/etc/mongodb.conf</code>，设置<code>auth=true</code>，重启mongod进程。</li>\n<li>添加用户</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 创建用户</span><br><span class=\"line\">db.createUser(&#123;  </span><br><span class=\"line\">    &quot;user&quot;: &quot;chrisaiv&quot;,</span><br><span class=\"line\">    &quot;pwd&quot;: &quot;password&quot;,</span><br><span class=\"line\">    &quot;roles&quot;: [</span><br><span class=\"line\">        &#123; role: &quot;clusterAdmin&quot;, db: &quot;admin&quot; &#125;,</span><br><span class=\"line\">        &#123; role: &quot;readAnyDatabase&quot;, db: &quot;admin&quot; &#125;,</span><br><span class=\"line\">        &quot;readWrite&quot;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123; w: &quot;majority&quot;, wtimeout: 5000 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">测试数据库安全认证: `db.auth(&quot;admin&quot;, &quot;123456&quot;)`</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>为数据库写数据（同步到磁盘）加锁<br><code>db.runCommand({fsync:1,lock:1})</code><br>说明：该操作已经对数据库上锁，不允许执行写数据操作，一般在执行数据库备份时有用。</p>\n</li>\n<li><p>查看当前锁状态<br><code>db.currentOp()</code></p>\n</li>\n<li><p>解锁<br><code>use local\ndb.$cmd.sys.unlock.findOne()</code><br>说明：<br>执行解锁，结果如下所示：<br><code>db.currentOp()</code></p>\n</li>\n</ol>\n<h3 id=\"数据备份、恢复与迁移管理\"><a href=\"#数据备份、恢复与迁移管理\" class=\"headerlink\" title=\"数据备份、恢复与迁移管理\"></a>数据备份、恢复与迁移管理</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">mongodump -h dbhost -d dbname -c collection -o dbdirectory</span><br><span class=\"line\">mongorestore -h dbhost -d dbname -c collection --directoryperdb dbdirectory</span><br><span class=\"line\"></span><br><span class=\"line\">-- 备份全部数据库</span><br><span class=\"line\">mkdir testbak</span><br><span class=\"line\">mongodump </span><br><span class=\"line\">-- 备份指定数据库</span><br><span class=\"line\">mongodump -d pagedb</span><br><span class=\"line\">-- 备份一个数据库中的某个集合</span><br><span class=\"line\">mongodump -d pagedb -c page</span><br><span class=\"line\">-- 恢复全部数据库</span><br><span class=\"line\">cd testbak</span><br><span class=\"line\">mongorestore --drop</span><br><span class=\"line\">-- 恢复某个数据库的数据</span><br><span class=\"line\">cd testbak</span><br><span class=\"line\">mongorestore -d pagedb --drop</span><br><span class=\"line\"></span><br><span class=\"line\">-- 恢复某个数据库的某个集合的数据</span><br><span class=\"line\">mongorestore -d pagedb -c page --drop</span><br><span class=\"line\">-- 向MongoDB导入数据</span><br><span class=\"line\">mongoimport -d pagedb -c page --type csv --headerline --drop &lt; csvORtsvFile.csv</span><br><span class=\"line\">-- 将文件csvORtsvFile.csv的数据导入到pagedb数据库的page集合中，使用cvs或tsv文件的列名作为集合的列名。</span><br><span class=\"line\">-- 需要注意的是，使用`--headerline`选项时，只支持csv和tsv文件。</span><br><span class=\"line\">-- type支持的类型有三个：csv、tsv、json</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### MongoDB 监控</span><br><span class=\"line\">```sql</span><br><span class=\"line\">mongostat </span><br><span class=\"line\">mongotop</span><br><span class=\"line\">mongotop 10   -- 等待时间</span><br><span class=\"line\">mongotop --locks  -- 报告每个数据库的锁的使用</span><br></pre></td></tr></table></figure>\n<h3 id=\"MongoDB-自动增长\"><a href=\"#MongoDB-自动增长\" class=\"headerlink\" title=\"MongoDB 自动增长\"></a>MongoDB 自动增长</h3><p>MongoDB 没有像 SQL 一样有自动增长的功能， MongoDB 的 _id 是系统自动生成的12字节唯一标识。<code>db.createCollection(&quot;counters&quot;)</code>,通过<code>db.counters.insert({_id:&quot;productid&quot;,sequence_value:0})</code> 来实现</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNextSequenceValue</span>(<span class=\"params\">sequenceName</span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> sequenceDocument = db.counters.findAndModify(</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">         query:&#123;_id: sequenceName &#125;,</span><br><span class=\"line\">         update: &#123;$inc:&#123;sequence_value:<span class=\"number\">1</span>&#125;&#125;,</span><br><span class=\"line\">         <span class=\"keyword\">new</span>:<span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> sequenceDocument.sequence_value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> db.products.insert(&#123;</span><br><span class=\"line\">    \"_id\":getNextSequenceValue(\"productid\"),</span><br><span class=\"line\">    \"product_name\":\"Apple iPhone\",</span><br><span class=\"line\">    \"category\":\"mobiles\"</span><br><span class=\"line\"> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"> db.products.insert(&#123;</span><br><span class=\"line\">\"_id\":getNextSequenceValue(\"productid\"),</span><br><span class=\"line\">\"product_name\":\"Samsung S3\",</span><br><span class=\"line\">\"category\":\"mobiles\"&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">db.products.find()</span><br></pre></td></tr></table></figure>\n<h3 id=\"关于ObjectId\"><a href=\"#关于ObjectId\" class=\"headerlink\" title=\"关于ObjectId\"></a>关于ObjectId</h3><blockquote>\n<p>前4个字节表示时间戳<br>接下来的3个字节是机器标识码<br>紧接的两个字节由进程id组成（PID）<br>最后三个字节是随机数。<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">newObjectId = ObjectId()</span><br><span class=\"line\">myObjectId = ObjectId(\"5349b4ddd2781d08c09890f4\")</span><br><span class=\"line\">ObjectId(\"5349b4ddd2781d08c09890f4\").getTimestamp()</span><br><span class=\"line\"></span><br><span class=\"line\">new ObjectId().str</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"GridFS\"><a href=\"#GridFS\" class=\"headerlink\" title=\"GridFS\"></a>GridFS</h3><p>GridFS 用于存储和恢复那些超过16M（BSON文件限制）的文件(如：图片、音频、视频等)。<br>GridFS 也是文件存储的一种方式，但是它是存储在MonoDB的集合中。<br>GridFS 可以更好的存储大于16M的文件。<br>GridFS 会将大文件对象分割成多个小的chunk(文件片段),一般为256k/个,每个chunk将作为MongoDB的一个文档(document)被存储在chunks集合中。<br>GridFS 用两个集合来存储一个文件：<code>fs.files</code>与<code>fs.chunks</code>。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> --fs.files</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   \"filename\": \"test.txt\",</span><br><span class=\"line\">   \"chunkSize\": NumberInt(261120),</span><br><span class=\"line\">   \"uploadDate\": ISODate(\"2014-04-13T11:32:33.557Z\"),</span><br><span class=\"line\">   \"md5\": \"7b762939321e146569b07f72c62cca4f\",</span><br><span class=\"line\">   \"length\": NumberInt(646)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-- fs.chunks</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   \"files_id\": ObjectId(\"534a75d19f54bfec8a2fe44b\"),</span><br><span class=\"line\">   \"n\": NumberInt(0),</span><br><span class=\"line\">   \"data\": \"Mongo Binary Data\"</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 添加文件</span><br><span class=\"line\">mongofiles.exe -d gridfs put song.mp3</span><br><span class=\"line\">db.fs.files.find()</span><br><span class=\"line\"></span><br><span class=\"line\">--_id 获取区块(chunk)</span><br><span class=\"line\">db.fs.chunks.find(&#123;files_id:ObjectId('534a811bf8b4aa4d33fdf94d')&#125;)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><a href=\"https://docs.mongodb.com/v3.2/tutorial/access-mongo-shell-help/\">参考</a></li>\n</ul>"},{"title":"beyond feeling 读书笔记","date":"2016-07-30T04:58:54.000Z","updated":"2016-07-30T04:58:54.000Z","_content":"> 我们的很多思考与想法都源于自己大脑底层的思想来源，对于我们社会人受到家庭，学校，大众媒体各种各样的影响，对一个事物的认识早已经不是我们自己思考的结果，可能早已经被“操纵”了。如果成长为一个独立的个体，超越情感，保持个性。就这这本出提供给我们的一些方法论。\n\n<!--more-->\n# 你是谁\n\n## 时间和地点的影响\n## 大众文化的影响\n## 操纵的学问\n\n美国心理学家约翰沃森（John Watson）行为主义之父的称号，发现对消费者吸引不在思维`而在情感。`这种行为操纵被用于广告商、甚至是政界。\n我们已有的观念逻辑，也就早已经被植入到自己的“磁带中”，当我们听到这个观点时候就自动“回放”，我们早没有独立思考的能力，已经被植入很多概念。我们视为最珍贵的、并以最大热情捍卫的许多信仰，也许就是这种方式根植于我们的大脑中了。\n## 心理学的影响\n\n## 成为个体\n我们如何看待个性？后天获得的。我们不可能逃脱他人和环境的影响。个性的的本质就是警惕。下面的指导原则将帮助你达到这一点：\n1. ** 把你对任何人、议题、或情势的第一反应看作是尝试性的。** 无论他多么吸引人，在你未考察它之前，都不要接受他。\n2. ** 判断你为什么有这种反应。** 考虑你是不是借鉴其他人－－朋友、父母或者名人、电视中虚构的角色。如果可能，确定是什么特定的经验让你做出这样的选择。\n3. ** 考虑你有可能对这个人、议题或情势做出其他反应的可能。 **\n4. ** 询问你自己是否还有其他比你的第一反应更恰当的反应 ** 你在回答时，排除你的制约条件的影响。\n\n## 应用练习\n用笔记住你的观察、思考和想法。在反思你记录的想法，考虑所观察到的东西的意义和应用，回答所提出的问题，仔细阐述这些想法，记录你的洞见。\n# 什么是批判性思考？\n我感觉，和我认为是两种不同的概念。 感觉是包括情感、情绪和欲望的主观反应。思考是用用来解决问题，做出决定取得理解而进行的有意识的精神过程。思考有两大类一种是创造性的，一种是批判性的。批判的本质就是评价。批判性思考界定为用以检验各种主张和论据，并判定那些具有有点那些就有缺点的过程。其实就是一种`寻找答案的过程，是一种探究。`\n## 直觉的作用\n直觉往往是`不运用理性推理`,而对某事的感觉或者理解。\n## 批判性思考的基本活动\n> 1. 调查。发现证据－－回答有关该议题的关键问题的材料。要求证据必须是相关和充分的。\n> 2. 解释。 判定证据的意思是什么。要求这种解释必须比其他竞争的解释更合理。\n> 3. 判断。 就此议题得出结论。   要求这个结论必须通过逻辑检验。\n\n从调查、解释、判断是这个过来的，而不负责任的思考者则是完全相反，先认定自己的结论，然后找出证据来证明他们选择的正确性。关键在于不是让预感和假设操纵我们的思考，并预先规定了我们的结论。\n\n## 批判性的思考与写作\n写作的广泛目标是发现思想或者交流思想。当写作开发思想的时候，集中与你正在考察的问题并记录下你所有的想法、疑问和断言。直接面对你的心智劳动，但对意识边缘的想法保持敏感。\n## 批判性的思考与讨论\n讨论是加深并促进问题的解决和决策。花一定的时候去找一个你已经了解的知识，然后去扩展你自己的知识。从网上找到所有的观点信息，在表达中有可能表达的不同观点，并考虑每一个观点的相对优点。这时让要对你的结论保持相当的试探性，以便其他人将提出的事实和解释保持开放的心态。\n1. 设置合理的预期\n2. 抛弃自我中心和个人议程\n3. 起作用但是不主导一切\n4. 避免分散注意力的讲话习惯\n5. 积极的倾听\n6. 负责人的批判\n7. 抵制喊叫或打断的冲动\n\n## 避免抄袭\n记录出处，作者版号等。或者用自己的话语复述作者的观点。\n\n# 真理是什么？\n\n​:happy:​🐴\n> 未完待续－－－\n","source":"_posts/2016/beyond-feeling.md","raw":"---\ntitle: beyond feeling 读书笔记\ndate: 2016-07-30 12:58:54\nupdated: 2016-07-30 12:58:54\ntags: \n- 逻辑 \n- 阅读\ncategories:\n---\n> 我们的很多思考与想法都源于自己大脑底层的思想来源，对于我们社会人受到家庭，学校，大众媒体各种各样的影响，对一个事物的认识早已经不是我们自己思考的结果，可能早已经被“操纵”了。如果成长为一个独立的个体，超越情感，保持个性。就这这本出提供给我们的一些方法论。\n\n<!--more-->\n# 你是谁\n\n## 时间和地点的影响\n## 大众文化的影响\n## 操纵的学问\n\n美国心理学家约翰沃森（John Watson）行为主义之父的称号，发现对消费者吸引不在思维`而在情感。`这种行为操纵被用于广告商、甚至是政界。\n我们已有的观念逻辑，也就早已经被植入到自己的“磁带中”，当我们听到这个观点时候就自动“回放”，我们早没有独立思考的能力，已经被植入很多概念。我们视为最珍贵的、并以最大热情捍卫的许多信仰，也许就是这种方式根植于我们的大脑中了。\n## 心理学的影响\n\n## 成为个体\n我们如何看待个性？后天获得的。我们不可能逃脱他人和环境的影响。个性的的本质就是警惕。下面的指导原则将帮助你达到这一点：\n1. ** 把你对任何人、议题、或情势的第一反应看作是尝试性的。** 无论他多么吸引人，在你未考察它之前，都不要接受他。\n2. ** 判断你为什么有这种反应。** 考虑你是不是借鉴其他人－－朋友、父母或者名人、电视中虚构的角色。如果可能，确定是什么特定的经验让你做出这样的选择。\n3. ** 考虑你有可能对这个人、议题或情势做出其他反应的可能。 **\n4. ** 询问你自己是否还有其他比你的第一反应更恰当的反应 ** 你在回答时，排除你的制约条件的影响。\n\n## 应用练习\n用笔记住你的观察、思考和想法。在反思你记录的想法，考虑所观察到的东西的意义和应用，回答所提出的问题，仔细阐述这些想法，记录你的洞见。\n# 什么是批判性思考？\n我感觉，和我认为是两种不同的概念。 感觉是包括情感、情绪和欲望的主观反应。思考是用用来解决问题，做出决定取得理解而进行的有意识的精神过程。思考有两大类一种是创造性的，一种是批判性的。批判的本质就是评价。批判性思考界定为用以检验各种主张和论据，并判定那些具有有点那些就有缺点的过程。其实就是一种`寻找答案的过程，是一种探究。`\n## 直觉的作用\n直觉往往是`不运用理性推理`,而对某事的感觉或者理解。\n## 批判性思考的基本活动\n> 1. 调查。发现证据－－回答有关该议题的关键问题的材料。要求证据必须是相关和充分的。\n> 2. 解释。 判定证据的意思是什么。要求这种解释必须比其他竞争的解释更合理。\n> 3. 判断。 就此议题得出结论。   要求这个结论必须通过逻辑检验。\n\n从调查、解释、判断是这个过来的，而不负责任的思考者则是完全相反，先认定自己的结论，然后找出证据来证明他们选择的正确性。关键在于不是让预感和假设操纵我们的思考，并预先规定了我们的结论。\n\n## 批判性的思考与写作\n写作的广泛目标是发现思想或者交流思想。当写作开发思想的时候，集中与你正在考察的问题并记录下你所有的想法、疑问和断言。直接面对你的心智劳动，但对意识边缘的想法保持敏感。\n## 批判性的思考与讨论\n讨论是加深并促进问题的解决和决策。花一定的时候去找一个你已经了解的知识，然后去扩展你自己的知识。从网上找到所有的观点信息，在表达中有可能表达的不同观点，并考虑每一个观点的相对优点。这时让要对你的结论保持相当的试探性，以便其他人将提出的事实和解释保持开放的心态。\n1. 设置合理的预期\n2. 抛弃自我中心和个人议程\n3. 起作用但是不主导一切\n4. 避免分散注意力的讲话习惯\n5. 积极的倾听\n6. 负责人的批判\n7. 抵制喊叫或打断的冲动\n\n## 避免抄袭\n记录出处，作者版号等。或者用自己的话语复述作者的观点。\n\n# 真理是什么？\n\n​:happy:​🐴\n> 未完待续－－－\n","slug":"beyond-feeling","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9m001bwsnnhv954m0j","content":"<blockquote>\n<p>我们的很多思考与想法都源于自己大脑底层的思想来源，对于我们社会人受到家庭，学校，大众媒体各种各样的影响，对一个事物的认识早已经不是我们自己思考的结果，可能早已经被“操纵”了。如果成长为一个独立的个体，超越情感，保持个性。就这这本出提供给我们的一些方法论。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"你是谁\"><a href=\"#你是谁\" class=\"headerlink\" title=\"你是谁\"></a>你是谁</h1><h2 id=\"时间和地点的影响\"><a href=\"#时间和地点的影响\" class=\"headerlink\" title=\"时间和地点的影响\"></a>时间和地点的影响</h2><h2 id=\"大众文化的影响\"><a href=\"#大众文化的影响\" class=\"headerlink\" title=\"大众文化的影响\"></a>大众文化的影响</h2><h2 id=\"操纵的学问\"><a href=\"#操纵的学问\" class=\"headerlink\" title=\"操纵的学问\"></a>操纵的学问</h2><p>美国心理学家约翰沃森（John Watson）行为主义之父的称号，发现对消费者吸引不在思维<code>而在情感。</code>这种行为操纵被用于广告商、甚至是政界。<br>我们已有的观念逻辑，也就早已经被植入到自己的“磁带中”，当我们听到这个观点时候就自动“回放”，我们早没有独立思考的能力，已经被植入很多概念。我们视为最珍贵的、并以最大热情捍卫的许多信仰，也许就是这种方式根植于我们的大脑中了。</p>\n<h2 id=\"心理学的影响\"><a href=\"#心理学的影响\" class=\"headerlink\" title=\"心理学的影响\"></a>心理学的影响</h2><h2 id=\"成为个体\"><a href=\"#成为个体\" class=\"headerlink\" title=\"成为个体\"></a>成为个体</h2><p>我们如何看待个性？后天获得的。我们不可能逃脱他人和环境的影响。个性的的本质就是警惕。下面的指导原则将帮助你达到这一点：</p>\n<ol>\n<li><strong> 把你对任何人、议题、或情势的第一反应看作是尝试性的。</strong> 无论他多么吸引人，在你未考察它之前，都不要接受他。</li>\n<li><strong> 判断你为什么有这种反应。</strong> 考虑你是不是借鉴其他人－－朋友、父母或者名人、电视中虚构的角色。如果可能，确定是什么特定的经验让你做出这样的选择。</li>\n<li><strong> 考虑你有可能对这个人、议题或情势做出其他反应的可能。 </strong></li>\n<li><strong> 询问你自己是否还有其他比你的第一反应更恰当的反应 </strong> 你在回答时，排除你的制约条件的影响。</li>\n</ol>\n<h2 id=\"应用练习\"><a href=\"#应用练习\" class=\"headerlink\" title=\"应用练习\"></a>应用练习</h2><p>用笔记住你的观察、思考和想法。在反思你记录的想法，考虑所观察到的东西的意义和应用，回答所提出的问题，仔细阐述这些想法，记录你的洞见。</p>\n<h1 id=\"什么是批判性思考？\"><a href=\"#什么是批判性思考？\" class=\"headerlink\" title=\"什么是批判性思考？\"></a>什么是批判性思考？</h1><p>我感觉，和我认为是两种不同的概念。 感觉是包括情感、情绪和欲望的主观反应。思考是用用来解决问题，做出决定取得理解而进行的有意识的精神过程。思考有两大类一种是创造性的，一种是批判性的。批判的本质就是评价。批判性思考界定为用以检验各种主张和论据，并判定那些具有有点那些就有缺点的过程。其实就是一种<code>寻找答案的过程，是一种探究。</code></p>\n<h2 id=\"直觉的作用\"><a href=\"#直觉的作用\" class=\"headerlink\" title=\"直觉的作用\"></a>直觉的作用</h2><p>直觉往往是<code>不运用理性推理</code>,而对某事的感觉或者理解。</p>\n<h2 id=\"批判性思考的基本活动\"><a href=\"#批判性思考的基本活动\" class=\"headerlink\" title=\"批判性思考的基本活动\"></a>批判性思考的基本活动</h2><blockquote>\n<ol>\n<li>调查。发现证据－－回答有关该议题的关键问题的材料。要求证据必须是相关和充分的。</li>\n<li>解释。 判定证据的意思是什么。要求这种解释必须比其他竞争的解释更合理。</li>\n<li>判断。 就此议题得出结论。   要求这个结论必须通过逻辑检验。</li>\n</ol>\n</blockquote>\n<p>从调查、解释、判断是这个过来的，而不负责任的思考者则是完全相反，先认定自己的结论，然后找出证据来证明他们选择的正确性。关键在于不是让预感和假设操纵我们的思考，并预先规定了我们的结论。</p>\n<h2 id=\"批判性的思考与写作\"><a href=\"#批判性的思考与写作\" class=\"headerlink\" title=\"批判性的思考与写作\"></a>批判性的思考与写作</h2><p>写作的广泛目标是发现思想或者交流思想。当写作开发思想的时候，集中与你正在考察的问题并记录下你所有的想法、疑问和断言。直接面对你的心智劳动，但对意识边缘的想法保持敏感。</p>\n<h2 id=\"批判性的思考与讨论\"><a href=\"#批判性的思考与讨论\" class=\"headerlink\" title=\"批判性的思考与讨论\"></a>批判性的思考与讨论</h2><p>讨论是加深并促进问题的解决和决策。花一定的时候去找一个你已经了解的知识，然后去扩展你自己的知识。从网上找到所有的观点信息，在表达中有可能表达的不同观点，并考虑每一个观点的相对优点。这时让要对你的结论保持相当的试探性，以便其他人将提出的事实和解释保持开放的心态。</p>\n<ol>\n<li>设置合理的预期</li>\n<li>抛弃自我中心和个人议程</li>\n<li>起作用但是不主导一切</li>\n<li>避免分散注意力的讲话习惯</li>\n<li>积极的倾听</li>\n<li>负责人的批判</li>\n<li>抵制喊叫或打断的冲动</li>\n</ol>\n<h2 id=\"避免抄袭\"><a href=\"#避免抄袭\" class=\"headerlink\" title=\"避免抄袭\"></a>避免抄袭</h2><p>记录出处，作者版号等。或者用自己的话语复述作者的观点。</p>\n<h1 id=\"真理是什么？\"><a href=\"#真理是什么？\" class=\"headerlink\" title=\"真理是什么？\"></a>真理是什么？</h1><p>​:happy:​🐴</p>\n<blockquote>\n<p>未完待续－－－</p>\n</blockquote>\n","excerpt":"<blockquote>\n<p>我们的很多思考与想法都源于自己大脑底层的思想来源，对于我们社会人受到家庭，学校，大众媒体各种各样的影响，对一个事物的认识早已经不是我们自己思考的结果，可能早已经被“操纵”了。如果成长为一个独立的个体，超越情感，保持个性。就这这本出提供给我们的一些方法论。</p>\n</blockquote>","more":"<h1 id=\"你是谁\"><a href=\"#你是谁\" class=\"headerlink\" title=\"你是谁\"></a>你是谁</h1><h2 id=\"时间和地点的影响\"><a href=\"#时间和地点的影响\" class=\"headerlink\" title=\"时间和地点的影响\"></a>时间和地点的影响</h2><h2 id=\"大众文化的影响\"><a href=\"#大众文化的影响\" class=\"headerlink\" title=\"大众文化的影响\"></a>大众文化的影响</h2><h2 id=\"操纵的学问\"><a href=\"#操纵的学问\" class=\"headerlink\" title=\"操纵的学问\"></a>操纵的学问</h2><p>美国心理学家约翰沃森（John Watson）行为主义之父的称号，发现对消费者吸引不在思维<code>而在情感。</code>这种行为操纵被用于广告商、甚至是政界。<br>我们已有的观念逻辑，也就早已经被植入到自己的“磁带中”，当我们听到这个观点时候就自动“回放”，我们早没有独立思考的能力，已经被植入很多概念。我们视为最珍贵的、并以最大热情捍卫的许多信仰，也许就是这种方式根植于我们的大脑中了。</p>\n<h2 id=\"心理学的影响\"><a href=\"#心理学的影响\" class=\"headerlink\" title=\"心理学的影响\"></a>心理学的影响</h2><h2 id=\"成为个体\"><a href=\"#成为个体\" class=\"headerlink\" title=\"成为个体\"></a>成为个体</h2><p>我们如何看待个性？后天获得的。我们不可能逃脱他人和环境的影响。个性的的本质就是警惕。下面的指导原则将帮助你达到这一点：</p>\n<ol>\n<li><strong> 把你对任何人、议题、或情势的第一反应看作是尝试性的。</strong> 无论他多么吸引人，在你未考察它之前，都不要接受他。</li>\n<li><strong> 判断你为什么有这种反应。</strong> 考虑你是不是借鉴其他人－－朋友、父母或者名人、电视中虚构的角色。如果可能，确定是什么特定的经验让你做出这样的选择。</li>\n<li><strong> 考虑你有可能对这个人、议题或情势做出其他反应的可能。 </strong></li>\n<li><strong> 询问你自己是否还有其他比你的第一反应更恰当的反应 </strong> 你在回答时，排除你的制约条件的影响。</li>\n</ol>\n<h2 id=\"应用练习\"><a href=\"#应用练习\" class=\"headerlink\" title=\"应用练习\"></a>应用练习</h2><p>用笔记住你的观察、思考和想法。在反思你记录的想法，考虑所观察到的东西的意义和应用，回答所提出的问题，仔细阐述这些想法，记录你的洞见。</p>\n<h1 id=\"什么是批判性思考？\"><a href=\"#什么是批判性思考？\" class=\"headerlink\" title=\"什么是批判性思考？\"></a>什么是批判性思考？</h1><p>我感觉，和我认为是两种不同的概念。 感觉是包括情感、情绪和欲望的主观反应。思考是用用来解决问题，做出决定取得理解而进行的有意识的精神过程。思考有两大类一种是创造性的，一种是批判性的。批判的本质就是评价。批判性思考界定为用以检验各种主张和论据，并判定那些具有有点那些就有缺点的过程。其实就是一种<code>寻找答案的过程，是一种探究。</code></p>\n<h2 id=\"直觉的作用\"><a href=\"#直觉的作用\" class=\"headerlink\" title=\"直觉的作用\"></a>直觉的作用</h2><p>直觉往往是<code>不运用理性推理</code>,而对某事的感觉或者理解。</p>\n<h2 id=\"批判性思考的基本活动\"><a href=\"#批判性思考的基本活动\" class=\"headerlink\" title=\"批判性思考的基本活动\"></a>批判性思考的基本活动</h2><blockquote>\n<ol>\n<li>调查。发现证据－－回答有关该议题的关键问题的材料。要求证据必须是相关和充分的。</li>\n<li>解释。 判定证据的意思是什么。要求这种解释必须比其他竞争的解释更合理。</li>\n<li>判断。 就此议题得出结论。   要求这个结论必须通过逻辑检验。</li>\n</ol>\n</blockquote>\n<p>从调查、解释、判断是这个过来的，而不负责任的思考者则是完全相反，先认定自己的结论，然后找出证据来证明他们选择的正确性。关键在于不是让预感和假设操纵我们的思考，并预先规定了我们的结论。</p>\n<h2 id=\"批判性的思考与写作\"><a href=\"#批判性的思考与写作\" class=\"headerlink\" title=\"批判性的思考与写作\"></a>批判性的思考与写作</h2><p>写作的广泛目标是发现思想或者交流思想。当写作开发思想的时候，集中与你正在考察的问题并记录下你所有的想法、疑问和断言。直接面对你的心智劳动，但对意识边缘的想法保持敏感。</p>\n<h2 id=\"批判性的思考与讨论\"><a href=\"#批判性的思考与讨论\" class=\"headerlink\" title=\"批判性的思考与讨论\"></a>批判性的思考与讨论</h2><p>讨论是加深并促进问题的解决和决策。花一定的时候去找一个你已经了解的知识，然后去扩展你自己的知识。从网上找到所有的观点信息，在表达中有可能表达的不同观点，并考虑每一个观点的相对优点。这时让要对你的结论保持相当的试探性，以便其他人将提出的事实和解释保持开放的心态。</p>\n<ol>\n<li>设置合理的预期</li>\n<li>抛弃自我中心和个人议程</li>\n<li>起作用但是不主导一切</li>\n<li>避免分散注意力的讲话习惯</li>\n<li>积极的倾听</li>\n<li>负责人的批判</li>\n<li>抵制喊叫或打断的冲动</li>\n</ol>\n<h2 id=\"避免抄袭\"><a href=\"#避免抄袭\" class=\"headerlink\" title=\"避免抄袭\"></a>避免抄袭</h2><p>记录出处，作者版号等。或者用自己的话语复述作者的观点。</p>\n<h1 id=\"真理是什么？\"><a href=\"#真理是什么？\" class=\"headerlink\" title=\"真理是什么？\"></a>真理是什么？</h1><p>​:happy:​🐴</p>\n<blockquote>\n<p>未完待续－－－</p>\n</blockquote>"},{"title":"《智能时代》","date":"2016-10-16T03:45:39.000Z","updated":"2016-10-16T03:45:39.000Z","_content":"大数据是一场以数据为基础的，改造各种行业的一场革命。真正意义上的大数据要符合三种特征，大量的，多维度的（相关的数据模型），完备性。当同事满足这三种状态，通过各种设备终端大量采集的数据，构建机器学习的模型，在某个特定的领域可以实现更智能，比如翻译，adwords广告，自动驾驶（自动驾驶其实是在采集过的道路上行驶时没有问题的，但是在没有采集的路段是无法行驶的）等。\n<!--more-->\n\n### 机器学习\n已google搜索为例子：\n- 第一：根据网页确定哪些用户在谷歌未过的复杂问题，可以回答那些回答不了，我们大约涨到了70%到80%的问题，在谷歌第一页都能找到正确答案。\n- 第二，把位体和网页中的每一句话做一匹配，消除那些可能是男的片段，至于怎么调就是机器学习的东西了。\n- 第三，就是利用自然语言处理技术，把答案的片段合成一个完整的段落。\n在智能机器，它背后是数据中心强大的服务器集群，从数据中学习信息和知识，这次技术革命的特点是机器的智能化，我们称之为智能革命。因为有了大量的数据，机器智能就从量变到质变到学习变成了可能。\n\n### 思维的革命\n在无法确定因果时，数据为我们提供了解决问题的新方法，数据中所包含的信息可以帮助我们消除不确定性而数据之间的相关联，**而数据之间的相关联性在某种程度上可以取代原来的因果关系**，帮助我们得到我们想知道的答案，这边是大数据思维的核心。\n\n---\n\n所谓的**机械思维**就是，从确定中推导一切，有一定的因果关系。正因为过去两百年之间的，牛顿、爱斯坦推等科学家了世界，时间，空间，地球运动等都是有规律的，所以人们的思维固定在，所有的事物都会有规律的，有因果关系上。牛顿通过自己伟大的成就，宣告科技科学时代的来临，作为思想家，他让人类相信，世界万物的运动规律是可以被认识的，他告诉认为世界万物是运动的，而且这些运动规律，有着确定性的规律，这些规律又是可以被认识的。\n\n>牛顿的方法论可以概括为机械思维，其核心思想可概括为以下三个方面:\n- 因世界变化的规律是确定的。\n- 因为有确定性做保障，因此规律不仅可以被认识，也可以通过简单的公式或者语言描述清楚\n- 这些规律应该是放之四海而皆谁的，可以用到各种未知的领域做指导。\n\n这些其实是机械思维中积极的本质。\n\n---\n\n整个历史进程起是:理论，规律，发明，实践，爆发。也提醒我们，在一个行业里面的经验规律，其实可以应用到其他行业的。\n\n世界发展到今天，大的东西被我们发现的差不多的时候，当印因果关系不能解决，我们身边中很多其他的问题时候，对一个事物了解的越多越细致就会发现，梦想世界的变量其实非常多，不能通过简单的办法，或者公式来计算出来，人们把他们归为不确定的一类。当不确定的问题无法解决的时候大数据，大数据就提供了我们一种思路。其实想想中医以后就可以通过大数据来查找那些药品，对我们人类是一个很有益处的。中医往往可以治得了某些人病，但是某些人却吃不了，其中，肯定会有某个药物对人类卵细胞是一次有规律的，如果通过大数据到计算能力，而不是通过人来，相信中医会有一个更好的发展。\n\n> 不需要知道为什么只需要知道怎么办就好。\n\n---\n\n科学方法论的思想 ： `大胆假设，小心求证`。包括整个说服科学，行为科学，都是建立在大量的，实验对比，验证的，实践基础上，总结出来的规律。\n\n\n香农理论(最初是用在信息类的上面，他把世界的不确定性和信息联系了起来。)\n- 我们对某件事情一无所知的时候，就需要大量的信息\n- 如果我们对某件事情已经有足够多的了解，那么就不需要太多的信息，我们就能把它搞清楚。\n\n信息的度量就等于不确定性的多少，这样香浓就把熵和信息量联系了起来，要想去除系统中的不确定性，就要引入大量信息。信息论是完全建立在不确定性的基础之上。\n> 信息时代的方法论，谁掌握了信息就谁就能获得财富。\n> 就像在工业时代，谁掌握了资本，谁就获取了财富。\n\n---\n\n大数据的特征，量大，多维度，完备性。数据的完备性的重要，当两个数据源完全一致时。他们的交叉熵等于0，当它们相差较大时，它们的交叉熵也很大。所有采用数据驱动的方法，建立模型作用的数据和使用模型的数据之间需要一致的，否则这种方法就会失效，而交叉熵，就是对这种代表性或者一致性的一种精确的量化度量。从而避免出现黑天鹅效应（以前没有到澳大利亚之前，都是白天鹅，但是到澳大利亚之后就有了，黑天鹅，这之前的猜测都是错的）。\n所以大数据源的量大其实是为了消除信息的不确定性。\n\n### 从因果关系到强关联关系，从机械思维到大数据思维\n比如谷歌的，adwords点击模型。搜索排序占70%到80%的权重，英关系已经变成相关联性的。所以后面的商业逻辑都是围绕了，建立获取相关性而展开。\n\n总结:\n>机械思维和大数据思维并非对立的，如果我们能找到，确定性和因果关系，机械思维依然是最好的结果。如果我们想消除信息中的不确定性，数据之间的 **相关性**在某种特殊程度上可以取代原来的因果关系，帮助我们得到我们想要的答案，这便是大数据思维，后者更多是对前者的补充，在新的时代，一定要有新的方法论，也一定会产生新的方法论。\n\n### 大数据与商业\n总的思想是在新的居住环境下把那些人，过去不确定性，不好解决的，用大数据的思维解决掉。李子这里讲了一个美国偷税漏税的例子，查看用电量就可以知道，和种植毒品的例子。\n\n#### 巨大的商业利好相关性，时效性，个性化的重要性\n商品直接盖章推介商品，推荐新闻，个性化是笑话，最重要的一个例子就是一个父亲不知道一个少女怀孕的例子。\n很多产业都可以通过一个，IFID芯片，来搜集数据，从而来获得数据，改善用户体验。\n\n**穷举法**依靠大量的数据，来无限逼近事实的真相，从而解决我们生活中的问题。\n\n>这里有一个谷歌汽车的例子，无人驾驶，其实整个道路都被扫描了一遍数据，其中一个例子啊，只是道路上多了一个黑色状物，谷歌汽车却不知道怎么走了，其实就是在之前的扫描数据之前没有个东西，从而不知道该如何处理。如果说是技术不达标，其实不如说是数据缺失的问题。\n\n### 大数据智能革命的挑战。\n从技术存储，接收，处理，时时，还有很多机器学习的算法，比如人工神经网络算法，最大熵模型，逻辑自回归。\n\n机器学习的过程是一个不断迭代，不断进步的过程，只要事先制定出一个学习的目标，这样双方就会不断的优化模型，让它越来越接近真实的情况，可以说机器学习学的算法迭代次数越多，学习的越深入，得到数据模型就越好。\n- 数据量大，采用比较简单的模型，而比较少的地段成熟，也就是说用大量的数据做一个虔诚的机器学习，\n- 数据量小，就采用比较复杂的模型，而且经过很多迭代次数，训练出准确的模型参数。\n\n\n### 未来的智能化产业\n\n#### 未来的农业\n以色列的沙漠种植的例子，将滴水管线直接送水和肥料到植物的根系，节约了大量的水和肥料。\n\n##### 未来的体育业\n你如果风险投资人好工程师，男队勇士队，打法，从24英尺外的，三分线投篮。通过数据分析，和统计，最有效的进攻是眼花缭乱的传球和准确的投篮，而不是彰显个人能力，勇士队队员苦练投篮神器。\n\n#### 未来的制造业\n个人定制化，c2b的过程。把自己作为一个，利用大数据给客户提供个性化服务的定位。\n\n#### 未来的医疗\n根据不同人的基因，不同人的身体素质，用不同的药，而且对人体进行监控，把疾病那个杀在摇篮中。\n\n#### 未来的媒体。\n对于简单的，股票类的新闻都可以达到机器来自动编写。\n\n### 智能社会\n这是最好的时代，也是最好的时代，这是英国文豪狄更斯在著名的《双城记》开篇的一句话。智能革命无疑将给我们带来一个更美好的社会，它是智能的，精细化的，人性化的。同时社会资源的利用率极大提高，就要做到社会的精细化。\n\n#### 区块链技术\n区块链是我们每一笔交易都会被追踪它无法被伪造，是一串由随机算法产生的随机数，被存储在区块中。\n\n#### 从标准化服务到个性化服务\n最切合实际的就是用医疗资源为每个人做病人服务，一方面一个人都积累了完整的你自己健康状况相关的数据，另一方面医院有，完备的数据。\n\n#### 关于隐私\n很多隐私其实都是我们自己泄露的，建立在，别人的善意上，根本靠不住。如果保险公司能获取到每个人都得了什么病，从而拒绝，给其提供保险，那将是很可怕的。\n\n#### 机器抢掉人的饭碗\n从前三次的工业革命有一个共同特点，它会对社会，产生了巨大冲击，它需要经过大约半个世纪甚至更长的时间，才能背会消化掉。我们这代人要经过几个时期，婴儿需要，我们必须有快速的学习能力才能生存。\n\n#### 智能革命的冲击\n\n智能革命对社会的冲击是巨大的，它会影响到上至国家，中到企业，下至个人的命运。\n- 首先信息革命本身带来的影响还没有消化完。\n- 其次，今天和两百年前已经不同，消化掉技术革命的影响要比工业革命来得多\n- 最后也是最重要的一点，智能革命所要期待的是人类最值得自豪的部分--大脑。\n\n到了智能革命后，任何简单的脑力工作都会消失，甚至那些现在从事所谓高大上的职业也会失去工作。\n\n#### 争当2%的人\n在历次技术革命中，一个人，一家企业，甚至一个国家，可以选择的道路，只有两条，要么进入前2%的行列，要么被淘汰，抱怨是没有用的。\n大家要接受一个新的，所谓方式，利用好大数据和机器智能，首先受益的是和那些产业相关的善于利用新技术的人。\n\n思路例子:\n在电子商品上加电商的入口功能，从而就变成了一家**服务**的企业（冰箱上增加购物的入口，或者在内部装一个检测器，需要什么东西）。\n卖茶叶，从而记录每天进来多少人？没来过的什么茶？什么时候来？什么时候完成交易？你是否有回头客？他们是谁？如果顾客买了一次不来了？我是为什么常年客每年消费多少茶叶？男人经常消费的是哪种茶叶价位多少？店面外每天的人流情况是如何？你所要做的事，就是找到他们经常买茶叶的人，和他们建立长期的供货需求，这样就会有一个稳定的收入，而且渠道成本很低。\n\n\n#### 写在最後\n在智能革命到来之际，每个人都有两种选择，要么观望徘徊，最后被淘汰，要么加入，到这2%的人，做愿意吃螃蟹的人，成为这2%的收益者。\n\n","source":"_posts/2016/big-data-time.md","raw":"---\ntitle: 《智能时代》\ndate: 2016-10-16 11:45:39\nupdated: 2016-10-16 11:45:39\ntags:\ncategories:\n---\n大数据是一场以数据为基础的，改造各种行业的一场革命。真正意义上的大数据要符合三种特征，大量的，多维度的（相关的数据模型），完备性。当同事满足这三种状态，通过各种设备终端大量采集的数据，构建机器学习的模型，在某个特定的领域可以实现更智能，比如翻译，adwords广告，自动驾驶（自动驾驶其实是在采集过的道路上行驶时没有问题的，但是在没有采集的路段是无法行驶的）等。\n<!--more-->\n\n### 机器学习\n已google搜索为例子：\n- 第一：根据网页确定哪些用户在谷歌未过的复杂问题，可以回答那些回答不了，我们大约涨到了70%到80%的问题，在谷歌第一页都能找到正确答案。\n- 第二，把位体和网页中的每一句话做一匹配，消除那些可能是男的片段，至于怎么调就是机器学习的东西了。\n- 第三，就是利用自然语言处理技术，把答案的片段合成一个完整的段落。\n在智能机器，它背后是数据中心强大的服务器集群，从数据中学习信息和知识，这次技术革命的特点是机器的智能化，我们称之为智能革命。因为有了大量的数据，机器智能就从量变到质变到学习变成了可能。\n\n### 思维的革命\n在无法确定因果时，数据为我们提供了解决问题的新方法，数据中所包含的信息可以帮助我们消除不确定性而数据之间的相关联，**而数据之间的相关联性在某种程度上可以取代原来的因果关系**，帮助我们得到我们想知道的答案，这边是大数据思维的核心。\n\n---\n\n所谓的**机械思维**就是，从确定中推导一切，有一定的因果关系。正因为过去两百年之间的，牛顿、爱斯坦推等科学家了世界，时间，空间，地球运动等都是有规律的，所以人们的思维固定在，所有的事物都会有规律的，有因果关系上。牛顿通过自己伟大的成就，宣告科技科学时代的来临，作为思想家，他让人类相信，世界万物的运动规律是可以被认识的，他告诉认为世界万物是运动的，而且这些运动规律，有着确定性的规律，这些规律又是可以被认识的。\n\n>牛顿的方法论可以概括为机械思维，其核心思想可概括为以下三个方面:\n- 因世界变化的规律是确定的。\n- 因为有确定性做保障，因此规律不仅可以被认识，也可以通过简单的公式或者语言描述清楚\n- 这些规律应该是放之四海而皆谁的，可以用到各种未知的领域做指导。\n\n这些其实是机械思维中积极的本质。\n\n---\n\n整个历史进程起是:理论，规律，发明，实践，爆发。也提醒我们，在一个行业里面的经验规律，其实可以应用到其他行业的。\n\n世界发展到今天，大的东西被我们发现的差不多的时候，当印因果关系不能解决，我们身边中很多其他的问题时候，对一个事物了解的越多越细致就会发现，梦想世界的变量其实非常多，不能通过简单的办法，或者公式来计算出来，人们把他们归为不确定的一类。当不确定的问题无法解决的时候大数据，大数据就提供了我们一种思路。其实想想中医以后就可以通过大数据来查找那些药品，对我们人类是一个很有益处的。中医往往可以治得了某些人病，但是某些人却吃不了，其中，肯定会有某个药物对人类卵细胞是一次有规律的，如果通过大数据到计算能力，而不是通过人来，相信中医会有一个更好的发展。\n\n> 不需要知道为什么只需要知道怎么办就好。\n\n---\n\n科学方法论的思想 ： `大胆假设，小心求证`。包括整个说服科学，行为科学，都是建立在大量的，实验对比，验证的，实践基础上，总结出来的规律。\n\n\n香农理论(最初是用在信息类的上面，他把世界的不确定性和信息联系了起来。)\n- 我们对某件事情一无所知的时候，就需要大量的信息\n- 如果我们对某件事情已经有足够多的了解，那么就不需要太多的信息，我们就能把它搞清楚。\n\n信息的度量就等于不确定性的多少，这样香浓就把熵和信息量联系了起来，要想去除系统中的不确定性，就要引入大量信息。信息论是完全建立在不确定性的基础之上。\n> 信息时代的方法论，谁掌握了信息就谁就能获得财富。\n> 就像在工业时代，谁掌握了资本，谁就获取了财富。\n\n---\n\n大数据的特征，量大，多维度，完备性。数据的完备性的重要，当两个数据源完全一致时。他们的交叉熵等于0，当它们相差较大时，它们的交叉熵也很大。所有采用数据驱动的方法，建立模型作用的数据和使用模型的数据之间需要一致的，否则这种方法就会失效，而交叉熵，就是对这种代表性或者一致性的一种精确的量化度量。从而避免出现黑天鹅效应（以前没有到澳大利亚之前，都是白天鹅，但是到澳大利亚之后就有了，黑天鹅，这之前的猜测都是错的）。\n所以大数据源的量大其实是为了消除信息的不确定性。\n\n### 从因果关系到强关联关系，从机械思维到大数据思维\n比如谷歌的，adwords点击模型。搜索排序占70%到80%的权重，英关系已经变成相关联性的。所以后面的商业逻辑都是围绕了，建立获取相关性而展开。\n\n总结:\n>机械思维和大数据思维并非对立的，如果我们能找到，确定性和因果关系，机械思维依然是最好的结果。如果我们想消除信息中的不确定性，数据之间的 **相关性**在某种特殊程度上可以取代原来的因果关系，帮助我们得到我们想要的答案，这便是大数据思维，后者更多是对前者的补充，在新的时代，一定要有新的方法论，也一定会产生新的方法论。\n\n### 大数据与商业\n总的思想是在新的居住环境下把那些人，过去不确定性，不好解决的，用大数据的思维解决掉。李子这里讲了一个美国偷税漏税的例子，查看用电量就可以知道，和种植毒品的例子。\n\n#### 巨大的商业利好相关性，时效性，个性化的重要性\n商品直接盖章推介商品，推荐新闻，个性化是笑话，最重要的一个例子就是一个父亲不知道一个少女怀孕的例子。\n很多产业都可以通过一个，IFID芯片，来搜集数据，从而来获得数据，改善用户体验。\n\n**穷举法**依靠大量的数据，来无限逼近事实的真相，从而解决我们生活中的问题。\n\n>这里有一个谷歌汽车的例子，无人驾驶，其实整个道路都被扫描了一遍数据，其中一个例子啊，只是道路上多了一个黑色状物，谷歌汽车却不知道怎么走了，其实就是在之前的扫描数据之前没有个东西，从而不知道该如何处理。如果说是技术不达标，其实不如说是数据缺失的问题。\n\n### 大数据智能革命的挑战。\n从技术存储，接收，处理，时时，还有很多机器学习的算法，比如人工神经网络算法，最大熵模型，逻辑自回归。\n\n机器学习的过程是一个不断迭代，不断进步的过程，只要事先制定出一个学习的目标，这样双方就会不断的优化模型，让它越来越接近真实的情况，可以说机器学习学的算法迭代次数越多，学习的越深入，得到数据模型就越好。\n- 数据量大，采用比较简单的模型，而比较少的地段成熟，也就是说用大量的数据做一个虔诚的机器学习，\n- 数据量小，就采用比较复杂的模型，而且经过很多迭代次数，训练出准确的模型参数。\n\n\n### 未来的智能化产业\n\n#### 未来的农业\n以色列的沙漠种植的例子，将滴水管线直接送水和肥料到植物的根系，节约了大量的水和肥料。\n\n##### 未来的体育业\n你如果风险投资人好工程师，男队勇士队，打法，从24英尺外的，三分线投篮。通过数据分析，和统计，最有效的进攻是眼花缭乱的传球和准确的投篮，而不是彰显个人能力，勇士队队员苦练投篮神器。\n\n#### 未来的制造业\n个人定制化，c2b的过程。把自己作为一个，利用大数据给客户提供个性化服务的定位。\n\n#### 未来的医疗\n根据不同人的基因，不同人的身体素质，用不同的药，而且对人体进行监控，把疾病那个杀在摇篮中。\n\n#### 未来的媒体。\n对于简单的，股票类的新闻都可以达到机器来自动编写。\n\n### 智能社会\n这是最好的时代，也是最好的时代，这是英国文豪狄更斯在著名的《双城记》开篇的一句话。智能革命无疑将给我们带来一个更美好的社会，它是智能的，精细化的，人性化的。同时社会资源的利用率极大提高，就要做到社会的精细化。\n\n#### 区块链技术\n区块链是我们每一笔交易都会被追踪它无法被伪造，是一串由随机算法产生的随机数，被存储在区块中。\n\n#### 从标准化服务到个性化服务\n最切合实际的就是用医疗资源为每个人做病人服务，一方面一个人都积累了完整的你自己健康状况相关的数据，另一方面医院有，完备的数据。\n\n#### 关于隐私\n很多隐私其实都是我们自己泄露的，建立在，别人的善意上，根本靠不住。如果保险公司能获取到每个人都得了什么病，从而拒绝，给其提供保险，那将是很可怕的。\n\n#### 机器抢掉人的饭碗\n从前三次的工业革命有一个共同特点，它会对社会，产生了巨大冲击，它需要经过大约半个世纪甚至更长的时间，才能背会消化掉。我们这代人要经过几个时期，婴儿需要，我们必须有快速的学习能力才能生存。\n\n#### 智能革命的冲击\n\n智能革命对社会的冲击是巨大的，它会影响到上至国家，中到企业，下至个人的命运。\n- 首先信息革命本身带来的影响还没有消化完。\n- 其次，今天和两百年前已经不同，消化掉技术革命的影响要比工业革命来得多\n- 最后也是最重要的一点，智能革命所要期待的是人类最值得自豪的部分--大脑。\n\n到了智能革命后，任何简单的脑力工作都会消失，甚至那些现在从事所谓高大上的职业也会失去工作。\n\n#### 争当2%的人\n在历次技术革命中，一个人，一家企业，甚至一个国家，可以选择的道路，只有两条，要么进入前2%的行列，要么被淘汰，抱怨是没有用的。\n大家要接受一个新的，所谓方式，利用好大数据和机器智能，首先受益的是和那些产业相关的善于利用新技术的人。\n\n思路例子:\n在电子商品上加电商的入口功能，从而就变成了一家**服务**的企业（冰箱上增加购物的入口，或者在内部装一个检测器，需要什么东西）。\n卖茶叶，从而记录每天进来多少人？没来过的什么茶？什么时候来？什么时候完成交易？你是否有回头客？他们是谁？如果顾客买了一次不来了？我是为什么常年客每年消费多少茶叶？男人经常消费的是哪种茶叶价位多少？店面外每天的人流情况是如何？你所要做的事，就是找到他们经常买茶叶的人，和他们建立长期的供货需求，这样就会有一个稳定的收入，而且渠道成本很低。\n\n\n#### 写在最後\n在智能革命到来之际，每个人都有两种选择，要么观望徘徊，最后被淘汰，要么加入，到这2%的人，做愿意吃螃蟹的人，成为这2%的收益者。\n\n","slug":"big-data-time","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9m001dwsnnejh5st4e","content":"<p>大数据是一场以数据为基础的，改造各种行业的一场革命。真正意义上的大数据要符合三种特征，大量的，多维度的（相关的数据模型），完备性。当同事满足这三种状态，通过各种设备终端大量采集的数据，构建机器学习的模型，在某个特定的领域可以实现更智能，比如翻译，adwords广告，自动驾驶（自动驾驶其实是在采集过的道路上行驶时没有问题的，但是在没有采集的路段是无法行驶的）等。<br><a id=\"more\"></a></p>\n<h3 id=\"机器学习\"><a href=\"#机器学习\" class=\"headerlink\" title=\"机器学习\"></a>机器学习</h3><p>已google搜索为例子：</p>\n<ul>\n<li>第一：根据网页确定哪些用户在谷歌未过的复杂问题，可以回答那些回答不了，我们大约涨到了70%到80%的问题，在谷歌第一页都能找到正确答案。</li>\n<li>第二，把位体和网页中的每一句话做一匹配，消除那些可能是男的片段，至于怎么调就是机器学习的东西了。</li>\n<li>第三，就是利用自然语言处理技术，把答案的片段合成一个完整的段落。<br>在智能机器，它背后是数据中心强大的服务器集群，从数据中学习信息和知识，这次技术革命的特点是机器的智能化，我们称之为智能革命。因为有了大量的数据，机器智能就从量变到质变到学习变成了可能。</li>\n</ul>\n<h3 id=\"思维的革命\"><a href=\"#思维的革命\" class=\"headerlink\" title=\"思维的革命\"></a>思维的革命</h3><p>在无法确定因果时，数据为我们提供了解决问题的新方法，数据中所包含的信息可以帮助我们消除不确定性而数据之间的相关联，<strong>而数据之间的相关联性在某种程度上可以取代原来的因果关系</strong>，帮助我们得到我们想知道的答案，这边是大数据思维的核心。</p>\n<hr>\n<p>所谓的<strong>机械思维</strong>就是，从确定中推导一切，有一定的因果关系。正因为过去两百年之间的，牛顿、爱斯坦推等科学家了世界，时间，空间，地球运动等都是有规律的，所以人们的思维固定在，所有的事物都会有规律的，有因果关系上。牛顿通过自己伟大的成就，宣告科技科学时代的来临，作为思想家，他让人类相信，世界万物的运动规律是可以被认识的，他告诉认为世界万物是运动的，而且这些运动规律，有着确定性的规律，这些规律又是可以被认识的。</p>\n<blockquote>\n<p>牛顿的方法论可以概括为机械思维，其核心思想可概括为以下三个方面:</p>\n<ul>\n<li>因世界变化的规律是确定的。</li>\n<li>因为有确定性做保障，因此规律不仅可以被认识，也可以通过简单的公式或者语言描述清楚</li>\n<li>这些规律应该是放之四海而皆谁的，可以用到各种未知的领域做指导。</li>\n</ul>\n</blockquote>\n<p>这些其实是机械思维中积极的本质。</p>\n<hr>\n<p>整个历史进程起是:理论，规律，发明，实践，爆发。也提醒我们，在一个行业里面的经验规律，其实可以应用到其他行业的。</p>\n<p>世界发展到今天，大的东西被我们发现的差不多的时候，当印因果关系不能解决，我们身边中很多其他的问题时候，对一个事物了解的越多越细致就会发现，梦想世界的变量其实非常多，不能通过简单的办法，或者公式来计算出来，人们把他们归为不确定的一类。当不确定的问题无法解决的时候大数据，大数据就提供了我们一种思路。其实想想中医以后就可以通过大数据来查找那些药品，对我们人类是一个很有益处的。中医往往可以治得了某些人病，但是某些人却吃不了，其中，肯定会有某个药物对人类卵细胞是一次有规律的，如果通过大数据到计算能力，而不是通过人来，相信中医会有一个更好的发展。</p>\n<blockquote>\n<p>不需要知道为什么只需要知道怎么办就好。</p>\n</blockquote>\n<hr>\n<p>科学方法论的思想 ： <code>大胆假设，小心求证</code>。包括整个说服科学，行为科学，都是建立在大量的，实验对比，验证的，实践基础上，总结出来的规律。</p>\n<p>香农理论(最初是用在信息类的上面，他把世界的不确定性和信息联系了起来。)</p>\n<ul>\n<li>我们对某件事情一无所知的时候，就需要大量的信息</li>\n<li>如果我们对某件事情已经有足够多的了解，那么就不需要太多的信息，我们就能把它搞清楚。</li>\n</ul>\n<p>信息的度量就等于不确定性的多少，这样香浓就把熵和信息量联系了起来，要想去除系统中的不确定性，就要引入大量信息。信息论是完全建立在不确定性的基础之上。</p>\n<blockquote>\n<p>信息时代的方法论，谁掌握了信息就谁就能获得财富。<br>就像在工业时代，谁掌握了资本，谁就获取了财富。</p>\n</blockquote>\n<hr>\n<p>大数据的特征，量大，多维度，完备性。数据的完备性的重要，当两个数据源完全一致时。他们的交叉熵等于0，当它们相差较大时，它们的交叉熵也很大。所有采用数据驱动的方法，建立模型作用的数据和使用模型的数据之间需要一致的，否则这种方法就会失效，而交叉熵，就是对这种代表性或者一致性的一种精确的量化度量。从而避免出现黑天鹅效应（以前没有到澳大利亚之前，都是白天鹅，但是到澳大利亚之后就有了，黑天鹅，这之前的猜测都是错的）。<br>所以大数据源的量大其实是为了消除信息的不确定性。</p>\n<h3 id=\"从因果关系到强关联关系，从机械思维到大数据思维\"><a href=\"#从因果关系到强关联关系，从机械思维到大数据思维\" class=\"headerlink\" title=\"从因果关系到强关联关系，从机械思维到大数据思维\"></a>从因果关系到强关联关系，从机械思维到大数据思维</h3><p>比如谷歌的，adwords点击模型。搜索排序占70%到80%的权重，英关系已经变成相关联性的。所以后面的商业逻辑都是围绕了，建立获取相关性而展开。</p>\n<p>总结:</p>\n<blockquote>\n<p>机械思维和大数据思维并非对立的，如果我们能找到，确定性和因果关系，机械思维依然是最好的结果。如果我们想消除信息中的不确定性，数据之间的 <strong>相关性</strong>在某种特殊程度上可以取代原来的因果关系，帮助我们得到我们想要的答案，这便是大数据思维，后者更多是对前者的补充，在新的时代，一定要有新的方法论，也一定会产生新的方法论。</p>\n</blockquote>\n<h3 id=\"大数据与商业\"><a href=\"#大数据与商业\" class=\"headerlink\" title=\"大数据与商业\"></a>大数据与商业</h3><p>总的思想是在新的居住环境下把那些人，过去不确定性，不好解决的，用大数据的思维解决掉。李子这里讲了一个美国偷税漏税的例子，查看用电量就可以知道，和种植毒品的例子。</p>\n<h4 id=\"巨大的商业利好相关性，时效性，个性化的重要性\"><a href=\"#巨大的商业利好相关性，时效性，个性化的重要性\" class=\"headerlink\" title=\"巨大的商业利好相关性，时效性，个性化的重要性\"></a>巨大的商业利好相关性，时效性，个性化的重要性</h4><p>商品直接盖章推介商品，推荐新闻，个性化是笑话，最重要的一个例子就是一个父亲不知道一个少女怀孕的例子。<br>很多产业都可以通过一个，IFID芯片，来搜集数据，从而来获得数据，改善用户体验。</p>\n<p><strong>穷举法</strong>依靠大量的数据，来无限逼近事实的真相，从而解决我们生活中的问题。</p>\n<blockquote>\n<p>这里有一个谷歌汽车的例子，无人驾驶，其实整个道路都被扫描了一遍数据，其中一个例子啊，只是道路上多了一个黑色状物，谷歌汽车却不知道怎么走了，其实就是在之前的扫描数据之前没有个东西，从而不知道该如何处理。如果说是技术不达标，其实不如说是数据缺失的问题。</p>\n</blockquote>\n<h3 id=\"大数据智能革命的挑战。\"><a href=\"#大数据智能革命的挑战。\" class=\"headerlink\" title=\"大数据智能革命的挑战。\"></a>大数据智能革命的挑战。</h3><p>从技术存储，接收，处理，时时，还有很多机器学习的算法，比如人工神经网络算法，最大熵模型，逻辑自回归。</p>\n<p>机器学习的过程是一个不断迭代，不断进步的过程，只要事先制定出一个学习的目标，这样双方就会不断的优化模型，让它越来越接近真实的情况，可以说机器学习学的算法迭代次数越多，学习的越深入，得到数据模型就越好。</p>\n<ul>\n<li>数据量大，采用比较简单的模型，而比较少的地段成熟，也就是说用大量的数据做一个虔诚的机器学习，</li>\n<li>数据量小，就采用比较复杂的模型，而且经过很多迭代次数，训练出准确的模型参数。</li>\n</ul>\n<h3 id=\"未来的智能化产业\"><a href=\"#未来的智能化产业\" class=\"headerlink\" title=\"未来的智能化产业\"></a>未来的智能化产业</h3><h4 id=\"未来的农业\"><a href=\"#未来的农业\" class=\"headerlink\" title=\"未来的农业\"></a>未来的农业</h4><p>以色列的沙漠种植的例子，将滴水管线直接送水和肥料到植物的根系，节约了大量的水和肥料。</p>\n<h5 id=\"未来的体育业\"><a href=\"#未来的体育业\" class=\"headerlink\" title=\"未来的体育业\"></a>未来的体育业</h5><p>你如果风险投资人好工程师，男队勇士队，打法，从24英尺外的，三分线投篮。通过数据分析，和统计，最有效的进攻是眼花缭乱的传球和准确的投篮，而不是彰显个人能力，勇士队队员苦练投篮神器。</p>\n<h4 id=\"未来的制造业\"><a href=\"#未来的制造业\" class=\"headerlink\" title=\"未来的制造业\"></a>未来的制造业</h4><p>个人定制化，c2b的过程。把自己作为一个，利用大数据给客户提供个性化服务的定位。</p>\n<h4 id=\"未来的医疗\"><a href=\"#未来的医疗\" class=\"headerlink\" title=\"未来的医疗\"></a>未来的医疗</h4><p>根据不同人的基因，不同人的身体素质，用不同的药，而且对人体进行监控，把疾病那个杀在摇篮中。</p>\n<h4 id=\"未来的媒体。\"><a href=\"#未来的媒体。\" class=\"headerlink\" title=\"未来的媒体。\"></a>未来的媒体。</h4><p>对于简单的，股票类的新闻都可以达到机器来自动编写。</p>\n<h3 id=\"智能社会\"><a href=\"#智能社会\" class=\"headerlink\" title=\"智能社会\"></a>智能社会</h3><p>这是最好的时代，也是最好的时代，这是英国文豪狄更斯在著名的《双城记》开篇的一句话。智能革命无疑将给我们带来一个更美好的社会，它是智能的，精细化的，人性化的。同时社会资源的利用率极大提高，就要做到社会的精细化。</p>\n<h4 id=\"区块链技术\"><a href=\"#区块链技术\" class=\"headerlink\" title=\"区块链技术\"></a>区块链技术</h4><p>区块链是我们每一笔交易都会被追踪它无法被伪造，是一串由随机算法产生的随机数，被存储在区块中。</p>\n<h4 id=\"从标准化服务到个性化服务\"><a href=\"#从标准化服务到个性化服务\" class=\"headerlink\" title=\"从标准化服务到个性化服务\"></a>从标准化服务到个性化服务</h4><p>最切合实际的就是用医疗资源为每个人做病人服务，一方面一个人都积累了完整的你自己健康状况相关的数据，另一方面医院有，完备的数据。</p>\n<h4 id=\"关于隐私\"><a href=\"#关于隐私\" class=\"headerlink\" title=\"关于隐私\"></a>关于隐私</h4><p>很多隐私其实都是我们自己泄露的，建立在，别人的善意上，根本靠不住。如果保险公司能获取到每个人都得了什么病，从而拒绝，给其提供保险，那将是很可怕的。</p>\n<h4 id=\"机器抢掉人的饭碗\"><a href=\"#机器抢掉人的饭碗\" class=\"headerlink\" title=\"机器抢掉人的饭碗\"></a>机器抢掉人的饭碗</h4><p>从前三次的工业革命有一个共同特点，它会对社会，产生了巨大冲击，它需要经过大约半个世纪甚至更长的时间，才能背会消化掉。我们这代人要经过几个时期，婴儿需要，我们必须有快速的学习能力才能生存。</p>\n<h4 id=\"智能革命的冲击\"><a href=\"#智能革命的冲击\" class=\"headerlink\" title=\"智能革命的冲击\"></a>智能革命的冲击</h4><p>智能革命对社会的冲击是巨大的，它会影响到上至国家，中到企业，下至个人的命运。</p>\n<ul>\n<li>首先信息革命本身带来的影响还没有消化完。</li>\n<li>其次，今天和两百年前已经不同，消化掉技术革命的影响要比工业革命来得多</li>\n<li>最后也是最重要的一点，智能革命所要期待的是人类最值得自豪的部分–大脑。</li>\n</ul>\n<p>到了智能革命后，任何简单的脑力工作都会消失，甚至那些现在从事所谓高大上的职业也会失去工作。</p>\n<h4 id=\"争当2-的人\"><a href=\"#争当2-的人\" class=\"headerlink\" title=\"争当2%的人\"></a>争当2%的人</h4><p>在历次技术革命中，一个人，一家企业，甚至一个国家，可以选择的道路，只有两条，要么进入前2%的行列，要么被淘汰，抱怨是没有用的。<br>大家要接受一个新的，所谓方式，利用好大数据和机器智能，首先受益的是和那些产业相关的善于利用新技术的人。</p>\n<p>思路例子:<br>在电子商品上加电商的入口功能，从而就变成了一家<strong>服务</strong>的企业（冰箱上增加购物的入口，或者在内部装一个检测器，需要什么东西）。<br>卖茶叶，从而记录每天进来多少人？没来过的什么茶？什么时候来？什么时候完成交易？你是否有回头客？他们是谁？如果顾客买了一次不来了？我是为什么常年客每年消费多少茶叶？男人经常消费的是哪种茶叶价位多少？店面外每天的人流情况是如何？你所要做的事，就是找到他们经常买茶叶的人，和他们建立长期的供货需求，这样就会有一个稳定的收入，而且渠道成本很低。</p>\n<h4 id=\"写在最後\"><a href=\"#写在最後\" class=\"headerlink\" title=\"写在最後\"></a>写在最後</h4><p>在智能革命到来之际，每个人都有两种选择，要么观望徘徊，最后被淘汰，要么加入，到这2%的人，做愿意吃螃蟹的人，成为这2%的收益者。</p>\n","excerpt":"<p>大数据是一场以数据为基础的，改造各种行业的一场革命。真正意义上的大数据要符合三种特征，大量的，多维度的（相关的数据模型），完备性。当同事满足这三种状态，通过各种设备终端大量采集的数据，构建机器学习的模型，在某个特定的领域可以实现更智能，比如翻译，adwords广告，自动驾驶（自动驾驶其实是在采集过的道路上行驶时没有问题的，但是在没有采集的路段是无法行驶的）等。<br>","more":"</p>\n<h3 id=\"机器学习\"><a href=\"#机器学习\" class=\"headerlink\" title=\"机器学习\"></a>机器学习</h3><p>已google搜索为例子：</p>\n<ul>\n<li>第一：根据网页确定哪些用户在谷歌未过的复杂问题，可以回答那些回答不了，我们大约涨到了70%到80%的问题，在谷歌第一页都能找到正确答案。</li>\n<li>第二，把位体和网页中的每一句话做一匹配，消除那些可能是男的片段，至于怎么调就是机器学习的东西了。</li>\n<li>第三，就是利用自然语言处理技术，把答案的片段合成一个完整的段落。<br>在智能机器，它背后是数据中心强大的服务器集群，从数据中学习信息和知识，这次技术革命的特点是机器的智能化，我们称之为智能革命。因为有了大量的数据，机器智能就从量变到质变到学习变成了可能。</li>\n</ul>\n<h3 id=\"思维的革命\"><a href=\"#思维的革命\" class=\"headerlink\" title=\"思维的革命\"></a>思维的革命</h3><p>在无法确定因果时，数据为我们提供了解决问题的新方法，数据中所包含的信息可以帮助我们消除不确定性而数据之间的相关联，<strong>而数据之间的相关联性在某种程度上可以取代原来的因果关系</strong>，帮助我们得到我们想知道的答案，这边是大数据思维的核心。</p>\n<hr>\n<p>所谓的<strong>机械思维</strong>就是，从确定中推导一切，有一定的因果关系。正因为过去两百年之间的，牛顿、爱斯坦推等科学家了世界，时间，空间，地球运动等都是有规律的，所以人们的思维固定在，所有的事物都会有规律的，有因果关系上。牛顿通过自己伟大的成就，宣告科技科学时代的来临，作为思想家，他让人类相信，世界万物的运动规律是可以被认识的，他告诉认为世界万物是运动的，而且这些运动规律，有着确定性的规律，这些规律又是可以被认识的。</p>\n<blockquote>\n<p>牛顿的方法论可以概括为机械思维，其核心思想可概括为以下三个方面:</p>\n<ul>\n<li>因世界变化的规律是确定的。</li>\n<li>因为有确定性做保障，因此规律不仅可以被认识，也可以通过简单的公式或者语言描述清楚</li>\n<li>这些规律应该是放之四海而皆谁的，可以用到各种未知的领域做指导。</li>\n</ul>\n</blockquote>\n<p>这些其实是机械思维中积极的本质。</p>\n<hr>\n<p>整个历史进程起是:理论，规律，发明，实践，爆发。也提醒我们，在一个行业里面的经验规律，其实可以应用到其他行业的。</p>\n<p>世界发展到今天，大的东西被我们发现的差不多的时候，当印因果关系不能解决，我们身边中很多其他的问题时候，对一个事物了解的越多越细致就会发现，梦想世界的变量其实非常多，不能通过简单的办法，或者公式来计算出来，人们把他们归为不确定的一类。当不确定的问题无法解决的时候大数据，大数据就提供了我们一种思路。其实想想中医以后就可以通过大数据来查找那些药品，对我们人类是一个很有益处的。中医往往可以治得了某些人病，但是某些人却吃不了，其中，肯定会有某个药物对人类卵细胞是一次有规律的，如果通过大数据到计算能力，而不是通过人来，相信中医会有一个更好的发展。</p>\n<blockquote>\n<p>不需要知道为什么只需要知道怎么办就好。</p>\n</blockquote>\n<hr>\n<p>科学方法论的思想 ： <code>大胆假设，小心求证</code>。包括整个说服科学，行为科学，都是建立在大量的，实验对比，验证的，实践基础上，总结出来的规律。</p>\n<p>香农理论(最初是用在信息类的上面，他把世界的不确定性和信息联系了起来。)</p>\n<ul>\n<li>我们对某件事情一无所知的时候，就需要大量的信息</li>\n<li>如果我们对某件事情已经有足够多的了解，那么就不需要太多的信息，我们就能把它搞清楚。</li>\n</ul>\n<p>信息的度量就等于不确定性的多少，这样香浓就把熵和信息量联系了起来，要想去除系统中的不确定性，就要引入大量信息。信息论是完全建立在不确定性的基础之上。</p>\n<blockquote>\n<p>信息时代的方法论，谁掌握了信息就谁就能获得财富。<br>就像在工业时代，谁掌握了资本，谁就获取了财富。</p>\n</blockquote>\n<hr>\n<p>大数据的特征，量大，多维度，完备性。数据的完备性的重要，当两个数据源完全一致时。他们的交叉熵等于0，当它们相差较大时，它们的交叉熵也很大。所有采用数据驱动的方法，建立模型作用的数据和使用模型的数据之间需要一致的，否则这种方法就会失效，而交叉熵，就是对这种代表性或者一致性的一种精确的量化度量。从而避免出现黑天鹅效应（以前没有到澳大利亚之前，都是白天鹅，但是到澳大利亚之后就有了，黑天鹅，这之前的猜测都是错的）。<br>所以大数据源的量大其实是为了消除信息的不确定性。</p>\n<h3 id=\"从因果关系到强关联关系，从机械思维到大数据思维\"><a href=\"#从因果关系到强关联关系，从机械思维到大数据思维\" class=\"headerlink\" title=\"从因果关系到强关联关系，从机械思维到大数据思维\"></a>从因果关系到强关联关系，从机械思维到大数据思维</h3><p>比如谷歌的，adwords点击模型。搜索排序占70%到80%的权重，英关系已经变成相关联性的。所以后面的商业逻辑都是围绕了，建立获取相关性而展开。</p>\n<p>总结:</p>\n<blockquote>\n<p>机械思维和大数据思维并非对立的，如果我们能找到，确定性和因果关系，机械思维依然是最好的结果。如果我们想消除信息中的不确定性，数据之间的 <strong>相关性</strong>在某种特殊程度上可以取代原来的因果关系，帮助我们得到我们想要的答案，这便是大数据思维，后者更多是对前者的补充，在新的时代，一定要有新的方法论，也一定会产生新的方法论。</p>\n</blockquote>\n<h3 id=\"大数据与商业\"><a href=\"#大数据与商业\" class=\"headerlink\" title=\"大数据与商业\"></a>大数据与商业</h3><p>总的思想是在新的居住环境下把那些人，过去不确定性，不好解决的，用大数据的思维解决掉。李子这里讲了一个美国偷税漏税的例子，查看用电量就可以知道，和种植毒品的例子。</p>\n<h4 id=\"巨大的商业利好相关性，时效性，个性化的重要性\"><a href=\"#巨大的商业利好相关性，时效性，个性化的重要性\" class=\"headerlink\" title=\"巨大的商业利好相关性，时效性，个性化的重要性\"></a>巨大的商业利好相关性，时效性，个性化的重要性</h4><p>商品直接盖章推介商品，推荐新闻，个性化是笑话，最重要的一个例子就是一个父亲不知道一个少女怀孕的例子。<br>很多产业都可以通过一个，IFID芯片，来搜集数据，从而来获得数据，改善用户体验。</p>\n<p><strong>穷举法</strong>依靠大量的数据，来无限逼近事实的真相，从而解决我们生活中的问题。</p>\n<blockquote>\n<p>这里有一个谷歌汽车的例子，无人驾驶，其实整个道路都被扫描了一遍数据，其中一个例子啊，只是道路上多了一个黑色状物，谷歌汽车却不知道怎么走了，其实就是在之前的扫描数据之前没有个东西，从而不知道该如何处理。如果说是技术不达标，其实不如说是数据缺失的问题。</p>\n</blockquote>\n<h3 id=\"大数据智能革命的挑战。\"><a href=\"#大数据智能革命的挑战。\" class=\"headerlink\" title=\"大数据智能革命的挑战。\"></a>大数据智能革命的挑战。</h3><p>从技术存储，接收，处理，时时，还有很多机器学习的算法，比如人工神经网络算法，最大熵模型，逻辑自回归。</p>\n<p>机器学习的过程是一个不断迭代，不断进步的过程，只要事先制定出一个学习的目标，这样双方就会不断的优化模型，让它越来越接近真实的情况，可以说机器学习学的算法迭代次数越多，学习的越深入，得到数据模型就越好。</p>\n<ul>\n<li>数据量大，采用比较简单的模型，而比较少的地段成熟，也就是说用大量的数据做一个虔诚的机器学习，</li>\n<li>数据量小，就采用比较复杂的模型，而且经过很多迭代次数，训练出准确的模型参数。</li>\n</ul>\n<h3 id=\"未来的智能化产业\"><a href=\"#未来的智能化产业\" class=\"headerlink\" title=\"未来的智能化产业\"></a>未来的智能化产业</h3><h4 id=\"未来的农业\"><a href=\"#未来的农业\" class=\"headerlink\" title=\"未来的农业\"></a>未来的农业</h4><p>以色列的沙漠种植的例子，将滴水管线直接送水和肥料到植物的根系，节约了大量的水和肥料。</p>\n<h5 id=\"未来的体育业\"><a href=\"#未来的体育业\" class=\"headerlink\" title=\"未来的体育业\"></a>未来的体育业</h5><p>你如果风险投资人好工程师，男队勇士队，打法，从24英尺外的，三分线投篮。通过数据分析，和统计，最有效的进攻是眼花缭乱的传球和准确的投篮，而不是彰显个人能力，勇士队队员苦练投篮神器。</p>\n<h4 id=\"未来的制造业\"><a href=\"#未来的制造业\" class=\"headerlink\" title=\"未来的制造业\"></a>未来的制造业</h4><p>个人定制化，c2b的过程。把自己作为一个，利用大数据给客户提供个性化服务的定位。</p>\n<h4 id=\"未来的医疗\"><a href=\"#未来的医疗\" class=\"headerlink\" title=\"未来的医疗\"></a>未来的医疗</h4><p>根据不同人的基因，不同人的身体素质，用不同的药，而且对人体进行监控，把疾病那个杀在摇篮中。</p>\n<h4 id=\"未来的媒体。\"><a href=\"#未来的媒体。\" class=\"headerlink\" title=\"未来的媒体。\"></a>未来的媒体。</h4><p>对于简单的，股票类的新闻都可以达到机器来自动编写。</p>\n<h3 id=\"智能社会\"><a href=\"#智能社会\" class=\"headerlink\" title=\"智能社会\"></a>智能社会</h3><p>这是最好的时代，也是最好的时代，这是英国文豪狄更斯在著名的《双城记》开篇的一句话。智能革命无疑将给我们带来一个更美好的社会，它是智能的，精细化的，人性化的。同时社会资源的利用率极大提高，就要做到社会的精细化。</p>\n<h4 id=\"区块链技术\"><a href=\"#区块链技术\" class=\"headerlink\" title=\"区块链技术\"></a>区块链技术</h4><p>区块链是我们每一笔交易都会被追踪它无法被伪造，是一串由随机算法产生的随机数，被存储在区块中。</p>\n<h4 id=\"从标准化服务到个性化服务\"><a href=\"#从标准化服务到个性化服务\" class=\"headerlink\" title=\"从标准化服务到个性化服务\"></a>从标准化服务到个性化服务</h4><p>最切合实际的就是用医疗资源为每个人做病人服务，一方面一个人都积累了完整的你自己健康状况相关的数据，另一方面医院有，完备的数据。</p>\n<h4 id=\"关于隐私\"><a href=\"#关于隐私\" class=\"headerlink\" title=\"关于隐私\"></a>关于隐私</h4><p>很多隐私其实都是我们自己泄露的，建立在，别人的善意上，根本靠不住。如果保险公司能获取到每个人都得了什么病，从而拒绝，给其提供保险，那将是很可怕的。</p>\n<h4 id=\"机器抢掉人的饭碗\"><a href=\"#机器抢掉人的饭碗\" class=\"headerlink\" title=\"机器抢掉人的饭碗\"></a>机器抢掉人的饭碗</h4><p>从前三次的工业革命有一个共同特点，它会对社会，产生了巨大冲击，它需要经过大约半个世纪甚至更长的时间，才能背会消化掉。我们这代人要经过几个时期，婴儿需要，我们必须有快速的学习能力才能生存。</p>\n<h4 id=\"智能革命的冲击\"><a href=\"#智能革命的冲击\" class=\"headerlink\" title=\"智能革命的冲击\"></a>智能革命的冲击</h4><p>智能革命对社会的冲击是巨大的，它会影响到上至国家，中到企业，下至个人的命运。</p>\n<ul>\n<li>首先信息革命本身带来的影响还没有消化完。</li>\n<li>其次，今天和两百年前已经不同，消化掉技术革命的影响要比工业革命来得多</li>\n<li>最后也是最重要的一点，智能革命所要期待的是人类最值得自豪的部分–大脑。</li>\n</ul>\n<p>到了智能革命后，任何简单的脑力工作都会消失，甚至那些现在从事所谓高大上的职业也会失去工作。</p>\n<h4 id=\"争当2-的人\"><a href=\"#争当2-的人\" class=\"headerlink\" title=\"争当2%的人\"></a>争当2%的人</h4><p>在历次技术革命中，一个人，一家企业，甚至一个国家，可以选择的道路，只有两条，要么进入前2%的行列，要么被淘汰，抱怨是没有用的。<br>大家要接受一个新的，所谓方式，利用好大数据和机器智能，首先受益的是和那些产业相关的善于利用新技术的人。</p>\n<p>思路例子:<br>在电子商品上加电商的入口功能，从而就变成了一家<strong>服务</strong>的企业（冰箱上增加购物的入口，或者在内部装一个检测器，需要什么东西）。<br>卖茶叶，从而记录每天进来多少人？没来过的什么茶？什么时候来？什么时候完成交易？你是否有回头客？他们是谁？如果顾客买了一次不来了？我是为什么常年客每年消费多少茶叶？男人经常消费的是哪种茶叶价位多少？店面外每天的人流情况是如何？你所要做的事，就是找到他们经常买茶叶的人，和他们建立长期的供货需求，这样就会有一个稳定的收入，而且渠道成本很低。</p>\n<h4 id=\"写在最後\"><a href=\"#写在最後\" class=\"headerlink\" title=\"写在最後\"></a>写在最後</h4><p>在智能革命到来之际，每个人都有两种选择，要么观望徘徊，最后被淘汰，要么加入，到这2%的人，做愿意吃螃蟹的人，成为这2%的收益者。</p>"},{"title":"数据库设计","date":"2016-01-28T09:21:06.000Z","updated":"2016-01-28T09:21:06.000Z","_content":"\n# 数据库的基本概念\n基本概念就一页PPT，让大家就一些数据库方面的概念达成一致。\n\n1. “单库”。\n\n2. “分片”，也就是水平切分，它是用来解决数据量大的问题。有一些数据库支持auto sharding，自动分片，例如mongoDB，后来发现auto sharding不太可控，不知道什么时候会进行数据迁移，数据迁移过程中会有大粒度的锁，读写被阻塞，业务会有抖动和毛刺，这些是业务不能接受的。\n\n<!-- more -->\n一旦进行分片，就会面临“数据路由”的问题，来了一个请求，要将请求路由到对应的数据库分片上。互联网常用的数据路由方法有三种：\n1. 一个是按照数据范围路由，比如有两个分片，一个范围是0-1亿，一个范围是1亿-2亿，这样来路由。\n这个方式的优点是非常的简单，并且扩展性好，假如两个分片不够了，增加一个2亿-3亿的分片即可。\n这个方式的缺点是：虽然数据的分布是均衡的，每一个库的数据量差不多，但请求的负载会不均衡。例如有一些业务场景，新注册的用户活跃度更高，大范围的分片请求负载会更高。\n\n2. 二个是按照hash路由，比如有两个分片，数据模2寻库即可。\n这个方式的优点是路由方式很简单，数据分布也是均衡的，请求负载也是均衡的。\n这个方式的缺点是如果两个分片数据量过大，要变成三个分片，数据迁移会比较麻烦，即扩展性会受限。\n\n3. 三个是路由服务。前面两个数据路由方法均有一个缺点，业务线需要耦合路由规则，如果路由规则发生变化，业务线是需要配合升级的。路由服务可以实现业务线与路由规则的解耦，业务线每次访问数据库之前先调用路由服务，来知道数据究竟存放在哪个分库上。\n\n\n3. “分组”与“复制”，这解决的是扩展读性能，保证读高可用的问题。\n大部分互联网的业务都是读多写少。\n淘宝、京东查询商品，搜索商品的请求可能占了99%，只有下单和支付的时候有写请求。\n58同城搜索帖子，察看列表页，查看详情页都是读请求，发布帖子是写请求，写请求的量也是比较少的。\n大部分互联网的场景都读多写少，一般来说读性能会最先成为瓶颈，怎么快速解决这个问题呢？\n\n我们通常使用**读写分离**，扩充读库的方式来提升系统的读性能，同时多个读库也保证了读的可用性，一台读库挂了，另外一台读库可以持续的提供服务。\n\n\n# 可用性架构实践\n数据库大家都用，平时除了根据业务设计表结构，根据访问来设计索引之外，还应该在设计时考虑数据的可用性，可用性又分为读的高可用与写的高可用。\n\n上图是“读”高可用的常见玩法，我们是怎么样保证读库的高可用的呢？解决高可用这个问题的思路是冗余。\n解决站点的可用性问题冗余多个站点，解决服务的可用性问题冗余多个服务，解决数据的可用性问题冗余多份数据。\n如果用一个读库，保证不了读高可用，就复制读库，一个读库挂了另一个仍然可以提供服务，这么用复制的方式来保证读的可用性。\n\n数据的冗余会引发一个副作用，就是一致性的问题。\n如果是单库，读和写都落在同一个库上，每次读到的都是最新的数据库，不存在一致性的问题。\n但是为了保证可用性将数据复制到多个地方，而这多个地方的数据绝对不是实时同步的，会有同步时延，所以有可能会读到旧的数据。如何解决主从数据库一致性问题我们在后面再来讲。\n\n很多互联网公司的数据库软件架构都是一主两从或者一主三从，不能够保证“写”的高可用，因为写其实还是只有一个库，仍是单点，如果这个库挂了的话，写会受影响。那小伙伴们为什么还使用这个架构呢？\n我刚才提到大部分互联网公司99%的业务都是“读”业务，写库不是主要矛盾，写库挂了，可能只有1%的用户会受影响。\n如果要做到“写”的高可用，对数据库软件架构的冲击比较大，不一定值得，为了解决1%的问题引入了80%的复杂度，所以很多互联网公司都没有解决写数据库的高可用的问题。\n\n\n怎么来解决写的高可用问题呢？思路还是**冗余**，读的高可用是冗余读库，写的高可用是冗余写库。把一个写变成两个写，做一个**双主同步**，一个挂了的话，可以将写的流量自动切到另外一个，写库的高可用性。\n\n用双主同步的方式保证写高可用性会存在什么样的问题？\n\n刚才提到，用冗余的方式保证可用性会存在一致性问题。因为两个主相互同步，这个同步是有时延的，很多公司用到auto-increment-id这样的一些数据库的特性，**如果用双主同步的架构，一个主id由10变成11，在数据没有同步过去之前，另一个主又来了一个写请求，也由10变成11，双向同步会主键冲突，同步失败，造成数据丢失**。\n\n\n解决这个双主同步id冲突的方案有两种：\n1. 一个是双主使用不同的初始值，相同的步长来生成id，一个库从0开始（生成02468），一个库从1开始（生成13579），步长都为2，这样两边同步数据就不会冲突。\n2. 另一个方式是不要使用数据库的auto-increment-id，而由业务层来保证生成的id不冲突。[参考](http://changyuan.github.io/2015/12/04/gen-id-way/)\n3. 使用的是“双主”当“主从”的方式来保证数据库的读写可用性,虽然看上去是双主同步，但是读写都在一个主上，另一个主库没有读写流量，完全是备份。当一个主库挂掉的时候，流量会自动的切换到另外一个主库上，这一切对业务线都是透明的，自动完成。但缺点有两个：\n\t- 数据库资源利用率只有50%；\n\t- 没有办法通过增加读库的方式来扩展系统的读性能；\n\n\n# 读性能架构实践\n\n如何增加数据库的读性能，先看下传统的玩法：\n\n1. 增加从库，通过增加从库来提升读性能，缺点是什么呢？从库越多，写的性能越慢，同步的时间越长，不一致的可能性越高。\n2. 增加缓存，缓存是大家用的非常多的一种提高系统读性能方法，特别是对于读多写少的互联网场景非常的有效。上游是业务线，下游是读写分离主从同步和一个cache。\n对于写操作：**会先淘汰cache，再写数据库**。\n对于读操作：先读cache，如果cache hit则返回数据，如果cache miss则读从库，然后把读出来的数据再入缓存。\n\ncache玩法在一种异常时序下，会引发严重的一致性问题，考虑这样一个特殊的时序：\n1. 先来了一个写请求，淘汰了cache，写了数据库；\n2. 又来了一个读请求，读cache，cache miss了，然后读从库，此时写请求还没有同步到从库上，于是读了一个脏数据，接着脏数据入缓存；\n3. 最后主从同步完成，这个时序会导致脏数据一直在缓存中没有办法被淘汰掉，数据库和缓存中的数据严重不一致。\n\n\n# 一致性架构实践\n\n58同城采用“服务+缓存+数据库”一套的方式来保证数据的一致性，由于58同城使用“双主当主从用”的数据库读写高可用架构，读写都在一个主库上，不会读到所谓“读库的脏数据”，所以数据库与缓存的不一致情况也不会存在。\n\n主从为什么会不一致？刚才提到读写会有时延，有可能读到从库上的旧数据。常见的方法是引入中间件，业务层不直接访问数据库，而是通过中间件访问数据库，这个中间件会记录哪一些key上发生了写请求，在数据主从同步时间窗口之内，如果key上又出了读请求，就将这个请求也路由到主库上去（因为此时从库可能还没有同步完成，是旧数据），使用这个方法来保证数据的一致性。\n\n中间件的方案很理想，那为什么大部分的互联网的公司都没有使用这种方案来保证主从数据的一致性呢？那是因为数据库中间件的技术门槛比较高，有一些大公司，例如百度，腾讯，阿里他们可能有自己的中间件，并不是所有的创业公司互联网公司有自己的中间件产品，况且很多互联网公司的业务对数据一致性的要求并没有那么高。比如说同城搜一个帖子，可能5秒钟之后才搜出来，对用户的体验并没有多大的影响。\n\n\n除了中间件，读写都路由到主库，58同城就是这么干的，也是一种解决主从不一致的常用方案。\n\n解决完主从不一致，第二个要解决的是数据库和缓存的不一致，刚才提到cache传统的玩法，脏数据有可能入cache，我们怎么解决呢？\n两个实践：第一个是缓存双淘汰机制，第二个是建议为所有item设定过期时间（前提是允许cache miss）。\n（1）缓存双淘汰，传统的玩法在进行写操作的时候，先淘汰cache再写主库。上文提到，在主从同步时间窗口之内可能有脏数据入cache，此时如果再发起一个异步的淘汰，即使不一致时间窗内脏数据入了cache，也会再次淘汰掉。\n（2）为所有item设定超时时间，例如10分钟。极限时序下，即使有脏数据入cache，这个脏数据也最多存在十分钟。带来的副作用是，可能每十分钟，这个key上有一个读请求会穿透到数据库上，但我们认为这对数据库的从库压力增加是非常小的。\n\n# 扩展性架构实践\n扩展性也是架构师在做数据库架构设计的时候需要考虑的一点。我分享一个58同城非常帅气的秒级数据扩容的方案。这个方案解决什么问题呢？原来数据库水平切分成N个库，现在要扩容成2N个库，要解决这个问题。\n\n假设原来分成两个库，假设按照hash的方式分片，如上图分为奇数库和偶数库。\n\n\n第一个步骤提升从库，底下一个从库放到上面来（其实什么动作都没有做）；\n第二个步骤修改配置，此时扩容完成，原来是2个分片，修改配置后变成4个分片，这个过程没有数据的迁移。原来偶数的那一部分现在变成了两个部分，一部分是0，一部分是2，奇数的部分现在变成1和3。0库和2库没有数据冲突，只是扩容之后在短时间内双主的可用性这个特性丢失掉了。\n\n\n第三个步骤还要做一些收尾操作：把旧的双主给解除掉，为了保证可用性增加新的双主同步，原来拥有全部的数据，现在只为一半的数据提供服务了，我们把多余的数据删除掉，结尾这三个步骤可以事后慢慢操作。整个扩容在过程在第二步提升从库，修改配置其实就秒级完成了，非常的帅气。\n这个方案的缺点是只能实现N库到2N 库的扩容，2变4、4变8，不能实现2库变3库，2库变5库的扩容，如何能够实现这种扩容呢？\n\n数据库扩展性方面有很多的需求，例如刚才说的2库扩3库，2库扩5库。产品经理经常变化需求，扩充表的属性也是经常的事情，今年的数据库大会同行也介绍了一些使用触发器来做online schema change的方案，但是触发器的局限性在于：\n第一、触发器对数据库性能的影响比较大；\n第二、触发器只能在同一个库上才有效，而互联网的场景特点是数据量非常大，并发量非常大，库都分布在不同的物理机器上，触发器没法弄。\n最后还有一类扩展性需求，底层存储介质发生变化，原来是mongodb存储，现在要变为mysql存储，这也是扩展性需求（虽然很少），这三类需求怎么扩展？\n\n方法是导库，迁移数据，迁移数据有几种做法，第一种停服务，如果大家的业务能够接受这种方法，强烈建议使用这种方法，例如有一些游戏公司，晚上一点到两点服务器维护，可能就是在干分区或者合区这类导库的事情。\n\n\n如果业务上不允许停服务，想做到平滑迁移，双写法可以解决这类问题。\n（1）双写法迁移数据的第一步是升级服务，原来的服务是写一个库，现在建立新的数据库，双写。比如底层存储介质的变化，我们原来是mongo数据库，现在建立好新的mysql数据库，然后对服务的所有写接口进行双库写升级。\n\n（2）第二步写一个小程序去进行数据的迁移。比如写一个离线的程序，把两个库的数据重新分片，分到三个库里。也可能是把一个只有三个属性的用户表导到五个属性的数据表里面。这个数据迁移要限速，导完之后两个库的数据一致吗？只要提前双写，如果没有什么意外，两边的数据应该是一致的。\n什么时候会有意外呢？在导某一条数据的过程当中正好发生了一个删除操作，这个数据刚被服务双写删除，又被迁移数据的程序插入到了新库中，这种非常极限的情况下会造成两边的数据不一致。\n\n（3）建议第三步再开发一个小脚本，对两边的数据进行比对，如果发现了不一致，就将数据修复。当修复完成之后，我们认为数据是一致的，再将双写又变成单写，数据完成迁移。\n这个方式的优点：\n第一、改动是非常小的，对服务的影响比较小，单写变双写，开发两个小工具，一个是迁移程序，从一个库读数据，另外一个库插进去；还有一个数据校验程序，两个数据进行比对，改动是比较小的。\n第二、随时可回滚的，方案风险比较小，在任何一个步骤如果发现问题，可以随时停止操作。比如迁移数据的过程当中发现不对，就把新的数据库干掉，重新再迁。因为在切换之前，所有线上的读服务和写服务都是旧库提供，只有切了以后，才是新库提供的服务。这是我们非常帅气的一个平滑导库的方式。\n\n# 总结\n- 分片解决的是数据量大的问题，\n- 复制和分组解决的是提高读性能，保证读的可用性的问题。\n- 分片会引入路由，常用的三种路由的方法，按照范围、按照hash，或者新增服务来路由。\n- 怎么保证数据的**可用性**，保证数据可用性的思路是**冗余**，但会引发数据的不一致，可用性的实践是**双主当主从用**，读写流量都在一个库上，另一个库standby，一个主库挂掉流量自动迁移到另外一个主库，只是资源利用率是50%，并且不能通过增加从库的方式提高读性。\n- 读性能的实践：传统的玩法是**增加从库**或者**增加缓存**。存在的问题是：主从可能不一致，同城的玩法是**服务+数据库+缓存**一套的方式来解决这些问题。\n- 一致性的实践，解决主从不一致性有两种方法:\n增加中间件: 中间件记录哪些key上发生了写操作，在主从同步时间窗口之内的读操作也路由到主库。\n强制读主: 数据库与缓存的一致性，我们的实践是双淘汰，在发生写请求的时候，淘汰缓存，写入数据库，再做一个延时的缓存淘汰操作。第二个实践是建议为所有的item设置一个超时时间。\n\n[如何秒级扩容的结构？](http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&mid=400465735&idx=1&sn=8d7067de4cc8f73ea5558f07e0a9340e&scene=21#wechat_redirect)\n> 1. 提升从库 （把原来的shadow-master改成master）\n> 2. 修改配置（靠服务，hash取模）\n> 3. 接触旧的双主；新增新的双主；删除旧的数据（余0的主，可以将余2的数据删除掉）\n![db-mater](/images/technology/snowflake-64bit.jpg)\n\n\nP.S.:\n> - 分布式领域CAP理论：\n> - Consistency(一致性), 数据一致更新，所有数据变动都是同步的\n> - Availability(可用性), 好的响应性能\n> - Partition tolerance(分区容错性) 可靠性\n> - 任何分布式系统只可同时满足二点，没法三者兼顾。 \n> - 忠告：不要将精力浪费在如何设计能满足三者的完美分布式系统，而是进行取舍。","source":"_posts/2016/design-mysql.md","raw":"---\ntitle: 数据库设计\ndate: 2016-01-28 17:21:06\nupdated: 2016-01-28 17:21:06\ntags:\n- mysql\ncategories:\n---\n\n# 数据库的基本概念\n基本概念就一页PPT，让大家就一些数据库方面的概念达成一致。\n\n1. “单库”。\n\n2. “分片”，也就是水平切分，它是用来解决数据量大的问题。有一些数据库支持auto sharding，自动分片，例如mongoDB，后来发现auto sharding不太可控，不知道什么时候会进行数据迁移，数据迁移过程中会有大粒度的锁，读写被阻塞，业务会有抖动和毛刺，这些是业务不能接受的。\n\n<!-- more -->\n一旦进行分片，就会面临“数据路由”的问题，来了一个请求，要将请求路由到对应的数据库分片上。互联网常用的数据路由方法有三种：\n1. 一个是按照数据范围路由，比如有两个分片，一个范围是0-1亿，一个范围是1亿-2亿，这样来路由。\n这个方式的优点是非常的简单，并且扩展性好，假如两个分片不够了，增加一个2亿-3亿的分片即可。\n这个方式的缺点是：虽然数据的分布是均衡的，每一个库的数据量差不多，但请求的负载会不均衡。例如有一些业务场景，新注册的用户活跃度更高，大范围的分片请求负载会更高。\n\n2. 二个是按照hash路由，比如有两个分片，数据模2寻库即可。\n这个方式的优点是路由方式很简单，数据分布也是均衡的，请求负载也是均衡的。\n这个方式的缺点是如果两个分片数据量过大，要变成三个分片，数据迁移会比较麻烦，即扩展性会受限。\n\n3. 三个是路由服务。前面两个数据路由方法均有一个缺点，业务线需要耦合路由规则，如果路由规则发生变化，业务线是需要配合升级的。路由服务可以实现业务线与路由规则的解耦，业务线每次访问数据库之前先调用路由服务，来知道数据究竟存放在哪个分库上。\n\n\n3. “分组”与“复制”，这解决的是扩展读性能，保证读高可用的问题。\n大部分互联网的业务都是读多写少。\n淘宝、京东查询商品，搜索商品的请求可能占了99%，只有下单和支付的时候有写请求。\n58同城搜索帖子，察看列表页，查看详情页都是读请求，发布帖子是写请求，写请求的量也是比较少的。\n大部分互联网的场景都读多写少，一般来说读性能会最先成为瓶颈，怎么快速解决这个问题呢？\n\n我们通常使用**读写分离**，扩充读库的方式来提升系统的读性能，同时多个读库也保证了读的可用性，一台读库挂了，另外一台读库可以持续的提供服务。\n\n\n# 可用性架构实践\n数据库大家都用，平时除了根据业务设计表结构，根据访问来设计索引之外，还应该在设计时考虑数据的可用性，可用性又分为读的高可用与写的高可用。\n\n上图是“读”高可用的常见玩法，我们是怎么样保证读库的高可用的呢？解决高可用这个问题的思路是冗余。\n解决站点的可用性问题冗余多个站点，解决服务的可用性问题冗余多个服务，解决数据的可用性问题冗余多份数据。\n如果用一个读库，保证不了读高可用，就复制读库，一个读库挂了另一个仍然可以提供服务，这么用复制的方式来保证读的可用性。\n\n数据的冗余会引发一个副作用，就是一致性的问题。\n如果是单库，读和写都落在同一个库上，每次读到的都是最新的数据库，不存在一致性的问题。\n但是为了保证可用性将数据复制到多个地方，而这多个地方的数据绝对不是实时同步的，会有同步时延，所以有可能会读到旧的数据。如何解决主从数据库一致性问题我们在后面再来讲。\n\n很多互联网公司的数据库软件架构都是一主两从或者一主三从，不能够保证“写”的高可用，因为写其实还是只有一个库，仍是单点，如果这个库挂了的话，写会受影响。那小伙伴们为什么还使用这个架构呢？\n我刚才提到大部分互联网公司99%的业务都是“读”业务，写库不是主要矛盾，写库挂了，可能只有1%的用户会受影响。\n如果要做到“写”的高可用，对数据库软件架构的冲击比较大，不一定值得，为了解决1%的问题引入了80%的复杂度，所以很多互联网公司都没有解决写数据库的高可用的问题。\n\n\n怎么来解决写的高可用问题呢？思路还是**冗余**，读的高可用是冗余读库，写的高可用是冗余写库。把一个写变成两个写，做一个**双主同步**，一个挂了的话，可以将写的流量自动切到另外一个，写库的高可用性。\n\n用双主同步的方式保证写高可用性会存在什么样的问题？\n\n刚才提到，用冗余的方式保证可用性会存在一致性问题。因为两个主相互同步，这个同步是有时延的，很多公司用到auto-increment-id这样的一些数据库的特性，**如果用双主同步的架构，一个主id由10变成11，在数据没有同步过去之前，另一个主又来了一个写请求，也由10变成11，双向同步会主键冲突，同步失败，造成数据丢失**。\n\n\n解决这个双主同步id冲突的方案有两种：\n1. 一个是双主使用不同的初始值，相同的步长来生成id，一个库从0开始（生成02468），一个库从1开始（生成13579），步长都为2，这样两边同步数据就不会冲突。\n2. 另一个方式是不要使用数据库的auto-increment-id，而由业务层来保证生成的id不冲突。[参考](http://changyuan.github.io/2015/12/04/gen-id-way/)\n3. 使用的是“双主”当“主从”的方式来保证数据库的读写可用性,虽然看上去是双主同步，但是读写都在一个主上，另一个主库没有读写流量，完全是备份。当一个主库挂掉的时候，流量会自动的切换到另外一个主库上，这一切对业务线都是透明的，自动完成。但缺点有两个：\n\t- 数据库资源利用率只有50%；\n\t- 没有办法通过增加读库的方式来扩展系统的读性能；\n\n\n# 读性能架构实践\n\n如何增加数据库的读性能，先看下传统的玩法：\n\n1. 增加从库，通过增加从库来提升读性能，缺点是什么呢？从库越多，写的性能越慢，同步的时间越长，不一致的可能性越高。\n2. 增加缓存，缓存是大家用的非常多的一种提高系统读性能方法，特别是对于读多写少的互联网场景非常的有效。上游是业务线，下游是读写分离主从同步和一个cache。\n对于写操作：**会先淘汰cache，再写数据库**。\n对于读操作：先读cache，如果cache hit则返回数据，如果cache miss则读从库，然后把读出来的数据再入缓存。\n\ncache玩法在一种异常时序下，会引发严重的一致性问题，考虑这样一个特殊的时序：\n1. 先来了一个写请求，淘汰了cache，写了数据库；\n2. 又来了一个读请求，读cache，cache miss了，然后读从库，此时写请求还没有同步到从库上，于是读了一个脏数据，接着脏数据入缓存；\n3. 最后主从同步完成，这个时序会导致脏数据一直在缓存中没有办法被淘汰掉，数据库和缓存中的数据严重不一致。\n\n\n# 一致性架构实践\n\n58同城采用“服务+缓存+数据库”一套的方式来保证数据的一致性，由于58同城使用“双主当主从用”的数据库读写高可用架构，读写都在一个主库上，不会读到所谓“读库的脏数据”，所以数据库与缓存的不一致情况也不会存在。\n\n主从为什么会不一致？刚才提到读写会有时延，有可能读到从库上的旧数据。常见的方法是引入中间件，业务层不直接访问数据库，而是通过中间件访问数据库，这个中间件会记录哪一些key上发生了写请求，在数据主从同步时间窗口之内，如果key上又出了读请求，就将这个请求也路由到主库上去（因为此时从库可能还没有同步完成，是旧数据），使用这个方法来保证数据的一致性。\n\n中间件的方案很理想，那为什么大部分的互联网的公司都没有使用这种方案来保证主从数据的一致性呢？那是因为数据库中间件的技术门槛比较高，有一些大公司，例如百度，腾讯，阿里他们可能有自己的中间件，并不是所有的创业公司互联网公司有自己的中间件产品，况且很多互联网公司的业务对数据一致性的要求并没有那么高。比如说同城搜一个帖子，可能5秒钟之后才搜出来，对用户的体验并没有多大的影响。\n\n\n除了中间件，读写都路由到主库，58同城就是这么干的，也是一种解决主从不一致的常用方案。\n\n解决完主从不一致，第二个要解决的是数据库和缓存的不一致，刚才提到cache传统的玩法，脏数据有可能入cache，我们怎么解决呢？\n两个实践：第一个是缓存双淘汰机制，第二个是建议为所有item设定过期时间（前提是允许cache miss）。\n（1）缓存双淘汰，传统的玩法在进行写操作的时候，先淘汰cache再写主库。上文提到，在主从同步时间窗口之内可能有脏数据入cache，此时如果再发起一个异步的淘汰，即使不一致时间窗内脏数据入了cache，也会再次淘汰掉。\n（2）为所有item设定超时时间，例如10分钟。极限时序下，即使有脏数据入cache，这个脏数据也最多存在十分钟。带来的副作用是，可能每十分钟，这个key上有一个读请求会穿透到数据库上，但我们认为这对数据库的从库压力增加是非常小的。\n\n# 扩展性架构实践\n扩展性也是架构师在做数据库架构设计的时候需要考虑的一点。我分享一个58同城非常帅气的秒级数据扩容的方案。这个方案解决什么问题呢？原来数据库水平切分成N个库，现在要扩容成2N个库，要解决这个问题。\n\n假设原来分成两个库，假设按照hash的方式分片，如上图分为奇数库和偶数库。\n\n\n第一个步骤提升从库，底下一个从库放到上面来（其实什么动作都没有做）；\n第二个步骤修改配置，此时扩容完成，原来是2个分片，修改配置后变成4个分片，这个过程没有数据的迁移。原来偶数的那一部分现在变成了两个部分，一部分是0，一部分是2，奇数的部分现在变成1和3。0库和2库没有数据冲突，只是扩容之后在短时间内双主的可用性这个特性丢失掉了。\n\n\n第三个步骤还要做一些收尾操作：把旧的双主给解除掉，为了保证可用性增加新的双主同步，原来拥有全部的数据，现在只为一半的数据提供服务了，我们把多余的数据删除掉，结尾这三个步骤可以事后慢慢操作。整个扩容在过程在第二步提升从库，修改配置其实就秒级完成了，非常的帅气。\n这个方案的缺点是只能实现N库到2N 库的扩容，2变4、4变8，不能实现2库变3库，2库变5库的扩容，如何能够实现这种扩容呢？\n\n数据库扩展性方面有很多的需求，例如刚才说的2库扩3库，2库扩5库。产品经理经常变化需求，扩充表的属性也是经常的事情，今年的数据库大会同行也介绍了一些使用触发器来做online schema change的方案，但是触发器的局限性在于：\n第一、触发器对数据库性能的影响比较大；\n第二、触发器只能在同一个库上才有效，而互联网的场景特点是数据量非常大，并发量非常大，库都分布在不同的物理机器上，触发器没法弄。\n最后还有一类扩展性需求，底层存储介质发生变化，原来是mongodb存储，现在要变为mysql存储，这也是扩展性需求（虽然很少），这三类需求怎么扩展？\n\n方法是导库，迁移数据，迁移数据有几种做法，第一种停服务，如果大家的业务能够接受这种方法，强烈建议使用这种方法，例如有一些游戏公司，晚上一点到两点服务器维护，可能就是在干分区或者合区这类导库的事情。\n\n\n如果业务上不允许停服务，想做到平滑迁移，双写法可以解决这类问题。\n（1）双写法迁移数据的第一步是升级服务，原来的服务是写一个库，现在建立新的数据库，双写。比如底层存储介质的变化，我们原来是mongo数据库，现在建立好新的mysql数据库，然后对服务的所有写接口进行双库写升级。\n\n（2）第二步写一个小程序去进行数据的迁移。比如写一个离线的程序，把两个库的数据重新分片，分到三个库里。也可能是把一个只有三个属性的用户表导到五个属性的数据表里面。这个数据迁移要限速，导完之后两个库的数据一致吗？只要提前双写，如果没有什么意外，两边的数据应该是一致的。\n什么时候会有意外呢？在导某一条数据的过程当中正好发生了一个删除操作，这个数据刚被服务双写删除，又被迁移数据的程序插入到了新库中，这种非常极限的情况下会造成两边的数据不一致。\n\n（3）建议第三步再开发一个小脚本，对两边的数据进行比对，如果发现了不一致，就将数据修复。当修复完成之后，我们认为数据是一致的，再将双写又变成单写，数据完成迁移。\n这个方式的优点：\n第一、改动是非常小的，对服务的影响比较小，单写变双写，开发两个小工具，一个是迁移程序，从一个库读数据，另外一个库插进去；还有一个数据校验程序，两个数据进行比对，改动是比较小的。\n第二、随时可回滚的，方案风险比较小，在任何一个步骤如果发现问题，可以随时停止操作。比如迁移数据的过程当中发现不对，就把新的数据库干掉，重新再迁。因为在切换之前，所有线上的读服务和写服务都是旧库提供，只有切了以后，才是新库提供的服务。这是我们非常帅气的一个平滑导库的方式。\n\n# 总结\n- 分片解决的是数据量大的问题，\n- 复制和分组解决的是提高读性能，保证读的可用性的问题。\n- 分片会引入路由，常用的三种路由的方法，按照范围、按照hash，或者新增服务来路由。\n- 怎么保证数据的**可用性**，保证数据可用性的思路是**冗余**，但会引发数据的不一致，可用性的实践是**双主当主从用**，读写流量都在一个库上，另一个库standby，一个主库挂掉流量自动迁移到另外一个主库，只是资源利用率是50%，并且不能通过增加从库的方式提高读性。\n- 读性能的实践：传统的玩法是**增加从库**或者**增加缓存**。存在的问题是：主从可能不一致，同城的玩法是**服务+数据库+缓存**一套的方式来解决这些问题。\n- 一致性的实践，解决主从不一致性有两种方法:\n增加中间件: 中间件记录哪些key上发生了写操作，在主从同步时间窗口之内的读操作也路由到主库。\n强制读主: 数据库与缓存的一致性，我们的实践是双淘汰，在发生写请求的时候，淘汰缓存，写入数据库，再做一个延时的缓存淘汰操作。第二个实践是建议为所有的item设置一个超时时间。\n\n[如何秒级扩容的结构？](http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&mid=400465735&idx=1&sn=8d7067de4cc8f73ea5558f07e0a9340e&scene=21#wechat_redirect)\n> 1. 提升从库 （把原来的shadow-master改成master）\n> 2. 修改配置（靠服务，hash取模）\n> 3. 接触旧的双主；新增新的双主；删除旧的数据（余0的主，可以将余2的数据删除掉）\n![db-mater](/images/technology/snowflake-64bit.jpg)\n\n\nP.S.:\n> - 分布式领域CAP理论：\n> - Consistency(一致性), 数据一致更新，所有数据变动都是同步的\n> - Availability(可用性), 好的响应性能\n> - Partition tolerance(分区容错性) 可靠性\n> - 任何分布式系统只可同时满足二点，没法三者兼顾。 \n> - 忠告：不要将精力浪费在如何设计能满足三者的完美分布式系统，而是进行取舍。","slug":"design-mysql","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9m001fwsnnhvrjvyi6","content":"<h1 id=\"数据库的基本概念\"><a href=\"#数据库的基本概念\" class=\"headerlink\" title=\"数据库的基本概念\"></a>数据库的基本概念</h1><p>基本概念就一页PPT，让大家就一些数据库方面的概念达成一致。</p>\n<ol>\n<li><p>“单库”。</p>\n</li>\n<li><p>“分片”，也就是水平切分，它是用来解决数据量大的问题。有一些数据库支持auto sharding，自动分片，例如mongoDB，后来发现auto sharding不太可控，不知道什么时候会进行数据迁移，数据迁移过程中会有大粒度的锁，读写被阻塞，业务会有抖动和毛刺，这些是业务不能接受的。</p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<p>一旦进行分片，就会面临“数据路由”的问题，来了一个请求，要将请求路由到对应的数据库分片上。互联网常用的数据路由方法有三种：</p>\n<ol>\n<li><p>一个是按照数据范围路由，比如有两个分片，一个范围是0-1亿，一个范围是1亿-2亿，这样来路由。<br>这个方式的优点是非常的简单，并且扩展性好，假如两个分片不够了，增加一个2亿-3亿的分片即可。<br>这个方式的缺点是：虽然数据的分布是均衡的，每一个库的数据量差不多，但请求的负载会不均衡。例如有一些业务场景，新注册的用户活跃度更高，大范围的分片请求负载会更高。</p>\n</li>\n<li><p>二个是按照hash路由，比如有两个分片，数据模2寻库即可。<br>这个方式的优点是路由方式很简单，数据分布也是均衡的，请求负载也是均衡的。<br>这个方式的缺点是如果两个分片数据量过大，要变成三个分片，数据迁移会比较麻烦，即扩展性会受限。</p>\n</li>\n<li><p>三个是路由服务。前面两个数据路由方法均有一个缺点，业务线需要耦合路由规则，如果路由规则发生变化，业务线是需要配合升级的。路由服务可以实现业务线与路由规则的解耦，业务线每次访问数据库之前先调用路由服务，来知道数据究竟存放在哪个分库上。</p>\n</li>\n</ol>\n<ol>\n<li>“分组”与“复制”，这解决的是扩展读性能，保证读高可用的问题。<br>大部分互联网的业务都是读多写少。<br>淘宝、京东查询商品，搜索商品的请求可能占了99%，只有下单和支付的时候有写请求。<br>58同城搜索帖子，察看列表页，查看详情页都是读请求，发布帖子是写请求，写请求的量也是比较少的。<br>大部分互联网的场景都读多写少，一般来说读性能会最先成为瓶颈，怎么快速解决这个问题呢？</li>\n</ol>\n<p>我们通常使用<strong>读写分离</strong>，扩充读库的方式来提升系统的读性能，同时多个读库也保证了读的可用性，一台读库挂了，另外一台读库可以持续的提供服务。</p>\n<h1 id=\"可用性架构实践\"><a href=\"#可用性架构实践\" class=\"headerlink\" title=\"可用性架构实践\"></a>可用性架构实践</h1><p>数据库大家都用，平时除了根据业务设计表结构，根据访问来设计索引之外，还应该在设计时考虑数据的可用性，可用性又分为读的高可用与写的高可用。</p>\n<p>上图是“读”高可用的常见玩法，我们是怎么样保证读库的高可用的呢？解决高可用这个问题的思路是冗余。<br>解决站点的可用性问题冗余多个站点，解决服务的可用性问题冗余多个服务，解决数据的可用性问题冗余多份数据。<br>如果用一个读库，保证不了读高可用，就复制读库，一个读库挂了另一个仍然可以提供服务，这么用复制的方式来保证读的可用性。</p>\n<p>数据的冗余会引发一个副作用，就是一致性的问题。<br>如果是单库，读和写都落在同一个库上，每次读到的都是最新的数据库，不存在一致性的问题。<br>但是为了保证可用性将数据复制到多个地方，而这多个地方的数据绝对不是实时同步的，会有同步时延，所以有可能会读到旧的数据。如何解决主从数据库一致性问题我们在后面再来讲。</p>\n<p>很多互联网公司的数据库软件架构都是一主两从或者一主三从，不能够保证“写”的高可用，因为写其实还是只有一个库，仍是单点，如果这个库挂了的话，写会受影响。那小伙伴们为什么还使用这个架构呢？<br>我刚才提到大部分互联网公司99%的业务都是“读”业务，写库不是主要矛盾，写库挂了，可能只有1%的用户会受影响。<br>如果要做到“写”的高可用，对数据库软件架构的冲击比较大，不一定值得，为了解决1%的问题引入了80%的复杂度，所以很多互联网公司都没有解决写数据库的高可用的问题。</p>\n<p>怎么来解决写的高可用问题呢？思路还是<strong>冗余</strong>，读的高可用是冗余读库，写的高可用是冗余写库。把一个写变成两个写，做一个<strong>双主同步</strong>，一个挂了的话，可以将写的流量自动切到另外一个，写库的高可用性。</p>\n<p>用双主同步的方式保证写高可用性会存在什么样的问题？</p>\n<p>刚才提到，用冗余的方式保证可用性会存在一致性问题。因为两个主相互同步，这个同步是有时延的，很多公司用到auto-increment-id这样的一些数据库的特性，<strong>如果用双主同步的架构，一个主id由10变成11，在数据没有同步过去之前，另一个主又来了一个写请求，也由10变成11，双向同步会主键冲突，同步失败，造成数据丢失</strong>。</p>\n<p>解决这个双主同步id冲突的方案有两种：</p>\n<ol>\n<li>一个是双主使用不同的初始值，相同的步长来生成id，一个库从0开始（生成02468），一个库从1开始（生成13579），步长都为2，这样两边同步数据就不会冲突。</li>\n<li>另一个方式是不要使用数据库的auto-increment-id，而由业务层来保证生成的id不冲突。<a href=\"http://changyuan.github.io/2015/12/04/gen-id-way/\">参考</a></li>\n<li>使用的是“双主”当“主从”的方式来保证数据库的读写可用性,虽然看上去是双主同步，但是读写都在一个主上，另一个主库没有读写流量，完全是备份。当一个主库挂掉的时候，流量会自动的切换到另外一个主库上，这一切对业务线都是透明的，自动完成。但缺点有两个：<ul>\n<li>数据库资源利用率只有50%；</li>\n<li>没有办法通过增加读库的方式来扩展系统的读性能；</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"读性能架构实践\"><a href=\"#读性能架构实践\" class=\"headerlink\" title=\"读性能架构实践\"></a>读性能架构实践</h1><p>如何增加数据库的读性能，先看下传统的玩法：</p>\n<ol>\n<li>增加从库，通过增加从库来提升读性能，缺点是什么呢？从库越多，写的性能越慢，同步的时间越长，不一致的可能性越高。</li>\n<li>增加缓存，缓存是大家用的非常多的一种提高系统读性能方法，特别是对于读多写少的互联网场景非常的有效。上游是业务线，下游是读写分离主从同步和一个cache。<br>对于写操作：<strong>会先淘汰cache，再写数据库</strong>。<br>对于读操作：先读cache，如果cache hit则返回数据，如果cache miss则读从库，然后把读出来的数据再入缓存。</li>\n</ol>\n<p>cache玩法在一种异常时序下，会引发严重的一致性问题，考虑这样一个特殊的时序：</p>\n<ol>\n<li>先来了一个写请求，淘汰了cache，写了数据库；</li>\n<li>又来了一个读请求，读cache，cache miss了，然后读从库，此时写请求还没有同步到从库上，于是读了一个脏数据，接着脏数据入缓存；</li>\n<li>最后主从同步完成，这个时序会导致脏数据一直在缓存中没有办法被淘汰掉，数据库和缓存中的数据严重不一致。</li>\n</ol>\n<h1 id=\"一致性架构实践\"><a href=\"#一致性架构实践\" class=\"headerlink\" title=\"一致性架构实践\"></a>一致性架构实践</h1><p>58同城采用“服务+缓存+数据库”一套的方式来保证数据的一致性，由于58同城使用“双主当主从用”的数据库读写高可用架构，读写都在一个主库上，不会读到所谓“读库的脏数据”，所以数据库与缓存的不一致情况也不会存在。</p>\n<p>主从为什么会不一致？刚才提到读写会有时延，有可能读到从库上的旧数据。常见的方法是引入中间件，业务层不直接访问数据库，而是通过中间件访问数据库，这个中间件会记录哪一些key上发生了写请求，在数据主从同步时间窗口之内，如果key上又出了读请求，就将这个请求也路由到主库上去（因为此时从库可能还没有同步完成，是旧数据），使用这个方法来保证数据的一致性。</p>\n<p>中间件的方案很理想，那为什么大部分的互联网的公司都没有使用这种方案来保证主从数据的一致性呢？那是因为数据库中间件的技术门槛比较高，有一些大公司，例如百度，腾讯，阿里他们可能有自己的中间件，并不是所有的创业公司互联网公司有自己的中间件产品，况且很多互联网公司的业务对数据一致性的要求并没有那么高。比如说同城搜一个帖子，可能5秒钟之后才搜出来，对用户的体验并没有多大的影响。</p>\n<p>除了中间件，读写都路由到主库，58同城就是这么干的，也是一种解决主从不一致的常用方案。</p>\n<p>解决完主从不一致，第二个要解决的是数据库和缓存的不一致，刚才提到cache传统的玩法，脏数据有可能入cache，我们怎么解决呢？<br>两个实践：第一个是缓存双淘汰机制，第二个是建议为所有item设定过期时间（前提是允许cache miss）。<br>（1）缓存双淘汰，传统的玩法在进行写操作的时候，先淘汰cache再写主库。上文提到，在主从同步时间窗口之内可能有脏数据入cache，此时如果再发起一个异步的淘汰，即使不一致时间窗内脏数据入了cache，也会再次淘汰掉。<br>（2）为所有item设定超时时间，例如10分钟。极限时序下，即使有脏数据入cache，这个脏数据也最多存在十分钟。带来的副作用是，可能每十分钟，这个key上有一个读请求会穿透到数据库上，但我们认为这对数据库的从库压力增加是非常小的。</p>\n<h1 id=\"扩展性架构实践\"><a href=\"#扩展性架构实践\" class=\"headerlink\" title=\"扩展性架构实践\"></a>扩展性架构实践</h1><p>扩展性也是架构师在做数据库架构设计的时候需要考虑的一点。我分享一个58同城非常帅气的秒级数据扩容的方案。这个方案解决什么问题呢？原来数据库水平切分成N个库，现在要扩容成2N个库，要解决这个问题。</p>\n<p>假设原来分成两个库，假设按照hash的方式分片，如上图分为奇数库和偶数库。</p>\n<p>第一个步骤提升从库，底下一个从库放到上面来（其实什么动作都没有做）；<br>第二个步骤修改配置，此时扩容完成，原来是2个分片，修改配置后变成4个分片，这个过程没有数据的迁移。原来偶数的那一部分现在变成了两个部分，一部分是0，一部分是2，奇数的部分现在变成1和3。0库和2库没有数据冲突，只是扩容之后在短时间内双主的可用性这个特性丢失掉了。</p>\n<p>第三个步骤还要做一些收尾操作：把旧的双主给解除掉，为了保证可用性增加新的双主同步，原来拥有全部的数据，现在只为一半的数据提供服务了，我们把多余的数据删除掉，结尾这三个步骤可以事后慢慢操作。整个扩容在过程在第二步提升从库，修改配置其实就秒级完成了，非常的帅气。<br>这个方案的缺点是只能实现N库到2N 库的扩容，2变4、4变8，不能实现2库变3库，2库变5库的扩容，如何能够实现这种扩容呢？</p>\n<p>数据库扩展性方面有很多的需求，例如刚才说的2库扩3库，2库扩5库。产品经理经常变化需求，扩充表的属性也是经常的事情，今年的数据库大会同行也介绍了一些使用触发器来做online schema change的方案，但是触发器的局限性在于：<br>第一、触发器对数据库性能的影响比较大；<br>第二、触发器只能在同一个库上才有效，而互联网的场景特点是数据量非常大，并发量非常大，库都分布在不同的物理机器上，触发器没法弄。<br>最后还有一类扩展性需求，底层存储介质发生变化，原来是mongodb存储，现在要变为mysql存储，这也是扩展性需求（虽然很少），这三类需求怎么扩展？</p>\n<p>方法是导库，迁移数据，迁移数据有几种做法，第一种停服务，如果大家的业务能够接受这种方法，强烈建议使用这种方法，例如有一些游戏公司，晚上一点到两点服务器维护，可能就是在干分区或者合区这类导库的事情。</p>\n<p>如果业务上不允许停服务，想做到平滑迁移，双写法可以解决这类问题。<br>（1）双写法迁移数据的第一步是升级服务，原来的服务是写一个库，现在建立新的数据库，双写。比如底层存储介质的变化，我们原来是mongo数据库，现在建立好新的mysql数据库，然后对服务的所有写接口进行双库写升级。</p>\n<p>（2）第二步写一个小程序去进行数据的迁移。比如写一个离线的程序，把两个库的数据重新分片，分到三个库里。也可能是把一个只有三个属性的用户表导到五个属性的数据表里面。这个数据迁移要限速，导完之后两个库的数据一致吗？只要提前双写，如果没有什么意外，两边的数据应该是一致的。<br>什么时候会有意外呢？在导某一条数据的过程当中正好发生了一个删除操作，这个数据刚被服务双写删除，又被迁移数据的程序插入到了新库中，这种非常极限的情况下会造成两边的数据不一致。</p>\n<p>（3）建议第三步再开发一个小脚本，对两边的数据进行比对，如果发现了不一致，就将数据修复。当修复完成之后，我们认为数据是一致的，再将双写又变成单写，数据完成迁移。<br>这个方式的优点：<br>第一、改动是非常小的，对服务的影响比较小，单写变双写，开发两个小工具，一个是迁移程序，从一个库读数据，另外一个库插进去；还有一个数据校验程序，两个数据进行比对，改动是比较小的。<br>第二、随时可回滚的，方案风险比较小，在任何一个步骤如果发现问题，可以随时停止操作。比如迁移数据的过程当中发现不对，就把新的数据库干掉，重新再迁。因为在切换之前，所有线上的读服务和写服务都是旧库提供，只有切了以后，才是新库提供的服务。这是我们非常帅气的一个平滑导库的方式。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><ul>\n<li>分片解决的是数据量大的问题，</li>\n<li>复制和分组解决的是提高读性能，保证读的可用性的问题。</li>\n<li>分片会引入路由，常用的三种路由的方法，按照范围、按照hash，或者新增服务来路由。</li>\n<li>怎么保证数据的<strong>可用性</strong>，保证数据可用性的思路是<strong>冗余</strong>，但会引发数据的不一致，可用性的实践是<strong>双主当主从用</strong>，读写流量都在一个库上，另一个库standby，一个主库挂掉流量自动迁移到另外一个主库，只是资源利用率是50%，并且不能通过增加从库的方式提高读性。</li>\n<li>读性能的实践：传统的玩法是<strong>增加从库</strong>或者<strong>增加缓存</strong>。存在的问题是：主从可能不一致，同城的玩法是<strong>服务+数据库+缓存</strong>一套的方式来解决这些问题。</li>\n<li>一致性的实践，解决主从不一致性有两种方法:<br>增加中间件: 中间件记录哪些key上发生了写操作，在主从同步时间窗口之内的读操作也路由到主库。<br>强制读主: 数据库与缓存的一致性，我们的实践是双淘汰，在发生写请求的时候，淘汰缓存，写入数据库，再做一个延时的缓存淘汰操作。第二个实践是建议为所有的item设置一个超时时间。</li>\n</ul>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=400465735&amp;idx=1&amp;sn=8d7067de4cc8f73ea5558f07e0a9340e&amp;scene=21#wechat_redirect\" target=\"_blank\" rel=\"external\">如何秒级扩容的结构？</a></p>\n<blockquote>\n<ol>\n<li>提升从库 （把原来的shadow-master改成master）</li>\n<li>修改配置（靠服务，hash取模）</li>\n<li>接触旧的双主；新增新的双主；删除旧的数据（余0的主，可以将余2的数据删除掉）<br><img src=\"/images/technology/snowflake-64bit.jpg\" alt=\"db-mater\"></li>\n</ol>\n</blockquote>\n<p>P.S.:</p>\n<blockquote>\n<ul>\n<li>分布式领域CAP理论：</li>\n<li>Consistency(一致性), 数据一致更新，所有数据变动都是同步的</li>\n<li>Availability(可用性), 好的响应性能</li>\n<li>Partition tolerance(分区容错性) 可靠性</li>\n<li>任何分布式系统只可同时满足二点，没法三者兼顾。 </li>\n<li>忠告：不要将精力浪费在如何设计能满足三者的完美分布式系统，而是进行取舍。</li>\n</ul>\n</blockquote>\n","excerpt":"<h1 id=\"数据库的基本概念\"><a href=\"#数据库的基本概念\" class=\"headerlink\" title=\"数据库的基本概念\"></a>数据库的基本概念</h1><p>基本概念就一页PPT，让大家就一些数据库方面的概念达成一致。</p>\n<ol>\n<li><p>“单库”。</p>\n</li>\n<li><p>“分片”，也就是水平切分，它是用来解决数据量大的问题。有一些数据库支持auto sharding，自动分片，例如mongoDB，后来发现auto sharding不太可控，不知道什么时候会进行数据迁移，数据迁移过程中会有大粒度的锁，读写被阻塞，业务会有抖动和毛刺，这些是业务不能接受的。</p>\n</li>\n</ol>","more":"<p>一旦进行分片，就会面临“数据路由”的问题，来了一个请求，要将请求路由到对应的数据库分片上。互联网常用的数据路由方法有三种：</p>\n<ol>\n<li><p>一个是按照数据范围路由，比如有两个分片，一个范围是0-1亿，一个范围是1亿-2亿，这样来路由。<br>这个方式的优点是非常的简单，并且扩展性好，假如两个分片不够了，增加一个2亿-3亿的分片即可。<br>这个方式的缺点是：虽然数据的分布是均衡的，每一个库的数据量差不多，但请求的负载会不均衡。例如有一些业务场景，新注册的用户活跃度更高，大范围的分片请求负载会更高。</p>\n</li>\n<li><p>二个是按照hash路由，比如有两个分片，数据模2寻库即可。<br>这个方式的优点是路由方式很简单，数据分布也是均衡的，请求负载也是均衡的。<br>这个方式的缺点是如果两个分片数据量过大，要变成三个分片，数据迁移会比较麻烦，即扩展性会受限。</p>\n</li>\n<li><p>三个是路由服务。前面两个数据路由方法均有一个缺点，业务线需要耦合路由规则，如果路由规则发生变化，业务线是需要配合升级的。路由服务可以实现业务线与路由规则的解耦，业务线每次访问数据库之前先调用路由服务，来知道数据究竟存放在哪个分库上。</p>\n</li>\n</ol>\n<ol>\n<li>“分组”与“复制”，这解决的是扩展读性能，保证读高可用的问题。<br>大部分互联网的业务都是读多写少。<br>淘宝、京东查询商品，搜索商品的请求可能占了99%，只有下单和支付的时候有写请求。<br>58同城搜索帖子，察看列表页，查看详情页都是读请求，发布帖子是写请求，写请求的量也是比较少的。<br>大部分互联网的场景都读多写少，一般来说读性能会最先成为瓶颈，怎么快速解决这个问题呢？</li>\n</ol>\n<p>我们通常使用<strong>读写分离</strong>，扩充读库的方式来提升系统的读性能，同时多个读库也保证了读的可用性，一台读库挂了，另外一台读库可以持续的提供服务。</p>\n<h1 id=\"可用性架构实践\"><a href=\"#可用性架构实践\" class=\"headerlink\" title=\"可用性架构实践\"></a>可用性架构实践</h1><p>数据库大家都用，平时除了根据业务设计表结构，根据访问来设计索引之外，还应该在设计时考虑数据的可用性，可用性又分为读的高可用与写的高可用。</p>\n<p>上图是“读”高可用的常见玩法，我们是怎么样保证读库的高可用的呢？解决高可用这个问题的思路是冗余。<br>解决站点的可用性问题冗余多个站点，解决服务的可用性问题冗余多个服务，解决数据的可用性问题冗余多份数据。<br>如果用一个读库，保证不了读高可用，就复制读库，一个读库挂了另一个仍然可以提供服务，这么用复制的方式来保证读的可用性。</p>\n<p>数据的冗余会引发一个副作用，就是一致性的问题。<br>如果是单库，读和写都落在同一个库上，每次读到的都是最新的数据库，不存在一致性的问题。<br>但是为了保证可用性将数据复制到多个地方，而这多个地方的数据绝对不是实时同步的，会有同步时延，所以有可能会读到旧的数据。如何解决主从数据库一致性问题我们在后面再来讲。</p>\n<p>很多互联网公司的数据库软件架构都是一主两从或者一主三从，不能够保证“写”的高可用，因为写其实还是只有一个库，仍是单点，如果这个库挂了的话，写会受影响。那小伙伴们为什么还使用这个架构呢？<br>我刚才提到大部分互联网公司99%的业务都是“读”业务，写库不是主要矛盾，写库挂了，可能只有1%的用户会受影响。<br>如果要做到“写”的高可用，对数据库软件架构的冲击比较大，不一定值得，为了解决1%的问题引入了80%的复杂度，所以很多互联网公司都没有解决写数据库的高可用的问题。</p>\n<p>怎么来解决写的高可用问题呢？思路还是<strong>冗余</strong>，读的高可用是冗余读库，写的高可用是冗余写库。把一个写变成两个写，做一个<strong>双主同步</strong>，一个挂了的话，可以将写的流量自动切到另外一个，写库的高可用性。</p>\n<p>用双主同步的方式保证写高可用性会存在什么样的问题？</p>\n<p>刚才提到，用冗余的方式保证可用性会存在一致性问题。因为两个主相互同步，这个同步是有时延的，很多公司用到auto-increment-id这样的一些数据库的特性，<strong>如果用双主同步的架构，一个主id由10变成11，在数据没有同步过去之前，另一个主又来了一个写请求，也由10变成11，双向同步会主键冲突，同步失败，造成数据丢失</strong>。</p>\n<p>解决这个双主同步id冲突的方案有两种：</p>\n<ol>\n<li>一个是双主使用不同的初始值，相同的步长来生成id，一个库从0开始（生成02468），一个库从1开始（生成13579），步长都为2，这样两边同步数据就不会冲突。</li>\n<li>另一个方式是不要使用数据库的auto-increment-id，而由业务层来保证生成的id不冲突。<a href=\"http://changyuan.github.io/2015/12/04/gen-id-way/\">参考</a></li>\n<li>使用的是“双主”当“主从”的方式来保证数据库的读写可用性,虽然看上去是双主同步，但是读写都在一个主上，另一个主库没有读写流量，完全是备份。当一个主库挂掉的时候，流量会自动的切换到另外一个主库上，这一切对业务线都是透明的，自动完成。但缺点有两个：<ul>\n<li>数据库资源利用率只有50%；</li>\n<li>没有办法通过增加读库的方式来扩展系统的读性能；</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"读性能架构实践\"><a href=\"#读性能架构实践\" class=\"headerlink\" title=\"读性能架构实践\"></a>读性能架构实践</h1><p>如何增加数据库的读性能，先看下传统的玩法：</p>\n<ol>\n<li>增加从库，通过增加从库来提升读性能，缺点是什么呢？从库越多，写的性能越慢，同步的时间越长，不一致的可能性越高。</li>\n<li>增加缓存，缓存是大家用的非常多的一种提高系统读性能方法，特别是对于读多写少的互联网场景非常的有效。上游是业务线，下游是读写分离主从同步和一个cache。<br>对于写操作：<strong>会先淘汰cache，再写数据库</strong>。<br>对于读操作：先读cache，如果cache hit则返回数据，如果cache miss则读从库，然后把读出来的数据再入缓存。</li>\n</ol>\n<p>cache玩法在一种异常时序下，会引发严重的一致性问题，考虑这样一个特殊的时序：</p>\n<ol>\n<li>先来了一个写请求，淘汰了cache，写了数据库；</li>\n<li>又来了一个读请求，读cache，cache miss了，然后读从库，此时写请求还没有同步到从库上，于是读了一个脏数据，接着脏数据入缓存；</li>\n<li>最后主从同步完成，这个时序会导致脏数据一直在缓存中没有办法被淘汰掉，数据库和缓存中的数据严重不一致。</li>\n</ol>\n<h1 id=\"一致性架构实践\"><a href=\"#一致性架构实践\" class=\"headerlink\" title=\"一致性架构实践\"></a>一致性架构实践</h1><p>58同城采用“服务+缓存+数据库”一套的方式来保证数据的一致性，由于58同城使用“双主当主从用”的数据库读写高可用架构，读写都在一个主库上，不会读到所谓“读库的脏数据”，所以数据库与缓存的不一致情况也不会存在。</p>\n<p>主从为什么会不一致？刚才提到读写会有时延，有可能读到从库上的旧数据。常见的方法是引入中间件，业务层不直接访问数据库，而是通过中间件访问数据库，这个中间件会记录哪一些key上发生了写请求，在数据主从同步时间窗口之内，如果key上又出了读请求，就将这个请求也路由到主库上去（因为此时从库可能还没有同步完成，是旧数据），使用这个方法来保证数据的一致性。</p>\n<p>中间件的方案很理想，那为什么大部分的互联网的公司都没有使用这种方案来保证主从数据的一致性呢？那是因为数据库中间件的技术门槛比较高，有一些大公司，例如百度，腾讯，阿里他们可能有自己的中间件，并不是所有的创业公司互联网公司有自己的中间件产品，况且很多互联网公司的业务对数据一致性的要求并没有那么高。比如说同城搜一个帖子，可能5秒钟之后才搜出来，对用户的体验并没有多大的影响。</p>\n<p>除了中间件，读写都路由到主库，58同城就是这么干的，也是一种解决主从不一致的常用方案。</p>\n<p>解决完主从不一致，第二个要解决的是数据库和缓存的不一致，刚才提到cache传统的玩法，脏数据有可能入cache，我们怎么解决呢？<br>两个实践：第一个是缓存双淘汰机制，第二个是建议为所有item设定过期时间（前提是允许cache miss）。<br>（1）缓存双淘汰，传统的玩法在进行写操作的时候，先淘汰cache再写主库。上文提到，在主从同步时间窗口之内可能有脏数据入cache，此时如果再发起一个异步的淘汰，即使不一致时间窗内脏数据入了cache，也会再次淘汰掉。<br>（2）为所有item设定超时时间，例如10分钟。极限时序下，即使有脏数据入cache，这个脏数据也最多存在十分钟。带来的副作用是，可能每十分钟，这个key上有一个读请求会穿透到数据库上，但我们认为这对数据库的从库压力增加是非常小的。</p>\n<h1 id=\"扩展性架构实践\"><a href=\"#扩展性架构实践\" class=\"headerlink\" title=\"扩展性架构实践\"></a>扩展性架构实践</h1><p>扩展性也是架构师在做数据库架构设计的时候需要考虑的一点。我分享一个58同城非常帅气的秒级数据扩容的方案。这个方案解决什么问题呢？原来数据库水平切分成N个库，现在要扩容成2N个库，要解决这个问题。</p>\n<p>假设原来分成两个库，假设按照hash的方式分片，如上图分为奇数库和偶数库。</p>\n<p>第一个步骤提升从库，底下一个从库放到上面来（其实什么动作都没有做）；<br>第二个步骤修改配置，此时扩容完成，原来是2个分片，修改配置后变成4个分片，这个过程没有数据的迁移。原来偶数的那一部分现在变成了两个部分，一部分是0，一部分是2，奇数的部分现在变成1和3。0库和2库没有数据冲突，只是扩容之后在短时间内双主的可用性这个特性丢失掉了。</p>\n<p>第三个步骤还要做一些收尾操作：把旧的双主给解除掉，为了保证可用性增加新的双主同步，原来拥有全部的数据，现在只为一半的数据提供服务了，我们把多余的数据删除掉，结尾这三个步骤可以事后慢慢操作。整个扩容在过程在第二步提升从库，修改配置其实就秒级完成了，非常的帅气。<br>这个方案的缺点是只能实现N库到2N 库的扩容，2变4、4变8，不能实现2库变3库，2库变5库的扩容，如何能够实现这种扩容呢？</p>\n<p>数据库扩展性方面有很多的需求，例如刚才说的2库扩3库，2库扩5库。产品经理经常变化需求，扩充表的属性也是经常的事情，今年的数据库大会同行也介绍了一些使用触发器来做online schema change的方案，但是触发器的局限性在于：<br>第一、触发器对数据库性能的影响比较大；<br>第二、触发器只能在同一个库上才有效，而互联网的场景特点是数据量非常大，并发量非常大，库都分布在不同的物理机器上，触发器没法弄。<br>最后还有一类扩展性需求，底层存储介质发生变化，原来是mongodb存储，现在要变为mysql存储，这也是扩展性需求（虽然很少），这三类需求怎么扩展？</p>\n<p>方法是导库，迁移数据，迁移数据有几种做法，第一种停服务，如果大家的业务能够接受这种方法，强烈建议使用这种方法，例如有一些游戏公司，晚上一点到两点服务器维护，可能就是在干分区或者合区这类导库的事情。</p>\n<p>如果业务上不允许停服务，想做到平滑迁移，双写法可以解决这类问题。<br>（1）双写法迁移数据的第一步是升级服务，原来的服务是写一个库，现在建立新的数据库，双写。比如底层存储介质的变化，我们原来是mongo数据库，现在建立好新的mysql数据库，然后对服务的所有写接口进行双库写升级。</p>\n<p>（2）第二步写一个小程序去进行数据的迁移。比如写一个离线的程序，把两个库的数据重新分片，分到三个库里。也可能是把一个只有三个属性的用户表导到五个属性的数据表里面。这个数据迁移要限速，导完之后两个库的数据一致吗？只要提前双写，如果没有什么意外，两边的数据应该是一致的。<br>什么时候会有意外呢？在导某一条数据的过程当中正好发生了一个删除操作，这个数据刚被服务双写删除，又被迁移数据的程序插入到了新库中，这种非常极限的情况下会造成两边的数据不一致。</p>\n<p>（3）建议第三步再开发一个小脚本，对两边的数据进行比对，如果发现了不一致，就将数据修复。当修复完成之后，我们认为数据是一致的，再将双写又变成单写，数据完成迁移。<br>这个方式的优点：<br>第一、改动是非常小的，对服务的影响比较小，单写变双写，开发两个小工具，一个是迁移程序，从一个库读数据，另外一个库插进去；还有一个数据校验程序，两个数据进行比对，改动是比较小的。<br>第二、随时可回滚的，方案风险比较小，在任何一个步骤如果发现问题，可以随时停止操作。比如迁移数据的过程当中发现不对，就把新的数据库干掉，重新再迁。因为在切换之前，所有线上的读服务和写服务都是旧库提供，只有切了以后，才是新库提供的服务。这是我们非常帅气的一个平滑导库的方式。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><ul>\n<li>分片解决的是数据量大的问题，</li>\n<li>复制和分组解决的是提高读性能，保证读的可用性的问题。</li>\n<li>分片会引入路由，常用的三种路由的方法，按照范围、按照hash，或者新增服务来路由。</li>\n<li>怎么保证数据的<strong>可用性</strong>，保证数据可用性的思路是<strong>冗余</strong>，但会引发数据的不一致，可用性的实践是<strong>双主当主从用</strong>，读写流量都在一个库上，另一个库standby，一个主库挂掉流量自动迁移到另外一个主库，只是资源利用率是50%，并且不能通过增加从库的方式提高读性。</li>\n<li>读性能的实践：传统的玩法是<strong>增加从库</strong>或者<strong>增加缓存</strong>。存在的问题是：主从可能不一致，同城的玩法是<strong>服务+数据库+缓存</strong>一套的方式来解决这些问题。</li>\n<li>一致性的实践，解决主从不一致性有两种方法:<br>增加中间件: 中间件记录哪些key上发生了写操作，在主从同步时间窗口之内的读操作也路由到主库。<br>强制读主: 数据库与缓存的一致性，我们的实践是双淘汰，在发生写请求的时候，淘汰缓存，写入数据库，再做一个延时的缓存淘汰操作。第二个实践是建议为所有的item设置一个超时时间。</li>\n</ul>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=400465735&amp;idx=1&amp;sn=8d7067de4cc8f73ea5558f07e0a9340e&amp;scene=21#wechat_redirect\">如何秒级扩容的结构？</a></p>\n<blockquote>\n<ol>\n<li>提升从库 （把原来的shadow-master改成master）</li>\n<li>修改配置（靠服务，hash取模）</li>\n<li>接触旧的双主；新增新的双主；删除旧的数据（余0的主，可以将余2的数据删除掉）<br><img src=\"/images/technology/snowflake-64bit.jpg\" alt=\"db-mater\"></li>\n</ol>\n</blockquote>\n<p>P.S.:</p>\n<blockquote>\n<ul>\n<li>分布式领域CAP理论：</li>\n<li>Consistency(一致性), 数据一致更新，所有数据变动都是同步的</li>\n<li>Availability(可用性), 好的响应性能</li>\n<li>Partition tolerance(分区容错性) 可靠性</li>\n<li>任何分布式系统只可同时满足二点，没法三者兼顾。 </li>\n<li>忠告：不要将精力浪费在如何设计能满足三者的完美分布式系统，而是进行取舍。</li>\n</ul>\n</blockquote>"},{"title":"flex布局","date":"2016-11-30T07:31:13.000Z","_content":"\n布局的传统解决方案，基于[盒状模型](https://developer.mozilla.org/en-US/docs/Web/CSS/box_model)，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，[垂直居中](https://css-tricks.com/centering-css-complete-guide/)就不容易实现。\n\nFlex是Flexible Box的缩写，意为\"弹性布局\"，用来为盒状模型提供最大的灵活性。\n任何一个容器都可以指定为Flex布局。\n<!-- more -->\n```css\n.box{\n  display: flex;\n  // display: inline-flex;\n}\n\n\n.box{\n  display: -webkit-flex; /* Safari */\n  display: flex;\n}\n```\n注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。\n采用Flex布局的元素，称为Flex容器（flex container），简称\"容器\"。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称\"项目\"。\n\n### 容器的属性\n\n1. flex-direction:\n>- row（默认值）：主轴为水平方向，起点在左端。\n>- row-reverse：主轴为水平方向，起点在右端。\n>- column：主轴为垂直方向，起点在上沿。\n>- column-reverse：主轴为垂直方向，起点在下沿。\n\n2. flex-wrap:\n nowrap | wrap | wrap-reverse\n\n3. flex-flow\nflex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。\n\n4. justify-content\n>- flex-start（默认值）：左对齐\n>- flex-end：右对齐\n>- center： 居中\n>- space-between：两端对齐，项目之间的间隔都相等。\n>- space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\n\n5. align-items\n>- flex-start：交叉轴的起点对齐。\n>- flex-end：交叉轴的终点对齐。\n>- center：交叉轴的中点对齐。\n>- baseline: 项目的第一行文字的基线对齐。\n>- stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\n\n6. align-content 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。\n>- flex-start：与交叉轴的起点对齐。\n>- flex-end：与交叉轴的终点对齐。\n>- center：与交叉轴的中点对齐。\n>- space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。\n>- space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。\n>- stretch（默认值）：轴线占满整个交叉轴。\n\n### 项目的属性\n\n1. order 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。\n2. flex-grow 定义项目的放大比例，默认为0，即如果存在**剩余空间**，也不放大。0 为默认不放大，为文本本身的长度，如果没有则不显示\n3. flex-shrink 属性定义了项目的缩小比例，默认为1，即**如果空间不足**，该项目将缩小。1 为默认，为原始大小，\n4. flex-basis  属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，**计算主轴是否有多余空间**。它的默认值为auto，即项目的本来大小\n5. flex  flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 0 auto。后两个属性可选。\n6. align-self  属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。\n7. margin : auto 设置\"margin\"值为\"auto\"值，自动获取弹性容器中剩余的空间。所以设置垂直方向margin值为\"auto\"。可以使弹性子元素在弹性容器的两上轴方向都**完全集中**。\n以下实例在第一个弹性子元素上设置了 margin-right: auto; 。 它将剩余的空间放置在元素的右侧：\n\nflex ：默认\t0 1 auto ; auto<=> \" 1 1 auto \"; none<=> \"0 0  auto\"\n参考一下代码，分别改变flex的三个值，去理解其中三个值的含义。\n当总长度-去flex-basis的值之后，根据剩余的空间或者缩小比例 来改变grow或者shrink的值。\n```html\n<style>\n#main {\n    width: 350px;\n    height: 100px;\n    border: 1px solid #c3c3c3;\n    display: flex;\n}\n#main div {\n    flex: 0 1 80px;\n}\n\n#main div:nth-of-type(5) {\n  flex: 0 1 30px;\n}\nflex-grow : \nflex-shrink: \n</style>\n</head>\n<body>\n\n<div id=\"main\">\n  <div style=\"background-color:coral;\">1</div>\n  <div style=\"background-color:lightblue;\">2</div>\n  <div style=\"background-color:khaki;\">3</div>\n  <div style=\"background-color:pink;\">4</div>\n  <div style=\"background-color:lightgrey;\">5</div>\n</div>\n```\n\n[示例](http://www.runoob.com/try/try.php?filename=trycss3_flexbox_margin)\n\n### DEMO\n\n[骰子](https://gist.github.com/changyuan/cce6e8818c038760d8cadccfd8f96824)\n[圣怀布局](https://gist.github.com/changyuan/02c14ca2aabc7107950d0056fa654522)\n[常用后台布局](https://gist.github.com/changyuan/77cfcd7344a8522b7e365865a0428c2d)","source":"_posts/2016/flex.md","raw":"---\ntitle: flex布局\ndate: 2016-11-30 15:31:13\ntags:\ncategories:\n---\n\n布局的传统解决方案，基于[盒状模型](https://developer.mozilla.org/en-US/docs/Web/CSS/box_model)，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，[垂直居中](https://css-tricks.com/centering-css-complete-guide/)就不容易实现。\n\nFlex是Flexible Box的缩写，意为\"弹性布局\"，用来为盒状模型提供最大的灵活性。\n任何一个容器都可以指定为Flex布局。\n<!-- more -->\n```css\n.box{\n  display: flex;\n  // display: inline-flex;\n}\n\n\n.box{\n  display: -webkit-flex; /* Safari */\n  display: flex;\n}\n```\n注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。\n采用Flex布局的元素，称为Flex容器（flex container），简称\"容器\"。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称\"项目\"。\n\n### 容器的属性\n\n1. flex-direction:\n>- row（默认值）：主轴为水平方向，起点在左端。\n>- row-reverse：主轴为水平方向，起点在右端。\n>- column：主轴为垂直方向，起点在上沿。\n>- column-reverse：主轴为垂直方向，起点在下沿。\n\n2. flex-wrap:\n nowrap | wrap | wrap-reverse\n\n3. flex-flow\nflex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。\n\n4. justify-content\n>- flex-start（默认值）：左对齐\n>- flex-end：右对齐\n>- center： 居中\n>- space-between：两端对齐，项目之间的间隔都相等。\n>- space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\n\n5. align-items\n>- flex-start：交叉轴的起点对齐。\n>- flex-end：交叉轴的终点对齐。\n>- center：交叉轴的中点对齐。\n>- baseline: 项目的第一行文字的基线对齐。\n>- stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\n\n6. align-content 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。\n>- flex-start：与交叉轴的起点对齐。\n>- flex-end：与交叉轴的终点对齐。\n>- center：与交叉轴的中点对齐。\n>- space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。\n>- space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。\n>- stretch（默认值）：轴线占满整个交叉轴。\n\n### 项目的属性\n\n1. order 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。\n2. flex-grow 定义项目的放大比例，默认为0，即如果存在**剩余空间**，也不放大。0 为默认不放大，为文本本身的长度，如果没有则不显示\n3. flex-shrink 属性定义了项目的缩小比例，默认为1，即**如果空间不足**，该项目将缩小。1 为默认，为原始大小，\n4. flex-basis  属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，**计算主轴是否有多余空间**。它的默认值为auto，即项目的本来大小\n5. flex  flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 0 auto。后两个属性可选。\n6. align-self  属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。\n7. margin : auto 设置\"margin\"值为\"auto\"值，自动获取弹性容器中剩余的空间。所以设置垂直方向margin值为\"auto\"。可以使弹性子元素在弹性容器的两上轴方向都**完全集中**。\n以下实例在第一个弹性子元素上设置了 margin-right: auto; 。 它将剩余的空间放置在元素的右侧：\n\nflex ：默认\t0 1 auto ; auto<=> \" 1 1 auto \"; none<=> \"0 0  auto\"\n参考一下代码，分别改变flex的三个值，去理解其中三个值的含义。\n当总长度-去flex-basis的值之后，根据剩余的空间或者缩小比例 来改变grow或者shrink的值。\n```html\n<style>\n#main {\n    width: 350px;\n    height: 100px;\n    border: 1px solid #c3c3c3;\n    display: flex;\n}\n#main div {\n    flex: 0 1 80px;\n}\n\n#main div:nth-of-type(5) {\n  flex: 0 1 30px;\n}\nflex-grow : \nflex-shrink: \n</style>\n</head>\n<body>\n\n<div id=\"main\">\n  <div style=\"background-color:coral;\">1</div>\n  <div style=\"background-color:lightblue;\">2</div>\n  <div style=\"background-color:khaki;\">3</div>\n  <div style=\"background-color:pink;\">4</div>\n  <div style=\"background-color:lightgrey;\">5</div>\n</div>\n```\n\n[示例](http://www.runoob.com/try/try.php?filename=trycss3_flexbox_margin)\n\n### DEMO\n\n[骰子](https://gist.github.com/changyuan/cce6e8818c038760d8cadccfd8f96824)\n[圣怀布局](https://gist.github.com/changyuan/02c14ca2aabc7107950d0056fa654522)\n[常用后台布局](https://gist.github.com/changyuan/77cfcd7344a8522b7e365865a0428c2d)","slug":"flex","published":1,"updated":"2017-01-04T05:16:27.969Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9m001gwsnnu01sparc","content":"<p>布局的传统解决方案，基于<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/box_model\" target=\"_blank\" rel=\"external\">盒状模型</a>，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，<a href=\"https://css-tricks.com/centering-css-complete-guide/\" target=\"_blank\" rel=\"external\">垂直居中</a>就不容易实现。</p>\n<p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。<br>任何一个容器都可以指定为Flex布局。<br><a id=\"more\"></a><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">  // display: inline-flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: -webkit-flex; /* Safari */</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。<br>采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。</p>\n<h3 id=\"容器的属性\"><a href=\"#容器的属性\" class=\"headerlink\" title=\"容器的属性\"></a>容器的属性</h3><ol>\n<li><p>flex-direction:</p>\n<blockquote>\n<ul>\n<li>row（默认值）：主轴为水平方向，起点在左端。</li>\n<li>row-reverse：主轴为水平方向，起点在右端。</li>\n<li>column：主轴为垂直方向，起点在上沿。</li>\n<li>column-reverse：主轴为垂直方向，起点在下沿。</li>\n</ul>\n</blockquote>\n</li>\n<li><p>flex-wrap:<br>nowrap | wrap | wrap-reverse</p>\n</li>\n<li><p>flex-flow<br>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p>\n</li>\n<li><p>justify-content</p>\n<blockquote>\n<ul>\n<li>flex-start（默认值）：左对齐</li>\n<li>flex-end：右对齐</li>\n<li>center： 居中</li>\n<li>space-between：两端对齐，项目之间的间隔都相等。</li>\n<li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li>\n</ul>\n</blockquote>\n</li>\n<li><p>align-items</p>\n<blockquote>\n<ul>\n<li>flex-start：交叉轴的起点对齐。</li>\n<li>flex-end：交叉轴的终点对齐。</li>\n<li>center：交叉轴的中点对齐。</li>\n<li>baseline: 项目的第一行文字的基线对齐。</li>\n<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li>\n</ul>\n</blockquote>\n</li>\n<li><p>align-content 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>\n<blockquote>\n<ul>\n<li>flex-start：与交叉轴的起点对齐。</li>\n<li>flex-end：与交叉轴的终点对齐。</li>\n<li>center：与交叉轴的中点对齐。</li>\n<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>\n<li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li>\n<li>stretch（默认值）：轴线占满整个交叉轴。</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"项目的属性\"><a href=\"#项目的属性\" class=\"headerlink\" title=\"项目的属性\"></a>项目的属性</h3><ol>\n<li>order 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</li>\n<li>flex-grow 定义项目的放大比例，默认为0，即如果存在<strong>剩余空间</strong>，也不放大。0 为默认不放大，为文本本身的长度，如果没有则不显示</li>\n<li>flex-shrink 属性定义了项目的缩小比例，默认为1，即<strong>如果空间不足</strong>，该项目将缩小。1 为默认，为原始大小，</li>\n<li>flex-basis  属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，<strong>计算主轴是否有多余空间</strong>。它的默认值为auto，即项目的本来大小</li>\n<li>flex  flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 0 auto。后两个属性可选。</li>\n<li>align-self  属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</li>\n<li>margin : auto 设置”margin”值为”auto”值，自动获取弹性容器中剩余的空间。所以设置垂直方向margin值为”auto”。可以使弹性子元素在弹性容器的两上轴方向都<strong>完全集中</strong>。<br>以下实例在第一个弹性子元素上设置了 margin-right: auto; 。 它将剩余的空间放置在元素的右侧：</li>\n</ol>\n<p>flex ：默认    0 1 auto ; auto&lt;=&gt; “ 1 1 auto “; none&lt;=&gt; “0 0  auto”<br>参考一下代码，分别改变flex的三个值，去理解其中三个值的含义。<br>当总长度-去flex-basis的值之后，根据剩余的空间或者缩小比例 来改变grow或者shrink的值。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span><br><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">350px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#c3c3c3</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">flex</span>: <span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">80px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:nth-of-type(5)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">flex-grow</span> : </span><br><span class=\"line\"><span class=\"selector-tag\">flex-shrink</span>: </span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color:coral;\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color:lightblue;\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color:khaki;\"</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color:pink;\"</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color:lightgrey;\"</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss3_flexbox_margin\" target=\"_blank\" rel=\"external\">示例</a></p>\n<h3 id=\"DEMO\"><a href=\"#DEMO\" class=\"headerlink\" title=\"DEMO\"></a>DEMO</h3><p><a href=\"https://gist.github.com/changyuan/cce6e8818c038760d8cadccfd8f96824\" target=\"_blank\" rel=\"external\">骰子</a><br><a href=\"https://gist.github.com/changyuan/02c14ca2aabc7107950d0056fa654522\" target=\"_blank\" rel=\"external\">圣怀布局</a><br><a href=\"https://gist.github.com/changyuan/77cfcd7344a8522b7e365865a0428c2d\" target=\"_blank\" rel=\"external\">常用后台布局</a></p>\n","excerpt":"<p>布局的传统解决方案，基于<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/box_model\">盒状模型</a>，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，<a href=\"https://css-tricks.com/centering-css-complete-guide/\">垂直居中</a>就不容易实现。</p>\n<p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。<br>任何一个容器都可以指定为Flex布局。<br>","more":"<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">  // display: inline-flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: -webkit-flex; /* Safari */</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。<br>采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。</p>\n<h3 id=\"容器的属性\"><a href=\"#容器的属性\" class=\"headerlink\" title=\"容器的属性\"></a>容器的属性</h3><ol>\n<li><p>flex-direction:</p>\n<blockquote>\n<ul>\n<li>row（默认值）：主轴为水平方向，起点在左端。</li>\n<li>row-reverse：主轴为水平方向，起点在右端。</li>\n<li>column：主轴为垂直方向，起点在上沿。</li>\n<li>column-reverse：主轴为垂直方向，起点在下沿。</li>\n</ul>\n</blockquote>\n</li>\n<li><p>flex-wrap:<br>nowrap | wrap | wrap-reverse</p>\n</li>\n<li><p>flex-flow<br>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p>\n</li>\n<li><p>justify-content</p>\n<blockquote>\n<ul>\n<li>flex-start（默认值）：左对齐</li>\n<li>flex-end：右对齐</li>\n<li>center： 居中</li>\n<li>space-between：两端对齐，项目之间的间隔都相等。</li>\n<li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li>\n</ul>\n</blockquote>\n</li>\n<li><p>align-items</p>\n<blockquote>\n<ul>\n<li>flex-start：交叉轴的起点对齐。</li>\n<li>flex-end：交叉轴的终点对齐。</li>\n<li>center：交叉轴的中点对齐。</li>\n<li>baseline: 项目的第一行文字的基线对齐。</li>\n<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li>\n</ul>\n</blockquote>\n</li>\n<li><p>align-content 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>\n<blockquote>\n<ul>\n<li>flex-start：与交叉轴的起点对齐。</li>\n<li>flex-end：与交叉轴的终点对齐。</li>\n<li>center：与交叉轴的中点对齐。</li>\n<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>\n<li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li>\n<li>stretch（默认值）：轴线占满整个交叉轴。</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"项目的属性\"><a href=\"#项目的属性\" class=\"headerlink\" title=\"项目的属性\"></a>项目的属性</h3><ol>\n<li>order 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</li>\n<li>flex-grow 定义项目的放大比例，默认为0，即如果存在<strong>剩余空间</strong>，也不放大。0 为默认不放大，为文本本身的长度，如果没有则不显示</li>\n<li>flex-shrink 属性定义了项目的缩小比例，默认为1，即<strong>如果空间不足</strong>，该项目将缩小。1 为默认，为原始大小，</li>\n<li>flex-basis  属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，<strong>计算主轴是否有多余空间</strong>。它的默认值为auto，即项目的本来大小</li>\n<li>flex  flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 0 auto。后两个属性可选。</li>\n<li>align-self  属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</li>\n<li>margin : auto 设置”margin”值为”auto”值，自动获取弹性容器中剩余的空间。所以设置垂直方向margin值为”auto”。可以使弹性子元素在弹性容器的两上轴方向都<strong>完全集中</strong>。<br>以下实例在第一个弹性子元素上设置了 margin-right: auto; 。 它将剩余的空间放置在元素的右侧：</li>\n</ol>\n<p>flex ：默认    0 1 auto ; auto&lt;=&gt; “ 1 1 auto “; none&lt;=&gt; “0 0  auto”<br>参考一下代码，分别改变flex的三个值，去理解其中三个值的含义。<br>当总长度-去flex-basis的值之后，根据剩余的空间或者缩小比例 来改变grow或者shrink的值。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span><br><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">350px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#c3c3c3</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">flex</span>: <span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">80px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:nth-of-type(5)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">flex-grow</span> : </span><br><span class=\"line\"><span class=\"selector-tag\">flex-shrink</span>: </span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color:coral;\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color:lightblue;\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color:khaki;\"</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color:pink;\"</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color:lightgrey;\"</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss3_flexbox_margin\">示例</a></p>\n<h3 id=\"DEMO\"><a href=\"#DEMO\" class=\"headerlink\" title=\"DEMO\"></a>DEMO</h3><p><a href=\"https://gist.github.com/changyuan/cce6e8818c038760d8cadccfd8f96824\">骰子</a><br><a href=\"https://gist.github.com/changyuan/02c14ca2aabc7107950d0056fa654522\">圣怀布局</a><br><a href=\"https://gist.github.com/changyuan/77cfcd7344a8522b7e365865a0428c2d\">常用后台布局</a></p>"},{"title":"【转】赶集Mysql军规","date":"2016-01-28T05:52:43.000Z","updated":"2016-01-28T05:52:43.000Z","_content":"\n写在前面:\n\n++ 总是在灾难发生后，才想起容灾的重要性；总是在吃过亏后，才记得曾经有人提醒过。++\n\n# 核心军规\n1. 不在数据库做运算：cpu计算务必移至业务层\n2. 控制单表数据量：单表记录控制在1000w\n3. 控制列数量：字段数控制在20以内\n4. 平衡范式与冗余：为提高效率牺牲范式设计，冗余数据\n5. 拒绝3B：拒绝大sql，大事物，大批量\n\n<!-- more -->\n\n# 字段类军规\n\n7. 用好数值类型\n- tinyint(1Byte)\n- smallint(2Byte)\n- mediumint(3Byte)\n- int(4Byte)\n- bigint(8Byte)\n- bad case：int(1)/int(11)\n\n8. 字符转化为数字\n- 用int而不是char(15)存储ip\n- 优先使用enum或set,例如：`sex` enum (‘F’, ‘M’)\n- 避免使用NULL字段；NULL字段很难查询优化；NULL字段的索引需要额外空间；NULL字段的复合索引无效\n```sql\nbad case：\n`name` char(32) default null\n`age` int not null\ngood case：\n`age` int not null default 0\n```\n9. 少用text/blob\nvarchar的性能会比text高很多；实在避免不了blob，请拆表;不在数据库里存图片：是否需要解释？\n\n# 索引类军规\n12. 谨慎合理使用索引；改善查询、减慢更新；索引一定不是越多越好（能不加就不加，要加的一定得加）；覆盖记录条数过多不适合建索引，例如“性别”\n13. 字符字段必须建前缀索引\n14. 不在索引做列运算：`select id where age +1 = 10;`\n15. innodb主键推荐使用自增列（SK：博主不认可）;主键建立聚簇索引;主键不应该被修改；字符串不应该做主键；如果不指定主键，innodb会使用唯一且非空值索引代替\n16. 不用外键；请由程序保证约束\n\n# sql类军规\n17. sql语句尽可能简单；一条sql只能在一个cpu运算；大语句拆小语句，减少锁时间；一条大sql可以堵死整个库\n18. 简单的事务,事务时间尽可能短。不好的例子：上传图片事务\n19. 避免使用trig/func；触发器、函数不用；客户端程序取而代之\n20. 不用select * ： 消耗cpu，io，内存，带宽，这种程序不具有扩展性\n21. OR改写为IN()；`or`的效率是n级别；`in`的消息时log(n)级别；in的个数建议控制在200以内\n```sql\nselect id from t where phone=’159′ or phone=’136′;\n=>\nselect id from t where phone in (’159′, ’136′);\n```\n22. OR改写为UNION\nmysql的索引合并很弱智\n```sql\nselect id from t where phone = ’159′ or name = ‘john’;\n=>\nselect id from t where phone=’159′\nunion\nselect id from t where name=’jonh’\n```\n23. 避免负向%\n24. 慎用count(*)\n25. limit高效分页\nlimit越大，效率越低\n```sql\nselect id from t limit 10000, 10;\n=>\nselect id from t where id > 10000 limit 10;\n```\n26. 使用`union all`替代`union`, `union`有去重开销\n27. 少用连接join\n28. 使用group by,分组,自动排序\n29. 请使用同类型比较\n30. 使用`load data`导数据\nload data比insert快约20倍；\n31. 打散批量更新\n32. 新能分析工具\n```sql\nshow profile;\nmysqlsla;\nmysqldumpslow;\nexplain;\nshow slow log;\nshow processlist;\nshow query_response_time(percona)\n```","source":"_posts/2016/ganji-design-msyql-rule.md","raw":"---\ntitle: 【转】赶集Mysql军规\ndate: 2016-01-28 13:52:43\nupdated: 2016-01-28 13:52:43\ntags:\ncategories:\n---\n\n写在前面:\n\n++ 总是在灾难发生后，才想起容灾的重要性；总是在吃过亏后，才记得曾经有人提醒过。++\n\n# 核心军规\n1. 不在数据库做运算：cpu计算务必移至业务层\n2. 控制单表数据量：单表记录控制在1000w\n3. 控制列数量：字段数控制在20以内\n4. 平衡范式与冗余：为提高效率牺牲范式设计，冗余数据\n5. 拒绝3B：拒绝大sql，大事物，大批量\n\n<!-- more -->\n\n# 字段类军规\n\n7. 用好数值类型\n- tinyint(1Byte)\n- smallint(2Byte)\n- mediumint(3Byte)\n- int(4Byte)\n- bigint(8Byte)\n- bad case：int(1)/int(11)\n\n8. 字符转化为数字\n- 用int而不是char(15)存储ip\n- 优先使用enum或set,例如：`sex` enum (‘F’, ‘M’)\n- 避免使用NULL字段；NULL字段很难查询优化；NULL字段的索引需要额外空间；NULL字段的复合索引无效\n```sql\nbad case：\n`name` char(32) default null\n`age` int not null\ngood case：\n`age` int not null default 0\n```\n9. 少用text/blob\nvarchar的性能会比text高很多；实在避免不了blob，请拆表;不在数据库里存图片：是否需要解释？\n\n# 索引类军规\n12. 谨慎合理使用索引；改善查询、减慢更新；索引一定不是越多越好（能不加就不加，要加的一定得加）；覆盖记录条数过多不适合建索引，例如“性别”\n13. 字符字段必须建前缀索引\n14. 不在索引做列运算：`select id where age +1 = 10;`\n15. innodb主键推荐使用自增列（SK：博主不认可）;主键建立聚簇索引;主键不应该被修改；字符串不应该做主键；如果不指定主键，innodb会使用唯一且非空值索引代替\n16. 不用外键；请由程序保证约束\n\n# sql类军规\n17. sql语句尽可能简单；一条sql只能在一个cpu运算；大语句拆小语句，减少锁时间；一条大sql可以堵死整个库\n18. 简单的事务,事务时间尽可能短。不好的例子：上传图片事务\n19. 避免使用trig/func；触发器、函数不用；客户端程序取而代之\n20. 不用select * ： 消耗cpu，io，内存，带宽，这种程序不具有扩展性\n21. OR改写为IN()；`or`的效率是n级别；`in`的消息时log(n)级别；in的个数建议控制在200以内\n```sql\nselect id from t where phone=’159′ or phone=’136′;\n=>\nselect id from t where phone in (’159′, ’136′);\n```\n22. OR改写为UNION\nmysql的索引合并很弱智\n```sql\nselect id from t where phone = ’159′ or name = ‘john’;\n=>\nselect id from t where phone=’159′\nunion\nselect id from t where name=’jonh’\n```\n23. 避免负向%\n24. 慎用count(*)\n25. limit高效分页\nlimit越大，效率越低\n```sql\nselect id from t limit 10000, 10;\n=>\nselect id from t where id > 10000 limit 10;\n```\n26. 使用`union all`替代`union`, `union`有去重开销\n27. 少用连接join\n28. 使用group by,分组,自动排序\n29. 请使用同类型比较\n30. 使用`load data`导数据\nload data比insert快约20倍；\n31. 打散批量更新\n32. 新能分析工具\n```sql\nshow profile;\nmysqlsla;\nmysqldumpslow;\nexplain;\nshow slow log;\nshow processlist;\nshow query_response_time(percona)\n```","slug":"ganji-design-msyql-rule","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9w001jwsnnspduoaoq","content":"<p>写在前面:</p>\n<p>++ 总是在灾难发生后，才想起容灾的重要性；总是在吃过亏后，才记得曾经有人提醒过。++</p>\n<h1 id=\"核心军规\"><a href=\"#核心军规\" class=\"headerlink\" title=\"核心军规\"></a>核心军规</h1><ol>\n<li>不在数据库做运算：cpu计算务必移至业务层</li>\n<li>控制单表数据量：单表记录控制在1000w</li>\n<li>控制列数量：字段数控制在20以内</li>\n<li>平衡范式与冗余：为提高效率牺牲范式设计，冗余数据</li>\n<li>拒绝3B：拒绝大sql，大事物，大批量</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"字段类军规\"><a href=\"#字段类军规\" class=\"headerlink\" title=\"字段类军规\"></a>字段类军规</h1><ol>\n<li>用好数值类型</li>\n</ol>\n<ul>\n<li>tinyint(1Byte)</li>\n<li>smallint(2Byte)</li>\n<li>mediumint(3Byte)</li>\n<li>int(4Byte)</li>\n<li>bigint(8Byte)</li>\n<li>bad case：int(1)/int(11)</li>\n</ul>\n<ol>\n<li>字符转化为数字</li>\n</ol>\n<ul>\n<li>用int而不是char(15)存储ip</li>\n<li>优先使用enum或set,例如：<code>sex</code> enum (‘F’, ‘M’)</li>\n<li>避免使用NULL字段；NULL字段很难查询优化；NULL字段的索引需要额外空间；NULL字段的复合索引无效<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bad case：</span><br><span class=\"line\">`name` char(32) default null</span><br><span class=\"line\">`age` int not null</span><br><span class=\"line\">good case：</span><br><span class=\"line\">`age` int not null default 0</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ol>\n<li>少用text/blob<br>varchar的性能会比text高很多；实在避免不了blob，请拆表;不在数据库里存图片：是否需要解释？</li>\n</ol>\n<h1 id=\"索引类军规\"><a href=\"#索引类军规\" class=\"headerlink\" title=\"索引类军规\"></a>索引类军规</h1><ol>\n<li>谨慎合理使用索引；改善查询、减慢更新；索引一定不是越多越好（能不加就不加，要加的一定得加）；覆盖记录条数过多不适合建索引，例如“性别”</li>\n<li>字符字段必须建前缀索引</li>\n<li>不在索引做列运算：<code>select id where age +1 = 10;</code></li>\n<li>innodb主键推荐使用自增列（SK：博主不认可）;主键建立聚簇索引;主键不应该被修改；字符串不应该做主键；如果不指定主键，innodb会使用唯一且非空值索引代替</li>\n<li>不用外键；请由程序保证约束</li>\n</ol>\n<h1 id=\"sql类军规\"><a href=\"#sql类军规\" class=\"headerlink\" title=\"sql类军规\"></a>sql类军规</h1><ol>\n<li>sql语句尽可能简单；一条sql只能在一个cpu运算；大语句拆小语句，减少锁时间；一条大sql可以堵死整个库</li>\n<li>简单的事务,事务时间尽可能短。不好的例子：上传图片事务</li>\n<li>避免使用trig/func；触发器、函数不用；客户端程序取而代之</li>\n<li>不用select * ： 消耗cpu，io，内存，带宽，这种程序不具有扩展性</li>\n<li><p>OR改写为IN()；<code>or</code>的效率是n级别；<code>in</code>的消息时log(n)级别；in的个数建议控制在200以内</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id from t where phone=’159′ or phone=’136′;</span><br><span class=\"line\">=&gt;</span><br><span class=\"line\">select id from t where phone in (’159′, ’136′);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>OR改写为UNION<br>mysql的索引合并很弱智</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id from t where phone = ’159′ or name = ‘john’;</span><br><span class=\"line\">=&gt;</span><br><span class=\"line\">select id from t where phone=’159′</span><br><span class=\"line\">union</span><br><span class=\"line\">select id from t where name=’jonh’</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>避免负向%</p>\n</li>\n<li>慎用count(*)</li>\n<li><p>limit高效分页<br>limit越大，效率越低</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id from t limit 10000, 10;</span><br><span class=\"line\">=&gt;</span><br><span class=\"line\">select id from t where id &gt; 10000 limit 10;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用<code>union all</code>替代<code>union</code>, <code>union</code>有去重开销</p>\n</li>\n<li>少用连接join</li>\n<li>使用group by,分组,自动排序</li>\n<li>请使用同类型比较</li>\n<li>使用<code>load data</code>导数据<br>load data比insert快约20倍；</li>\n<li>打散批量更新</li>\n<li>新能分析工具<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> profile;</span><br><span class=\"line\">mysqlsla;</span><br><span class=\"line\">mysqldumpslow;</span><br><span class=\"line\"><span class=\"keyword\">explain</span>;</span><br><span class=\"line\"><span class=\"keyword\">show</span> slow <span class=\"keyword\">log</span>;</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">processlist</span>;</span><br><span class=\"line\"><span class=\"keyword\">show</span> query_response_time(percona)</span><br></pre></td></tr></table></figure></li>\n</ol>\n","excerpt":"<p>写在前面:</p>\n<p>++ 总是在灾难发生后，才想起容灾的重要性；总是在吃过亏后，才记得曾经有人提醒过。++</p>\n<h1 id=\"核心军规\"><a href=\"#核心军规\" class=\"headerlink\" title=\"核心军规\"></a>核心军规</h1><ol>\n<li>不在数据库做运算：cpu计算务必移至业务层</li>\n<li>控制单表数据量：单表记录控制在1000w</li>\n<li>控制列数量：字段数控制在20以内</li>\n<li>平衡范式与冗余：为提高效率牺牲范式设计，冗余数据</li>\n<li>拒绝3B：拒绝大sql，大事物，大批量</li>\n</ol>","more":"<h1 id=\"字段类军规\"><a href=\"#字段类军规\" class=\"headerlink\" title=\"字段类军规\"></a>字段类军规</h1><ol>\n<li>用好数值类型</li>\n</ol>\n<ul>\n<li>tinyint(1Byte)</li>\n<li>smallint(2Byte)</li>\n<li>mediumint(3Byte)</li>\n<li>int(4Byte)</li>\n<li>bigint(8Byte)</li>\n<li>bad case：int(1)/int(11)</li>\n</ul>\n<ol>\n<li>字符转化为数字</li>\n</ol>\n<ul>\n<li>用int而不是char(15)存储ip</li>\n<li>优先使用enum或set,例如：<code>sex</code> enum (‘F’, ‘M’)</li>\n<li>避免使用NULL字段；NULL字段很难查询优化；NULL字段的索引需要额外空间；NULL字段的复合索引无效<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bad case：</span><br><span class=\"line\">`name` char(32) default null</span><br><span class=\"line\">`age` int not null</span><br><span class=\"line\">good case：</span><br><span class=\"line\">`age` int not null default 0</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ol>\n<li>少用text/blob<br>varchar的性能会比text高很多；实在避免不了blob，请拆表;不在数据库里存图片：是否需要解释？</li>\n</ol>\n<h1 id=\"索引类军规\"><a href=\"#索引类军规\" class=\"headerlink\" title=\"索引类军规\"></a>索引类军规</h1><ol>\n<li>谨慎合理使用索引；改善查询、减慢更新；索引一定不是越多越好（能不加就不加，要加的一定得加）；覆盖记录条数过多不适合建索引，例如“性别”</li>\n<li>字符字段必须建前缀索引</li>\n<li>不在索引做列运算：<code>select id where age +1 = 10;</code></li>\n<li>innodb主键推荐使用自增列（SK：博主不认可）;主键建立聚簇索引;主键不应该被修改；字符串不应该做主键；如果不指定主键，innodb会使用唯一且非空值索引代替</li>\n<li>不用外键；请由程序保证约束</li>\n</ol>\n<h1 id=\"sql类军规\"><a href=\"#sql类军规\" class=\"headerlink\" title=\"sql类军规\"></a>sql类军规</h1><ol>\n<li>sql语句尽可能简单；一条sql只能在一个cpu运算；大语句拆小语句，减少锁时间；一条大sql可以堵死整个库</li>\n<li>简单的事务,事务时间尽可能短。不好的例子：上传图片事务</li>\n<li>避免使用trig/func；触发器、函数不用；客户端程序取而代之</li>\n<li>不用select * ： 消耗cpu，io，内存，带宽，这种程序不具有扩展性</li>\n<li><p>OR改写为IN()；<code>or</code>的效率是n级别；<code>in</code>的消息时log(n)级别；in的个数建议控制在200以内</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id from t where phone=’159′ or phone=’136′;</span><br><span class=\"line\">=&gt;</span><br><span class=\"line\">select id from t where phone in (’159′, ’136′);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>OR改写为UNION<br>mysql的索引合并很弱智</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id from t where phone = ’159′ or name = ‘john’;</span><br><span class=\"line\">=&gt;</span><br><span class=\"line\">select id from t where phone=’159′</span><br><span class=\"line\">union</span><br><span class=\"line\">select id from t where name=’jonh’</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>避免负向%</p>\n</li>\n<li>慎用count(*)</li>\n<li><p>limit高效分页<br>limit越大，效率越低</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id from t limit 10000, 10;</span><br><span class=\"line\">=&gt;</span><br><span class=\"line\">select id from t where id &gt; 10000 limit 10;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用<code>union all</code>替代<code>union</code>, <code>union</code>有去重开销</p>\n</li>\n<li>少用连接join</li>\n<li>使用group by,分组,自动排序</li>\n<li>请使用同类型比较</li>\n<li>使用<code>load data</code>导数据<br>load data比insert快约20倍；</li>\n<li>打散批量更新</li>\n<li>新能分析工具<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> profile;</span><br><span class=\"line\">mysqlsla;</span><br><span class=\"line\">mysqldumpslow;</span><br><span class=\"line\"><span class=\"keyword\">explain</span>;</span><br><span class=\"line\"><span class=\"keyword\">show</span> slow <span class=\"keyword\">log</span>;</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">processlist</span>;</span><br><span class=\"line\"><span class=\"keyword\">show</span> query_response_time(percona)</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"做好产品","date":"2016-06-23T03:38:22.000Z","updated":"2016-06-23T03:38:22.000Z","_content":"\n\n# Growth Hack = 把产品做好\n\n## 产品完成度(百分制)\n\n1.mvp(minimal viable product),最小的解决方法 20分 2.pmf(product market fit) （60分）\n\n- 产品在这个市场做的下去\n- 养得起员工\n- 持续有小型成长 3.Growth Hack （60(可以温饱)-90（垄断市场）） 4.20分(有人用)-->75分（有用户回流）\n\npitch\n\n## 產品的系統性成長 ( Growth ) 方法\n\n首先，你必須認知到自己的產品到底屬於哪一個階段。\n\n10 分：沒人用 20 分：Minmal Viable Product 40 分：可以跟顧客收錢 60 分：Product Market Fit 75 分：客戶回流高 90 分：壟斷市場\n\n使用 NPS 量測： 產品 40 分以上的產品，NPS 必須是正的。 產品 60 分以上的產品，NPS 必須要超過 20 分。 產品 75 分以上的產品，NPS 必須要超過 40 分。 產品 90 分以上的產品，NPS 必須要超過 50 分。 值得注意的是，免費與低價的產品，通常 NPS 太高沒有真正的價值。\n\n如果你的產品價格正常， NPS 還是時常遠高於 70，那可能收費太便宜了。\n<!-- more -->\n# 創業第一階段如何挑選主題，並找到客戶\n\n## 快速PMF主题\n\n- 你熟悉的主题：做得好马上可以解决大家的需求\n- 周边需要量很大的主题：需求大了用户就多了，方案不好也没关系 选择一个20-50（有人用---收支平衡） 3-6个月建成。很多人失败的原因是选择0分---30分的题目,花了两年。\n\n### growth（成长） = conversion（转化） - churn(流失)\n\n成长=增加转化率，并且减少流失的空间。\n\n## 建立介紹產品页面(Landing page)\n\n- 一句话形容自己的「价值」而不是「功能」\n- 使用这个服务的三大好处\n- How it works\n- 使用者见证/报导\n- CALL TO ACTION(行动号召)\n- 消除疑虑\n\n## CALL TO ACTION 之后\n\n用工具搜集 \"Leads\" （ Email List 销售机会） 或直接購買產品\n\n## 放上 online chat\n\nChurn 也包括流失的销售机会，所以你一定要放上 online chat 软文捕捉这些人\n\nIntercom Zopim\n\n<http://blog.xdite.net/posts/2016/02/01/grow-product-systematically>\n","source":"_posts/2016/growth-hack.md","raw":"---\ntitle: 做好产品\ndate: 2016-06-23 11:38:22\nupdated: 2016-06-23 11:38:22\ntags:\ncategories:\n---\n\n\n# Growth Hack = 把产品做好\n\n## 产品完成度(百分制)\n\n1.mvp(minimal viable product),最小的解决方法 20分 2.pmf(product market fit) （60分）\n\n- 产品在这个市场做的下去\n- 养得起员工\n- 持续有小型成长 3.Growth Hack （60(可以温饱)-90（垄断市场）） 4.20分(有人用)-->75分（有用户回流）\n\npitch\n\n## 產品的系統性成長 ( Growth ) 方法\n\n首先，你必須認知到自己的產品到底屬於哪一個階段。\n\n10 分：沒人用 20 分：Minmal Viable Product 40 分：可以跟顧客收錢 60 分：Product Market Fit 75 分：客戶回流高 90 分：壟斷市場\n\n使用 NPS 量測： 產品 40 分以上的產品，NPS 必須是正的。 產品 60 分以上的產品，NPS 必須要超過 20 分。 產品 75 分以上的產品，NPS 必須要超過 40 分。 產品 90 分以上的產品，NPS 必須要超過 50 分。 值得注意的是，免費與低價的產品，通常 NPS 太高沒有真正的價值。\n\n如果你的產品價格正常， NPS 還是時常遠高於 70，那可能收費太便宜了。\n<!-- more -->\n# 創業第一階段如何挑選主題，並找到客戶\n\n## 快速PMF主题\n\n- 你熟悉的主题：做得好马上可以解决大家的需求\n- 周边需要量很大的主题：需求大了用户就多了，方案不好也没关系 选择一个20-50（有人用---收支平衡） 3-6个月建成。很多人失败的原因是选择0分---30分的题目,花了两年。\n\n### growth（成长） = conversion（转化） - churn(流失)\n\n成长=增加转化率，并且减少流失的空间。\n\n## 建立介紹產品页面(Landing page)\n\n- 一句话形容自己的「价值」而不是「功能」\n- 使用这个服务的三大好处\n- How it works\n- 使用者见证/报导\n- CALL TO ACTION(行动号召)\n- 消除疑虑\n\n## CALL TO ACTION 之后\n\n用工具搜集 \"Leads\" （ Email List 销售机会） 或直接購買產品\n\n## 放上 online chat\n\nChurn 也包括流失的销售机会，所以你一定要放上 online chat 软文捕捉这些人\n\nIntercom Zopim\n\n<http://blog.xdite.net/posts/2016/02/01/grow-product-systematically>\n","slug":"growth-hack","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9w001kwsnnvgbcrxaw","content":"<h1 id=\"Growth-Hack-把产品做好\"><a href=\"#Growth-Hack-把产品做好\" class=\"headerlink\" title=\"Growth Hack = 把产品做好\"></a>Growth Hack = 把产品做好</h1><h2 id=\"产品完成度-百分制\"><a href=\"#产品完成度-百分制\" class=\"headerlink\" title=\"产品完成度(百分制)\"></a>产品完成度(百分制)</h2><p>1.mvp(minimal viable product),最小的解决方法 20分 2.pmf(product market fit) （60分）</p>\n<ul>\n<li>产品在这个市场做的下去</li>\n<li>养得起员工</li>\n<li>持续有小型成长 3.Growth Hack （60(可以温饱)-90（垄断市场）） 4.20分(有人用)–&gt;75分（有用户回流）</li>\n</ul>\n<p>pitch</p>\n<h2 id=\"產品的系統性成長-Growth-方法\"><a href=\"#產品的系統性成長-Growth-方法\" class=\"headerlink\" title=\"產品的系統性成長 ( Growth ) 方法\"></a>產品的系統性成長 ( Growth ) 方法</h2><p>首先，你必須認知到自己的產品到底屬於哪一個階段。</p>\n<p>10 分：沒人用 20 分：Minmal Viable Product 40 分：可以跟顧客收錢 60 分：Product Market Fit 75 分：客戶回流高 90 分：壟斷市場</p>\n<p>使用 NPS 量測： 產品 40 分以上的產品，NPS 必須是正的。 產品 60 分以上的產品，NPS 必須要超過 20 分。 產品 75 分以上的產品，NPS 必須要超過 40 分。 產品 90 分以上的產品，NPS 必須要超過 50 分。 值得注意的是，免費與低價的產品，通常 NPS 太高沒有真正的價值。</p>\n<p>如果你的產品價格正常， NPS 還是時常遠高於 70，那可能收費太便宜了。<br><a id=\"more\"></a></p>\n<h1 id=\"創業第一階段如何挑選主題，並找到客戶\"><a href=\"#創業第一階段如何挑選主題，並找到客戶\" class=\"headerlink\" title=\"創業第一階段如何挑選主題，並找到客戶\"></a>創業第一階段如何挑選主題，並找到客戶</h1><h2 id=\"快速PMF主题\"><a href=\"#快速PMF主题\" class=\"headerlink\" title=\"快速PMF主题\"></a>快速PMF主题</h2><ul>\n<li>你熟悉的主题：做得好马上可以解决大家的需求</li>\n<li>周边需要量很大的主题：需求大了用户就多了，方案不好也没关系 选择一个20-50（有人用—收支平衡） 3-6个月建成。很多人失败的原因是选择0分—30分的题目,花了两年。</li>\n</ul>\n<h3 id=\"growth（成长）-conversion（转化）-churn-流失\"><a href=\"#growth（成长）-conversion（转化）-churn-流失\" class=\"headerlink\" title=\"growth（成长） = conversion（转化） - churn(流失)\"></a>growth（成长） = conversion（转化） - churn(流失)</h3><p>成长=增加转化率，并且减少流失的空间。</p>\n<h2 id=\"建立介紹產品页面-Landing-page\"><a href=\"#建立介紹產品页面-Landing-page\" class=\"headerlink\" title=\"建立介紹產品页面(Landing page)\"></a>建立介紹產品页面(Landing page)</h2><ul>\n<li>一句话形容自己的「价值」而不是「功能」</li>\n<li>使用这个服务的三大好处</li>\n<li>How it works</li>\n<li>使用者见证/报导</li>\n<li>CALL TO ACTION(行动号召)</li>\n<li>消除疑虑</li>\n</ul>\n<h2 id=\"CALL-TO-ACTION-之后\"><a href=\"#CALL-TO-ACTION-之后\" class=\"headerlink\" title=\"CALL TO ACTION 之后\"></a>CALL TO ACTION 之后</h2><p>用工具搜集 “Leads” （ Email List 销售机会） 或直接購買產品</p>\n<h2 id=\"放上-online-chat\"><a href=\"#放上-online-chat\" class=\"headerlink\" title=\"放上 online chat\"></a>放上 online chat</h2><p>Churn 也包括流失的销售机会，所以你一定要放上 online chat 软文捕捉这些人</p>\n<p>Intercom Zopim</p>\n<p><a href=\"http://blog.xdite.net/posts/2016/02/01/grow-product-systematically\" target=\"_blank\" rel=\"external\">http://blog.xdite.net/posts/2016/02/01/grow-product-systematically</a></p>\n","excerpt":"<h1 id=\"Growth-Hack-把产品做好\"><a href=\"#Growth-Hack-把产品做好\" class=\"headerlink\" title=\"Growth Hack = 把产品做好\"></a>Growth Hack = 把产品做好</h1><h2 id=\"产品完成度-百分制\"><a href=\"#产品完成度-百分制\" class=\"headerlink\" title=\"产品完成度(百分制)\"></a>产品完成度(百分制)</h2><p>1.mvp(minimal viable product),最小的解决方法 20分 2.pmf(product market fit) （60分）</p>\n<ul>\n<li>产品在这个市场做的下去</li>\n<li>养得起员工</li>\n<li>持续有小型成长 3.Growth Hack （60(可以温饱)-90（垄断市场）） 4.20分(有人用)–&gt;75分（有用户回流）</li>\n</ul>\n<p>pitch</p>\n<h2 id=\"產品的系統性成長-Growth-方法\"><a href=\"#產品的系統性成長-Growth-方法\" class=\"headerlink\" title=\"產品的系統性成長 ( Growth ) 方法\"></a>產品的系統性成長 ( Growth ) 方法</h2><p>首先，你必須認知到自己的產品到底屬於哪一個階段。</p>\n<p>10 分：沒人用 20 分：Minmal Viable Product 40 分：可以跟顧客收錢 60 分：Product Market Fit 75 分：客戶回流高 90 分：壟斷市場</p>\n<p>使用 NPS 量測： 產品 40 分以上的產品，NPS 必須是正的。 產品 60 分以上的產品，NPS 必須要超過 20 分。 產品 75 分以上的產品，NPS 必須要超過 40 分。 產品 90 分以上的產品，NPS 必須要超過 50 分。 值得注意的是，免費與低價的產品，通常 NPS 太高沒有真正的價值。</p>\n<p>如果你的產品價格正常， NPS 還是時常遠高於 70，那可能收費太便宜了。<br>","more":"</p>\n<h1 id=\"創業第一階段如何挑選主題，並找到客戶\"><a href=\"#創業第一階段如何挑選主題，並找到客戶\" class=\"headerlink\" title=\"創業第一階段如何挑選主題，並找到客戶\"></a>創業第一階段如何挑選主題，並找到客戶</h1><h2 id=\"快速PMF主题\"><a href=\"#快速PMF主题\" class=\"headerlink\" title=\"快速PMF主题\"></a>快速PMF主题</h2><ul>\n<li>你熟悉的主题：做得好马上可以解决大家的需求</li>\n<li>周边需要量很大的主题：需求大了用户就多了，方案不好也没关系 选择一个20-50（有人用—收支平衡） 3-6个月建成。很多人失败的原因是选择0分—30分的题目,花了两年。</li>\n</ul>\n<h3 id=\"growth（成长）-conversion（转化）-churn-流失\"><a href=\"#growth（成长）-conversion（转化）-churn-流失\" class=\"headerlink\" title=\"growth（成长） = conversion（转化） - churn(流失)\"></a>growth（成长） = conversion（转化） - churn(流失)</h3><p>成长=增加转化率，并且减少流失的空间。</p>\n<h2 id=\"建立介紹產品页面-Landing-page\"><a href=\"#建立介紹產品页面-Landing-page\" class=\"headerlink\" title=\"建立介紹產品页面(Landing page)\"></a>建立介紹產品页面(Landing page)</h2><ul>\n<li>一句话形容自己的「价值」而不是「功能」</li>\n<li>使用这个服务的三大好处</li>\n<li>How it works</li>\n<li>使用者见证/报导</li>\n<li>CALL TO ACTION(行动号召)</li>\n<li>消除疑虑</li>\n</ul>\n<h2 id=\"CALL-TO-ACTION-之后\"><a href=\"#CALL-TO-ACTION-之后\" class=\"headerlink\" title=\"CALL TO ACTION 之后\"></a>CALL TO ACTION 之后</h2><p>用工具搜集 “Leads” （ Email List 销售机会） 或直接購買產品</p>\n<h2 id=\"放上-online-chat\"><a href=\"#放上-online-chat\" class=\"headerlink\" title=\"放上 online chat\"></a>放上 online chat</h2><p>Churn 也包括流失的销售机会，所以你一定要放上 online chat 软文捕捉这些人</p>\n<p>Intercom Zopim</p>\n<p><a href=\"http://blog.xdite.net/posts/2016/02/01/grow-product-systematically\">http://blog.xdite.net/posts/2016/02/01/grow-product-systematically</a></p>"},{"title":"《细节，如何轻松的影响他人》（说服科学）","date":"2016-10-12T13:49:53.000Z","updated":"2016-10-12T13:49:53.000Z","_content":"\n整本书都是一些社会实验出来的，从小的行为改变，去让周围的人发生行为改变，小改变，大影响。也是书中说的四两拨千斤的效果。本书列举了50多个小的技巧，总结一些好好的把这些应用到自己的生活场景中去，才算真正的读到了，学到了。当应用中会有更多的思考，是否有效，有一些已经在生活中已经使用，只不过我们不知道。以及如何更好的应用？怎样多个技巧叠加使用，还是只能使用一个技巧？多个技巧使用了反而没有效果了？为什么？因此写在这里，以备日后查找，总结。\n<!--more-->\n\n##### 前言\n－ 整个说服科学（persuasion science）来自实实在在的证据。\n－ 互惠－人们都有义务偿还别人给予的恩惠\n－ 权威－人们都相信专家的指点\n－ 稀缺－物以稀为贵\n－ 喜好－人们越喜欢某个人，就越容易答应他的请求，爱屋及乌\n－ 保持一致－人们希望做出自己的承诺和价值观相符合的行为\n－ 社会认同你－人们会参照他人的做法知道自己的行为\n做一些小的调整，把你要说的信息与对方的内心深处的冬季关联起来，找到关键的地方，就能带来显著的成效。\n\n##### 向“大众”借力\n社会认同原理（social proof），也就说从众心理。社会认同的力量往往胜过理性的认知。“大家怎么做，我就怎么做”是一个通往明智的，高效的捷径。人们通常对于很多事情不会去独立思考，而选择从众。缴税的例子，在提醒的例子上，提示有多少人已经缴税，而且数据缴税数字说的更准确一些。\n－ 高效作出决定\n－ 获得社会认同\n－ 所提倡的事情要是积极的，积极的态度看待自己\n\n##### “小众”的反作用力\n当作出和大众不同的决策时候，“小众”人群的大脑中与情绪处理有关的区域被激活了，与众人背道而驰是有情感成本的，我们获得了痛苦的代价。\n当一个需要衡量的行为被公之于众的的时候，与群体划清界限的的攻击越强。当企业开发新用户的群体的时候，现有的这些客户群体为了把自己和这些新客户区分开，不屑与他们为伍，就不在使用这些产品了。这些“小众”的群里就是那部分特立独行的，寻找身份认同的。和苹果手机的一些用户也是。\n\n##### 非常态VS常态\n看不同的人是否遵守**社会规范（social norm）**。人们都愿意与社会规范保持一致，有的人为了张扬个性，刻意特立独行。如果咬说服这类人，需要使用*违背*原则，按照违背他们的角度去遣词造句，会更有效。*推正拉反，强调少数人，争取多数人*，\n> 例子：对于开会迟到大家是否认同，那么为了更好的影响更多的人的结果。如果大部分肯定，则强掉迟到的人有哪些负面的特质。相反，强调按时开会具备哪些积极正面的反应\n\n> 例子：1。积极健身和成熟、聪明联系在一起2.把负面，愚蠢与不健康的生活方式联系在一起。发现越是正面的，越受2的影响，认为不常见的，则越受第一种的影响，即健身与正面的成熟的意见影响。都是相反的。\n\n##### 强大的环境暗示\n破窗理论\n对环境背景作出一个小的调整，就会带来一个小的改变，当一个坏习惯没有得到制止，则会有更多的坏习惯。人都是环境的产物，很多人在国内扔垃圾在国外却不扔，人没有变，但是环境改变了，能量场改变了\n\n##### 改个名字，改变一切\n人们更倾向于和自己有相似背景的人或者事物站在一起。比如自己的相同的名字，自己的老乡。在传递的信息中展现他人的名字和地址等，则更显亲切。想获得更多人支持。\n\n##### 如何化敌为友\n人以群居，物以类分。和其他人找到同一种身份认同。或者寻找共同点，刻意帮助团队和合作伙伴更顺畅。\n\n##### 预测他人的喜好、渴望与需求\n 无论你是和一个认识多年的老客户打交道，还是可以一个合作很久的工作搭档相处，要给他们定期交换新秩序，安排一些非正式的沟通机会，增进彼此了解，讲座的重要性怎么强调也不为过。\n\n##### 主动承诺的力量\n主动承诺。如果晨会结束，今年让每个人把工作复述一遍，切实执行就更有望实现。亲自把下次月的时间和，日前写的卡片上。八，自己，所有的行动计划记录下来，然后分发给众人，然后再发电子邮件，加上一段简单的话，请收件人，回复一个好的，来确认。\n\n##### 承诺要行动，要公开\n承诺要行动要公开。当你要劝说某人许下承诺时，请他做一个，比较宽泛，而不是具体的承诺，你的成功概率会更大。\n\n##### “心安理得”效应\n心安理得效应。客人在办理入住时先签个承诺书，这不仅提高毛毯和床单的水冲水效率，而且让客人在离开房间更容易记得关灯关电视，这就是一个正向溢出效应。如果人们在使用和丢弃产品时产生了内疚心理，那么通过回收利用的行为，他们就可以减少这种因过度消费而产生，的负面情绪。\n\n##### 如何为员工鼓励儿加油\n使用前文提出的主动承诺原理，请团队挑出自己喜欢做的事情，并当着同事单独出来。另一个做法是，把客户请过来现身说法，让员工听见客户的声音。就是让员工意识到自己做的事情的重要性外化出来，从而提高他的成就感，这个小技巧，也是金钱有时候达不到的。也许管理者能做的最微小的改变，就是看到员工做得出色，**是简单说一句，干的漂亮吧**。\n\n##### 如何避开决策陷阱\n把决策者和谈判者的角色分开，承诺升级以及财务上的风险就可以规避了。不能自己是运动员，又是裁判员。如果你，在组织中负责某个项目的执行，那你最好把评估它成功与否的工作交给组织里的其他人来做，这里是，因为你容易过高的估计，而且项目的价值有时候高估的程度会惊人。因为自己已经先入为主，受环境影响了，评估人跟你联系越少，评判客观度会更高。\n\n##### 巧用“执行意向”\n让他们做一个具体的计划，说说他们打算在，何时、何地、准备如何执行这件事。例子，这周三下午4点能来开会吗？改成这周三下午4点之前，开会之前你打算做什么？写下你具体需要执行的，那个时间。我们会倡导受试者把承诺公开。\n\n##### 推迟一点会更好\n未来绑定法，当你想要去说服他人接受你，我改变的时候不要让他立即就改，而是改变放到未来的某个时段，当然前提是，这改变对他是有益的。这样你可能会得到更多人的支持和认同。回来把你放到另一个是用年月是购买公共服务，比如安装宽带，有线电视信用卡。比如那年的淘宝的十月围城也是过了几个月，然后再调高费用。\n\n##### 为了将来的自己\n将来的自己过得好不好，却要仰仗现在的你，你现在的决策，将决定将来的自己能拥有多少财务安全感。尽管生活中某些方面会随着时间改变的是每个人的核心身份，他们最真实的自我始终是不变的，要想方设法拉近现在的我和未来的我的之间的距离，例如用ps软件，看到自己苍老的未来。\n\n##### 目标设得好，干劲会更足\n给自己设立一个浮动的区间（8%~10%）。让人们实现目标两个最重要的因素，挑战性与可实践性。简单地说，他之所以能够促使人们重拾目标，是因为让人能打可实现性和可挑战性的方面成就感全占了。就像很多诱惑的广告，把你搞的蠢蠢欲动，其实就是拉近了可实践性和挑战性的距离。\n\n##### 损失规避原则\n人们得到十块钱和失去十块钱的，痛苦是不一样的。这个启发就告诉我们甚至两个选择，让受众者主动挑选一个，然后再向前迈一步，你想让他们选的那个包装一下，向他们指出，如果不这么做的话，就会损失什么。例子，今年秋天我会打流感疫苗，因为我想降低流感的风险，并且节省五十美元，或者，今年秋天我不想打疫苗，即便这意味着我得流感，风险可能会挺高，而且无法节省五十美元。\n\n##### 如何克服拖延症\n设立一个截止日期。注册率设置一个临近的截止日期。\n推荐一部热门影片，《杯酒人生》里面的一个片段，教你如何不露痕迹地说服他人:\n> 迈尔斯:我存了点好东西，一瓶1961年，白马酒庄的好酒。\n> 玛雅:你有瓶1961年白马酒庄的酒却放着不喝，品尝它的最佳时间可能已经过了，你在等什么呢？\n> 迈尔斯:不知道，某个特别的日子吧，给一个对的人共享，我本想留到结婚十周年纪念日上喝的\n> 玛雅:把1961年白马酒庄的酒打开的那一天就是特别的日子。\n\n##### 如何留住顾客跟定你\n改善自己的服务，如果电话在没有接听之前，您可以跟顾客一点事情做，给顾客分分心，降低她的焦虑感。像海底捞一样等待的人那么多可以提供玩具玩。\n\n##### 把潜力变成现实\n把潜力变成现实，一个工作经验，和过往业绩，压根无法跟你相提并论的对手，把客户从你这抢走了。人对潜力更有兴趣。\n\n##### 把会议开的更高效\n- 第一，请参加会议的人提前提交信息，提交大家的想法。如果，你面临一个问题，还想挑战下每个组员都贡献智慧，那么与其让每个人都同时说出想法和建议，更高效的做法，让大家花几分钟静静的想一想自己的主页，然后写下来提交给全组。\n- 第二，组织会议的最后一个人的发言会对大家产生影响，先入为主，所以领导者要先倾听大家的声音，最后表达自己的建议。\n- 第三，做个任务清单会很有用。列出必要的点。\n- 第四，对会议的座次安排作出微妙调整，圆桌式的会能唤起人们的归属感，参与者更容易重视小组整体目标，也更容易强调全组人的利益，相反，当作是安排呈现出带角的形状，或方形的形状，效果刚好相反，这种将激发了人们，对独特性的追求，很容易产生个人主义。所以当一个领导者想要说服自己的员工行动起来，大家齐心协力，最好把座椅，摆成圆桌式的，如果一个领导，让自己的团队为自己的行为负责，那么正方形或者长方形的桌椅更好。\n\n##### 服装的影响力\n你的气质和你的穿着打扮要相当，比如说你是个教授，或者和，别的公司去谈判，不能穿着太随意。\n\n##### 亮出专家身份\n人们总是相信专家的权威，当某人接受了专家的建议，那么他的脑部活动就停止了，也就是说，不再进行批判性思维，反驳的力度也就降低了，如果有关专家的建议可以使用，那就把它早早的摆出来，要不这样的话可能就有点傻了。\n\n##### 不确定的说服力\n语气中带有某种程度不确定的专家，会更激发人们的兴趣。在没有明显带有正确的情况下，表现出一点不确定，非但不会损害你的说服力，反而还有极大的帮助，当商业顾问说服决策者的时候，与其把轻微不确定遮掩起来，还不如明明白白的点出来，因为这世界上会让他显得更有说服力，有利于建立信任。98%的好，还有2%的不确定，没有完美。\n\n##### 中心位置的影响力\n放到中间的那个明显更受欢迎。从海报到平面广告到电视剧，都是这样设置的。有商家会给经理付钱，争取最好的位置。可以绑着畅销最受欢迎的字，你到外包装上，这样就可以不受位置影响。\n\n##### 如何激发创意\n当天花板高的时候，人的想法更富创意，更概念化，当天花板较低的时候，人们的想法就更具体更局限性。\n\n##### 主场还是客场\n对于比赛还是考试各种，都有自己的主场优势，在自己熟悉的环境可能更容易应付，所以在谈判的时候，最好在自己的主场或者提前过去，熟悉下环境。\n\n##### 如何让自己变得更强大\n写下让自己感觉强大的经历，这么一个小小的举动就可以大为不同。回忆一个让自己感到强大的时刻。良种，典型的身体语言会爱试出人的心理状态是强是弱，舒展身体和开放程度，心态强大的人，体态会感到更舒服、开放，体弱无力的人会显得局促、封闭。\n\n##### 你所需的只是爱\n其实我们打算建议的事情要小的多:只是在你的影响行为中添加一点象征，爱意的线索就行了。比如说声谢谢，或者在网站上什么地方多弄一颗爱心，爱是温暖的。\n\n##### 完美的礼物哪里找\n适合他们的就是最好的。维护之前一定要了解对方的喜好而不是自己认为最有价值的，对方关注的才是有价值的，从对方的喜好清单里面去找。\n\n##### 为互助留出余地\n互助原理。在收到恩惠后，人们愿意以相同的方式来回报。要注意最重要的一点是你 **第一个行动** 。第一个出手相助会激活互惠原理，并因此增加未来互助的次数，对于职场中 **共同成功** 这个因素至关重要。第二，要把你提供的帮助或者有价值的信息做个定位，把日后对方可以全力回报你的可能性 **凸显** 出来。\n用三种应答方式用它们来回应对方对你的感谢:\n>- 一，能帮上你的忙我很高兴，因为我知道当一个人需要帮忙的时候，别人的一双援手是多么的有价值，\n>- 二，不客气，同事之间理应如此，\n>- 三，没关系，因为我知道如果需要帮助的是我，你也会这么做的。**以此方式来激活互惠原理**，维护会互惠留出余地。\n\n##### 表达感激好处多\n当给予别人，更多的帮助获得他人的肯定，觉得自己更有价值，所谓的成就感。例子来自政府的纳税单，来自天猫卖家的手写信。\n\n##### 出乎意料与抛砖引玉\n以出乎意料的方式给予，**提供惊喜**，先给予后获取。人们之所以会笑，回幽默很大程度是因为出乎意外的`惊喜`。\n>能量守恒定律，能量总是从高到低去的，你强他弱，你弱他就强，是一个动态平衡。\n\n##### 如何获得帮助\n爱是尽管开口。在一组实验中，求助的人低估了对方愿意帮忙的可能性，愿意帮忙的人也高估了别人开口求助的可能性，既然没人开口，就是你家不需要帮忙呗！一句话，事实没自己想象的那么糟，也没自己想象的那么好。**所以开始行动吧**！\n\n##### 先下手为强\n去关注那些好的方面，而不是被带入沟里去关注那些负面裂痕，从而，低估了价值。参加谈判之前，一定要在脑子里想好一下价格，还应该把合理的原因 **清单**列出来，在谈判，中，一定要把这些，摆在面前，足够提醒你，抵消自己心中的质疑。\n\n##### 报价精确一点会更好\n> 如果你想要涨工资，可以刷福利待遇提10%，更应该提出9.8%或者10.2%会更好。\n> 如果一个保姆拿到每小时十五美元的薪水，他应该向老板提出15.585，但美元而不是16美元。\n> 如果是项目管理，等出最终的精确时间，如果让别人答应你一个未来的计划时间给出一个模糊时间，前提是*对他有益*。\n\n准确的数字增加可信度，这个结果是经过深思熟虑计算出来的，而不是漫天要价。\n比如:要求几天完成工作，更精准的是“周三下午，3:47把他交给我好吗“？而不是笼统的说几天完成。效果更好。报价更精准一些，让人更相信你认真研究过。\n\n##### 定价末尾数字有玄机\n**降档效应**,**左位数效应**。先说价值把价值谈得高高的最后说价格，这是价格就不觉得那么高了，取小数不要取整数，尽管整数容易计算。\n\n##### 顺序改一改，生意滚滚来\n>心理学有一个基本概念叫做视觉“对比现象”:意思是不必改变物体本身，只改变人看到这个物体之前的体验，就能改变人对这件东西的影响。\n\n- 比如说六十美元一瓶倒红酒列在开头，这瓶35年的酒，价格看起来就很合理，酒一点也没有变，改变的是人们对他的看法。**来源自比较**。当数字不容易计算的时候，人们更喜欢数字在前价格战后的数据。\n- 比如人们更喜欢580小时的节目收费286元，而不是286元可看580小时的节目，虽然这两种表达方式在一模一样。所以在你的工作中下调整，先说你的服务项目，最后说价格。\n- 当你面试时写简历的时候，不要强调你有多少年工作经验，先把你这段时间取得的成绩。更好的方法，把成绩发出来，把你取得的成绩全部列出来，然后再说工作年限。先说收益，后说成本。\n\n##### 如何事半功倍\n当你提供了一个高价值的东西，不要再和低价值的东西放在一起，那样会**过犹不及**，削弱你的层次。\n例子：\n> 想乱丢垃圾的人，处以750美元的罚款\n> 向丢垃圾的人处以750美元的罚款，外加两个小时的社区服务。\n\n条件多了反而没有重点，其实750美元其实已经足够有吸引力。两种办法各取所长，同样的资源为少部分抽选的用户增加更诱人的价值，而不是把所有的资源都扑上去。这就好像往热水里加温水一样，只能，降低整体的维度。更好的做法是重视的客户提供量身打造，诱人的格外优惠，你触发了互惠原则。\n\n##### 化整为零\n如果让你捐款，你救助一个学生为他捐多少，而是在为整体捐多少。人们对数字有时候是没有概念的，就像拍电影一样，人对一个人的，生活是个很有童心感的，在对一个整体冷冰冰的数字是没有感觉的。\n\n##### 鲜明生动的细节\n塑造一个活生生的鲜明形象。而不是表格上那些干巴巴的数字，而是应该摆出团队成员的照片，让这些人的形象变得鲜活。就像前段时间希腊的那个海滩上的小男孩，其实之前已经报道很多希腊的难民，涌入，但是大家都无感，等大家看到了这个小孩的照片之后，大家就引发了同情。  当你需要说服，别人为你提供资源去帮助你达成某个目标的时候，你应该去引导对方关注两个方面形象鲜明的受益对象，以及清晰具体的干预手段，形象说明对象具体一个词，一个动作，一个事件，一种手段的方法提醒。\n\n##### 指出机会成本\n指出你省下来的钱可以被用来购买其他的相关产品。你把自己的大家的计划写在团队的板板上公之于众效果会更好。当说服，用户来买你的东西的时候，前提是你的产品足够吸引人，提醒，你买了之后可以省下来更多的钱去做什么？\n\n##### 如何激励他人，还有自己，完成任务\n在任务的早期，你应更应该关注 **我已经完成多少**，然而，进程过半的时候，你更应该关注 **我还剩下多少**。这个方法能够帮你，坚持下来。刚开始的时候，你应该关注的的是已经减掉了多少重量，到了后期你就要去想想还有多少斤没有减掉。\n\n##### 如何提高客户忠诚度\n如果让别人认同你的想法，加入你的计划。要给出最宽松的条件限制，但一旦开始为了达到目标，就要严格要求执行，更有效果完成。比如按顺序买红酒的例子，是自由购买还是无顺序购买？把一件事拆解开来，分成一个个小的步骤，分开执行看来更有效果，更容易达到目标。\n\n##### 如何让一加一大于二\n人们对失去的，在优过，得到了对他的渴望。这就是说，人类在遇到困难的时候会放大困难，而一旦过了这个时段回过头来看，觉得这个困难不算什么。我们都是牺牲明天享受今天的景象，如果今天拿到二十元，明天拿到21元的选择，绝大多数人都会，选择今天拿到钱。可是你再把千金换一下，说七天之后拿到二十美元和八天之后拿到20亿美元，更多人就愿意多等一天。有时候人的决策和行为是多么不一致。因此，当你用奖品或者激励手段来促使他人完成任务的时候，应该把激励手段或奖品非常不同的类别。——因为人们害怕失去。\n\n##### 退后一步看问题\n当你面对一个棘手的问题，只需要后退，站的更远一点看问题就能改变这个问题的难度感知，这个问题就不会那么棘手了。把人和选择之间的实际距离加大，可以显著提高人作出购买决策的速度。   当你为了一件棘手的公事烦恼不已的时候，为什么那个从远处探过头来瞧你电脑屏幕，自命不凡的同事总是以为他能更快地找出解决办法。**当遇到难题时，退后，离的远一点**。\n\n##### 从他人的错误中汲取教训\n把时间花在辨别，并避免他人作出的，导致商业失败的愚蠢决策上。因此最好做一份属于自己的愚蠢清单，把他人犯过的错误也记录下来，当你碰到要做重大决策的时候，要拿出来看一遍再做决策。\n事实远不止如此，负面的信息也更容易让人记住，在角色中占有比例更高。经验素材库，让他吸引你团队的注意力更容易从中汲取教训，让大家牢牢记住，并且提供促使人采取行动建设性的忠告。\n\n因为这份清单记住的都是别人犯错的错，你更容易看出毛病在哪？如果这些错误是你犯的有点费力跟一个念头对抗，往往还是败阵下来的，如果你想说服自己这些压根就不是错误，只不过运气不好，或者时机不对，害得你没法掌握而已。但别人的错误跟你无关，你不会被自己，电话蒙蔽了双眼，因此它是一个非常有效对你很有好处的学习工具。\n\n- 精明的领导者回答大家，从其他人的错误中汲取教训，在以后的日后行为作出改善。\n- 老师们可以把往届学生犯的错误整理一份，`避免错误的清单，给现在的学生参考。\n- 医生也可以提到以前的一两个患者做错了什么，结果导致什么病情加重，借此来确保现在的患者不在犯同样的错误。\n- 健身教练可以向新客户指出，别人在使用健身器材的时候犯过的错来保证新客户不会重蹈覆，让他们从健身训练中获得最好的收效。\n\n做一份错误清单，定期从中学习。能帮你在商界里做，对的一个小举措就是一列一张别人做，过错似的清单。\n如果你忽视了，记录错误的价值，那么就把这条列入你的错误清单中。\n\n##### 对错误进行管理\n这些错误不仅能够帮，你在将来做得更好，甚至还能增强你的影响力。\n知道错误可能出现在什么地方，又是怎么发生的第二个要求就是，培训是要指导学生如何，`用最好的方式去面对错误，让学员知道你的错误出现那种心态是最好的`。**犯错是很自然的**，这是学习过程中的一部分，犯错越多，学到东西越多，错误会告诉你，你还有哪些东西要学，这些反馈方式几种药会让结果大为不同，*这是因为如果没有这些点拨，人们多半会把错误看成失败，而不是指向成功的路标，* 这种知道培训对出道成功的企业文化是如此重要，`所以为了尽早成功，多犯点错吧！`\n\n> 人们的期望总是过高的在现代商业，鬼复杂，如果把资源用于追求一个错误也不脱出的乌托邦的目标，工作效率低的整体成本也会高很多，倒不如把资源用在寻求解决问题纠正错误的目标上，获得更高的顾客满意度。零错误反倒不如及时改正错误好，完善体验带来惊喜。\n\n##### 当天就点评\n及时反馈。与正面信息相伴，人们更容易关注负面信息，也更有可能从中汲取教训或者孕检信息。当在网上看到一个最近的一个评论的正面信息，会带来更多的赞，更多的客户，但如果是信息都很陈旧的，就不想去看了。\n\n##### 给邮件加点料，让谈判更顺畅\n笑声是人与人之间最短的距离，信任是非常重要的因素。给你来，邮件加上一个，好玩的漫画，添加一些有血有肉的人情味儿。为了给对方建立良好的关系，主动透露一点个人信息，不但能够减少排放，谈判中的僵局还能，让对方都能取得更好的结果。有时候不能写为健全而淡之的是面谈，或者干脆打个电话，会增加亲切感。\n\n##### 碰触的魔力\n能够摸到产品的卖家开出的价格就比那些摸不到的产品开价更高。作为主持人，或培训师，不要，把资料放在学员的桌子上，而是应该请他们走进房间的时候亲自分发，为了提高，会议赞助的小礼品的价值感，会议活动组织者可以时间选出一组不错合适的时机，把它从袋子里掏出来，然后亲自递给参会的人，这样不仅能够提高他的价值感，也会避免这个小礼物被无人问津。如果当产品无法被人摸到的时候，**只需要顾客在头脑里想象与他的感觉就能够强化有关**，从而提高它的价值。\n\n##### 把最好的留到最后\n**峰——终体验**。人们只会记住，记住最后一次或者体验最好的一次的感觉。在客人办理入住的时候，送一个个性化的变迁，然后在结账退房的时候送上一个小礼物。与其把重点放在有问题的产品，浪费在你许多时间，不如去强调它，给客户带来不便和痛苦多么严重。**强调体验** 如果你希望下次度假时带回精彩又开心的回忆，那么与其把预算平均分配给一连串短途旅行观光，还不如把钱花在两天特别有意思的事情上，把升舱的机会留在回程，这样你会更加开心。\n\n##### 多个细节叠加使用，效果未必会叠加\n关于说服科学的**叠加使用规则**,并不是所有的规则叠加起来都会更多，有可能会相互抵消。\n有三个原因解释:\n- 第一，这几条策略背后的心理动机互不相容。\n- 第二，你一次使用的说服工具越多，对方就越不容易在第一时间积极响应。\n- 第三，方法用得越多，意图就越明显有时候你把一堆不起眼的小策略放在一起的时候，那种不显山不漏水的微妙感觉就没有了，说服的意图就变成了露骨，对方就容易拒绝你。\n构思说服他人的措辞时，好像存在一个临界点，超过这个点多余的理由和论据，反而更让人容易抗拒，削弱了说服力的力度。使用的技巧一般**不超过三个**，事不过三。\n\n##### 写在最後\n學了這麼多技巧，最終要的是在生活中得到有效應用，多觀察，多实践，多思考，触类旁通，从而真正的融会贯通，内化掉。","source":"_posts/2016/influence.md","raw":"---\ntitle: 《细节，如何轻松的影响他人》（说服科学）\ndate: 2016-10-12 21:49:53\nupdated: 2016-10-12 21:49:53\ntags:\n- 读书\ncategories:\n---\n\n整本书都是一些社会实验出来的，从小的行为改变，去让周围的人发生行为改变，小改变，大影响。也是书中说的四两拨千斤的效果。本书列举了50多个小的技巧，总结一些好好的把这些应用到自己的生活场景中去，才算真正的读到了，学到了。当应用中会有更多的思考，是否有效，有一些已经在生活中已经使用，只不过我们不知道。以及如何更好的应用？怎样多个技巧叠加使用，还是只能使用一个技巧？多个技巧使用了反而没有效果了？为什么？因此写在这里，以备日后查找，总结。\n<!--more-->\n\n##### 前言\n－ 整个说服科学（persuasion science）来自实实在在的证据。\n－ 互惠－人们都有义务偿还别人给予的恩惠\n－ 权威－人们都相信专家的指点\n－ 稀缺－物以稀为贵\n－ 喜好－人们越喜欢某个人，就越容易答应他的请求，爱屋及乌\n－ 保持一致－人们希望做出自己的承诺和价值观相符合的行为\n－ 社会认同你－人们会参照他人的做法知道自己的行为\n做一些小的调整，把你要说的信息与对方的内心深处的冬季关联起来，找到关键的地方，就能带来显著的成效。\n\n##### 向“大众”借力\n社会认同原理（social proof），也就说从众心理。社会认同的力量往往胜过理性的认知。“大家怎么做，我就怎么做”是一个通往明智的，高效的捷径。人们通常对于很多事情不会去独立思考，而选择从众。缴税的例子，在提醒的例子上，提示有多少人已经缴税，而且数据缴税数字说的更准确一些。\n－ 高效作出决定\n－ 获得社会认同\n－ 所提倡的事情要是积极的，积极的态度看待自己\n\n##### “小众”的反作用力\n当作出和大众不同的决策时候，“小众”人群的大脑中与情绪处理有关的区域被激活了，与众人背道而驰是有情感成本的，我们获得了痛苦的代价。\n当一个需要衡量的行为被公之于众的的时候，与群体划清界限的的攻击越强。当企业开发新用户的群体的时候，现有的这些客户群体为了把自己和这些新客户区分开，不屑与他们为伍，就不在使用这些产品了。这些“小众”的群里就是那部分特立独行的，寻找身份认同的。和苹果手机的一些用户也是。\n\n##### 非常态VS常态\n看不同的人是否遵守**社会规范（social norm）**。人们都愿意与社会规范保持一致，有的人为了张扬个性，刻意特立独行。如果咬说服这类人，需要使用*违背*原则，按照违背他们的角度去遣词造句，会更有效。*推正拉反，强调少数人，争取多数人*，\n> 例子：对于开会迟到大家是否认同，那么为了更好的影响更多的人的结果。如果大部分肯定，则强掉迟到的人有哪些负面的特质。相反，强调按时开会具备哪些积极正面的反应\n\n> 例子：1。积极健身和成熟、聪明联系在一起2.把负面，愚蠢与不健康的生活方式联系在一起。发现越是正面的，越受2的影响，认为不常见的，则越受第一种的影响，即健身与正面的成熟的意见影响。都是相反的。\n\n##### 强大的环境暗示\n破窗理论\n对环境背景作出一个小的调整，就会带来一个小的改变，当一个坏习惯没有得到制止，则会有更多的坏习惯。人都是环境的产物，很多人在国内扔垃圾在国外却不扔，人没有变，但是环境改变了，能量场改变了\n\n##### 改个名字，改变一切\n人们更倾向于和自己有相似背景的人或者事物站在一起。比如自己的相同的名字，自己的老乡。在传递的信息中展现他人的名字和地址等，则更显亲切。想获得更多人支持。\n\n##### 如何化敌为友\n人以群居，物以类分。和其他人找到同一种身份认同。或者寻找共同点，刻意帮助团队和合作伙伴更顺畅。\n\n##### 预测他人的喜好、渴望与需求\n 无论你是和一个认识多年的老客户打交道，还是可以一个合作很久的工作搭档相处，要给他们定期交换新秩序，安排一些非正式的沟通机会，增进彼此了解，讲座的重要性怎么强调也不为过。\n\n##### 主动承诺的力量\n主动承诺。如果晨会结束，今年让每个人把工作复述一遍，切实执行就更有望实现。亲自把下次月的时间和，日前写的卡片上。八，自己，所有的行动计划记录下来，然后分发给众人，然后再发电子邮件，加上一段简单的话，请收件人，回复一个好的，来确认。\n\n##### 承诺要行动，要公开\n承诺要行动要公开。当你要劝说某人许下承诺时，请他做一个，比较宽泛，而不是具体的承诺，你的成功概率会更大。\n\n##### “心安理得”效应\n心安理得效应。客人在办理入住时先签个承诺书，这不仅提高毛毯和床单的水冲水效率，而且让客人在离开房间更容易记得关灯关电视，这就是一个正向溢出效应。如果人们在使用和丢弃产品时产生了内疚心理，那么通过回收利用的行为，他们就可以减少这种因过度消费而产生，的负面情绪。\n\n##### 如何为员工鼓励儿加油\n使用前文提出的主动承诺原理，请团队挑出自己喜欢做的事情，并当着同事单独出来。另一个做法是，把客户请过来现身说法，让员工听见客户的声音。就是让员工意识到自己做的事情的重要性外化出来，从而提高他的成就感，这个小技巧，也是金钱有时候达不到的。也许管理者能做的最微小的改变，就是看到员工做得出色，**是简单说一句，干的漂亮吧**。\n\n##### 如何避开决策陷阱\n把决策者和谈判者的角色分开，承诺升级以及财务上的风险就可以规避了。不能自己是运动员，又是裁判员。如果你，在组织中负责某个项目的执行，那你最好把评估它成功与否的工作交给组织里的其他人来做，这里是，因为你容易过高的估计，而且项目的价值有时候高估的程度会惊人。因为自己已经先入为主，受环境影响了，评估人跟你联系越少，评判客观度会更高。\n\n##### 巧用“执行意向”\n让他们做一个具体的计划，说说他们打算在，何时、何地、准备如何执行这件事。例子，这周三下午4点能来开会吗？改成这周三下午4点之前，开会之前你打算做什么？写下你具体需要执行的，那个时间。我们会倡导受试者把承诺公开。\n\n##### 推迟一点会更好\n未来绑定法，当你想要去说服他人接受你，我改变的时候不要让他立即就改，而是改变放到未来的某个时段，当然前提是，这改变对他是有益的。这样你可能会得到更多人的支持和认同。回来把你放到另一个是用年月是购买公共服务，比如安装宽带，有线电视信用卡。比如那年的淘宝的十月围城也是过了几个月，然后再调高费用。\n\n##### 为了将来的自己\n将来的自己过得好不好，却要仰仗现在的你，你现在的决策，将决定将来的自己能拥有多少财务安全感。尽管生活中某些方面会随着时间改变的是每个人的核心身份，他们最真实的自我始终是不变的，要想方设法拉近现在的我和未来的我的之间的距离，例如用ps软件，看到自己苍老的未来。\n\n##### 目标设得好，干劲会更足\n给自己设立一个浮动的区间（8%~10%）。让人们实现目标两个最重要的因素，挑战性与可实践性。简单地说，他之所以能够促使人们重拾目标，是因为让人能打可实现性和可挑战性的方面成就感全占了。就像很多诱惑的广告，把你搞的蠢蠢欲动，其实就是拉近了可实践性和挑战性的距离。\n\n##### 损失规避原则\n人们得到十块钱和失去十块钱的，痛苦是不一样的。这个启发就告诉我们甚至两个选择，让受众者主动挑选一个，然后再向前迈一步，你想让他们选的那个包装一下，向他们指出，如果不这么做的话，就会损失什么。例子，今年秋天我会打流感疫苗，因为我想降低流感的风险，并且节省五十美元，或者，今年秋天我不想打疫苗，即便这意味着我得流感，风险可能会挺高，而且无法节省五十美元。\n\n##### 如何克服拖延症\n设立一个截止日期。注册率设置一个临近的截止日期。\n推荐一部热门影片，《杯酒人生》里面的一个片段，教你如何不露痕迹地说服他人:\n> 迈尔斯:我存了点好东西，一瓶1961年，白马酒庄的好酒。\n> 玛雅:你有瓶1961年白马酒庄的酒却放着不喝，品尝它的最佳时间可能已经过了，你在等什么呢？\n> 迈尔斯:不知道，某个特别的日子吧，给一个对的人共享，我本想留到结婚十周年纪念日上喝的\n> 玛雅:把1961年白马酒庄的酒打开的那一天就是特别的日子。\n\n##### 如何留住顾客跟定你\n改善自己的服务，如果电话在没有接听之前，您可以跟顾客一点事情做，给顾客分分心，降低她的焦虑感。像海底捞一样等待的人那么多可以提供玩具玩。\n\n##### 把潜力变成现实\n把潜力变成现实，一个工作经验，和过往业绩，压根无法跟你相提并论的对手，把客户从你这抢走了。人对潜力更有兴趣。\n\n##### 把会议开的更高效\n- 第一，请参加会议的人提前提交信息，提交大家的想法。如果，你面临一个问题，还想挑战下每个组员都贡献智慧，那么与其让每个人都同时说出想法和建议，更高效的做法，让大家花几分钟静静的想一想自己的主页，然后写下来提交给全组。\n- 第二，组织会议的最后一个人的发言会对大家产生影响，先入为主，所以领导者要先倾听大家的声音，最后表达自己的建议。\n- 第三，做个任务清单会很有用。列出必要的点。\n- 第四，对会议的座次安排作出微妙调整，圆桌式的会能唤起人们的归属感，参与者更容易重视小组整体目标，也更容易强调全组人的利益，相反，当作是安排呈现出带角的形状，或方形的形状，效果刚好相反，这种将激发了人们，对独特性的追求，很容易产生个人主义。所以当一个领导者想要说服自己的员工行动起来，大家齐心协力，最好把座椅，摆成圆桌式的，如果一个领导，让自己的团队为自己的行为负责，那么正方形或者长方形的桌椅更好。\n\n##### 服装的影响力\n你的气质和你的穿着打扮要相当，比如说你是个教授，或者和，别的公司去谈判，不能穿着太随意。\n\n##### 亮出专家身份\n人们总是相信专家的权威，当某人接受了专家的建议，那么他的脑部活动就停止了，也就是说，不再进行批判性思维，反驳的力度也就降低了，如果有关专家的建议可以使用，那就把它早早的摆出来，要不这样的话可能就有点傻了。\n\n##### 不确定的说服力\n语气中带有某种程度不确定的专家，会更激发人们的兴趣。在没有明显带有正确的情况下，表现出一点不确定，非但不会损害你的说服力，反而还有极大的帮助，当商业顾问说服决策者的时候，与其把轻微不确定遮掩起来，还不如明明白白的点出来，因为这世界上会让他显得更有说服力，有利于建立信任。98%的好，还有2%的不确定，没有完美。\n\n##### 中心位置的影响力\n放到中间的那个明显更受欢迎。从海报到平面广告到电视剧，都是这样设置的。有商家会给经理付钱，争取最好的位置。可以绑着畅销最受欢迎的字，你到外包装上，这样就可以不受位置影响。\n\n##### 如何激发创意\n当天花板高的时候，人的想法更富创意，更概念化，当天花板较低的时候，人们的想法就更具体更局限性。\n\n##### 主场还是客场\n对于比赛还是考试各种，都有自己的主场优势，在自己熟悉的环境可能更容易应付，所以在谈判的时候，最好在自己的主场或者提前过去，熟悉下环境。\n\n##### 如何让自己变得更强大\n写下让自己感觉强大的经历，这么一个小小的举动就可以大为不同。回忆一个让自己感到强大的时刻。良种，典型的身体语言会爱试出人的心理状态是强是弱，舒展身体和开放程度，心态强大的人，体态会感到更舒服、开放，体弱无力的人会显得局促、封闭。\n\n##### 你所需的只是爱\n其实我们打算建议的事情要小的多:只是在你的影响行为中添加一点象征，爱意的线索就行了。比如说声谢谢，或者在网站上什么地方多弄一颗爱心，爱是温暖的。\n\n##### 完美的礼物哪里找\n适合他们的就是最好的。维护之前一定要了解对方的喜好而不是自己认为最有价值的，对方关注的才是有价值的，从对方的喜好清单里面去找。\n\n##### 为互助留出余地\n互助原理。在收到恩惠后，人们愿意以相同的方式来回报。要注意最重要的一点是你 **第一个行动** 。第一个出手相助会激活互惠原理，并因此增加未来互助的次数，对于职场中 **共同成功** 这个因素至关重要。第二，要把你提供的帮助或者有价值的信息做个定位，把日后对方可以全力回报你的可能性 **凸显** 出来。\n用三种应答方式用它们来回应对方对你的感谢:\n>- 一，能帮上你的忙我很高兴，因为我知道当一个人需要帮忙的时候，别人的一双援手是多么的有价值，\n>- 二，不客气，同事之间理应如此，\n>- 三，没关系，因为我知道如果需要帮助的是我，你也会这么做的。**以此方式来激活互惠原理**，维护会互惠留出余地。\n\n##### 表达感激好处多\n当给予别人，更多的帮助获得他人的肯定，觉得自己更有价值，所谓的成就感。例子来自政府的纳税单，来自天猫卖家的手写信。\n\n##### 出乎意料与抛砖引玉\n以出乎意料的方式给予，**提供惊喜**，先给予后获取。人们之所以会笑，回幽默很大程度是因为出乎意外的`惊喜`。\n>能量守恒定律，能量总是从高到低去的，你强他弱，你弱他就强，是一个动态平衡。\n\n##### 如何获得帮助\n爱是尽管开口。在一组实验中，求助的人低估了对方愿意帮忙的可能性，愿意帮忙的人也高估了别人开口求助的可能性，既然没人开口，就是你家不需要帮忙呗！一句话，事实没自己想象的那么糟，也没自己想象的那么好。**所以开始行动吧**！\n\n##### 先下手为强\n去关注那些好的方面，而不是被带入沟里去关注那些负面裂痕，从而，低估了价值。参加谈判之前，一定要在脑子里想好一下价格，还应该把合理的原因 **清单**列出来，在谈判，中，一定要把这些，摆在面前，足够提醒你，抵消自己心中的质疑。\n\n##### 报价精确一点会更好\n> 如果你想要涨工资，可以刷福利待遇提10%，更应该提出9.8%或者10.2%会更好。\n> 如果一个保姆拿到每小时十五美元的薪水，他应该向老板提出15.585，但美元而不是16美元。\n> 如果是项目管理，等出最终的精确时间，如果让别人答应你一个未来的计划时间给出一个模糊时间，前提是*对他有益*。\n\n准确的数字增加可信度，这个结果是经过深思熟虑计算出来的，而不是漫天要价。\n比如:要求几天完成工作，更精准的是“周三下午，3:47把他交给我好吗“？而不是笼统的说几天完成。效果更好。报价更精准一些，让人更相信你认真研究过。\n\n##### 定价末尾数字有玄机\n**降档效应**,**左位数效应**。先说价值把价值谈得高高的最后说价格，这是价格就不觉得那么高了，取小数不要取整数，尽管整数容易计算。\n\n##### 顺序改一改，生意滚滚来\n>心理学有一个基本概念叫做视觉“对比现象”:意思是不必改变物体本身，只改变人看到这个物体之前的体验，就能改变人对这件东西的影响。\n\n- 比如说六十美元一瓶倒红酒列在开头，这瓶35年的酒，价格看起来就很合理，酒一点也没有变，改变的是人们对他的看法。**来源自比较**。当数字不容易计算的时候，人们更喜欢数字在前价格战后的数据。\n- 比如人们更喜欢580小时的节目收费286元，而不是286元可看580小时的节目，虽然这两种表达方式在一模一样。所以在你的工作中下调整，先说你的服务项目，最后说价格。\n- 当你面试时写简历的时候，不要强调你有多少年工作经验，先把你这段时间取得的成绩。更好的方法，把成绩发出来，把你取得的成绩全部列出来，然后再说工作年限。先说收益，后说成本。\n\n##### 如何事半功倍\n当你提供了一个高价值的东西，不要再和低价值的东西放在一起，那样会**过犹不及**，削弱你的层次。\n例子：\n> 想乱丢垃圾的人，处以750美元的罚款\n> 向丢垃圾的人处以750美元的罚款，外加两个小时的社区服务。\n\n条件多了反而没有重点，其实750美元其实已经足够有吸引力。两种办法各取所长，同样的资源为少部分抽选的用户增加更诱人的价值，而不是把所有的资源都扑上去。这就好像往热水里加温水一样，只能，降低整体的维度。更好的做法是重视的客户提供量身打造，诱人的格外优惠，你触发了互惠原则。\n\n##### 化整为零\n如果让你捐款，你救助一个学生为他捐多少，而是在为整体捐多少。人们对数字有时候是没有概念的，就像拍电影一样，人对一个人的，生活是个很有童心感的，在对一个整体冷冰冰的数字是没有感觉的。\n\n##### 鲜明生动的细节\n塑造一个活生生的鲜明形象。而不是表格上那些干巴巴的数字，而是应该摆出团队成员的照片，让这些人的形象变得鲜活。就像前段时间希腊的那个海滩上的小男孩，其实之前已经报道很多希腊的难民，涌入，但是大家都无感，等大家看到了这个小孩的照片之后，大家就引发了同情。  当你需要说服，别人为你提供资源去帮助你达成某个目标的时候，你应该去引导对方关注两个方面形象鲜明的受益对象，以及清晰具体的干预手段，形象说明对象具体一个词，一个动作，一个事件，一种手段的方法提醒。\n\n##### 指出机会成本\n指出你省下来的钱可以被用来购买其他的相关产品。你把自己的大家的计划写在团队的板板上公之于众效果会更好。当说服，用户来买你的东西的时候，前提是你的产品足够吸引人，提醒，你买了之后可以省下来更多的钱去做什么？\n\n##### 如何激励他人，还有自己，完成任务\n在任务的早期，你应更应该关注 **我已经完成多少**，然而，进程过半的时候，你更应该关注 **我还剩下多少**。这个方法能够帮你，坚持下来。刚开始的时候，你应该关注的的是已经减掉了多少重量，到了后期你就要去想想还有多少斤没有减掉。\n\n##### 如何提高客户忠诚度\n如果让别人认同你的想法，加入你的计划。要给出最宽松的条件限制，但一旦开始为了达到目标，就要严格要求执行，更有效果完成。比如按顺序买红酒的例子，是自由购买还是无顺序购买？把一件事拆解开来，分成一个个小的步骤，分开执行看来更有效果，更容易达到目标。\n\n##### 如何让一加一大于二\n人们对失去的，在优过，得到了对他的渴望。这就是说，人类在遇到困难的时候会放大困难，而一旦过了这个时段回过头来看，觉得这个困难不算什么。我们都是牺牲明天享受今天的景象，如果今天拿到二十元，明天拿到21元的选择，绝大多数人都会，选择今天拿到钱。可是你再把千金换一下，说七天之后拿到二十美元和八天之后拿到20亿美元，更多人就愿意多等一天。有时候人的决策和行为是多么不一致。因此，当你用奖品或者激励手段来促使他人完成任务的时候，应该把激励手段或奖品非常不同的类别。——因为人们害怕失去。\n\n##### 退后一步看问题\n当你面对一个棘手的问题，只需要后退，站的更远一点看问题就能改变这个问题的难度感知，这个问题就不会那么棘手了。把人和选择之间的实际距离加大，可以显著提高人作出购买决策的速度。   当你为了一件棘手的公事烦恼不已的时候，为什么那个从远处探过头来瞧你电脑屏幕，自命不凡的同事总是以为他能更快地找出解决办法。**当遇到难题时，退后，离的远一点**。\n\n##### 从他人的错误中汲取教训\n把时间花在辨别，并避免他人作出的，导致商业失败的愚蠢决策上。因此最好做一份属于自己的愚蠢清单，把他人犯过的错误也记录下来，当你碰到要做重大决策的时候，要拿出来看一遍再做决策。\n事实远不止如此，负面的信息也更容易让人记住，在角色中占有比例更高。经验素材库，让他吸引你团队的注意力更容易从中汲取教训，让大家牢牢记住，并且提供促使人采取行动建设性的忠告。\n\n因为这份清单记住的都是别人犯错的错，你更容易看出毛病在哪？如果这些错误是你犯的有点费力跟一个念头对抗，往往还是败阵下来的，如果你想说服自己这些压根就不是错误，只不过运气不好，或者时机不对，害得你没法掌握而已。但别人的错误跟你无关，你不会被自己，电话蒙蔽了双眼，因此它是一个非常有效对你很有好处的学习工具。\n\n- 精明的领导者回答大家，从其他人的错误中汲取教训，在以后的日后行为作出改善。\n- 老师们可以把往届学生犯的错误整理一份，`避免错误的清单，给现在的学生参考。\n- 医生也可以提到以前的一两个患者做错了什么，结果导致什么病情加重，借此来确保现在的患者不在犯同样的错误。\n- 健身教练可以向新客户指出，别人在使用健身器材的时候犯过的错来保证新客户不会重蹈覆，让他们从健身训练中获得最好的收效。\n\n做一份错误清单，定期从中学习。能帮你在商界里做，对的一个小举措就是一列一张别人做，过错似的清单。\n如果你忽视了，记录错误的价值，那么就把这条列入你的错误清单中。\n\n##### 对错误进行管理\n这些错误不仅能够帮，你在将来做得更好，甚至还能增强你的影响力。\n知道错误可能出现在什么地方，又是怎么发生的第二个要求就是，培训是要指导学生如何，`用最好的方式去面对错误，让学员知道你的错误出现那种心态是最好的`。**犯错是很自然的**，这是学习过程中的一部分，犯错越多，学到东西越多，错误会告诉你，你还有哪些东西要学，这些反馈方式几种药会让结果大为不同，*这是因为如果没有这些点拨，人们多半会把错误看成失败，而不是指向成功的路标，* 这种知道培训对出道成功的企业文化是如此重要，`所以为了尽早成功，多犯点错吧！`\n\n> 人们的期望总是过高的在现代商业，鬼复杂，如果把资源用于追求一个错误也不脱出的乌托邦的目标，工作效率低的整体成本也会高很多，倒不如把资源用在寻求解决问题纠正错误的目标上，获得更高的顾客满意度。零错误反倒不如及时改正错误好，完善体验带来惊喜。\n\n##### 当天就点评\n及时反馈。与正面信息相伴，人们更容易关注负面信息，也更有可能从中汲取教训或者孕检信息。当在网上看到一个最近的一个评论的正面信息，会带来更多的赞，更多的客户，但如果是信息都很陈旧的，就不想去看了。\n\n##### 给邮件加点料，让谈判更顺畅\n笑声是人与人之间最短的距离，信任是非常重要的因素。给你来，邮件加上一个，好玩的漫画，添加一些有血有肉的人情味儿。为了给对方建立良好的关系，主动透露一点个人信息，不但能够减少排放，谈判中的僵局还能，让对方都能取得更好的结果。有时候不能写为健全而淡之的是面谈，或者干脆打个电话，会增加亲切感。\n\n##### 碰触的魔力\n能够摸到产品的卖家开出的价格就比那些摸不到的产品开价更高。作为主持人，或培训师，不要，把资料放在学员的桌子上，而是应该请他们走进房间的时候亲自分发，为了提高，会议赞助的小礼品的价值感，会议活动组织者可以时间选出一组不错合适的时机，把它从袋子里掏出来，然后亲自递给参会的人，这样不仅能够提高他的价值感，也会避免这个小礼物被无人问津。如果当产品无法被人摸到的时候，**只需要顾客在头脑里想象与他的感觉就能够强化有关**，从而提高它的价值。\n\n##### 把最好的留到最后\n**峰——终体验**。人们只会记住，记住最后一次或者体验最好的一次的感觉。在客人办理入住的时候，送一个个性化的变迁，然后在结账退房的时候送上一个小礼物。与其把重点放在有问题的产品，浪费在你许多时间，不如去强调它，给客户带来不便和痛苦多么严重。**强调体验** 如果你希望下次度假时带回精彩又开心的回忆，那么与其把预算平均分配给一连串短途旅行观光，还不如把钱花在两天特别有意思的事情上，把升舱的机会留在回程，这样你会更加开心。\n\n##### 多个细节叠加使用，效果未必会叠加\n关于说服科学的**叠加使用规则**,并不是所有的规则叠加起来都会更多，有可能会相互抵消。\n有三个原因解释:\n- 第一，这几条策略背后的心理动机互不相容。\n- 第二，你一次使用的说服工具越多，对方就越不容易在第一时间积极响应。\n- 第三，方法用得越多，意图就越明显有时候你把一堆不起眼的小策略放在一起的时候，那种不显山不漏水的微妙感觉就没有了，说服的意图就变成了露骨，对方就容易拒绝你。\n构思说服他人的措辞时，好像存在一个临界点，超过这个点多余的理由和论据，反而更让人容易抗拒，削弱了说服力的力度。使用的技巧一般**不超过三个**，事不过三。\n\n##### 写在最後\n學了這麼多技巧，最終要的是在生活中得到有效應用，多觀察，多实践，多思考，触类旁通，从而真正的融会贯通，内化掉。","slug":"influence","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9w001mwsnn2wdxazr1","content":"<p>整本书都是一些社会实验出来的，从小的行为改变，去让周围的人发生行为改变，小改变，大影响。也是书中说的四两拨千斤的效果。本书列举了50多个小的技巧，总结一些好好的把这些应用到自己的生活场景中去，才算真正的读到了，学到了。当应用中会有更多的思考，是否有效，有一些已经在生活中已经使用，只不过我们不知道。以及如何更好的应用？怎样多个技巧叠加使用，还是只能使用一个技巧？多个技巧使用了反而没有效果了？为什么？因此写在这里，以备日后查找，总结。<br><a id=\"more\"></a></p>\n<h5 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h5><p>－ 整个说服科学（persuasion science）来自实实在在的证据。<br>－ 互惠－人们都有义务偿还别人给予的恩惠<br>－ 权威－人们都相信专家的指点<br>－ 稀缺－物以稀为贵<br>－ 喜好－人们越喜欢某个人，就越容易答应他的请求，爱屋及乌<br>－ 保持一致－人们希望做出自己的承诺和价值观相符合的行为<br>－ 社会认同你－人们会参照他人的做法知道自己的行为<br>做一些小的调整，把你要说的信息与对方的内心深处的冬季关联起来，找到关键的地方，就能带来显著的成效。</p>\n<h5 id=\"向“大众”借力\"><a href=\"#向“大众”借力\" class=\"headerlink\" title=\"向“大众”借力\"></a>向“大众”借力</h5><p>社会认同原理（social proof），也就说从众心理。社会认同的力量往往胜过理性的认知。“大家怎么做，我就怎么做”是一个通往明智的，高效的捷径。人们通常对于很多事情不会去独立思考，而选择从众。缴税的例子，在提醒的例子上，提示有多少人已经缴税，而且数据缴税数字说的更准确一些。<br>－ 高效作出决定<br>－ 获得社会认同<br>－ 所提倡的事情要是积极的，积极的态度看待自己</p>\n<h5 id=\"“小众”的反作用力\"><a href=\"#“小众”的反作用力\" class=\"headerlink\" title=\"“小众”的反作用力\"></a>“小众”的反作用力</h5><p>当作出和大众不同的决策时候，“小众”人群的大脑中与情绪处理有关的区域被激活了，与众人背道而驰是有情感成本的，我们获得了痛苦的代价。<br>当一个需要衡量的行为被公之于众的的时候，与群体划清界限的的攻击越强。当企业开发新用户的群体的时候，现有的这些客户群体为了把自己和这些新客户区分开，不屑与他们为伍，就不在使用这些产品了。这些“小众”的群里就是那部分特立独行的，寻找身份认同的。和苹果手机的一些用户也是。</p>\n<h5 id=\"非常态VS常态\"><a href=\"#非常态VS常态\" class=\"headerlink\" title=\"非常态VS常态\"></a>非常态VS常态</h5><p>看不同的人是否遵守<strong>社会规范（social norm）</strong>。人们都愿意与社会规范保持一致，有的人为了张扬个性，刻意特立独行。如果咬说服这类人，需要使用<em>违背</em>原则，按照违背他们的角度去遣词造句，会更有效。<em>推正拉反，强调少数人，争取多数人</em>，</p>\n<blockquote>\n<p>例子：对于开会迟到大家是否认同，那么为了更好的影响更多的人的结果。如果大部分肯定，则强掉迟到的人有哪些负面的特质。相反，强调按时开会具备哪些积极正面的反应</p>\n<p>例子：1。积极健身和成熟、聪明联系在一起2.把负面，愚蠢与不健康的生活方式联系在一起。发现越是正面的，越受2的影响，认为不常见的，则越受第一种的影响，即健身与正面的成熟的意见影响。都是相反的。</p>\n</blockquote>\n<h5 id=\"强大的环境暗示\"><a href=\"#强大的环境暗示\" class=\"headerlink\" title=\"强大的环境暗示\"></a>强大的环境暗示</h5><p>破窗理论<br>对环境背景作出一个小的调整，就会带来一个小的改变，当一个坏习惯没有得到制止，则会有更多的坏习惯。人都是环境的产物，很多人在国内扔垃圾在国外却不扔，人没有变，但是环境改变了，能量场改变了</p>\n<h5 id=\"改个名字，改变一切\"><a href=\"#改个名字，改变一切\" class=\"headerlink\" title=\"改个名字，改变一切\"></a>改个名字，改变一切</h5><p>人们更倾向于和自己有相似背景的人或者事物站在一起。比如自己的相同的名字，自己的老乡。在传递的信息中展现他人的名字和地址等，则更显亲切。想获得更多人支持。</p>\n<h5 id=\"如何化敌为友\"><a href=\"#如何化敌为友\" class=\"headerlink\" title=\"如何化敌为友\"></a>如何化敌为友</h5><p>人以群居，物以类分。和其他人找到同一种身份认同。或者寻找共同点，刻意帮助团队和合作伙伴更顺畅。</p>\n<h5 id=\"预测他人的喜好、渴望与需求\"><a href=\"#预测他人的喜好、渴望与需求\" class=\"headerlink\" title=\"预测他人的喜好、渴望与需求\"></a>预测他人的喜好、渴望与需求</h5><p> 无论你是和一个认识多年的老客户打交道，还是可以一个合作很久的工作搭档相处，要给他们定期交换新秩序，安排一些非正式的沟通机会，增进彼此了解，讲座的重要性怎么强调也不为过。</p>\n<h5 id=\"主动承诺的力量\"><a href=\"#主动承诺的力量\" class=\"headerlink\" title=\"主动承诺的力量\"></a>主动承诺的力量</h5><p>主动承诺。如果晨会结束，今年让每个人把工作复述一遍，切实执行就更有望实现。亲自把下次月的时间和，日前写的卡片上。八，自己，所有的行动计划记录下来，然后分发给众人，然后再发电子邮件，加上一段简单的话，请收件人，回复一个好的，来确认。</p>\n<h5 id=\"承诺要行动，要公开\"><a href=\"#承诺要行动，要公开\" class=\"headerlink\" title=\"承诺要行动，要公开\"></a>承诺要行动，要公开</h5><p>承诺要行动要公开。当你要劝说某人许下承诺时，请他做一个，比较宽泛，而不是具体的承诺，你的成功概率会更大。</p>\n<h5 id=\"“心安理得”效应\"><a href=\"#“心安理得”效应\" class=\"headerlink\" title=\"“心安理得”效应\"></a>“心安理得”效应</h5><p>心安理得效应。客人在办理入住时先签个承诺书，这不仅提高毛毯和床单的水冲水效率，而且让客人在离开房间更容易记得关灯关电视，这就是一个正向溢出效应。如果人们在使用和丢弃产品时产生了内疚心理，那么通过回收利用的行为，他们就可以减少这种因过度消费而产生，的负面情绪。</p>\n<h5 id=\"如何为员工鼓励儿加油\"><a href=\"#如何为员工鼓励儿加油\" class=\"headerlink\" title=\"如何为员工鼓励儿加油\"></a>如何为员工鼓励儿加油</h5><p>使用前文提出的主动承诺原理，请团队挑出自己喜欢做的事情，并当着同事单独出来。另一个做法是，把客户请过来现身说法，让员工听见客户的声音。就是让员工意识到自己做的事情的重要性外化出来，从而提高他的成就感，这个小技巧，也是金钱有时候达不到的。也许管理者能做的最微小的改变，就是看到员工做得出色，<strong>是简单说一句，干的漂亮吧</strong>。</p>\n<h5 id=\"如何避开决策陷阱\"><a href=\"#如何避开决策陷阱\" class=\"headerlink\" title=\"如何避开决策陷阱\"></a>如何避开决策陷阱</h5><p>把决策者和谈判者的角色分开，承诺升级以及财务上的风险就可以规避了。不能自己是运动员，又是裁判员。如果你，在组织中负责某个项目的执行，那你最好把评估它成功与否的工作交给组织里的其他人来做，这里是，因为你容易过高的估计，而且项目的价值有时候高估的程度会惊人。因为自己已经先入为主，受环境影响了，评估人跟你联系越少，评判客观度会更高。</p>\n<h5 id=\"巧用“执行意向”\"><a href=\"#巧用“执行意向”\" class=\"headerlink\" title=\"巧用“执行意向”\"></a>巧用“执行意向”</h5><p>让他们做一个具体的计划，说说他们打算在，何时、何地、准备如何执行这件事。例子，这周三下午4点能来开会吗？改成这周三下午4点之前，开会之前你打算做什么？写下你具体需要执行的，那个时间。我们会倡导受试者把承诺公开。</p>\n<h5 id=\"推迟一点会更好\"><a href=\"#推迟一点会更好\" class=\"headerlink\" title=\"推迟一点会更好\"></a>推迟一点会更好</h5><p>未来绑定法，当你想要去说服他人接受你，我改变的时候不要让他立即就改，而是改变放到未来的某个时段，当然前提是，这改变对他是有益的。这样你可能会得到更多人的支持和认同。回来把你放到另一个是用年月是购买公共服务，比如安装宽带，有线电视信用卡。比如那年的淘宝的十月围城也是过了几个月，然后再调高费用。</p>\n<h5 id=\"为了将来的自己\"><a href=\"#为了将来的自己\" class=\"headerlink\" title=\"为了将来的自己\"></a>为了将来的自己</h5><p>将来的自己过得好不好，却要仰仗现在的你，你现在的决策，将决定将来的自己能拥有多少财务安全感。尽管生活中某些方面会随着时间改变的是每个人的核心身份，他们最真实的自我始终是不变的，要想方设法拉近现在的我和未来的我的之间的距离，例如用ps软件，看到自己苍老的未来。</p>\n<h5 id=\"目标设得好，干劲会更足\"><a href=\"#目标设得好，干劲会更足\" class=\"headerlink\" title=\"目标设得好，干劲会更足\"></a>目标设得好，干劲会更足</h5><p>给自己设立一个浮动的区间（8%~10%）。让人们实现目标两个最重要的因素，挑战性与可实践性。简单地说，他之所以能够促使人们重拾目标，是因为让人能打可实现性和可挑战性的方面成就感全占了。就像很多诱惑的广告，把你搞的蠢蠢欲动，其实就是拉近了可实践性和挑战性的距离。</p>\n<h5 id=\"损失规避原则\"><a href=\"#损失规避原则\" class=\"headerlink\" title=\"损失规避原则\"></a>损失规避原则</h5><p>人们得到十块钱和失去十块钱的，痛苦是不一样的。这个启发就告诉我们甚至两个选择，让受众者主动挑选一个，然后再向前迈一步，你想让他们选的那个包装一下，向他们指出，如果不这么做的话，就会损失什么。例子，今年秋天我会打流感疫苗，因为我想降低流感的风险，并且节省五十美元，或者，今年秋天我不想打疫苗，即便这意味着我得流感，风险可能会挺高，而且无法节省五十美元。</p>\n<h5 id=\"如何克服拖延症\"><a href=\"#如何克服拖延症\" class=\"headerlink\" title=\"如何克服拖延症\"></a>如何克服拖延症</h5><p>设立一个截止日期。注册率设置一个临近的截止日期。<br>推荐一部热门影片，《杯酒人生》里面的一个片段，教你如何不露痕迹地说服他人:</p>\n<blockquote>\n<p>迈尔斯:我存了点好东西，一瓶1961年，白马酒庄的好酒。<br>玛雅:你有瓶1961年白马酒庄的酒却放着不喝，品尝它的最佳时间可能已经过了，你在等什么呢？<br>迈尔斯:不知道，某个特别的日子吧，给一个对的人共享，我本想留到结婚十周年纪念日上喝的<br>玛雅:把1961年白马酒庄的酒打开的那一天就是特别的日子。</p>\n</blockquote>\n<h5 id=\"如何留住顾客跟定你\"><a href=\"#如何留住顾客跟定你\" class=\"headerlink\" title=\"如何留住顾客跟定你\"></a>如何留住顾客跟定你</h5><p>改善自己的服务，如果电话在没有接听之前，您可以跟顾客一点事情做，给顾客分分心，降低她的焦虑感。像海底捞一样等待的人那么多可以提供玩具玩。</p>\n<h5 id=\"把潜力变成现实\"><a href=\"#把潜力变成现实\" class=\"headerlink\" title=\"把潜力变成现实\"></a>把潜力变成现实</h5><p>把潜力变成现实，一个工作经验，和过往业绩，压根无法跟你相提并论的对手，把客户从你这抢走了。人对潜力更有兴趣。</p>\n<h5 id=\"把会议开的更高效\"><a href=\"#把会议开的更高效\" class=\"headerlink\" title=\"把会议开的更高效\"></a>把会议开的更高效</h5><ul>\n<li>第一，请参加会议的人提前提交信息，提交大家的想法。如果，你面临一个问题，还想挑战下每个组员都贡献智慧，那么与其让每个人都同时说出想法和建议，更高效的做法，让大家花几分钟静静的想一想自己的主页，然后写下来提交给全组。</li>\n<li>第二，组织会议的最后一个人的发言会对大家产生影响，先入为主，所以领导者要先倾听大家的声音，最后表达自己的建议。</li>\n<li>第三，做个任务清单会很有用。列出必要的点。</li>\n<li>第四，对会议的座次安排作出微妙调整，圆桌式的会能唤起人们的归属感，参与者更容易重视小组整体目标，也更容易强调全组人的利益，相反，当作是安排呈现出带角的形状，或方形的形状，效果刚好相反，这种将激发了人们，对独特性的追求，很容易产生个人主义。所以当一个领导者想要说服自己的员工行动起来，大家齐心协力，最好把座椅，摆成圆桌式的，如果一个领导，让自己的团队为自己的行为负责，那么正方形或者长方形的桌椅更好。</li>\n</ul>\n<h5 id=\"服装的影响力\"><a href=\"#服装的影响力\" class=\"headerlink\" title=\"服装的影响力\"></a>服装的影响力</h5><p>你的气质和你的穿着打扮要相当，比如说你是个教授，或者和，别的公司去谈判，不能穿着太随意。</p>\n<h5 id=\"亮出专家身份\"><a href=\"#亮出专家身份\" class=\"headerlink\" title=\"亮出专家身份\"></a>亮出专家身份</h5><p>人们总是相信专家的权威，当某人接受了专家的建议，那么他的脑部活动就停止了，也就是说，不再进行批判性思维，反驳的力度也就降低了，如果有关专家的建议可以使用，那就把它早早的摆出来，要不这样的话可能就有点傻了。</p>\n<h5 id=\"不确定的说服力\"><a href=\"#不确定的说服力\" class=\"headerlink\" title=\"不确定的说服力\"></a>不确定的说服力</h5><p>语气中带有某种程度不确定的专家，会更激发人们的兴趣。在没有明显带有正确的情况下，表现出一点不确定，非但不会损害你的说服力，反而还有极大的帮助，当商业顾问说服决策者的时候，与其把轻微不确定遮掩起来，还不如明明白白的点出来，因为这世界上会让他显得更有说服力，有利于建立信任。98%的好，还有2%的不确定，没有完美。</p>\n<h5 id=\"中心位置的影响力\"><a href=\"#中心位置的影响力\" class=\"headerlink\" title=\"中心位置的影响力\"></a>中心位置的影响力</h5><p>放到中间的那个明显更受欢迎。从海报到平面广告到电视剧，都是这样设置的。有商家会给经理付钱，争取最好的位置。可以绑着畅销最受欢迎的字，你到外包装上，这样就可以不受位置影响。</p>\n<h5 id=\"如何激发创意\"><a href=\"#如何激发创意\" class=\"headerlink\" title=\"如何激发创意\"></a>如何激发创意</h5><p>当天花板高的时候，人的想法更富创意，更概念化，当天花板较低的时候，人们的想法就更具体更局限性。</p>\n<h5 id=\"主场还是客场\"><a href=\"#主场还是客场\" class=\"headerlink\" title=\"主场还是客场\"></a>主场还是客场</h5><p>对于比赛还是考试各种，都有自己的主场优势，在自己熟悉的环境可能更容易应付，所以在谈判的时候，最好在自己的主场或者提前过去，熟悉下环境。</p>\n<h5 id=\"如何让自己变得更强大\"><a href=\"#如何让自己变得更强大\" class=\"headerlink\" title=\"如何让自己变得更强大\"></a>如何让自己变得更强大</h5><p>写下让自己感觉强大的经历，这么一个小小的举动就可以大为不同。回忆一个让自己感到强大的时刻。良种，典型的身体语言会爱试出人的心理状态是强是弱，舒展身体和开放程度，心态强大的人，体态会感到更舒服、开放，体弱无力的人会显得局促、封闭。</p>\n<h5 id=\"你所需的只是爱\"><a href=\"#你所需的只是爱\" class=\"headerlink\" title=\"你所需的只是爱\"></a>你所需的只是爱</h5><p>其实我们打算建议的事情要小的多:只是在你的影响行为中添加一点象征，爱意的线索就行了。比如说声谢谢，或者在网站上什么地方多弄一颗爱心，爱是温暖的。</p>\n<h5 id=\"完美的礼物哪里找\"><a href=\"#完美的礼物哪里找\" class=\"headerlink\" title=\"完美的礼物哪里找\"></a>完美的礼物哪里找</h5><p>适合他们的就是最好的。维护之前一定要了解对方的喜好而不是自己认为最有价值的，对方关注的才是有价值的，从对方的喜好清单里面去找。</p>\n<h5 id=\"为互助留出余地\"><a href=\"#为互助留出余地\" class=\"headerlink\" title=\"为互助留出余地\"></a>为互助留出余地</h5><p>互助原理。在收到恩惠后，人们愿意以相同的方式来回报。要注意最重要的一点是你 <strong>第一个行动</strong> 。第一个出手相助会激活互惠原理，并因此增加未来互助的次数，对于职场中 <strong>共同成功</strong> 这个因素至关重要。第二，要把你提供的帮助或者有价值的信息做个定位，把日后对方可以全力回报你的可能性 <strong>凸显</strong> 出来。<br>用三种应答方式用它们来回应对方对你的感谢:</p>\n<blockquote>\n<ul>\n<li>一，能帮上你的忙我很高兴，因为我知道当一个人需要帮忙的时候，别人的一双援手是多么的有价值，</li>\n<li>二，不客气，同事之间理应如此，</li>\n<li>三，没关系，因为我知道如果需要帮助的是我，你也会这么做的。<strong>以此方式来激活互惠原理</strong>，维护会互惠留出余地。</li>\n</ul>\n</blockquote>\n<h5 id=\"表达感激好处多\"><a href=\"#表达感激好处多\" class=\"headerlink\" title=\"表达感激好处多\"></a>表达感激好处多</h5><p>当给予别人，更多的帮助获得他人的肯定，觉得自己更有价值，所谓的成就感。例子来自政府的纳税单，来自天猫卖家的手写信。</p>\n<h5 id=\"出乎意料与抛砖引玉\"><a href=\"#出乎意料与抛砖引玉\" class=\"headerlink\" title=\"出乎意料与抛砖引玉\"></a>出乎意料与抛砖引玉</h5><p>以出乎意料的方式给予，<strong>提供惊喜</strong>，先给予后获取。人们之所以会笑，回幽默很大程度是因为出乎意外的<code>惊喜</code>。</p>\n<blockquote>\n<p>能量守恒定律，能量总是从高到低去的，你强他弱，你弱他就强，是一个动态平衡。</p>\n</blockquote>\n<h5 id=\"如何获得帮助\"><a href=\"#如何获得帮助\" class=\"headerlink\" title=\"如何获得帮助\"></a>如何获得帮助</h5><p>爱是尽管开口。在一组实验中，求助的人低估了对方愿意帮忙的可能性，愿意帮忙的人也高估了别人开口求助的可能性，既然没人开口，就是你家不需要帮忙呗！一句话，事实没自己想象的那么糟，也没自己想象的那么好。<strong>所以开始行动吧</strong>！</p>\n<h5 id=\"先下手为强\"><a href=\"#先下手为强\" class=\"headerlink\" title=\"先下手为强\"></a>先下手为强</h5><p>去关注那些好的方面，而不是被带入沟里去关注那些负面裂痕，从而，低估了价值。参加谈判之前，一定要在脑子里想好一下价格，还应该把合理的原因 <strong>清单</strong>列出来，在谈判，中，一定要把这些，摆在面前，足够提醒你，抵消自己心中的质疑。</p>\n<h5 id=\"报价精确一点会更好\"><a href=\"#报价精确一点会更好\" class=\"headerlink\" title=\"报价精确一点会更好\"></a>报价精确一点会更好</h5><blockquote>\n<p>如果你想要涨工资，可以刷福利待遇提10%，更应该提出9.8%或者10.2%会更好。<br>如果一个保姆拿到每小时十五美元的薪水，他应该向老板提出15.585，但美元而不是16美元。<br>如果是项目管理，等出最终的精确时间，如果让别人答应你一个未来的计划时间给出一个模糊时间，前提是<em>对他有益</em>。</p>\n</blockquote>\n<p>准确的数字增加可信度，这个结果是经过深思熟虑计算出来的，而不是漫天要价。<br>比如:要求几天完成工作，更精准的是“周三下午，3:47把他交给我好吗“？而不是笼统的说几天完成。效果更好。报价更精准一些，让人更相信你认真研究过。</p>\n<h5 id=\"定价末尾数字有玄机\"><a href=\"#定价末尾数字有玄机\" class=\"headerlink\" title=\"定价末尾数字有玄机\"></a>定价末尾数字有玄机</h5><p><strong>降档效应</strong>,<strong>左位数效应</strong>。先说价值把价值谈得高高的最后说价格，这是价格就不觉得那么高了，取小数不要取整数，尽管整数容易计算。</p>\n<h5 id=\"顺序改一改，生意滚滚来\"><a href=\"#顺序改一改，生意滚滚来\" class=\"headerlink\" title=\"顺序改一改，生意滚滚来\"></a>顺序改一改，生意滚滚来</h5><blockquote>\n<p>心理学有一个基本概念叫做视觉“对比现象”:意思是不必改变物体本身，只改变人看到这个物体之前的体验，就能改变人对这件东西的影响。</p>\n</blockquote>\n<ul>\n<li>比如说六十美元一瓶倒红酒列在开头，这瓶35年的酒，价格看起来就很合理，酒一点也没有变，改变的是人们对他的看法。<strong>来源自比较</strong>。当数字不容易计算的时候，人们更喜欢数字在前价格战后的数据。</li>\n<li>比如人们更喜欢580小时的节目收费286元，而不是286元可看580小时的节目，虽然这两种表达方式在一模一样。所以在你的工作中下调整，先说你的服务项目，最后说价格。</li>\n<li>当你面试时写简历的时候，不要强调你有多少年工作经验，先把你这段时间取得的成绩。更好的方法，把成绩发出来，把你取得的成绩全部列出来，然后再说工作年限。先说收益，后说成本。</li>\n</ul>\n<h5 id=\"如何事半功倍\"><a href=\"#如何事半功倍\" class=\"headerlink\" title=\"如何事半功倍\"></a>如何事半功倍</h5><p>当你提供了一个高价值的东西，不要再和低价值的东西放在一起，那样会<strong>过犹不及</strong>，削弱你的层次。<br>例子：</p>\n<blockquote>\n<p>想乱丢垃圾的人，处以750美元的罚款<br>向丢垃圾的人处以750美元的罚款，外加两个小时的社区服务。</p>\n</blockquote>\n<p>条件多了反而没有重点，其实750美元其实已经足够有吸引力。两种办法各取所长，同样的资源为少部分抽选的用户增加更诱人的价值，而不是把所有的资源都扑上去。这就好像往热水里加温水一样，只能，降低整体的维度。更好的做法是重视的客户提供量身打造，诱人的格外优惠，你触发了互惠原则。</p>\n<h5 id=\"化整为零\"><a href=\"#化整为零\" class=\"headerlink\" title=\"化整为零\"></a>化整为零</h5><p>如果让你捐款，你救助一个学生为他捐多少，而是在为整体捐多少。人们对数字有时候是没有概念的，就像拍电影一样，人对一个人的，生活是个很有童心感的，在对一个整体冷冰冰的数字是没有感觉的。</p>\n<h5 id=\"鲜明生动的细节\"><a href=\"#鲜明生动的细节\" class=\"headerlink\" title=\"鲜明生动的细节\"></a>鲜明生动的细节</h5><p>塑造一个活生生的鲜明形象。而不是表格上那些干巴巴的数字，而是应该摆出团队成员的照片，让这些人的形象变得鲜活。就像前段时间希腊的那个海滩上的小男孩，其实之前已经报道很多希腊的难民，涌入，但是大家都无感，等大家看到了这个小孩的照片之后，大家就引发了同情。  当你需要说服，别人为你提供资源去帮助你达成某个目标的时候，你应该去引导对方关注两个方面形象鲜明的受益对象，以及清晰具体的干预手段，形象说明对象具体一个词，一个动作，一个事件，一种手段的方法提醒。</p>\n<h5 id=\"指出机会成本\"><a href=\"#指出机会成本\" class=\"headerlink\" title=\"指出机会成本\"></a>指出机会成本</h5><p>指出你省下来的钱可以被用来购买其他的相关产品。你把自己的大家的计划写在团队的板板上公之于众效果会更好。当说服，用户来买你的东西的时候，前提是你的产品足够吸引人，提醒，你买了之后可以省下来更多的钱去做什么？</p>\n<h5 id=\"如何激励他人，还有自己，完成任务\"><a href=\"#如何激励他人，还有自己，完成任务\" class=\"headerlink\" title=\"如何激励他人，还有自己，完成任务\"></a>如何激励他人，还有自己，完成任务</h5><p>在任务的早期，你应更应该关注 <strong>我已经完成多少</strong>，然而，进程过半的时候，你更应该关注 <strong>我还剩下多少</strong>。这个方法能够帮你，坚持下来。刚开始的时候，你应该关注的的是已经减掉了多少重量，到了后期你就要去想想还有多少斤没有减掉。</p>\n<h5 id=\"如何提高客户忠诚度\"><a href=\"#如何提高客户忠诚度\" class=\"headerlink\" title=\"如何提高客户忠诚度\"></a>如何提高客户忠诚度</h5><p>如果让别人认同你的想法，加入你的计划。要给出最宽松的条件限制，但一旦开始为了达到目标，就要严格要求执行，更有效果完成。比如按顺序买红酒的例子，是自由购买还是无顺序购买？把一件事拆解开来，分成一个个小的步骤，分开执行看来更有效果，更容易达到目标。</p>\n<h5 id=\"如何让一加一大于二\"><a href=\"#如何让一加一大于二\" class=\"headerlink\" title=\"如何让一加一大于二\"></a>如何让一加一大于二</h5><p>人们对失去的，在优过，得到了对他的渴望。这就是说，人类在遇到困难的时候会放大困难，而一旦过了这个时段回过头来看，觉得这个困难不算什么。我们都是牺牲明天享受今天的景象，如果今天拿到二十元，明天拿到21元的选择，绝大多数人都会，选择今天拿到钱。可是你再把千金换一下，说七天之后拿到二十美元和八天之后拿到20亿美元，更多人就愿意多等一天。有时候人的决策和行为是多么不一致。因此，当你用奖品或者激励手段来促使他人完成任务的时候，应该把激励手段或奖品非常不同的类别。——因为人们害怕失去。</p>\n<h5 id=\"退后一步看问题\"><a href=\"#退后一步看问题\" class=\"headerlink\" title=\"退后一步看问题\"></a>退后一步看问题</h5><p>当你面对一个棘手的问题，只需要后退，站的更远一点看问题就能改变这个问题的难度感知，这个问题就不会那么棘手了。把人和选择之间的实际距离加大，可以显著提高人作出购买决策的速度。   当你为了一件棘手的公事烦恼不已的时候，为什么那个从远处探过头来瞧你电脑屏幕，自命不凡的同事总是以为他能更快地找出解决办法。<strong>当遇到难题时，退后，离的远一点</strong>。</p>\n<h5 id=\"从他人的错误中汲取教训\"><a href=\"#从他人的错误中汲取教训\" class=\"headerlink\" title=\"从他人的错误中汲取教训\"></a>从他人的错误中汲取教训</h5><p>把时间花在辨别，并避免他人作出的，导致商业失败的愚蠢决策上。因此最好做一份属于自己的愚蠢清单，把他人犯过的错误也记录下来，当你碰到要做重大决策的时候，要拿出来看一遍再做决策。<br>事实远不止如此，负面的信息也更容易让人记住，在角色中占有比例更高。经验素材库，让他吸引你团队的注意力更容易从中汲取教训，让大家牢牢记住，并且提供促使人采取行动建设性的忠告。</p>\n<p>因为这份清单记住的都是别人犯错的错，你更容易看出毛病在哪？如果这些错误是你犯的有点费力跟一个念头对抗，往往还是败阵下来的，如果你想说服自己这些压根就不是错误，只不过运气不好，或者时机不对，害得你没法掌握而已。但别人的错误跟你无关，你不会被自己，电话蒙蔽了双眼，因此它是一个非常有效对你很有好处的学习工具。</p>\n<ul>\n<li>精明的领导者回答大家，从其他人的错误中汲取教训，在以后的日后行为作出改善。</li>\n<li>老师们可以把往届学生犯的错误整理一份，`避免错误的清单，给现在的学生参考。</li>\n<li>医生也可以提到以前的一两个患者做错了什么，结果导致什么病情加重，借此来确保现在的患者不在犯同样的错误。</li>\n<li>健身教练可以向新客户指出，别人在使用健身器材的时候犯过的错来保证新客户不会重蹈覆，让他们从健身训练中获得最好的收效。</li>\n</ul>\n<p>做一份错误清单，定期从中学习。能帮你在商界里做，对的一个小举措就是一列一张别人做，过错似的清单。<br>如果你忽视了，记录错误的价值，那么就把这条列入你的错误清单中。</p>\n<h5 id=\"对错误进行管理\"><a href=\"#对错误进行管理\" class=\"headerlink\" title=\"对错误进行管理\"></a>对错误进行管理</h5><p>这些错误不仅能够帮，你在将来做得更好，甚至还能增强你的影响力。<br>知道错误可能出现在什么地方，又是怎么发生的第二个要求就是，培训是要指导学生如何，<code>用最好的方式去面对错误，让学员知道你的错误出现那种心态是最好的</code>。<strong>犯错是很自然的</strong>，这是学习过程中的一部分，犯错越多，学到东西越多，错误会告诉你，你还有哪些东西要学，这些反馈方式几种药会让结果大为不同，<em>这是因为如果没有这些点拨，人们多半会把错误看成失败，而不是指向成功的路标，</em> 这种知道培训对出道成功的企业文化是如此重要，<code>所以为了尽早成功，多犯点错吧！</code></p>\n<blockquote>\n<p>人们的期望总是过高的在现代商业，鬼复杂，如果把资源用于追求一个错误也不脱出的乌托邦的目标，工作效率低的整体成本也会高很多，倒不如把资源用在寻求解决问题纠正错误的目标上，获得更高的顾客满意度。零错误反倒不如及时改正错误好，完善体验带来惊喜。</p>\n</blockquote>\n<h5 id=\"当天就点评\"><a href=\"#当天就点评\" class=\"headerlink\" title=\"当天就点评\"></a>当天就点评</h5><p>及时反馈。与正面信息相伴，人们更容易关注负面信息，也更有可能从中汲取教训或者孕检信息。当在网上看到一个最近的一个评论的正面信息，会带来更多的赞，更多的客户，但如果是信息都很陈旧的，就不想去看了。</p>\n<h5 id=\"给邮件加点料，让谈判更顺畅\"><a href=\"#给邮件加点料，让谈判更顺畅\" class=\"headerlink\" title=\"给邮件加点料，让谈判更顺畅\"></a>给邮件加点料，让谈判更顺畅</h5><p>笑声是人与人之间最短的距离，信任是非常重要的因素。给你来，邮件加上一个，好玩的漫画，添加一些有血有肉的人情味儿。为了给对方建立良好的关系，主动透露一点个人信息，不但能够减少排放，谈判中的僵局还能，让对方都能取得更好的结果。有时候不能写为健全而淡之的是面谈，或者干脆打个电话，会增加亲切感。</p>\n<h5 id=\"碰触的魔力\"><a href=\"#碰触的魔力\" class=\"headerlink\" title=\"碰触的魔力\"></a>碰触的魔力</h5><p>能够摸到产品的卖家开出的价格就比那些摸不到的产品开价更高。作为主持人，或培训师，不要，把资料放在学员的桌子上，而是应该请他们走进房间的时候亲自分发，为了提高，会议赞助的小礼品的价值感，会议活动组织者可以时间选出一组不错合适的时机，把它从袋子里掏出来，然后亲自递给参会的人，这样不仅能够提高他的价值感，也会避免这个小礼物被无人问津。如果当产品无法被人摸到的时候，<strong>只需要顾客在头脑里想象与他的感觉就能够强化有关</strong>，从而提高它的价值。</p>\n<h5 id=\"把最好的留到最后\"><a href=\"#把最好的留到最后\" class=\"headerlink\" title=\"把最好的留到最后\"></a>把最好的留到最后</h5><p><strong>峰——终体验</strong>。人们只会记住，记住最后一次或者体验最好的一次的感觉。在客人办理入住的时候，送一个个性化的变迁，然后在结账退房的时候送上一个小礼物。与其把重点放在有问题的产品，浪费在你许多时间，不如去强调它，给客户带来不便和痛苦多么严重。<strong>强调体验</strong> 如果你希望下次度假时带回精彩又开心的回忆，那么与其把预算平均分配给一连串短途旅行观光，还不如把钱花在两天特别有意思的事情上，把升舱的机会留在回程，这样你会更加开心。</p>\n<h5 id=\"多个细节叠加使用，效果未必会叠加\"><a href=\"#多个细节叠加使用，效果未必会叠加\" class=\"headerlink\" title=\"多个细节叠加使用，效果未必会叠加\"></a>多个细节叠加使用，效果未必会叠加</h5><p>关于说服科学的<strong>叠加使用规则</strong>,并不是所有的规则叠加起来都会更多，有可能会相互抵消。<br>有三个原因解释:</p>\n<ul>\n<li>第一，这几条策略背后的心理动机互不相容。</li>\n<li>第二，你一次使用的说服工具越多，对方就越不容易在第一时间积极响应。</li>\n<li>第三，方法用得越多，意图就越明显有时候你把一堆不起眼的小策略放在一起的时候，那种不显山不漏水的微妙感觉就没有了，说服的意图就变成了露骨，对方就容易拒绝你。<br>构思说服他人的措辞时，好像存在一个临界点，超过这个点多余的理由和论据，反而更让人容易抗拒，削弱了说服力的力度。使用的技巧一般<strong>不超过三个</strong>，事不过三。</li>\n</ul>\n<h5 id=\"写在最後\"><a href=\"#写在最後\" class=\"headerlink\" title=\"写在最後\"></a>写在最後</h5><p>學了這麼多技巧，最終要的是在生活中得到有效應用，多觀察，多实践，多思考，触类旁通，从而真正的融会贯通，内化掉。</p>\n","excerpt":"<p>整本书都是一些社会实验出来的，从小的行为改变，去让周围的人发生行为改变，小改变，大影响。也是书中说的四两拨千斤的效果。本书列举了50多个小的技巧，总结一些好好的把这些应用到自己的生活场景中去，才算真正的读到了，学到了。当应用中会有更多的思考，是否有效，有一些已经在生活中已经使用，只不过我们不知道。以及如何更好的应用？怎样多个技巧叠加使用，还是只能使用一个技巧？多个技巧使用了反而没有效果了？为什么？因此写在这里，以备日后查找，总结。<br>","more":"</p>\n<h5 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h5><p>－ 整个说服科学（persuasion science）来自实实在在的证据。<br>－ 互惠－人们都有义务偿还别人给予的恩惠<br>－ 权威－人们都相信专家的指点<br>－ 稀缺－物以稀为贵<br>－ 喜好－人们越喜欢某个人，就越容易答应他的请求，爱屋及乌<br>－ 保持一致－人们希望做出自己的承诺和价值观相符合的行为<br>－ 社会认同你－人们会参照他人的做法知道自己的行为<br>做一些小的调整，把你要说的信息与对方的内心深处的冬季关联起来，找到关键的地方，就能带来显著的成效。</p>\n<h5 id=\"向“大众”借力\"><a href=\"#向“大众”借力\" class=\"headerlink\" title=\"向“大众”借力\"></a>向“大众”借力</h5><p>社会认同原理（social proof），也就说从众心理。社会认同的力量往往胜过理性的认知。“大家怎么做，我就怎么做”是一个通往明智的，高效的捷径。人们通常对于很多事情不会去独立思考，而选择从众。缴税的例子，在提醒的例子上，提示有多少人已经缴税，而且数据缴税数字说的更准确一些。<br>－ 高效作出决定<br>－ 获得社会认同<br>－ 所提倡的事情要是积极的，积极的态度看待自己</p>\n<h5 id=\"“小众”的反作用力\"><a href=\"#“小众”的反作用力\" class=\"headerlink\" title=\"“小众”的反作用力\"></a>“小众”的反作用力</h5><p>当作出和大众不同的决策时候，“小众”人群的大脑中与情绪处理有关的区域被激活了，与众人背道而驰是有情感成本的，我们获得了痛苦的代价。<br>当一个需要衡量的行为被公之于众的的时候，与群体划清界限的的攻击越强。当企业开发新用户的群体的时候，现有的这些客户群体为了把自己和这些新客户区分开，不屑与他们为伍，就不在使用这些产品了。这些“小众”的群里就是那部分特立独行的，寻找身份认同的。和苹果手机的一些用户也是。</p>\n<h5 id=\"非常态VS常态\"><a href=\"#非常态VS常态\" class=\"headerlink\" title=\"非常态VS常态\"></a>非常态VS常态</h5><p>看不同的人是否遵守<strong>社会规范（social norm）</strong>。人们都愿意与社会规范保持一致，有的人为了张扬个性，刻意特立独行。如果咬说服这类人，需要使用<em>违背</em>原则，按照违背他们的角度去遣词造句，会更有效。<em>推正拉反，强调少数人，争取多数人</em>，</p>\n<blockquote>\n<p>例子：对于开会迟到大家是否认同，那么为了更好的影响更多的人的结果。如果大部分肯定，则强掉迟到的人有哪些负面的特质。相反，强调按时开会具备哪些积极正面的反应</p>\n<p>例子：1。积极健身和成熟、聪明联系在一起2.把负面，愚蠢与不健康的生活方式联系在一起。发现越是正面的，越受2的影响，认为不常见的，则越受第一种的影响，即健身与正面的成熟的意见影响。都是相反的。</p>\n</blockquote>\n<h5 id=\"强大的环境暗示\"><a href=\"#强大的环境暗示\" class=\"headerlink\" title=\"强大的环境暗示\"></a>强大的环境暗示</h5><p>破窗理论<br>对环境背景作出一个小的调整，就会带来一个小的改变，当一个坏习惯没有得到制止，则会有更多的坏习惯。人都是环境的产物，很多人在国内扔垃圾在国外却不扔，人没有变，但是环境改变了，能量场改变了</p>\n<h5 id=\"改个名字，改变一切\"><a href=\"#改个名字，改变一切\" class=\"headerlink\" title=\"改个名字，改变一切\"></a>改个名字，改变一切</h5><p>人们更倾向于和自己有相似背景的人或者事物站在一起。比如自己的相同的名字，自己的老乡。在传递的信息中展现他人的名字和地址等，则更显亲切。想获得更多人支持。</p>\n<h5 id=\"如何化敌为友\"><a href=\"#如何化敌为友\" class=\"headerlink\" title=\"如何化敌为友\"></a>如何化敌为友</h5><p>人以群居，物以类分。和其他人找到同一种身份认同。或者寻找共同点，刻意帮助团队和合作伙伴更顺畅。</p>\n<h5 id=\"预测他人的喜好、渴望与需求\"><a href=\"#预测他人的喜好、渴望与需求\" class=\"headerlink\" title=\"预测他人的喜好、渴望与需求\"></a>预测他人的喜好、渴望与需求</h5><p> 无论你是和一个认识多年的老客户打交道，还是可以一个合作很久的工作搭档相处，要给他们定期交换新秩序，安排一些非正式的沟通机会，增进彼此了解，讲座的重要性怎么强调也不为过。</p>\n<h5 id=\"主动承诺的力量\"><a href=\"#主动承诺的力量\" class=\"headerlink\" title=\"主动承诺的力量\"></a>主动承诺的力量</h5><p>主动承诺。如果晨会结束，今年让每个人把工作复述一遍，切实执行就更有望实现。亲自把下次月的时间和，日前写的卡片上。八，自己，所有的行动计划记录下来，然后分发给众人，然后再发电子邮件，加上一段简单的话，请收件人，回复一个好的，来确认。</p>\n<h5 id=\"承诺要行动，要公开\"><a href=\"#承诺要行动，要公开\" class=\"headerlink\" title=\"承诺要行动，要公开\"></a>承诺要行动，要公开</h5><p>承诺要行动要公开。当你要劝说某人许下承诺时，请他做一个，比较宽泛，而不是具体的承诺，你的成功概率会更大。</p>\n<h5 id=\"“心安理得”效应\"><a href=\"#“心安理得”效应\" class=\"headerlink\" title=\"“心安理得”效应\"></a>“心安理得”效应</h5><p>心安理得效应。客人在办理入住时先签个承诺书，这不仅提高毛毯和床单的水冲水效率，而且让客人在离开房间更容易记得关灯关电视，这就是一个正向溢出效应。如果人们在使用和丢弃产品时产生了内疚心理，那么通过回收利用的行为，他们就可以减少这种因过度消费而产生，的负面情绪。</p>\n<h5 id=\"如何为员工鼓励儿加油\"><a href=\"#如何为员工鼓励儿加油\" class=\"headerlink\" title=\"如何为员工鼓励儿加油\"></a>如何为员工鼓励儿加油</h5><p>使用前文提出的主动承诺原理，请团队挑出自己喜欢做的事情，并当着同事单独出来。另一个做法是，把客户请过来现身说法，让员工听见客户的声音。就是让员工意识到自己做的事情的重要性外化出来，从而提高他的成就感，这个小技巧，也是金钱有时候达不到的。也许管理者能做的最微小的改变，就是看到员工做得出色，<strong>是简单说一句，干的漂亮吧</strong>。</p>\n<h5 id=\"如何避开决策陷阱\"><a href=\"#如何避开决策陷阱\" class=\"headerlink\" title=\"如何避开决策陷阱\"></a>如何避开决策陷阱</h5><p>把决策者和谈判者的角色分开，承诺升级以及财务上的风险就可以规避了。不能自己是运动员，又是裁判员。如果你，在组织中负责某个项目的执行，那你最好把评估它成功与否的工作交给组织里的其他人来做，这里是，因为你容易过高的估计，而且项目的价值有时候高估的程度会惊人。因为自己已经先入为主，受环境影响了，评估人跟你联系越少，评判客观度会更高。</p>\n<h5 id=\"巧用“执行意向”\"><a href=\"#巧用“执行意向”\" class=\"headerlink\" title=\"巧用“执行意向”\"></a>巧用“执行意向”</h5><p>让他们做一个具体的计划，说说他们打算在，何时、何地、准备如何执行这件事。例子，这周三下午4点能来开会吗？改成这周三下午4点之前，开会之前你打算做什么？写下你具体需要执行的，那个时间。我们会倡导受试者把承诺公开。</p>\n<h5 id=\"推迟一点会更好\"><a href=\"#推迟一点会更好\" class=\"headerlink\" title=\"推迟一点会更好\"></a>推迟一点会更好</h5><p>未来绑定法，当你想要去说服他人接受你，我改变的时候不要让他立即就改，而是改变放到未来的某个时段，当然前提是，这改变对他是有益的。这样你可能会得到更多人的支持和认同。回来把你放到另一个是用年月是购买公共服务，比如安装宽带，有线电视信用卡。比如那年的淘宝的十月围城也是过了几个月，然后再调高费用。</p>\n<h5 id=\"为了将来的自己\"><a href=\"#为了将来的自己\" class=\"headerlink\" title=\"为了将来的自己\"></a>为了将来的自己</h5><p>将来的自己过得好不好，却要仰仗现在的你，你现在的决策，将决定将来的自己能拥有多少财务安全感。尽管生活中某些方面会随着时间改变的是每个人的核心身份，他们最真实的自我始终是不变的，要想方设法拉近现在的我和未来的我的之间的距离，例如用ps软件，看到自己苍老的未来。</p>\n<h5 id=\"目标设得好，干劲会更足\"><a href=\"#目标设得好，干劲会更足\" class=\"headerlink\" title=\"目标设得好，干劲会更足\"></a>目标设得好，干劲会更足</h5><p>给自己设立一个浮动的区间（8%~10%）。让人们实现目标两个最重要的因素，挑战性与可实践性。简单地说，他之所以能够促使人们重拾目标，是因为让人能打可实现性和可挑战性的方面成就感全占了。就像很多诱惑的广告，把你搞的蠢蠢欲动，其实就是拉近了可实践性和挑战性的距离。</p>\n<h5 id=\"损失规避原则\"><a href=\"#损失规避原则\" class=\"headerlink\" title=\"损失规避原则\"></a>损失规避原则</h5><p>人们得到十块钱和失去十块钱的，痛苦是不一样的。这个启发就告诉我们甚至两个选择，让受众者主动挑选一个，然后再向前迈一步，你想让他们选的那个包装一下，向他们指出，如果不这么做的话，就会损失什么。例子，今年秋天我会打流感疫苗，因为我想降低流感的风险，并且节省五十美元，或者，今年秋天我不想打疫苗，即便这意味着我得流感，风险可能会挺高，而且无法节省五十美元。</p>\n<h5 id=\"如何克服拖延症\"><a href=\"#如何克服拖延症\" class=\"headerlink\" title=\"如何克服拖延症\"></a>如何克服拖延症</h5><p>设立一个截止日期。注册率设置一个临近的截止日期。<br>推荐一部热门影片，《杯酒人生》里面的一个片段，教你如何不露痕迹地说服他人:</p>\n<blockquote>\n<p>迈尔斯:我存了点好东西，一瓶1961年，白马酒庄的好酒。<br>玛雅:你有瓶1961年白马酒庄的酒却放着不喝，品尝它的最佳时间可能已经过了，你在等什么呢？<br>迈尔斯:不知道，某个特别的日子吧，给一个对的人共享，我本想留到结婚十周年纪念日上喝的<br>玛雅:把1961年白马酒庄的酒打开的那一天就是特别的日子。</p>\n</blockquote>\n<h5 id=\"如何留住顾客跟定你\"><a href=\"#如何留住顾客跟定你\" class=\"headerlink\" title=\"如何留住顾客跟定你\"></a>如何留住顾客跟定你</h5><p>改善自己的服务，如果电话在没有接听之前，您可以跟顾客一点事情做，给顾客分分心，降低她的焦虑感。像海底捞一样等待的人那么多可以提供玩具玩。</p>\n<h5 id=\"把潜力变成现实\"><a href=\"#把潜力变成现实\" class=\"headerlink\" title=\"把潜力变成现实\"></a>把潜力变成现实</h5><p>把潜力变成现实，一个工作经验，和过往业绩，压根无法跟你相提并论的对手，把客户从你这抢走了。人对潜力更有兴趣。</p>\n<h5 id=\"把会议开的更高效\"><a href=\"#把会议开的更高效\" class=\"headerlink\" title=\"把会议开的更高效\"></a>把会议开的更高效</h5><ul>\n<li>第一，请参加会议的人提前提交信息，提交大家的想法。如果，你面临一个问题，还想挑战下每个组员都贡献智慧，那么与其让每个人都同时说出想法和建议，更高效的做法，让大家花几分钟静静的想一想自己的主页，然后写下来提交给全组。</li>\n<li>第二，组织会议的最后一个人的发言会对大家产生影响，先入为主，所以领导者要先倾听大家的声音，最后表达自己的建议。</li>\n<li>第三，做个任务清单会很有用。列出必要的点。</li>\n<li>第四，对会议的座次安排作出微妙调整，圆桌式的会能唤起人们的归属感，参与者更容易重视小组整体目标，也更容易强调全组人的利益，相反，当作是安排呈现出带角的形状，或方形的形状，效果刚好相反，这种将激发了人们，对独特性的追求，很容易产生个人主义。所以当一个领导者想要说服自己的员工行动起来，大家齐心协力，最好把座椅，摆成圆桌式的，如果一个领导，让自己的团队为自己的行为负责，那么正方形或者长方形的桌椅更好。</li>\n</ul>\n<h5 id=\"服装的影响力\"><a href=\"#服装的影响力\" class=\"headerlink\" title=\"服装的影响力\"></a>服装的影响力</h5><p>你的气质和你的穿着打扮要相当，比如说你是个教授，或者和，别的公司去谈判，不能穿着太随意。</p>\n<h5 id=\"亮出专家身份\"><a href=\"#亮出专家身份\" class=\"headerlink\" title=\"亮出专家身份\"></a>亮出专家身份</h5><p>人们总是相信专家的权威，当某人接受了专家的建议，那么他的脑部活动就停止了，也就是说，不再进行批判性思维，反驳的力度也就降低了，如果有关专家的建议可以使用，那就把它早早的摆出来，要不这样的话可能就有点傻了。</p>\n<h5 id=\"不确定的说服力\"><a href=\"#不确定的说服力\" class=\"headerlink\" title=\"不确定的说服力\"></a>不确定的说服力</h5><p>语气中带有某种程度不确定的专家，会更激发人们的兴趣。在没有明显带有正确的情况下，表现出一点不确定，非但不会损害你的说服力，反而还有极大的帮助，当商业顾问说服决策者的时候，与其把轻微不确定遮掩起来，还不如明明白白的点出来，因为这世界上会让他显得更有说服力，有利于建立信任。98%的好，还有2%的不确定，没有完美。</p>\n<h5 id=\"中心位置的影响力\"><a href=\"#中心位置的影响力\" class=\"headerlink\" title=\"中心位置的影响力\"></a>中心位置的影响力</h5><p>放到中间的那个明显更受欢迎。从海报到平面广告到电视剧，都是这样设置的。有商家会给经理付钱，争取最好的位置。可以绑着畅销最受欢迎的字，你到外包装上，这样就可以不受位置影响。</p>\n<h5 id=\"如何激发创意\"><a href=\"#如何激发创意\" class=\"headerlink\" title=\"如何激发创意\"></a>如何激发创意</h5><p>当天花板高的时候，人的想法更富创意，更概念化，当天花板较低的时候，人们的想法就更具体更局限性。</p>\n<h5 id=\"主场还是客场\"><a href=\"#主场还是客场\" class=\"headerlink\" title=\"主场还是客场\"></a>主场还是客场</h5><p>对于比赛还是考试各种，都有自己的主场优势，在自己熟悉的环境可能更容易应付，所以在谈判的时候，最好在自己的主场或者提前过去，熟悉下环境。</p>\n<h5 id=\"如何让自己变得更强大\"><a href=\"#如何让自己变得更强大\" class=\"headerlink\" title=\"如何让自己变得更强大\"></a>如何让自己变得更强大</h5><p>写下让自己感觉强大的经历，这么一个小小的举动就可以大为不同。回忆一个让自己感到强大的时刻。良种，典型的身体语言会爱试出人的心理状态是强是弱，舒展身体和开放程度，心态强大的人，体态会感到更舒服、开放，体弱无力的人会显得局促、封闭。</p>\n<h5 id=\"你所需的只是爱\"><a href=\"#你所需的只是爱\" class=\"headerlink\" title=\"你所需的只是爱\"></a>你所需的只是爱</h5><p>其实我们打算建议的事情要小的多:只是在你的影响行为中添加一点象征，爱意的线索就行了。比如说声谢谢，或者在网站上什么地方多弄一颗爱心，爱是温暖的。</p>\n<h5 id=\"完美的礼物哪里找\"><a href=\"#完美的礼物哪里找\" class=\"headerlink\" title=\"完美的礼物哪里找\"></a>完美的礼物哪里找</h5><p>适合他们的就是最好的。维护之前一定要了解对方的喜好而不是自己认为最有价值的，对方关注的才是有价值的，从对方的喜好清单里面去找。</p>\n<h5 id=\"为互助留出余地\"><a href=\"#为互助留出余地\" class=\"headerlink\" title=\"为互助留出余地\"></a>为互助留出余地</h5><p>互助原理。在收到恩惠后，人们愿意以相同的方式来回报。要注意最重要的一点是你 <strong>第一个行动</strong> 。第一个出手相助会激活互惠原理，并因此增加未来互助的次数，对于职场中 <strong>共同成功</strong> 这个因素至关重要。第二，要把你提供的帮助或者有价值的信息做个定位，把日后对方可以全力回报你的可能性 <strong>凸显</strong> 出来。<br>用三种应答方式用它们来回应对方对你的感谢:</p>\n<blockquote>\n<ul>\n<li>一，能帮上你的忙我很高兴，因为我知道当一个人需要帮忙的时候，别人的一双援手是多么的有价值，</li>\n<li>二，不客气，同事之间理应如此，</li>\n<li>三，没关系，因为我知道如果需要帮助的是我，你也会这么做的。<strong>以此方式来激活互惠原理</strong>，维护会互惠留出余地。</li>\n</ul>\n</blockquote>\n<h5 id=\"表达感激好处多\"><a href=\"#表达感激好处多\" class=\"headerlink\" title=\"表达感激好处多\"></a>表达感激好处多</h5><p>当给予别人，更多的帮助获得他人的肯定，觉得自己更有价值，所谓的成就感。例子来自政府的纳税单，来自天猫卖家的手写信。</p>\n<h5 id=\"出乎意料与抛砖引玉\"><a href=\"#出乎意料与抛砖引玉\" class=\"headerlink\" title=\"出乎意料与抛砖引玉\"></a>出乎意料与抛砖引玉</h5><p>以出乎意料的方式给予，<strong>提供惊喜</strong>，先给予后获取。人们之所以会笑，回幽默很大程度是因为出乎意外的<code>惊喜</code>。</p>\n<blockquote>\n<p>能量守恒定律，能量总是从高到低去的，你强他弱，你弱他就强，是一个动态平衡。</p>\n</blockquote>\n<h5 id=\"如何获得帮助\"><a href=\"#如何获得帮助\" class=\"headerlink\" title=\"如何获得帮助\"></a>如何获得帮助</h5><p>爱是尽管开口。在一组实验中，求助的人低估了对方愿意帮忙的可能性，愿意帮忙的人也高估了别人开口求助的可能性，既然没人开口，就是你家不需要帮忙呗！一句话，事实没自己想象的那么糟，也没自己想象的那么好。<strong>所以开始行动吧</strong>！</p>\n<h5 id=\"先下手为强\"><a href=\"#先下手为强\" class=\"headerlink\" title=\"先下手为强\"></a>先下手为强</h5><p>去关注那些好的方面，而不是被带入沟里去关注那些负面裂痕，从而，低估了价值。参加谈判之前，一定要在脑子里想好一下价格，还应该把合理的原因 <strong>清单</strong>列出来，在谈判，中，一定要把这些，摆在面前，足够提醒你，抵消自己心中的质疑。</p>\n<h5 id=\"报价精确一点会更好\"><a href=\"#报价精确一点会更好\" class=\"headerlink\" title=\"报价精确一点会更好\"></a>报价精确一点会更好</h5><blockquote>\n<p>如果你想要涨工资，可以刷福利待遇提10%，更应该提出9.8%或者10.2%会更好。<br>如果一个保姆拿到每小时十五美元的薪水，他应该向老板提出15.585，但美元而不是16美元。<br>如果是项目管理，等出最终的精确时间，如果让别人答应你一个未来的计划时间给出一个模糊时间，前提是<em>对他有益</em>。</p>\n</blockquote>\n<p>准确的数字增加可信度，这个结果是经过深思熟虑计算出来的，而不是漫天要价。<br>比如:要求几天完成工作，更精准的是“周三下午，3:47把他交给我好吗“？而不是笼统的说几天完成。效果更好。报价更精准一些，让人更相信你认真研究过。</p>\n<h5 id=\"定价末尾数字有玄机\"><a href=\"#定价末尾数字有玄机\" class=\"headerlink\" title=\"定价末尾数字有玄机\"></a>定价末尾数字有玄机</h5><p><strong>降档效应</strong>,<strong>左位数效应</strong>。先说价值把价值谈得高高的最后说价格，这是价格就不觉得那么高了，取小数不要取整数，尽管整数容易计算。</p>\n<h5 id=\"顺序改一改，生意滚滚来\"><a href=\"#顺序改一改，生意滚滚来\" class=\"headerlink\" title=\"顺序改一改，生意滚滚来\"></a>顺序改一改，生意滚滚来</h5><blockquote>\n<p>心理学有一个基本概念叫做视觉“对比现象”:意思是不必改变物体本身，只改变人看到这个物体之前的体验，就能改变人对这件东西的影响。</p>\n</blockquote>\n<ul>\n<li>比如说六十美元一瓶倒红酒列在开头，这瓶35年的酒，价格看起来就很合理，酒一点也没有变，改变的是人们对他的看法。<strong>来源自比较</strong>。当数字不容易计算的时候，人们更喜欢数字在前价格战后的数据。</li>\n<li>比如人们更喜欢580小时的节目收费286元，而不是286元可看580小时的节目，虽然这两种表达方式在一模一样。所以在你的工作中下调整，先说你的服务项目，最后说价格。</li>\n<li>当你面试时写简历的时候，不要强调你有多少年工作经验，先把你这段时间取得的成绩。更好的方法，把成绩发出来，把你取得的成绩全部列出来，然后再说工作年限。先说收益，后说成本。</li>\n</ul>\n<h5 id=\"如何事半功倍\"><a href=\"#如何事半功倍\" class=\"headerlink\" title=\"如何事半功倍\"></a>如何事半功倍</h5><p>当你提供了一个高价值的东西，不要再和低价值的东西放在一起，那样会<strong>过犹不及</strong>，削弱你的层次。<br>例子：</p>\n<blockquote>\n<p>想乱丢垃圾的人，处以750美元的罚款<br>向丢垃圾的人处以750美元的罚款，外加两个小时的社区服务。</p>\n</blockquote>\n<p>条件多了反而没有重点，其实750美元其实已经足够有吸引力。两种办法各取所长，同样的资源为少部分抽选的用户增加更诱人的价值，而不是把所有的资源都扑上去。这就好像往热水里加温水一样，只能，降低整体的维度。更好的做法是重视的客户提供量身打造，诱人的格外优惠，你触发了互惠原则。</p>\n<h5 id=\"化整为零\"><a href=\"#化整为零\" class=\"headerlink\" title=\"化整为零\"></a>化整为零</h5><p>如果让你捐款，你救助一个学生为他捐多少，而是在为整体捐多少。人们对数字有时候是没有概念的，就像拍电影一样，人对一个人的，生活是个很有童心感的，在对一个整体冷冰冰的数字是没有感觉的。</p>\n<h5 id=\"鲜明生动的细节\"><a href=\"#鲜明生动的细节\" class=\"headerlink\" title=\"鲜明生动的细节\"></a>鲜明生动的细节</h5><p>塑造一个活生生的鲜明形象。而不是表格上那些干巴巴的数字，而是应该摆出团队成员的照片，让这些人的形象变得鲜活。就像前段时间希腊的那个海滩上的小男孩，其实之前已经报道很多希腊的难民，涌入，但是大家都无感，等大家看到了这个小孩的照片之后，大家就引发了同情。  当你需要说服，别人为你提供资源去帮助你达成某个目标的时候，你应该去引导对方关注两个方面形象鲜明的受益对象，以及清晰具体的干预手段，形象说明对象具体一个词，一个动作，一个事件，一种手段的方法提醒。</p>\n<h5 id=\"指出机会成本\"><a href=\"#指出机会成本\" class=\"headerlink\" title=\"指出机会成本\"></a>指出机会成本</h5><p>指出你省下来的钱可以被用来购买其他的相关产品。你把自己的大家的计划写在团队的板板上公之于众效果会更好。当说服，用户来买你的东西的时候，前提是你的产品足够吸引人，提醒，你买了之后可以省下来更多的钱去做什么？</p>\n<h5 id=\"如何激励他人，还有自己，完成任务\"><a href=\"#如何激励他人，还有自己，完成任务\" class=\"headerlink\" title=\"如何激励他人，还有自己，完成任务\"></a>如何激励他人，还有自己，完成任务</h5><p>在任务的早期，你应更应该关注 <strong>我已经完成多少</strong>，然而，进程过半的时候，你更应该关注 <strong>我还剩下多少</strong>。这个方法能够帮你，坚持下来。刚开始的时候，你应该关注的的是已经减掉了多少重量，到了后期你就要去想想还有多少斤没有减掉。</p>\n<h5 id=\"如何提高客户忠诚度\"><a href=\"#如何提高客户忠诚度\" class=\"headerlink\" title=\"如何提高客户忠诚度\"></a>如何提高客户忠诚度</h5><p>如果让别人认同你的想法，加入你的计划。要给出最宽松的条件限制，但一旦开始为了达到目标，就要严格要求执行，更有效果完成。比如按顺序买红酒的例子，是自由购买还是无顺序购买？把一件事拆解开来，分成一个个小的步骤，分开执行看来更有效果，更容易达到目标。</p>\n<h5 id=\"如何让一加一大于二\"><a href=\"#如何让一加一大于二\" class=\"headerlink\" title=\"如何让一加一大于二\"></a>如何让一加一大于二</h5><p>人们对失去的，在优过，得到了对他的渴望。这就是说，人类在遇到困难的时候会放大困难，而一旦过了这个时段回过头来看，觉得这个困难不算什么。我们都是牺牲明天享受今天的景象，如果今天拿到二十元，明天拿到21元的选择，绝大多数人都会，选择今天拿到钱。可是你再把千金换一下，说七天之后拿到二十美元和八天之后拿到20亿美元，更多人就愿意多等一天。有时候人的决策和行为是多么不一致。因此，当你用奖品或者激励手段来促使他人完成任务的时候，应该把激励手段或奖品非常不同的类别。——因为人们害怕失去。</p>\n<h5 id=\"退后一步看问题\"><a href=\"#退后一步看问题\" class=\"headerlink\" title=\"退后一步看问题\"></a>退后一步看问题</h5><p>当你面对一个棘手的问题，只需要后退，站的更远一点看问题就能改变这个问题的难度感知，这个问题就不会那么棘手了。把人和选择之间的实际距离加大，可以显著提高人作出购买决策的速度。   当你为了一件棘手的公事烦恼不已的时候，为什么那个从远处探过头来瞧你电脑屏幕，自命不凡的同事总是以为他能更快地找出解决办法。<strong>当遇到难题时，退后，离的远一点</strong>。</p>\n<h5 id=\"从他人的错误中汲取教训\"><a href=\"#从他人的错误中汲取教训\" class=\"headerlink\" title=\"从他人的错误中汲取教训\"></a>从他人的错误中汲取教训</h5><p>把时间花在辨别，并避免他人作出的，导致商业失败的愚蠢决策上。因此最好做一份属于自己的愚蠢清单，把他人犯过的错误也记录下来，当你碰到要做重大决策的时候，要拿出来看一遍再做决策。<br>事实远不止如此，负面的信息也更容易让人记住，在角色中占有比例更高。经验素材库，让他吸引你团队的注意力更容易从中汲取教训，让大家牢牢记住，并且提供促使人采取行动建设性的忠告。</p>\n<p>因为这份清单记住的都是别人犯错的错，你更容易看出毛病在哪？如果这些错误是你犯的有点费力跟一个念头对抗，往往还是败阵下来的，如果你想说服自己这些压根就不是错误，只不过运气不好，或者时机不对，害得你没法掌握而已。但别人的错误跟你无关，你不会被自己，电话蒙蔽了双眼，因此它是一个非常有效对你很有好处的学习工具。</p>\n<ul>\n<li>精明的领导者回答大家，从其他人的错误中汲取教训，在以后的日后行为作出改善。</li>\n<li>老师们可以把往届学生犯的错误整理一份，`避免错误的清单，给现在的学生参考。</li>\n<li>医生也可以提到以前的一两个患者做错了什么，结果导致什么病情加重，借此来确保现在的患者不在犯同样的错误。</li>\n<li>健身教练可以向新客户指出，别人在使用健身器材的时候犯过的错来保证新客户不会重蹈覆，让他们从健身训练中获得最好的收效。</li>\n</ul>\n<p>做一份错误清单，定期从中学习。能帮你在商界里做，对的一个小举措就是一列一张别人做，过错似的清单。<br>如果你忽视了，记录错误的价值，那么就把这条列入你的错误清单中。</p>\n<h5 id=\"对错误进行管理\"><a href=\"#对错误进行管理\" class=\"headerlink\" title=\"对错误进行管理\"></a>对错误进行管理</h5><p>这些错误不仅能够帮，你在将来做得更好，甚至还能增强你的影响力。<br>知道错误可能出现在什么地方，又是怎么发生的第二个要求就是，培训是要指导学生如何，<code>用最好的方式去面对错误，让学员知道你的错误出现那种心态是最好的</code>。<strong>犯错是很自然的</strong>，这是学习过程中的一部分，犯错越多，学到东西越多，错误会告诉你，你还有哪些东西要学，这些反馈方式几种药会让结果大为不同，<em>这是因为如果没有这些点拨，人们多半会把错误看成失败，而不是指向成功的路标，</em> 这种知道培训对出道成功的企业文化是如此重要，<code>所以为了尽早成功，多犯点错吧！</code></p>\n<blockquote>\n<p>人们的期望总是过高的在现代商业，鬼复杂，如果把资源用于追求一个错误也不脱出的乌托邦的目标，工作效率低的整体成本也会高很多，倒不如把资源用在寻求解决问题纠正错误的目标上，获得更高的顾客满意度。零错误反倒不如及时改正错误好，完善体验带来惊喜。</p>\n</blockquote>\n<h5 id=\"当天就点评\"><a href=\"#当天就点评\" class=\"headerlink\" title=\"当天就点评\"></a>当天就点评</h5><p>及时反馈。与正面信息相伴，人们更容易关注负面信息，也更有可能从中汲取教训或者孕检信息。当在网上看到一个最近的一个评论的正面信息，会带来更多的赞，更多的客户，但如果是信息都很陈旧的，就不想去看了。</p>\n<h5 id=\"给邮件加点料，让谈判更顺畅\"><a href=\"#给邮件加点料，让谈判更顺畅\" class=\"headerlink\" title=\"给邮件加点料，让谈判更顺畅\"></a>给邮件加点料，让谈判更顺畅</h5><p>笑声是人与人之间最短的距离，信任是非常重要的因素。给你来，邮件加上一个，好玩的漫画，添加一些有血有肉的人情味儿。为了给对方建立良好的关系，主动透露一点个人信息，不但能够减少排放，谈判中的僵局还能，让对方都能取得更好的结果。有时候不能写为健全而淡之的是面谈，或者干脆打个电话，会增加亲切感。</p>\n<h5 id=\"碰触的魔力\"><a href=\"#碰触的魔力\" class=\"headerlink\" title=\"碰触的魔力\"></a>碰触的魔力</h5><p>能够摸到产品的卖家开出的价格就比那些摸不到的产品开价更高。作为主持人，或培训师，不要，把资料放在学员的桌子上，而是应该请他们走进房间的时候亲自分发，为了提高，会议赞助的小礼品的价值感，会议活动组织者可以时间选出一组不错合适的时机，把它从袋子里掏出来，然后亲自递给参会的人，这样不仅能够提高他的价值感，也会避免这个小礼物被无人问津。如果当产品无法被人摸到的时候，<strong>只需要顾客在头脑里想象与他的感觉就能够强化有关</strong>，从而提高它的价值。</p>\n<h5 id=\"把最好的留到最后\"><a href=\"#把最好的留到最后\" class=\"headerlink\" title=\"把最好的留到最后\"></a>把最好的留到最后</h5><p><strong>峰——终体验</strong>。人们只会记住，记住最后一次或者体验最好的一次的感觉。在客人办理入住的时候，送一个个性化的变迁，然后在结账退房的时候送上一个小礼物。与其把重点放在有问题的产品，浪费在你许多时间，不如去强调它，给客户带来不便和痛苦多么严重。<strong>强调体验</strong> 如果你希望下次度假时带回精彩又开心的回忆，那么与其把预算平均分配给一连串短途旅行观光，还不如把钱花在两天特别有意思的事情上，把升舱的机会留在回程，这样你会更加开心。</p>\n<h5 id=\"多个细节叠加使用，效果未必会叠加\"><a href=\"#多个细节叠加使用，效果未必会叠加\" class=\"headerlink\" title=\"多个细节叠加使用，效果未必会叠加\"></a>多个细节叠加使用，效果未必会叠加</h5><p>关于说服科学的<strong>叠加使用规则</strong>,并不是所有的规则叠加起来都会更多，有可能会相互抵消。<br>有三个原因解释:</p>\n<ul>\n<li>第一，这几条策略背后的心理动机互不相容。</li>\n<li>第二，你一次使用的说服工具越多，对方就越不容易在第一时间积极响应。</li>\n<li>第三，方法用得越多，意图就越明显有时候你把一堆不起眼的小策略放在一起的时候，那种不显山不漏水的微妙感觉就没有了，说服的意图就变成了露骨，对方就容易拒绝你。<br>构思说服他人的措辞时，好像存在一个临界点，超过这个点多余的理由和论据，反而更让人容易抗拒，削弱了说服力的力度。使用的技巧一般<strong>不超过三个</strong>，事不过三。</li>\n</ul>\n<h5 id=\"写在最後\"><a href=\"#写在最後\" class=\"headerlink\" title=\"写在最後\"></a>写在最後</h5><p>學了這麼多技巧，最終要的是在生活中得到有效應用，多觀察，多实践，多思考，触类旁通，从而真正的融会贯通，内化掉。</p>"},{"title":"mysql位运算简化一对多关系","date":"2016-12-23T07:51:26.000Z","updated":"2016-12-23T07:51:26.000Z","_content":"\n### 语法\n& : 按位与，二进制位同时都为1的位设为1。\n| : 按位或，二进制位有一个位为1就为1.\n^ : 位异或，对应位的二进制数不同时，对应位的结果才为1；如果两个对应位数都为0或者都为1，则对应位的结果为0。\n\n### 原理\n```\n$a = 6 转化为2进制为 110\n$b = 3 转化为2进制为 11\n$a & $b即是 110 与 11\n将$a和$b中都为1的位设为1,位数不够的补0.即110 与 011\n运算结果010,转化为十进制结果为2\n```\n\n<!-- more -->\n\n### 应用场景\n\n每个景点包含很多属性，例如适合旅游的月份，我们一般的做法可能有两种：\n1. 是增加一个varchar字段，每个月份之间用一个特殊符号分隔保存，例如“1,2,3,11\n2. 建立一个关系表,在这里不能使用1-12的数字来表示月份，而是使用1，2，4，8，16，32，64，128，512，1024，2048，4096来表示，如果是多个月份，可以相互组合相加，之后存储为一个值。\n比如 1,10,12月份，就可以存储`1+512+4096=4609`,4096 这个值。\n\n> 这个技巧**适用于属性较少的一对多**的场景，可以存储1个或者多个，太多的话还是推荐试用关系表。常用的属性有：月份，消息提醒类型，各种有限的类型组合等等。\n\n#### 使用技巧：\n\n```sql\n\n-- 添加一个分类 用 “|”\nSELECT (4|2|1); --- = 7\n\n-- 去掉一个分类，用“^”\nSELECT 7 ^ 1;\n\n-- 当我们需要查询某个月份的景点时，例如查询3月份的景点，可使用以下语句：\nSELECT * FROM `spots` WHERE `month` & 4 = 4;\n\n-- 当设置某个景点适合某个月份时，例如设置4325的景点适合2月份，可使用下面的语句：\n\t\nUPDATE `spots` SET `month` = `month` | 2 WHERE `id` = 4325\n\n-- 当取消设置某个景点的月份时，可使用下面的语句：\nUPDATE `spots` SET` month` = `month` ^ 2 WHERE`id`= 4325\n\n-- 查询同时适合多个月份的数据，例如需要查询设置了11，12，1月份的景点，将其三个月份对应的数值加起来，结果为6145，然后使用这个数值进行查询：\n\nSELECT * FROM `spots` WHERE `month` & 6145 = 6145\n\n-- 查询只要适合，1,11,12月份其中一个月份的景点就行\nSELECT * FROM `spots` WHERE (`month` & 4096 = 4096) or (`month` & 2048 = 2048) or (`month` & 1 = 1)\n\n```\n\n","source":"_posts/2016/mysql-bit.md","raw":"---\ntitle: mysql位运算简化一对多关系\ndate: 2016-12-23 15:51:26\nupdated: 2016-12-23 15:51:26\ntags:\ncategories:\n---\n\n### 语法\n& : 按位与，二进制位同时都为1的位设为1。\n| : 按位或，二进制位有一个位为1就为1.\n^ : 位异或，对应位的二进制数不同时，对应位的结果才为1；如果两个对应位数都为0或者都为1，则对应位的结果为0。\n\n### 原理\n```\n$a = 6 转化为2进制为 110\n$b = 3 转化为2进制为 11\n$a & $b即是 110 与 11\n将$a和$b中都为1的位设为1,位数不够的补0.即110 与 011\n运算结果010,转化为十进制结果为2\n```\n\n<!-- more -->\n\n### 应用场景\n\n每个景点包含很多属性，例如适合旅游的月份，我们一般的做法可能有两种：\n1. 是增加一个varchar字段，每个月份之间用一个特殊符号分隔保存，例如“1,2,3,11\n2. 建立一个关系表,在这里不能使用1-12的数字来表示月份，而是使用1，2，4，8，16，32，64，128，512，1024，2048，4096来表示，如果是多个月份，可以相互组合相加，之后存储为一个值。\n比如 1,10,12月份，就可以存储`1+512+4096=4609`,4096 这个值。\n\n> 这个技巧**适用于属性较少的一对多**的场景，可以存储1个或者多个，太多的话还是推荐试用关系表。常用的属性有：月份，消息提醒类型，各种有限的类型组合等等。\n\n#### 使用技巧：\n\n```sql\n\n-- 添加一个分类 用 “|”\nSELECT (4|2|1); --- = 7\n\n-- 去掉一个分类，用“^”\nSELECT 7 ^ 1;\n\n-- 当我们需要查询某个月份的景点时，例如查询3月份的景点，可使用以下语句：\nSELECT * FROM `spots` WHERE `month` & 4 = 4;\n\n-- 当设置某个景点适合某个月份时，例如设置4325的景点适合2月份，可使用下面的语句：\n\t\nUPDATE `spots` SET `month` = `month` | 2 WHERE `id` = 4325\n\n-- 当取消设置某个景点的月份时，可使用下面的语句：\nUPDATE `spots` SET` month` = `month` ^ 2 WHERE`id`= 4325\n\n-- 查询同时适合多个月份的数据，例如需要查询设置了11，12，1月份的景点，将其三个月份对应的数值加起来，结果为6145，然后使用这个数值进行查询：\n\nSELECT * FROM `spots` WHERE `month` & 6145 = 6145\n\n-- 查询只要适合，1,11,12月份其中一个月份的景点就行\nSELECT * FROM `spots` WHERE (`month` & 4096 = 4096) or (`month` & 2048 = 2048) or (`month` & 1 = 1)\n\n```\n\n","slug":"mysql-bit","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbp9w001owsnnpbd7skhn","content":"<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>&amp; : 按位与，二进制位同时都为1的位设为1。<br>| : 按位或，二进制位有一个位为1就为1.<br>^ : 位异或，对应位的二进制数不同时，对应位的结果才为1；如果两个对应位数都为0或者都为1，则对应位的结果为0。</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a = 6 转化为2进制为 110</span><br><span class=\"line\">$b = 3 转化为2进制为 11</span><br><span class=\"line\">$a &amp; $b即是 110 与 11</span><br><span class=\"line\">将$a和$b中都为1的位设为1,位数不够的补0.即110 与 011</span><br><span class=\"line\">运算结果010,转化为十进制结果为2</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h3><p>每个景点包含很多属性，例如适合旅游的月份，我们一般的做法可能有两种：</p>\n<ol>\n<li>是增加一个varchar字段，每个月份之间用一个特殊符号分隔保存，例如“1,2,3,11</li>\n<li>建立一个关系表,在这里不能使用1-12的数字来表示月份，而是使用1，2，4，8，16，32，64，128，512，1024，2048，4096来表示，如果是多个月份，可以相互组合相加，之后存储为一个值。<br>比如 1,10,12月份，就可以存储<code>1+512+4096=4609</code>,4096 这个值。</li>\n</ol>\n<blockquote>\n<p>这个技巧<strong>适用于属性较少的一对多</strong>的场景，可以存储1个或者多个，太多的话还是推荐试用关系表。常用的属性有：月份，消息提醒类型，各种有限的类型组合等等。</p>\n</blockquote>\n<h4 id=\"使用技巧：\"><a href=\"#使用技巧：\" class=\"headerlink\" title=\"使用技巧：\"></a>使用技巧：</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 添加一个分类 用 “|”</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> (<span class=\"number\">4</span>|<span class=\"number\">2</span>|<span class=\"number\">1</span>); <span class=\"comment\">--- = 7</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 去掉一个分类，用“^”</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"number\">7</span> ^ <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 当我们需要查询某个月份的景点时，例如查询3月份的景点，可使用以下语句：</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"string\">`spots`</span> <span class=\"keyword\">WHERE</span> <span class=\"string\">`month`</span> &amp; <span class=\"number\">4</span> = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 当设置某个景点适合某个月份时，例如设置4325的景点适合2月份，可使用下面的语句：</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"string\">`spots`</span> <span class=\"keyword\">SET</span> <span class=\"string\">`month`</span> = <span class=\"string\">`month`</span> | <span class=\"number\">2</span> <span class=\"keyword\">WHERE</span> <span class=\"string\">`id`</span> = <span class=\"number\">4325</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 当取消设置某个景点的月份时，可使用下面的语句：</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"string\">`spots`</span> <span class=\"keyword\">SET</span><span class=\"string\">` month`</span> = <span class=\"string\">`month`</span> ^ <span class=\"number\">2</span> <span class=\"keyword\">WHERE</span><span class=\"string\">`id`</span>= <span class=\"number\">4325</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询同时适合多个月份的数据，例如需要查询设置了11，12，1月份的景点，将其三个月份对应的数值加起来，结果为6145，然后使用这个数值进行查询：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"string\">`spots`</span> <span class=\"keyword\">WHERE</span> <span class=\"string\">`month`</span> &amp; <span class=\"number\">6145</span> = <span class=\"number\">6145</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询只要适合，1,11,12月份其中一个月份的景点就行</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"string\">`spots`</span> <span class=\"keyword\">WHERE</span> (<span class=\"string\">`month`</span> &amp; <span class=\"number\">4096</span> = <span class=\"number\">4096</span>) <span class=\"keyword\">or</span> (<span class=\"string\">`month`</span> &amp; <span class=\"number\">2048</span> = <span class=\"number\">2048</span>) <span class=\"keyword\">or</span> (<span class=\"string\">`month`</span> &amp; <span class=\"number\">1</span> = <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n","excerpt":"<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>&amp; : 按位与，二进制位同时都为1的位设为1。<br>| : 按位或，二进制位有一个位为1就为1.<br>^ : 位异或，对应位的二进制数不同时，对应位的结果才为1；如果两个对应位数都为0或者都为1，则对应位的结果为0。</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a = 6 转化为2进制为 110</span><br><span class=\"line\">$b = 3 转化为2进制为 11</span><br><span class=\"line\">$a &amp; $b即是 110 与 11</span><br><span class=\"line\">将$a和$b中都为1的位设为1,位数不够的补0.即110 与 011</span><br><span class=\"line\">运算结果010,转化为十进制结果为2</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h3><p>每个景点包含很多属性，例如适合旅游的月份，我们一般的做法可能有两种：</p>\n<ol>\n<li>是增加一个varchar字段，每个月份之间用一个特殊符号分隔保存，例如“1,2,3,11</li>\n<li>建立一个关系表,在这里不能使用1-12的数字来表示月份，而是使用1，2，4，8，16，32，64，128，512，1024，2048，4096来表示，如果是多个月份，可以相互组合相加，之后存储为一个值。<br>比如 1,10,12月份，就可以存储<code>1+512+4096=4609</code>,4096 这个值。</li>\n</ol>\n<blockquote>\n<p>这个技巧<strong>适用于属性较少的一对多</strong>的场景，可以存储1个或者多个，太多的话还是推荐试用关系表。常用的属性有：月份，消息提醒类型，各种有限的类型组合等等。</p>\n</blockquote>\n<h4 id=\"使用技巧：\"><a href=\"#使用技巧：\" class=\"headerlink\" title=\"使用技巧：\"></a>使用技巧：</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 添加一个分类 用 “|”</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> (<span class=\"number\">4</span>|<span class=\"number\">2</span>|<span class=\"number\">1</span>); <span class=\"comment\">--- = 7</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 去掉一个分类，用“^”</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"number\">7</span> ^ <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 当我们需要查询某个月份的景点时，例如查询3月份的景点，可使用以下语句：</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"string\">`spots`</span> <span class=\"keyword\">WHERE</span> <span class=\"string\">`month`</span> &amp; <span class=\"number\">4</span> = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 当设置某个景点适合某个月份时，例如设置4325的景点适合2月份，可使用下面的语句：</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"string\">`spots`</span> <span class=\"keyword\">SET</span> <span class=\"string\">`month`</span> = <span class=\"string\">`month`</span> | <span class=\"number\">2</span> <span class=\"keyword\">WHERE</span> <span class=\"string\">`id`</span> = <span class=\"number\">4325</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 当取消设置某个景点的月份时，可使用下面的语句：</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"string\">`spots`</span> <span class=\"keyword\">SET</span><span class=\"string\">` month`</span> = <span class=\"string\">`month`</span> ^ <span class=\"number\">2</span> <span class=\"keyword\">WHERE</span><span class=\"string\">`id`</span>= <span class=\"number\">4325</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询同时适合多个月份的数据，例如需要查询设置了11，12，1月份的景点，将其三个月份对应的数值加起来，结果为6145，然后使用这个数值进行查询：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"string\">`spots`</span> <span class=\"keyword\">WHERE</span> <span class=\"string\">`month`</span> &amp; <span class=\"number\">6145</span> = <span class=\"number\">6145</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询只要适合，1,11,12月份其中一个月份的景点就行</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"string\">`spots`</span> <span class=\"keyword\">WHERE</span> (<span class=\"string\">`month`</span> &amp; <span class=\"number\">4096</span> = <span class=\"number\">4096</span>) <span class=\"keyword\">or</span> (<span class=\"string\">`month`</span> &amp; <span class=\"number\">2048</span> = <span class=\"number\">2048</span>) <span class=\"keyword\">or</span> (<span class=\"string\">`month`</span> &amp; <span class=\"number\">1</span> = <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>"},{"title":"mysql-cheatsheet","date":"2016-11-02T09:27:11.000Z","updated":"2016-11-02T09:27:11.000Z","_content":"\n### Connect/Disconnect\n\n``` mysql\nmysql -h <host> -u <user> -p<passwd>\nmysql -h <host> -u <user> -p\nEnter password: ********\nmysql -u user -p\nmysql\nmysql -h <host> -u <user> -p <Database>\n```\n<!-- more -->\n### Query\n \n```sql\n SELECT * FROM table\n SELECT * FROM table1, table2, ...\n SELECT field1, field2, ... FROM table1, table2, ...\n SELECT ... FROM ... WHERE condition\n SELECT ... FROM ... WHERE condition GROUP BY field\n SELECT ... FROM ... WHERE condition GROUP BY field HAVING condition2\n SELECT ... FROM ... WHERE condition ORDER BY field1, field2\n SELECT ... FROM ... WHERE condition ORDER BY field1, field2 DESC\n SELECT ... FROM ... WHERE condition LIMIT 10\n SELECT DISTINCT field1 FROM ...\n SELECT DISTINCT field1, field2 FROM ...\n\n SELECT ... FROM t1 JOIN t2 ON t1.id1 = t2.id2 WHERE condition\n SELECT ... FROM t1 LEFT JOIN t2 ON t1.id1 = t2.id2 WHERE condition\n SELECT ... FROM t1 JOIN (t2 JOIN t3 ON ...) ON ...\n SELECT ... FROM t1 JOIN t2 USING(id) WHERE condition\n \n -- 正则查询（RLIKE|REGEXP）\n SELECT * FROM table WHERE column REGEXP '^(A|B|C)'\n SELECT * FROM table WHERE rec RLIKE \"^b$\";  \n -- 获得表或者行信息\n DESCRIBE table [column]\n \n --日期时间\n SELECT CURRENT_DATE, (YEAR(CURRENT_DATE)­YEAR(date_col)) AS time_diff [FROM table]; \n\n```\n\n### Conditionals\n \n```\n field1 = value1\n field1 <> value1\n field1 LIKE 'value _ %'\n field1 IS NULL\n field1 IS NOT NULL\n field1 IN (value1, value2)\n field1 NOT IN (value1, value2)\n condition1 AND condition2\n condition1 OR condition2\n```\n###  table Index\n\n\n```\nCREATE [UNIQUE|FULLTEXT] INDEX index_name ON table (column,...)\nDROP INDEX index_name\n\n```\n\n### Data Manipulation\n \n```\n INSERT INTO table1 (field1, field2, ...) VALUES (value1, value2, ...)\n INSERT table1 SET field1=value_1, field2=value_2 ...\n\n LOAD DATA INFILE '/tmp/mydata.txt' INTO TABLE table1\n FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' ESCAPED BY '\\\\'\n\n DELETE FROM table1 / TRUNCATE table1\n DELETE FROM table1 WHERE condition\n -- join:\n DELETE FROM table1, table2 WHERE table1.id1 = table2.id2 AND condition\n\n UPDATE table1 SET field1=new_value1 WHERE condition\n -- join:\n UPDATE table1, table2 SET field1=new_value1, field2=new_value2, ...\n WHERE table1.id1 = table2.id2 AND condition\n```\n\n### Browsing\n \n```\n SHOW DATABASES\n SHOW TABLES\n SHOW FIELDS FROM table\n -- 几种查询表信息方法\n SHOW COLUMNS FROM table \n DESCRIBE table \n DESC table \n EXPLAIN table\n \n SHOW CREATE TABLE table\n SHOW CREATE TRIGGER trigger\n SHOW TRIGGERS LIKE '%update%'\n SHOW PROCESSLIST\n KILL process_number\n SELECT table_name, table_rows FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '**yourdbname**';\n \n mysqlshow\n mysqlshow database\n \n SELECT current_database()\n```\n\n### Create / delete / select / alter database\n \n```\nCREATE DATABASE [IF NOT EXISTS] mabase [CHARACTER SET charset] [COLLATE collation]\n CREATE DATABASE mabase CHARACTER SET utf8\n DROP DATABASE mabase\n USE mabase\n\n ALTER DATABASE mabase CHARACTER SET utf8\n```\n\n### Create table\n\n```\nCREATE TABLE table (field1 type1, field2 type2, ...)\n CREATE TABLE table (field1 type1 unsigned not null auto_increment, field2 type2, ...)\n CREATE TABLE table (field1 type1, field2 type2, ..., INDEX (field))\n CREATE TABLE table (field1 type1, field2 type2, ..., PRIMARY KEY (field1))\n CREATE TABLE table (field1 type1, field2 type2, ..., PRIMARY KEY (field1, field2))\n CREATE TABLE table1 (fk_field1 type1, field2 type2, ...,\n   FOREIGN KEY (fk_field1) REFERENCES table2 (t2_fieldA)\n     [ON UPDATE] [CASCADE|SET NULL|RESTRICT]\n     [ON DELETE] [CASCADE|SET NULL|RESTRICT])\n CREATE TABLE table1 (fk_field1 type1, fk_field2 type2, ...,\n   FOREIGN KEY (fk_field1, fk_field2) REFERENCES table2 (t2_fieldA, t2_fieldB))\n CREATE TABLE table IF NOT EXISTS (...)\n\n CREATE TABLE new_tbl_name LIKE tbl_name\n   [SELECT ... FROM tbl_name ...]\n\n CREATE TEMPORARY TABLE table (...)\n\n CREATE table new_table_name as SELECT [ *|column1, column2 ] FROM table_name\n ```\n### delete table\n\n\n```\nDROP TABLE table\n DROP TABLE IF EXISTS table\n DROP TABLE table1, table2, ...\n DROP TEMPORARY TABLE table\n```\n\n\n### modify table\n\n```\n ALTER TABLE table MODIFY field1 type1 \n ALTER TABLE table MODIFY field1 type1 NOT NULL ... \n ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1\n ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 NOT NULL ...\n ALTER TABLE table ALTER field1 SET DEFAULT ...\n ALTER TABLE table ALTER field1 DROP DEFAULT\n ALTER TABLE table ADD new_name_field1 type1\n ALTER TABLE table ADD new_name_field1 type1 FIRST\n ALTER TABLE table ADD new_name_field1 type1 AFTER another_field\n ALTER TABLE table DROP field1\n ALTER TABLE table ADD INDEX (field);\n ALTER TABLE table ADD PRIMARY KEY (field);\n\n -- Change field order:\n ALTER TABLE table MODIFY field1 type1 FIRST\n ALTER TABLE table MODIFY field1 type1 AFTER another_field\n ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 FIRST\n ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 AFTER another_field\n\n ALTER TABLE old_name RENAME new_name;\nKeys\n CREATE TABLE table (..., PRIMARY KEY (field1, field2))\n CREATE TABLE table (..., FOREIGN KEY (field1, field2) REFERENCES table2 (t2_field1, t2_field2))\n ALTER TABLE table ADD PRIMARY KEY (field);\n ALTER TABLE table ADD CONSTRAINT constraint_name PRIMARY KEY (field, field2);\n \n```\n### create/modify/drop view\n```\n CREATE VIEW view AS SELECT ... FROM table WHERE ...\n```\n\n### Privileges\n \n```\nCREATE USER 'user'@'localhost' IDENTIFIED BY 'password';\n\n GRANT ALL PRIVILEGES ON base.* TO 'user'@'localhost' IDENTIFIED BY 'password';\n GRANT SELECT, INSERT, DELETE ON base.* TO 'user'@'localhost' IDENTIFIED BY 'password';\n REVOKE ALL PRIVILEGES ON base.* FROM 'user'@'host'; -- one permission only\n REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'user'@'host'; -- all permissions\n\n SET PASSWORD = PASSWORD('new_pass')\n SET PASSWORD FOR 'user'@'host' = PASSWORD('new_pass')\n SET PASSWORD = OLD_PASSWORD('new_pass')\n\n DROP USER 'user'@'host'\n```\n\n### Main data types\n\n```\nTINYINT   (1o: -127+128) \nSMALLINT  (2o: +-65 000)\nMEDIUMINT (3o: +-16 000 000) \nINT       (4o: +-2 000 000 000)\nBIGINT    (8o: +-9.10^18)\n  Precise interval: -(2^(8*N-1)) -> (2^8*N)-1\n  /!\\ INT(2) = \"2 digits displayed\" -- NOT \"number with 2 digits max\"\nINT NOT NULL auto_increment PRIMARY KEY -- auto-counter for PK\nFLOAT(M,D) DOUBLE(M,D) FLOAT(D=0->53) \n  /!\\ 8,3 -> 12345,678 -- NOT 12345678,123!\nTIME (HH:MM) YEAR (AAAA) DATE (AAAA-MM-JJ) DATETIME (AAAA-MM-JJ HH:MM; années 1000->9999)\n  TIMESTAMP (like DATETIME, but 1970->2038, compatible with Unix)\nVARCHAR (single-line; explicit size)  \nTEXT (multi-lines; max size=65535) \nBLOB (binary; max size=65535)\n  Variants for TEXT&BLOB: TINY (max=255) MEDIUM (max=~16000) LONG (max=4Go)\n Ex: VARCHAR(32), TINYTEXT, LONGBLOB, MEDIUMTEXT\nENUM ('value1', 'value2', ...) -- (default NULL, or '' if NOT NULL)\n```\n\n### Forgot root password?\n\n```\n$ /etc/init.d/mysql stop\n$ mysqld_safe --skip-grant-tables &\n$ mysql # on another terminal\nmysql > UPDATE mysql.user SET password=PASSWORD('nouveau') WHERE user='root';\n## Kill mysqld_safe from the terminal, using Control + \\\n$ /etc/init.d/mysql start\n```\n\n### Repair tables after unclean shutdown\n\n```\nmysqlcheck --all-databases\nmysqlcheck --all-databases --fast\n```\n\n\n\n### Loading data\n\n```sql\nmysql> SOURCE input_file\nmysql -uroot database < filename-20120201.sql\n\ncat filename-20120201.sql | mysql database\n\nmysqldump -u [username] -p [database] > data_backup.sql;\n\n-- Load tab­delimited data into a table (Use \\n f or NULL)\nLOAD DATA LOCAL INFILE \"infile.txt\" INTO TABLE table_name;\n```\n","source":"_posts/2016/mysql-cheatsheet.md","raw":"---\ntitle: mysql-cheatsheet\ndate: 2016-11-02 17:27:11\nupdated: 2016-11-02 17:27:11\ntags:\n- mysql\ncategories:\n---\n\n### Connect/Disconnect\n\n``` mysql\nmysql -h <host> -u <user> -p<passwd>\nmysql -h <host> -u <user> -p\nEnter password: ********\nmysql -u user -p\nmysql\nmysql -h <host> -u <user> -p <Database>\n```\n<!-- more -->\n### Query\n \n```sql\n SELECT * FROM table\n SELECT * FROM table1, table2, ...\n SELECT field1, field2, ... FROM table1, table2, ...\n SELECT ... FROM ... WHERE condition\n SELECT ... FROM ... WHERE condition GROUP BY field\n SELECT ... FROM ... WHERE condition GROUP BY field HAVING condition2\n SELECT ... FROM ... WHERE condition ORDER BY field1, field2\n SELECT ... FROM ... WHERE condition ORDER BY field1, field2 DESC\n SELECT ... FROM ... WHERE condition LIMIT 10\n SELECT DISTINCT field1 FROM ...\n SELECT DISTINCT field1, field2 FROM ...\n\n SELECT ... FROM t1 JOIN t2 ON t1.id1 = t2.id2 WHERE condition\n SELECT ... FROM t1 LEFT JOIN t2 ON t1.id1 = t2.id2 WHERE condition\n SELECT ... FROM t1 JOIN (t2 JOIN t3 ON ...) ON ...\n SELECT ... FROM t1 JOIN t2 USING(id) WHERE condition\n \n -- 正则查询（RLIKE|REGEXP）\n SELECT * FROM table WHERE column REGEXP '^(A|B|C)'\n SELECT * FROM table WHERE rec RLIKE \"^b$\";  \n -- 获得表或者行信息\n DESCRIBE table [column]\n \n --日期时间\n SELECT CURRENT_DATE, (YEAR(CURRENT_DATE)­YEAR(date_col)) AS time_diff [FROM table]; \n\n```\n\n### Conditionals\n \n```\n field1 = value1\n field1 <> value1\n field1 LIKE 'value _ %'\n field1 IS NULL\n field1 IS NOT NULL\n field1 IN (value1, value2)\n field1 NOT IN (value1, value2)\n condition1 AND condition2\n condition1 OR condition2\n```\n###  table Index\n\n\n```\nCREATE [UNIQUE|FULLTEXT] INDEX index_name ON table (column,...)\nDROP INDEX index_name\n\n```\n\n### Data Manipulation\n \n```\n INSERT INTO table1 (field1, field2, ...) VALUES (value1, value2, ...)\n INSERT table1 SET field1=value_1, field2=value_2 ...\n\n LOAD DATA INFILE '/tmp/mydata.txt' INTO TABLE table1\n FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' ESCAPED BY '\\\\'\n\n DELETE FROM table1 / TRUNCATE table1\n DELETE FROM table1 WHERE condition\n -- join:\n DELETE FROM table1, table2 WHERE table1.id1 = table2.id2 AND condition\n\n UPDATE table1 SET field1=new_value1 WHERE condition\n -- join:\n UPDATE table1, table2 SET field1=new_value1, field2=new_value2, ...\n WHERE table1.id1 = table2.id2 AND condition\n```\n\n### Browsing\n \n```\n SHOW DATABASES\n SHOW TABLES\n SHOW FIELDS FROM table\n -- 几种查询表信息方法\n SHOW COLUMNS FROM table \n DESCRIBE table \n DESC table \n EXPLAIN table\n \n SHOW CREATE TABLE table\n SHOW CREATE TRIGGER trigger\n SHOW TRIGGERS LIKE '%update%'\n SHOW PROCESSLIST\n KILL process_number\n SELECT table_name, table_rows FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '**yourdbname**';\n \n mysqlshow\n mysqlshow database\n \n SELECT current_database()\n```\n\n### Create / delete / select / alter database\n \n```\nCREATE DATABASE [IF NOT EXISTS] mabase [CHARACTER SET charset] [COLLATE collation]\n CREATE DATABASE mabase CHARACTER SET utf8\n DROP DATABASE mabase\n USE mabase\n\n ALTER DATABASE mabase CHARACTER SET utf8\n```\n\n### Create table\n\n```\nCREATE TABLE table (field1 type1, field2 type2, ...)\n CREATE TABLE table (field1 type1 unsigned not null auto_increment, field2 type2, ...)\n CREATE TABLE table (field1 type1, field2 type2, ..., INDEX (field))\n CREATE TABLE table (field1 type1, field2 type2, ..., PRIMARY KEY (field1))\n CREATE TABLE table (field1 type1, field2 type2, ..., PRIMARY KEY (field1, field2))\n CREATE TABLE table1 (fk_field1 type1, field2 type2, ...,\n   FOREIGN KEY (fk_field1) REFERENCES table2 (t2_fieldA)\n     [ON UPDATE] [CASCADE|SET NULL|RESTRICT]\n     [ON DELETE] [CASCADE|SET NULL|RESTRICT])\n CREATE TABLE table1 (fk_field1 type1, fk_field2 type2, ...,\n   FOREIGN KEY (fk_field1, fk_field2) REFERENCES table2 (t2_fieldA, t2_fieldB))\n CREATE TABLE table IF NOT EXISTS (...)\n\n CREATE TABLE new_tbl_name LIKE tbl_name\n   [SELECT ... FROM tbl_name ...]\n\n CREATE TEMPORARY TABLE table (...)\n\n CREATE table new_table_name as SELECT [ *|column1, column2 ] FROM table_name\n ```\n### delete table\n\n\n```\nDROP TABLE table\n DROP TABLE IF EXISTS table\n DROP TABLE table1, table2, ...\n DROP TEMPORARY TABLE table\n```\n\n\n### modify table\n\n```\n ALTER TABLE table MODIFY field1 type1 \n ALTER TABLE table MODIFY field1 type1 NOT NULL ... \n ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1\n ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 NOT NULL ...\n ALTER TABLE table ALTER field1 SET DEFAULT ...\n ALTER TABLE table ALTER field1 DROP DEFAULT\n ALTER TABLE table ADD new_name_field1 type1\n ALTER TABLE table ADD new_name_field1 type1 FIRST\n ALTER TABLE table ADD new_name_field1 type1 AFTER another_field\n ALTER TABLE table DROP field1\n ALTER TABLE table ADD INDEX (field);\n ALTER TABLE table ADD PRIMARY KEY (field);\n\n -- Change field order:\n ALTER TABLE table MODIFY field1 type1 FIRST\n ALTER TABLE table MODIFY field1 type1 AFTER another_field\n ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 FIRST\n ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 AFTER another_field\n\n ALTER TABLE old_name RENAME new_name;\nKeys\n CREATE TABLE table (..., PRIMARY KEY (field1, field2))\n CREATE TABLE table (..., FOREIGN KEY (field1, field2) REFERENCES table2 (t2_field1, t2_field2))\n ALTER TABLE table ADD PRIMARY KEY (field);\n ALTER TABLE table ADD CONSTRAINT constraint_name PRIMARY KEY (field, field2);\n \n```\n### create/modify/drop view\n```\n CREATE VIEW view AS SELECT ... FROM table WHERE ...\n```\n\n### Privileges\n \n```\nCREATE USER 'user'@'localhost' IDENTIFIED BY 'password';\n\n GRANT ALL PRIVILEGES ON base.* TO 'user'@'localhost' IDENTIFIED BY 'password';\n GRANT SELECT, INSERT, DELETE ON base.* TO 'user'@'localhost' IDENTIFIED BY 'password';\n REVOKE ALL PRIVILEGES ON base.* FROM 'user'@'host'; -- one permission only\n REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'user'@'host'; -- all permissions\n\n SET PASSWORD = PASSWORD('new_pass')\n SET PASSWORD FOR 'user'@'host' = PASSWORD('new_pass')\n SET PASSWORD = OLD_PASSWORD('new_pass')\n\n DROP USER 'user'@'host'\n```\n\n### Main data types\n\n```\nTINYINT   (1o: -127+128) \nSMALLINT  (2o: +-65 000)\nMEDIUMINT (3o: +-16 000 000) \nINT       (4o: +-2 000 000 000)\nBIGINT    (8o: +-9.10^18)\n  Precise interval: -(2^(8*N-1)) -> (2^8*N)-1\n  /!\\ INT(2) = \"2 digits displayed\" -- NOT \"number with 2 digits max\"\nINT NOT NULL auto_increment PRIMARY KEY -- auto-counter for PK\nFLOAT(M,D) DOUBLE(M,D) FLOAT(D=0->53) \n  /!\\ 8,3 -> 12345,678 -- NOT 12345678,123!\nTIME (HH:MM) YEAR (AAAA) DATE (AAAA-MM-JJ) DATETIME (AAAA-MM-JJ HH:MM; années 1000->9999)\n  TIMESTAMP (like DATETIME, but 1970->2038, compatible with Unix)\nVARCHAR (single-line; explicit size)  \nTEXT (multi-lines; max size=65535) \nBLOB (binary; max size=65535)\n  Variants for TEXT&BLOB: TINY (max=255) MEDIUM (max=~16000) LONG (max=4Go)\n Ex: VARCHAR(32), TINYTEXT, LONGBLOB, MEDIUMTEXT\nENUM ('value1', 'value2', ...) -- (default NULL, or '' if NOT NULL)\n```\n\n### Forgot root password?\n\n```\n$ /etc/init.d/mysql stop\n$ mysqld_safe --skip-grant-tables &\n$ mysql # on another terminal\nmysql > UPDATE mysql.user SET password=PASSWORD('nouveau') WHERE user='root';\n## Kill mysqld_safe from the terminal, using Control + \\\n$ /etc/init.d/mysql start\n```\n\n### Repair tables after unclean shutdown\n\n```\nmysqlcheck --all-databases\nmysqlcheck --all-databases --fast\n```\n\n\n\n### Loading data\n\n```sql\nmysql> SOURCE input_file\nmysql -uroot database < filename-20120201.sql\n\ncat filename-20120201.sql | mysql database\n\nmysqldump -u [username] -p [database] > data_backup.sql;\n\n-- Load tab­delimited data into a table (Use \\n f or NULL)\nLOAD DATA LOCAL INFILE \"infile.txt\" INTO TABLE table_name;\n```\n","slug":"mysql-cheatsheet","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpa6001rwsnnqjv0zm5m","content":"<h3 id=\"Connect-Disconnect\"><a href=\"#Connect-Disconnect\" class=\"headerlink\" title=\"Connect/Disconnect\"></a>Connect/Disconnect</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -h &lt;host&gt; -u &lt;user&gt; -p&lt;passwd&gt;</span><br><span class=\"line\">mysql -h &lt;host&gt; -u &lt;user&gt; -p</span><br><span class=\"line\">Enter password: ********</span><br><span class=\"line\">mysql -u user -p</span><br><span class=\"line\">mysql</span><br><span class=\"line\">mysql -h &lt;host&gt; -u &lt;user&gt; -p &lt;Database&gt;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">table</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> table1, table2, ...</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> field1, field2, ... <span class=\"keyword\">FROM</span> table1, table2, ...</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">field</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">field</span> <span class=\"keyword\">HAVING</span> condition2</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> field1, field2</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> field1, field2 <span class=\"keyword\">DESC</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition <span class=\"keyword\">LIMIT</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> field1 <span class=\"keyword\">FROM</span> ...</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> field1, field2 <span class=\"keyword\">FROM</span> ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> t1 <span class=\"keyword\">JOIN</span> t2 <span class=\"keyword\">ON</span> t1.id1 = t2.id2 <span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> t1 <span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> t2 <span class=\"keyword\">ON</span> t1.id1 = t2.id2 <span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> t1 <span class=\"keyword\">JOIN</span> (t2 <span class=\"keyword\">JOIN</span> t3 <span class=\"keyword\">ON</span> ...) <span class=\"keyword\">ON</span> ...</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> t1 <span class=\"keyword\">JOIN</span> t2 <span class=\"keyword\">USING</span>(<span class=\"keyword\">id</span>) <span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 正则查询（RLIKE|REGEXP）</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">table</span> <span class=\"keyword\">WHERE</span> <span class=\"keyword\">column</span> REGEXP <span class=\"string\">'^(A|B|C)'</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">table</span> <span class=\"keyword\">WHERE</span> rec <span class=\"keyword\">RLIKE</span> <span class=\"string\">\"^b$\"</span>;  </span><br><span class=\"line\"><span class=\"comment\">-- 获得表或者行信息</span></span><br><span class=\"line\"><span class=\"keyword\">DESCRIBE</span> <span class=\"keyword\">table</span> [<span class=\"keyword\">column</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--日期时间</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CURRENT_DATE</span>, (<span class=\"keyword\">YEAR</span>(<span class=\"keyword\">CURRENT_DATE</span>)­<span class=\"keyword\">YEAR</span>(date_col)) <span class=\"keyword\">AS</span> time_diff [<span class=\"keyword\">FROM</span> <span class=\"keyword\">table</span>];</span><br></pre></td></tr></table></figure>\n<h3 id=\"Conditionals\"><a href=\"#Conditionals\" class=\"headerlink\" title=\"Conditionals\"></a>Conditionals</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">field1 = value1</span><br><span class=\"line\">field1 &lt;&gt; value1</span><br><span class=\"line\">field1 LIKE &apos;value _ %&apos;</span><br><span class=\"line\">field1 IS NULL</span><br><span class=\"line\">field1 IS NOT NULL</span><br><span class=\"line\">field1 IN (value1, value2)</span><br><span class=\"line\">field1 NOT IN (value1, value2)</span><br><span class=\"line\">condition1 AND condition2</span><br><span class=\"line\">condition1 OR condition2</span><br></pre></td></tr></table></figure>\n<h3 id=\"table-Index\"><a href=\"#table-Index\" class=\"headerlink\" title=\"table Index\"></a>table Index</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE [UNIQUE|FULLTEXT] INDEX index_name ON table (column,...)</span><br><span class=\"line\">DROP INDEX index_name</span><br></pre></td></tr></table></figure>\n<h3 id=\"Data-Manipulation\"><a href=\"#Data-Manipulation\" class=\"headerlink\" title=\"Data Manipulation\"></a>Data Manipulation</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO table1 (field1, field2, ...) VALUES (value1, value2, ...)</span><br><span class=\"line\">INSERT table1 SET field1=value_1, field2=value_2 ...</span><br><span class=\"line\"></span><br><span class=\"line\">LOAD DATA INFILE &apos;/tmp/mydata.txt&apos; INTO TABLE table1</span><br><span class=\"line\">FIELDS TERMINATED BY &apos;,&apos; OPTIONALLY ENCLOSED BY &apos;&quot;&apos; ESCAPED BY &apos;\\\\&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">DELETE FROM table1 / TRUNCATE table1</span><br><span class=\"line\">DELETE FROM table1 WHERE condition</span><br><span class=\"line\">-- join:</span><br><span class=\"line\">DELETE FROM table1, table2 WHERE table1.id1 = table2.id2 AND condition</span><br><span class=\"line\"></span><br><span class=\"line\">UPDATE table1 SET field1=new_value1 WHERE condition</span><br><span class=\"line\">-- join:</span><br><span class=\"line\">UPDATE table1, table2 SET field1=new_value1, field2=new_value2, ...</span><br><span class=\"line\">WHERE table1.id1 = table2.id2 AND condition</span><br></pre></td></tr></table></figure>\n<h3 id=\"Browsing\"><a href=\"#Browsing\" class=\"headerlink\" title=\"Browsing\"></a>Browsing</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW DATABASES</span><br><span class=\"line\">SHOW TABLES</span><br><span class=\"line\">SHOW FIELDS FROM table</span><br><span class=\"line\">-- 几种查询表信息方法</span><br><span class=\"line\">SHOW COLUMNS FROM table </span><br><span class=\"line\">DESCRIBE table </span><br><span class=\"line\">DESC table </span><br><span class=\"line\">EXPLAIN table</span><br><span class=\"line\"></span><br><span class=\"line\">SHOW CREATE TABLE table</span><br><span class=\"line\">SHOW CREATE TRIGGER trigger</span><br><span class=\"line\">SHOW TRIGGERS LIKE &apos;%update%&apos;</span><br><span class=\"line\">SHOW PROCESSLIST</span><br><span class=\"line\">KILL process_number</span><br><span class=\"line\">SELECT table_name, table_rows FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = &apos;**yourdbname**&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">mysqlshow</span><br><span class=\"line\">mysqlshow database</span><br><span class=\"line\"></span><br><span class=\"line\">SELECT current_database()</span><br></pre></td></tr></table></figure>\n<h3 id=\"Create-delete-select-alter-database\"><a href=\"#Create-delete-select-alter-database\" class=\"headerlink\" title=\"Create / delete / select / alter database\"></a>Create / delete / select / alter database</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE [IF NOT EXISTS] mabase [CHARACTER SET charset] [COLLATE collation]</span><br><span class=\"line\"> CREATE DATABASE mabase CHARACTER SET utf8</span><br><span class=\"line\"> DROP DATABASE mabase</span><br><span class=\"line\"> USE mabase</span><br><span class=\"line\"></span><br><span class=\"line\"> ALTER DATABASE mabase CHARACTER SET utf8</span><br></pre></td></tr></table></figure>\n<h3 id=\"Create-table\"><a href=\"#Create-table\" class=\"headerlink\" title=\"Create table\"></a>Create table</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE table (field1 type1, field2 type2, ...)</span><br><span class=\"line\"> CREATE TABLE table (field1 type1 unsigned not null auto_increment, field2 type2, ...)</span><br><span class=\"line\"> CREATE TABLE table (field1 type1, field2 type2, ..., INDEX (field))</span><br><span class=\"line\"> CREATE TABLE table (field1 type1, field2 type2, ..., PRIMARY KEY (field1))</span><br><span class=\"line\"> CREATE TABLE table (field1 type1, field2 type2, ..., PRIMARY KEY (field1, field2))</span><br><span class=\"line\"> CREATE TABLE table1 (fk_field1 type1, field2 type2, ...,</span><br><span class=\"line\">   FOREIGN KEY (fk_field1) REFERENCES table2 (t2_fieldA)</span><br><span class=\"line\">     [ON UPDATE] [CASCADE|SET NULL|RESTRICT]</span><br><span class=\"line\">     [ON DELETE] [CASCADE|SET NULL|RESTRICT])</span><br><span class=\"line\"> CREATE TABLE table1 (fk_field1 type1, fk_field2 type2, ...,</span><br><span class=\"line\">   FOREIGN KEY (fk_field1, fk_field2) REFERENCES table2 (t2_fieldA, t2_fieldB))</span><br><span class=\"line\"> CREATE TABLE table IF NOT EXISTS (...)</span><br><span class=\"line\"></span><br><span class=\"line\"> CREATE TABLE new_tbl_name LIKE tbl_name</span><br><span class=\"line\">   [SELECT ... FROM tbl_name ...]</span><br><span class=\"line\"></span><br><span class=\"line\"> CREATE TEMPORARY TABLE table (...)</span><br><span class=\"line\"></span><br><span class=\"line\"> CREATE table new_table_name as SELECT [ *|column1, column2 ] FROM table_name</span><br></pre></td></tr></table></figure>\n<h3 id=\"delete-table\"><a href=\"#delete-table\" class=\"headerlink\" title=\"delete table\"></a>delete table</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP TABLE table</span><br><span class=\"line\"> DROP TABLE IF EXISTS table</span><br><span class=\"line\"> DROP TABLE table1, table2, ...</span><br><span class=\"line\"> DROP TEMPORARY TABLE table</span><br></pre></td></tr></table></figure>\n<h3 id=\"modify-table\"><a href=\"#modify-table\" class=\"headerlink\" title=\"modify table\"></a>modify table</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ALTER TABLE table MODIFY field1 type1 </span><br><span class=\"line\"> ALTER TABLE table MODIFY field1 type1 NOT NULL ... </span><br><span class=\"line\"> ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1</span><br><span class=\"line\"> ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 NOT NULL ...</span><br><span class=\"line\"> ALTER TABLE table ALTER field1 SET DEFAULT ...</span><br><span class=\"line\"> ALTER TABLE table ALTER field1 DROP DEFAULT</span><br><span class=\"line\"> ALTER TABLE table ADD new_name_field1 type1</span><br><span class=\"line\"> ALTER TABLE table ADD new_name_field1 type1 FIRST</span><br><span class=\"line\"> ALTER TABLE table ADD new_name_field1 type1 AFTER another_field</span><br><span class=\"line\"> ALTER TABLE table DROP field1</span><br><span class=\"line\"> ALTER TABLE table ADD INDEX (field);</span><br><span class=\"line\"> ALTER TABLE table ADD PRIMARY KEY (field);</span><br><span class=\"line\"></span><br><span class=\"line\"> -- Change field order:</span><br><span class=\"line\"> ALTER TABLE table MODIFY field1 type1 FIRST</span><br><span class=\"line\"> ALTER TABLE table MODIFY field1 type1 AFTER another_field</span><br><span class=\"line\"> ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 FIRST</span><br><span class=\"line\"> ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 AFTER another_field</span><br><span class=\"line\"></span><br><span class=\"line\"> ALTER TABLE old_name RENAME new_name;</span><br><span class=\"line\">Keys</span><br><span class=\"line\"> CREATE TABLE table (..., PRIMARY KEY (field1, field2))</span><br><span class=\"line\"> CREATE TABLE table (..., FOREIGN KEY (field1, field2) REFERENCES table2 (t2_field1, t2_field2))</span><br><span class=\"line\"> ALTER TABLE table ADD PRIMARY KEY (field);</span><br><span class=\"line\"> ALTER TABLE table ADD CONSTRAINT constraint_name PRIMARY KEY (field, field2);</span><br></pre></td></tr></table></figure>\n<h3 id=\"create-modify-drop-view\"><a href=\"#create-modify-drop-view\" class=\"headerlink\" title=\"create/modify/drop view\"></a>create/modify/drop view</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE VIEW view AS SELECT ... FROM table WHERE ...</span><br></pre></td></tr></table></figure>\n<h3 id=\"Privileges\"><a href=\"#Privileges\" class=\"headerlink\" title=\"Privileges\"></a>Privileges</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE USER &apos;user&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\"> GRANT ALL PRIVILEGES ON base.* TO &apos;user&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos;;</span><br><span class=\"line\"> GRANT SELECT, INSERT, DELETE ON base.* TO &apos;user&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos;;</span><br><span class=\"line\"> REVOKE ALL PRIVILEGES ON base.* FROM &apos;user&apos;@&apos;host&apos;; -- one permission only</span><br><span class=\"line\"> REVOKE ALL PRIVILEGES, GRANT OPTION FROM &apos;user&apos;@&apos;host&apos;; -- all permissions</span><br><span class=\"line\"></span><br><span class=\"line\"> SET PASSWORD = PASSWORD(&apos;new_pass&apos;)</span><br><span class=\"line\"> SET PASSWORD FOR &apos;user&apos;@&apos;host&apos; = PASSWORD(&apos;new_pass&apos;)</span><br><span class=\"line\"> SET PASSWORD = OLD_PASSWORD(&apos;new_pass&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\"> DROP USER &apos;user&apos;@&apos;host&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Main-data-types\"><a href=\"#Main-data-types\" class=\"headerlink\" title=\"Main data types\"></a>Main data types</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TINYINT   (1o: -127+128) </span><br><span class=\"line\">SMALLINT  (2o: +-65 000)</span><br><span class=\"line\">MEDIUMINT (3o: +-16 000 000) </span><br><span class=\"line\">INT       (4o: +-2 000 000 000)</span><br><span class=\"line\">BIGINT    (8o: +-9.10^18)</span><br><span class=\"line\">  Precise interval: -(2^(8*N-1)) -&gt; (2^8*N)-1</span><br><span class=\"line\">  /!\\ INT(2) = &quot;2 digits displayed&quot; -- NOT &quot;number with 2 digits max&quot;</span><br><span class=\"line\">INT NOT NULL auto_increment PRIMARY KEY -- auto-counter for PK</span><br><span class=\"line\">FLOAT(M,D) DOUBLE(M,D) FLOAT(D=0-&gt;53) </span><br><span class=\"line\">  /!\\ 8,3 -&gt; 12345,678 -- NOT 12345678,123!</span><br><span class=\"line\">TIME (HH:MM) YEAR (AAAA) DATE (AAAA-MM-JJ) DATETIME (AAAA-MM-JJ HH:MM; années 1000-&gt;9999)</span><br><span class=\"line\">  TIMESTAMP (like DATETIME, but 1970-&gt;2038, compatible with Unix)</span><br><span class=\"line\">VARCHAR (single-line; explicit size)  </span><br><span class=\"line\">TEXT (multi-lines; max size=65535) </span><br><span class=\"line\">BLOB (binary; max size=65535)</span><br><span class=\"line\">  Variants for TEXT&amp;BLOB: TINY (max=255) MEDIUM (max=~16000) LONG (max=4Go)</span><br><span class=\"line\"> Ex: VARCHAR(32), TINYTEXT, LONGBLOB, MEDIUMTEXT</span><br><span class=\"line\">ENUM (&apos;value1&apos;, &apos;value2&apos;, ...) -- (default NULL, or &apos;&apos; if NOT NULL)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Forgot-root-password\"><a href=\"#Forgot-root-password\" class=\"headerlink\" title=\"Forgot root password?\"></a>Forgot root password?</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ /etc/init.d/mysql stop</span><br><span class=\"line\">$ mysqld_safe --skip-grant-tables &amp;</span><br><span class=\"line\">$ mysql # on another terminal</span><br><span class=\"line\">mysql &gt; UPDATE mysql.user SET password=PASSWORD(&apos;nouveau&apos;) WHERE user=&apos;root&apos;;</span><br><span class=\"line\">## Kill mysqld_safe from the terminal, using Control + \\</span><br><span class=\"line\">$ /etc/init.d/mysql start</span><br></pre></td></tr></table></figure>\n<h3 id=\"Repair-tables-after-unclean-shutdown\"><a href=\"#Repair-tables-after-unclean-shutdown\" class=\"headerlink\" title=\"Repair tables after unclean shutdown\"></a>Repair tables after unclean shutdown</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqlcheck --all-databases</span><br><span class=\"line\">mysqlcheck --all-databases --fast</span><br></pre></td></tr></table></figure>\n<h3 id=\"Loading-data\"><a href=\"#Loading-data\" class=\"headerlink\" title=\"Loading data\"></a>Loading data</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SOURCE input_file</span><br><span class=\"line\">mysql -uroot database &lt; filename-20120201.sql</span><br><span class=\"line\"></span><br><span class=\"line\">cat filename-20120201.sql | mysql database</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -u [username] -p [database] &gt; data_backup.sql;</span><br><span class=\"line\"></span><br><span class=\"line\">-- Load tab­delimited data into a table (Use \\n f or NULL)</span><br><span class=\"line\">LOAD DATA LOCAL INFILE \"infile.txt\" INTO TABLE table_name;</span><br></pre></td></tr></table></figure>\n","excerpt":"<h3 id=\"Connect-Disconnect\"><a href=\"#Connect-Disconnect\" class=\"headerlink\" title=\"Connect/Disconnect\"></a>Connect/Disconnect</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -h &lt;host&gt; -u &lt;user&gt; -p&lt;passwd&gt;</span><br><span class=\"line\">mysql -h &lt;host&gt; -u &lt;user&gt; -p</span><br><span class=\"line\">Enter password: ********</span><br><span class=\"line\">mysql -u user -p</span><br><span class=\"line\">mysql</span><br><span class=\"line\">mysql -h &lt;host&gt; -u &lt;user&gt; -p &lt;Database&gt;</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">table</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> table1, table2, ...</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> field1, field2, ... <span class=\"keyword\">FROM</span> table1, table2, ...</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">field</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">field</span> <span class=\"keyword\">HAVING</span> condition2</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> field1, field2</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> field1, field2 <span class=\"keyword\">DESC</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> ... <span class=\"keyword\">WHERE</span> condition <span class=\"keyword\">LIMIT</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> field1 <span class=\"keyword\">FROM</span> ...</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> field1, field2 <span class=\"keyword\">FROM</span> ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> t1 <span class=\"keyword\">JOIN</span> t2 <span class=\"keyword\">ON</span> t1.id1 = t2.id2 <span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> t1 <span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> t2 <span class=\"keyword\">ON</span> t1.id1 = t2.id2 <span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> t1 <span class=\"keyword\">JOIN</span> (t2 <span class=\"keyword\">JOIN</span> t3 <span class=\"keyword\">ON</span> ...) <span class=\"keyword\">ON</span> ...</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ... <span class=\"keyword\">FROM</span> t1 <span class=\"keyword\">JOIN</span> t2 <span class=\"keyword\">USING</span>(<span class=\"keyword\">id</span>) <span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 正则查询（RLIKE|REGEXP）</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">table</span> <span class=\"keyword\">WHERE</span> <span class=\"keyword\">column</span> REGEXP <span class=\"string\">'^(A|B|C)'</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">table</span> <span class=\"keyword\">WHERE</span> rec <span class=\"keyword\">RLIKE</span> <span class=\"string\">\"^b$\"</span>;  </span><br><span class=\"line\"><span class=\"comment\">-- 获得表或者行信息</span></span><br><span class=\"line\"><span class=\"keyword\">DESCRIBE</span> <span class=\"keyword\">table</span> [<span class=\"keyword\">column</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--日期时间</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CURRENT_DATE</span>, (<span class=\"keyword\">YEAR</span>(<span class=\"keyword\">CURRENT_DATE</span>)­<span class=\"keyword\">YEAR</span>(date_col)) <span class=\"keyword\">AS</span> time_diff [<span class=\"keyword\">FROM</span> <span class=\"keyword\">table</span>];</span><br></pre></td></tr></table></figure>\n<h3 id=\"Conditionals\"><a href=\"#Conditionals\" class=\"headerlink\" title=\"Conditionals\"></a>Conditionals</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">field1 = value1</span><br><span class=\"line\">field1 &lt;&gt; value1</span><br><span class=\"line\">field1 LIKE &apos;value _ %&apos;</span><br><span class=\"line\">field1 IS NULL</span><br><span class=\"line\">field1 IS NOT NULL</span><br><span class=\"line\">field1 IN (value1, value2)</span><br><span class=\"line\">field1 NOT IN (value1, value2)</span><br><span class=\"line\">condition1 AND condition2</span><br><span class=\"line\">condition1 OR condition2</span><br></pre></td></tr></table></figure>\n<h3 id=\"table-Index\"><a href=\"#table-Index\" class=\"headerlink\" title=\"table Index\"></a>table Index</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE [UNIQUE|FULLTEXT] INDEX index_name ON table (column,...)</span><br><span class=\"line\">DROP INDEX index_name</span><br></pre></td></tr></table></figure>\n<h3 id=\"Data-Manipulation\"><a href=\"#Data-Manipulation\" class=\"headerlink\" title=\"Data Manipulation\"></a>Data Manipulation</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO table1 (field1, field2, ...) VALUES (value1, value2, ...)</span><br><span class=\"line\">INSERT table1 SET field1=value_1, field2=value_2 ...</span><br><span class=\"line\"></span><br><span class=\"line\">LOAD DATA INFILE &apos;/tmp/mydata.txt&apos; INTO TABLE table1</span><br><span class=\"line\">FIELDS TERMINATED BY &apos;,&apos; OPTIONALLY ENCLOSED BY &apos;&quot;&apos; ESCAPED BY &apos;\\\\&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">DELETE FROM table1 / TRUNCATE table1</span><br><span class=\"line\">DELETE FROM table1 WHERE condition</span><br><span class=\"line\">-- join:</span><br><span class=\"line\">DELETE FROM table1, table2 WHERE table1.id1 = table2.id2 AND condition</span><br><span class=\"line\"></span><br><span class=\"line\">UPDATE table1 SET field1=new_value1 WHERE condition</span><br><span class=\"line\">-- join:</span><br><span class=\"line\">UPDATE table1, table2 SET field1=new_value1, field2=new_value2, ...</span><br><span class=\"line\">WHERE table1.id1 = table2.id2 AND condition</span><br></pre></td></tr></table></figure>\n<h3 id=\"Browsing\"><a href=\"#Browsing\" class=\"headerlink\" title=\"Browsing\"></a>Browsing</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW DATABASES</span><br><span class=\"line\">SHOW TABLES</span><br><span class=\"line\">SHOW FIELDS FROM table</span><br><span class=\"line\">-- 几种查询表信息方法</span><br><span class=\"line\">SHOW COLUMNS FROM table </span><br><span class=\"line\">DESCRIBE table </span><br><span class=\"line\">DESC table </span><br><span class=\"line\">EXPLAIN table</span><br><span class=\"line\"></span><br><span class=\"line\">SHOW CREATE TABLE table</span><br><span class=\"line\">SHOW CREATE TRIGGER trigger</span><br><span class=\"line\">SHOW TRIGGERS LIKE &apos;%update%&apos;</span><br><span class=\"line\">SHOW PROCESSLIST</span><br><span class=\"line\">KILL process_number</span><br><span class=\"line\">SELECT table_name, table_rows FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = &apos;**yourdbname**&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">mysqlshow</span><br><span class=\"line\">mysqlshow database</span><br><span class=\"line\"></span><br><span class=\"line\">SELECT current_database()</span><br></pre></td></tr></table></figure>\n<h3 id=\"Create-delete-select-alter-database\"><a href=\"#Create-delete-select-alter-database\" class=\"headerlink\" title=\"Create / delete / select / alter database\"></a>Create / delete / select / alter database</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE [IF NOT EXISTS] mabase [CHARACTER SET charset] [COLLATE collation]</span><br><span class=\"line\"> CREATE DATABASE mabase CHARACTER SET utf8</span><br><span class=\"line\"> DROP DATABASE mabase</span><br><span class=\"line\"> USE mabase</span><br><span class=\"line\"></span><br><span class=\"line\"> ALTER DATABASE mabase CHARACTER SET utf8</span><br></pre></td></tr></table></figure>\n<h3 id=\"Create-table\"><a href=\"#Create-table\" class=\"headerlink\" title=\"Create table\"></a>Create table</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE table (field1 type1, field2 type2, ...)</span><br><span class=\"line\"> CREATE TABLE table (field1 type1 unsigned not null auto_increment, field2 type2, ...)</span><br><span class=\"line\"> CREATE TABLE table (field1 type1, field2 type2, ..., INDEX (field))</span><br><span class=\"line\"> CREATE TABLE table (field1 type1, field2 type2, ..., PRIMARY KEY (field1))</span><br><span class=\"line\"> CREATE TABLE table (field1 type1, field2 type2, ..., PRIMARY KEY (field1, field2))</span><br><span class=\"line\"> CREATE TABLE table1 (fk_field1 type1, field2 type2, ...,</span><br><span class=\"line\">   FOREIGN KEY (fk_field1) REFERENCES table2 (t2_fieldA)</span><br><span class=\"line\">     [ON UPDATE] [CASCADE|SET NULL|RESTRICT]</span><br><span class=\"line\">     [ON DELETE] [CASCADE|SET NULL|RESTRICT])</span><br><span class=\"line\"> CREATE TABLE table1 (fk_field1 type1, fk_field2 type2, ...,</span><br><span class=\"line\">   FOREIGN KEY (fk_field1, fk_field2) REFERENCES table2 (t2_fieldA, t2_fieldB))</span><br><span class=\"line\"> CREATE TABLE table IF NOT EXISTS (...)</span><br><span class=\"line\"></span><br><span class=\"line\"> CREATE TABLE new_tbl_name LIKE tbl_name</span><br><span class=\"line\">   [SELECT ... FROM tbl_name ...]</span><br><span class=\"line\"></span><br><span class=\"line\"> CREATE TEMPORARY TABLE table (...)</span><br><span class=\"line\"></span><br><span class=\"line\"> CREATE table new_table_name as SELECT [ *|column1, column2 ] FROM table_name</span><br></pre></td></tr></table></figure>\n<h3 id=\"delete-table\"><a href=\"#delete-table\" class=\"headerlink\" title=\"delete table\"></a>delete table</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP TABLE table</span><br><span class=\"line\"> DROP TABLE IF EXISTS table</span><br><span class=\"line\"> DROP TABLE table1, table2, ...</span><br><span class=\"line\"> DROP TEMPORARY TABLE table</span><br></pre></td></tr></table></figure>\n<h3 id=\"modify-table\"><a href=\"#modify-table\" class=\"headerlink\" title=\"modify table\"></a>modify table</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ALTER TABLE table MODIFY field1 type1 </span><br><span class=\"line\"> ALTER TABLE table MODIFY field1 type1 NOT NULL ... </span><br><span class=\"line\"> ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1</span><br><span class=\"line\"> ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 NOT NULL ...</span><br><span class=\"line\"> ALTER TABLE table ALTER field1 SET DEFAULT ...</span><br><span class=\"line\"> ALTER TABLE table ALTER field1 DROP DEFAULT</span><br><span class=\"line\"> ALTER TABLE table ADD new_name_field1 type1</span><br><span class=\"line\"> ALTER TABLE table ADD new_name_field1 type1 FIRST</span><br><span class=\"line\"> ALTER TABLE table ADD new_name_field1 type1 AFTER another_field</span><br><span class=\"line\"> ALTER TABLE table DROP field1</span><br><span class=\"line\"> ALTER TABLE table ADD INDEX (field);</span><br><span class=\"line\"> ALTER TABLE table ADD PRIMARY KEY (field);</span><br><span class=\"line\"></span><br><span class=\"line\"> -- Change field order:</span><br><span class=\"line\"> ALTER TABLE table MODIFY field1 type1 FIRST</span><br><span class=\"line\"> ALTER TABLE table MODIFY field1 type1 AFTER another_field</span><br><span class=\"line\"> ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 FIRST</span><br><span class=\"line\"> ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 AFTER another_field</span><br><span class=\"line\"></span><br><span class=\"line\"> ALTER TABLE old_name RENAME new_name;</span><br><span class=\"line\">Keys</span><br><span class=\"line\"> CREATE TABLE table (..., PRIMARY KEY (field1, field2))</span><br><span class=\"line\"> CREATE TABLE table (..., FOREIGN KEY (field1, field2) REFERENCES table2 (t2_field1, t2_field2))</span><br><span class=\"line\"> ALTER TABLE table ADD PRIMARY KEY (field);</span><br><span class=\"line\"> ALTER TABLE table ADD CONSTRAINT constraint_name PRIMARY KEY (field, field2);</span><br></pre></td></tr></table></figure>\n<h3 id=\"create-modify-drop-view\"><a href=\"#create-modify-drop-view\" class=\"headerlink\" title=\"create/modify/drop view\"></a>create/modify/drop view</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE VIEW view AS SELECT ... FROM table WHERE ...</span><br></pre></td></tr></table></figure>\n<h3 id=\"Privileges\"><a href=\"#Privileges\" class=\"headerlink\" title=\"Privileges\"></a>Privileges</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE USER &apos;user&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\"> GRANT ALL PRIVILEGES ON base.* TO &apos;user&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos;;</span><br><span class=\"line\"> GRANT SELECT, INSERT, DELETE ON base.* TO &apos;user&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos;;</span><br><span class=\"line\"> REVOKE ALL PRIVILEGES ON base.* FROM &apos;user&apos;@&apos;host&apos;; -- one permission only</span><br><span class=\"line\"> REVOKE ALL PRIVILEGES, GRANT OPTION FROM &apos;user&apos;@&apos;host&apos;; -- all permissions</span><br><span class=\"line\"></span><br><span class=\"line\"> SET PASSWORD = PASSWORD(&apos;new_pass&apos;)</span><br><span class=\"line\"> SET PASSWORD FOR &apos;user&apos;@&apos;host&apos; = PASSWORD(&apos;new_pass&apos;)</span><br><span class=\"line\"> SET PASSWORD = OLD_PASSWORD(&apos;new_pass&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\"> DROP USER &apos;user&apos;@&apos;host&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Main-data-types\"><a href=\"#Main-data-types\" class=\"headerlink\" title=\"Main data types\"></a>Main data types</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TINYINT   (1o: -127+128) </span><br><span class=\"line\">SMALLINT  (2o: +-65 000)</span><br><span class=\"line\">MEDIUMINT (3o: +-16 000 000) </span><br><span class=\"line\">INT       (4o: +-2 000 000 000)</span><br><span class=\"line\">BIGINT    (8o: +-9.10^18)</span><br><span class=\"line\">  Precise interval: -(2^(8*N-1)) -&gt; (2^8*N)-1</span><br><span class=\"line\">  /!\\ INT(2) = &quot;2 digits displayed&quot; -- NOT &quot;number with 2 digits max&quot;</span><br><span class=\"line\">INT NOT NULL auto_increment PRIMARY KEY -- auto-counter for PK</span><br><span class=\"line\">FLOAT(M,D) DOUBLE(M,D) FLOAT(D=0-&gt;53) </span><br><span class=\"line\">  /!\\ 8,3 -&gt; 12345,678 -- NOT 12345678,123!</span><br><span class=\"line\">TIME (HH:MM) YEAR (AAAA) DATE (AAAA-MM-JJ) DATETIME (AAAA-MM-JJ HH:MM; années 1000-&gt;9999)</span><br><span class=\"line\">  TIMESTAMP (like DATETIME, but 1970-&gt;2038, compatible with Unix)</span><br><span class=\"line\">VARCHAR (single-line; explicit size)  </span><br><span class=\"line\">TEXT (multi-lines; max size=65535) </span><br><span class=\"line\">BLOB (binary; max size=65535)</span><br><span class=\"line\">  Variants for TEXT&amp;BLOB: TINY (max=255) MEDIUM (max=~16000) LONG (max=4Go)</span><br><span class=\"line\"> Ex: VARCHAR(32), TINYTEXT, LONGBLOB, MEDIUMTEXT</span><br><span class=\"line\">ENUM (&apos;value1&apos;, &apos;value2&apos;, ...) -- (default NULL, or &apos;&apos; if NOT NULL)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Forgot-root-password\"><a href=\"#Forgot-root-password\" class=\"headerlink\" title=\"Forgot root password?\"></a>Forgot root password?</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ /etc/init.d/mysql stop</span><br><span class=\"line\">$ mysqld_safe --skip-grant-tables &amp;</span><br><span class=\"line\">$ mysql # on another terminal</span><br><span class=\"line\">mysql &gt; UPDATE mysql.user SET password=PASSWORD(&apos;nouveau&apos;) WHERE user=&apos;root&apos;;</span><br><span class=\"line\">## Kill mysqld_safe from the terminal, using Control + \\</span><br><span class=\"line\">$ /etc/init.d/mysql start</span><br></pre></td></tr></table></figure>\n<h3 id=\"Repair-tables-after-unclean-shutdown\"><a href=\"#Repair-tables-after-unclean-shutdown\" class=\"headerlink\" title=\"Repair tables after unclean shutdown\"></a>Repair tables after unclean shutdown</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqlcheck --all-databases</span><br><span class=\"line\">mysqlcheck --all-databases --fast</span><br></pre></td></tr></table></figure>\n<h3 id=\"Loading-data\"><a href=\"#Loading-data\" class=\"headerlink\" title=\"Loading data\"></a>Loading data</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SOURCE input_file</span><br><span class=\"line\">mysql -uroot database &lt; filename-20120201.sql</span><br><span class=\"line\"></span><br><span class=\"line\">cat filename-20120201.sql | mysql database</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -u [username] -p [database] &gt; data_backup.sql;</span><br><span class=\"line\"></span><br><span class=\"line\">-- Load tab­delimited data into a table (Use \\n f or NULL)</span><br><span class=\"line\">LOAD DATA LOCAL INFILE \"infile.txt\" INTO TABLE table_name;</span><br></pre></td></tr></table></figure>"},{"title":"npm-script","date":"2016-11-23T07:07:28.000Z","updated":"2016-11-23T07:07:28.000Z","_content":"\n# npm scripts 使用指南\n\nNode 开发离不开 npm，而脚本功能是 npm 最强大、最常用的功能之一。\n\n本文介绍如何使用 npm 脚本（npm scripts）。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2016/bg2016101101.jpg)\n\n<!-- more -->\n## 一、什么是 npm 脚本？\n\t\nnpm 允许在`package.json`文件里面，使用`scripts`字段定义脚本命令。\n\n```javascript\n{\n  // ...\n  \"scripts\": {\n    \"build\": \"node build.js\"\n  }\n}\n```\n\n上面代码是`package.json`文件的一个片段，里面的`scripts`字段是一个对象。它的每一个属性，对应一段脚本。比如，`build`命令对应的脚本是`node build.js`。\n\n命令行下使用`npm run`命令，就可以执行这段脚本。\n\n```bash\n$ npm run build\n# 等同于执行\n$ node build.js\n```\n\n这些定义在`package.json`里面的脚本，就称为 npm 脚本。它的优点很多。\n\n> - 项目的相关脚本，可以集中在一个地方。\n- 不同项目的脚本命令，只要功能相同，就可以有同样的对外接口。用户不需要知道怎么测试你的项目，只要运行`npm run test`即可。\n- 可以利用 npm 提供的很多辅助功能。\n\n查看当前项目的所有 npm 脚本命令，可以使用不带任何参数的`npm run`命令。\n\n```bash\n$ npm run\n```\n\n## 二、原理\n\nnpm 脚本的原理非常简单。每当执行`npm run`，就会自动新建一个 Shell，在这个 Shell 里面执行指定的脚本命令。因此，只要是 Shell（一般是 Bash）可以运行的命令，就可以写在 npm 脚本里面。\n\n比较特别的是，`npm run`新建的这个 Shell，会将当前目录的`node_modules/.bin`子目录加入`PATH`变量，执行结束后，再将`PATH`变量恢复原样。\n\n这意味着，当前目录的`node_modules/.bin`子目录里面的所有脚本，都可以直接用脚本名调用，而不必加上路径。比如，当前项目的依赖里面有 Mocha，只要直接写`mocha test`就可以了。\n\n```javascript\n\"test\": \"mocha test\"\n```\n\n而不用写成下面这样。\n\n```javascript\n\"test\": \"./node_modules/.bin/mocha test\"\n```\n\n由于 npm 脚本的唯一要求就是可以在 Shell 执行，因此它不一定是 Node 脚本，任何可执行文件都可以写在里面。\n\nnpm 脚本的退出码，也遵守 Shell 脚本规则。如果退出码不是`0`，npm 就认为这个脚本执行失败。\n\n## 三、通配符\n\n由于 npm 脚本就是 Shell 脚本，因为可以使用 Shell 通配符。\n\n```javascript\n\"lint\": \"jshint *.js\"\n\"lint\": \"jshint **/*.js\"\n```\n\n上面代码中，`*`表示任意文件名，`**`表示任意一层子目录。\n\n如果要将通配符传入原始命令，防止被 Shell 转义，要将星号转义。\n\n```javascript\n\"test\": \"tap test/\\*.js\"\n```\n\n## 四、传参\n\n向 npm 脚本传入参数，要使用`--`标明。\n\n```javascript\n\"lint\": \"jshint **.js\"\n```\n\n向上面的`npm run lint`命令传入参数，必须写成下面这样。\n\n```bash\n$ npm run lint --  --reporter checkstyle > checkstyle.xml\n```\n\n也可以在`package.json`里面再封装一个命令。\n\n```javascript\n\"lint\": \"jshint **.js\",\n\"lint:checkstyle\": \"npm run lint -- --reporter checkstyle > checkstyle.xml\"\n```\n\n## 五、执行顺序\n\n如果 npm 脚本里面需要执行多个任务，那么需要明确它们的执行顺序。\n\n如果是并行执行（即同时的平行执行），可以使用`&`符号。\n\n```bash\n$ npm run script1.js & npm run script2.js\n```\n\n如果是继发执行（即只有前一个任务成功，才执行下一个任务），可以使用`&&`符号。\n\n```bash\n$ npm run script1.js && npm run script2.js\n```\n\n这两个符号是 Bash 的功能。此外，还可以使用 node 的任务管理模块：[script-runner](https://github.com/paulpflug/script-runner)、[npm-run-all](https://github.com/mysticatea/npm-run-all)、[redrun](https://github.com/coderaiser/redrun)。\n\n## 六、默认值\n\n一般来说，npm 脚本由用户提供。但是，npm 对两个脚本提供了默认值。也就是说，这两个脚本不用定义，就可以直接使用。\n\n```javascript\n\"start\": \"node server.js\"，\n\"install\": \"node-gyp rebuild\"\n```\n\n上面代码中，`npm run start`的默认值是`node server.js`，前提是项目根目录下有`server.js`这个脚本；`npm run install`的默认值是`node-gyp rebuild`，前提是项目根目录下有`binding.gyp`文件。\n\n## 七、钩子\n\nnpm 脚本有`pre`和`post`两个钩子。举例来说，`build`脚本命令的钩子就是`prebuild`和`postbuild`。\n\n```javascript\n\"prebuild\": \"echo I run before the build script\",\n\"build\": \"cross-env NODE_ENV=production webpack\",\n\"postbuild\": \"echo I run after the build script\"\n```\n\n用户执行`npm run build`的时候，会自动按照下面的顺序执行。\n\n```bash\nnpm run prebuild && npm run build && npm run postbuild\n```\n\n因此，可以在这两个钩子里面，完成一些准备工作和清理工作。下面是一个例子。\n\n```javascript\n\"clean\": \"rimraf ./dist && mkdir dist\",\n\"prebuild\": \"npm run clean\",\n\"build\": \"cross-env NODE_ENV=production webpack\"\n```\n\nnpm 默认提供下面这些钩子。\n\n> - prepublish，postpublish\n- preinstall，postinstall\n- preuninstall，postuninstall\n- preversion，postversion\n- pretest，posttest\n- prestop，poststop\n- prestart，poststart\n- prerestart，postrestart\n\n自定义的脚本命令也可以加上`pre`和`post`钩子。比如，`myscript`这个脚本命令，也有`premyscript`和`postmyscript`钩子。不过，双重的`pre`和`post`无效，比如`prepretest`和`postposttest`是无效的。\n\nnpm 提供一个`npm_lifecycle_event`变量，返回当前正在运行的脚本名称，比如`pretest`、`test`、`posttest`等等。所以，可以利用这个变量，在同一个脚本文件里面，为不同的`npm scripts`命令编写代码。请看下面的例子。\n\n```javascript\nconst TARGET = process.env.npm_lifecycle_event;\n\nif (TARGET === 'test') {\n  console.log(`Running the test task!`);\n}\n\nif (TARGET === 'pretest') {\n  console.log(`Running the pretest task!`);\n}\n\nif (TARGET === 'posttest') {\n  console.log(`Running the posttest task!`);\n}\n```\n\n注意，`prepublish`这个钩子不仅会在`npm publish`命令之前运行，还会在`npm install`（不带任何参数）命令之前运行。这种行为很容易让用户感到困惑，所以 npm 4 引入了一个新的钩子`prepare`，行为等同于`prepublish`，而从 npm 5 开始，`prepublish`将只在`npm publish`命令之前运行。\n\n## 八、简写形式\n\n四个常用的 npm 脚本有简写形式。\n\n> - `npm start`是`npm run start`\n- `npm stop`是`npm run stop`的简写\n- `npm test`是`npm run test`的简写\n- `npm restart`是`npm run stop && npm run restart && npm run start`的简写\n\n`npm start`、`npm stop`和`npm restart`都比较好理解，而`npm restart`是一个复合命令，实际上会执行三个脚本命令：`stop`、`restart`、`start`。具体的执行顺序如下。\n\n> 1. prerestart\n1. prestop\n1. stop\n1. poststop\n1. restart\n1. prestart\n1. start\n1. poststart\n1. postrestart \n\n## 九、变量\n\nnpm 脚本有一个非常强大的功能，就是可以使用 npm 的内部变量。\n\n首先，通过`npm_package_`前缀，npm 脚本可以拿到`package.json`里面的字段。比如，下面是一个`package.json`。\n\n```javascript\n{\n  \"name\": \"foo\", \n  \"version\": \"1.2.5\",\n  \"scripts\": {\n    \"view\": \"node view.js\"\n  }\n}\n```\n\n那么，变量`npm_package_name`返回`foo`，变量`npm_package_version`返回`1.2.5`。\n\n```javascript\n// view.js\nconsole.log(process.env.npm_package_name); // foo\nconsole.log(process.env.npm_package_version); // 1.2.5\n```\n\n上面代码中，我们通过环境变量`process.env`对象，拿到`package.json`的字段值。如果是 Bash 脚本，可以用`$npm_package_name`和`$npm_package_version`取到这两个值。\n\n`npm_package_`前缀也支持嵌套的`package.json`字段。\n\n```javascript\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"xxx\"\n  },\n  scripts: {\n    \"view\": \"echo $npm_package_repository_type\"\n  }\n```\n\n上面代码中，`repository`字段的`type`属性，可以通过`npm_package_repository_type`取到。\n\n下面是另外一个例子。\n\n```javascript\n\"scripts\": {\n  \"install\": \"foo.js\"\n}\n```\n\n上面代码中，`npm_package_scripts_install`变量的值等于`foo.js`。\n\n然后，npm 脚本还可以通过`npm_config_`前缀，拿到 npm 的配置变量，即`npm config get xxx`命令返回的值。比如，当前模块的发行标签，可以通过`npm_config_tag`取到。\n\n```javascript\n\"view\": \"echo $npm_config_tag\",\n```\n\n注意，`package.json`里面的`config`对象，可以被环境变量覆盖。\n\n```javascript\n{ \n  \"name\" : \"foo\",\n  \"config\" : { \"port\" : \"8080\" },\n  \"scripts\" : { \"start\" : \"node server.js\" }\n}\n```\n\n上面代码中，`npm_package_config_port`变量返回的是`8080`。这个值可以用下面的方法覆盖。\n\n```bash\n$ npm config set foo:port 80\n```\n\n最后，`env`命令可以列出所有环境变量。\n\n```javascript\n\"env\": \"env\"\n```\n\n## 十、常用脚本示例\n\n```javascript\n// 删除目录\n\"clean\": \"rimraf dist/*\",\n\n// 本地搭建一个 HTTP 服务\n\"serve\": \"http-server -p 9090 dist/\",\n\n// 打开浏览器\n\"open:dev\": \"opener http://localhost:9090\",\n\n// 实时刷新\n \"livereload\": \"live-reload --port 9091 dist/\",\n\n// 构建 HTML 文件\n\"build:html\": \"jade index.jade > dist/index.html\",\n\n// 只要 CSS 文件有变动，就重新执行构建\n\"watch:css\": \"watch 'npm run build:css' assets/styles/\",\n\n// 只要 HTML 文件有变动，就重新执行构建\n\"watch:html\": \"watch 'npm run build:html' assets/html\",\n\n// 部署到 Amazon S3\n\"deploy:prod\": \"s3-cli sync ./dist/ s3://example-com/prod-site/\",\n\n// 构建 favicon\n\"build:favicon\": \"node scripts/favicon.js\",\n```\n\n## 十一、参考链接\n\n- [How to Use npm as a Build Tool](https://www.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/), by Keith Cirkel\n- [Awesome npm scripts](https://github.com/RyanZim/awesome-npm-scripts#articles), by Ryan Zimmerman\n","source":"_posts/2016/npm-script.md","raw":"---\ntitle: npm-script\ndate: 2016-11-23 15:07:28\nupdated: 2016-11-23 15:07:28\ntags:\n- js\ncategories:\n---\n\n# npm scripts 使用指南\n\nNode 开发离不开 npm，而脚本功能是 npm 最强大、最常用的功能之一。\n\n本文介绍如何使用 npm 脚本（npm scripts）。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2016/bg2016101101.jpg)\n\n<!-- more -->\n## 一、什么是 npm 脚本？\n\t\nnpm 允许在`package.json`文件里面，使用`scripts`字段定义脚本命令。\n\n```javascript\n{\n  // ...\n  \"scripts\": {\n    \"build\": \"node build.js\"\n  }\n}\n```\n\n上面代码是`package.json`文件的一个片段，里面的`scripts`字段是一个对象。它的每一个属性，对应一段脚本。比如，`build`命令对应的脚本是`node build.js`。\n\n命令行下使用`npm run`命令，就可以执行这段脚本。\n\n```bash\n$ npm run build\n# 等同于执行\n$ node build.js\n```\n\n这些定义在`package.json`里面的脚本，就称为 npm 脚本。它的优点很多。\n\n> - 项目的相关脚本，可以集中在一个地方。\n- 不同项目的脚本命令，只要功能相同，就可以有同样的对外接口。用户不需要知道怎么测试你的项目，只要运行`npm run test`即可。\n- 可以利用 npm 提供的很多辅助功能。\n\n查看当前项目的所有 npm 脚本命令，可以使用不带任何参数的`npm run`命令。\n\n```bash\n$ npm run\n```\n\n## 二、原理\n\nnpm 脚本的原理非常简单。每当执行`npm run`，就会自动新建一个 Shell，在这个 Shell 里面执行指定的脚本命令。因此，只要是 Shell（一般是 Bash）可以运行的命令，就可以写在 npm 脚本里面。\n\n比较特别的是，`npm run`新建的这个 Shell，会将当前目录的`node_modules/.bin`子目录加入`PATH`变量，执行结束后，再将`PATH`变量恢复原样。\n\n这意味着，当前目录的`node_modules/.bin`子目录里面的所有脚本，都可以直接用脚本名调用，而不必加上路径。比如，当前项目的依赖里面有 Mocha，只要直接写`mocha test`就可以了。\n\n```javascript\n\"test\": \"mocha test\"\n```\n\n而不用写成下面这样。\n\n```javascript\n\"test\": \"./node_modules/.bin/mocha test\"\n```\n\n由于 npm 脚本的唯一要求就是可以在 Shell 执行，因此它不一定是 Node 脚本，任何可执行文件都可以写在里面。\n\nnpm 脚本的退出码，也遵守 Shell 脚本规则。如果退出码不是`0`，npm 就认为这个脚本执行失败。\n\n## 三、通配符\n\n由于 npm 脚本就是 Shell 脚本，因为可以使用 Shell 通配符。\n\n```javascript\n\"lint\": \"jshint *.js\"\n\"lint\": \"jshint **/*.js\"\n```\n\n上面代码中，`*`表示任意文件名，`**`表示任意一层子目录。\n\n如果要将通配符传入原始命令，防止被 Shell 转义，要将星号转义。\n\n```javascript\n\"test\": \"tap test/\\*.js\"\n```\n\n## 四、传参\n\n向 npm 脚本传入参数，要使用`--`标明。\n\n```javascript\n\"lint\": \"jshint **.js\"\n```\n\n向上面的`npm run lint`命令传入参数，必须写成下面这样。\n\n```bash\n$ npm run lint --  --reporter checkstyle > checkstyle.xml\n```\n\n也可以在`package.json`里面再封装一个命令。\n\n```javascript\n\"lint\": \"jshint **.js\",\n\"lint:checkstyle\": \"npm run lint -- --reporter checkstyle > checkstyle.xml\"\n```\n\n## 五、执行顺序\n\n如果 npm 脚本里面需要执行多个任务，那么需要明确它们的执行顺序。\n\n如果是并行执行（即同时的平行执行），可以使用`&`符号。\n\n```bash\n$ npm run script1.js & npm run script2.js\n```\n\n如果是继发执行（即只有前一个任务成功，才执行下一个任务），可以使用`&&`符号。\n\n```bash\n$ npm run script1.js && npm run script2.js\n```\n\n这两个符号是 Bash 的功能。此外，还可以使用 node 的任务管理模块：[script-runner](https://github.com/paulpflug/script-runner)、[npm-run-all](https://github.com/mysticatea/npm-run-all)、[redrun](https://github.com/coderaiser/redrun)。\n\n## 六、默认值\n\n一般来说，npm 脚本由用户提供。但是，npm 对两个脚本提供了默认值。也就是说，这两个脚本不用定义，就可以直接使用。\n\n```javascript\n\"start\": \"node server.js\"，\n\"install\": \"node-gyp rebuild\"\n```\n\n上面代码中，`npm run start`的默认值是`node server.js`，前提是项目根目录下有`server.js`这个脚本；`npm run install`的默认值是`node-gyp rebuild`，前提是项目根目录下有`binding.gyp`文件。\n\n## 七、钩子\n\nnpm 脚本有`pre`和`post`两个钩子。举例来说，`build`脚本命令的钩子就是`prebuild`和`postbuild`。\n\n```javascript\n\"prebuild\": \"echo I run before the build script\",\n\"build\": \"cross-env NODE_ENV=production webpack\",\n\"postbuild\": \"echo I run after the build script\"\n```\n\n用户执行`npm run build`的时候，会自动按照下面的顺序执行。\n\n```bash\nnpm run prebuild && npm run build && npm run postbuild\n```\n\n因此，可以在这两个钩子里面，完成一些准备工作和清理工作。下面是一个例子。\n\n```javascript\n\"clean\": \"rimraf ./dist && mkdir dist\",\n\"prebuild\": \"npm run clean\",\n\"build\": \"cross-env NODE_ENV=production webpack\"\n```\n\nnpm 默认提供下面这些钩子。\n\n> - prepublish，postpublish\n- preinstall，postinstall\n- preuninstall，postuninstall\n- preversion，postversion\n- pretest，posttest\n- prestop，poststop\n- prestart，poststart\n- prerestart，postrestart\n\n自定义的脚本命令也可以加上`pre`和`post`钩子。比如，`myscript`这个脚本命令，也有`premyscript`和`postmyscript`钩子。不过，双重的`pre`和`post`无效，比如`prepretest`和`postposttest`是无效的。\n\nnpm 提供一个`npm_lifecycle_event`变量，返回当前正在运行的脚本名称，比如`pretest`、`test`、`posttest`等等。所以，可以利用这个变量，在同一个脚本文件里面，为不同的`npm scripts`命令编写代码。请看下面的例子。\n\n```javascript\nconst TARGET = process.env.npm_lifecycle_event;\n\nif (TARGET === 'test') {\n  console.log(`Running the test task!`);\n}\n\nif (TARGET === 'pretest') {\n  console.log(`Running the pretest task!`);\n}\n\nif (TARGET === 'posttest') {\n  console.log(`Running the posttest task!`);\n}\n```\n\n注意，`prepublish`这个钩子不仅会在`npm publish`命令之前运行，还会在`npm install`（不带任何参数）命令之前运行。这种行为很容易让用户感到困惑，所以 npm 4 引入了一个新的钩子`prepare`，行为等同于`prepublish`，而从 npm 5 开始，`prepublish`将只在`npm publish`命令之前运行。\n\n## 八、简写形式\n\n四个常用的 npm 脚本有简写形式。\n\n> - `npm start`是`npm run start`\n- `npm stop`是`npm run stop`的简写\n- `npm test`是`npm run test`的简写\n- `npm restart`是`npm run stop && npm run restart && npm run start`的简写\n\n`npm start`、`npm stop`和`npm restart`都比较好理解，而`npm restart`是一个复合命令，实际上会执行三个脚本命令：`stop`、`restart`、`start`。具体的执行顺序如下。\n\n> 1. prerestart\n1. prestop\n1. stop\n1. poststop\n1. restart\n1. prestart\n1. start\n1. poststart\n1. postrestart \n\n## 九、变量\n\nnpm 脚本有一个非常强大的功能，就是可以使用 npm 的内部变量。\n\n首先，通过`npm_package_`前缀，npm 脚本可以拿到`package.json`里面的字段。比如，下面是一个`package.json`。\n\n```javascript\n{\n  \"name\": \"foo\", \n  \"version\": \"1.2.5\",\n  \"scripts\": {\n    \"view\": \"node view.js\"\n  }\n}\n```\n\n那么，变量`npm_package_name`返回`foo`，变量`npm_package_version`返回`1.2.5`。\n\n```javascript\n// view.js\nconsole.log(process.env.npm_package_name); // foo\nconsole.log(process.env.npm_package_version); // 1.2.5\n```\n\n上面代码中，我们通过环境变量`process.env`对象，拿到`package.json`的字段值。如果是 Bash 脚本，可以用`$npm_package_name`和`$npm_package_version`取到这两个值。\n\n`npm_package_`前缀也支持嵌套的`package.json`字段。\n\n```javascript\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"xxx\"\n  },\n  scripts: {\n    \"view\": \"echo $npm_package_repository_type\"\n  }\n```\n\n上面代码中，`repository`字段的`type`属性，可以通过`npm_package_repository_type`取到。\n\n下面是另外一个例子。\n\n```javascript\n\"scripts\": {\n  \"install\": \"foo.js\"\n}\n```\n\n上面代码中，`npm_package_scripts_install`变量的值等于`foo.js`。\n\n然后，npm 脚本还可以通过`npm_config_`前缀，拿到 npm 的配置变量，即`npm config get xxx`命令返回的值。比如，当前模块的发行标签，可以通过`npm_config_tag`取到。\n\n```javascript\n\"view\": \"echo $npm_config_tag\",\n```\n\n注意，`package.json`里面的`config`对象，可以被环境变量覆盖。\n\n```javascript\n{ \n  \"name\" : \"foo\",\n  \"config\" : { \"port\" : \"8080\" },\n  \"scripts\" : { \"start\" : \"node server.js\" }\n}\n```\n\n上面代码中，`npm_package_config_port`变量返回的是`8080`。这个值可以用下面的方法覆盖。\n\n```bash\n$ npm config set foo:port 80\n```\n\n最后，`env`命令可以列出所有环境变量。\n\n```javascript\n\"env\": \"env\"\n```\n\n## 十、常用脚本示例\n\n```javascript\n// 删除目录\n\"clean\": \"rimraf dist/*\",\n\n// 本地搭建一个 HTTP 服务\n\"serve\": \"http-server -p 9090 dist/\",\n\n// 打开浏览器\n\"open:dev\": \"opener http://localhost:9090\",\n\n// 实时刷新\n \"livereload\": \"live-reload --port 9091 dist/\",\n\n// 构建 HTML 文件\n\"build:html\": \"jade index.jade > dist/index.html\",\n\n// 只要 CSS 文件有变动，就重新执行构建\n\"watch:css\": \"watch 'npm run build:css' assets/styles/\",\n\n// 只要 HTML 文件有变动，就重新执行构建\n\"watch:html\": \"watch 'npm run build:html' assets/html\",\n\n// 部署到 Amazon S3\n\"deploy:prod\": \"s3-cli sync ./dist/ s3://example-com/prod-site/\",\n\n// 构建 favicon\n\"build:favicon\": \"node scripts/favicon.js\",\n```\n\n## 十一、参考链接\n\n- [How to Use npm as a Build Tool](https://www.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/), by Keith Cirkel\n- [Awesome npm scripts](https://github.com/RyanZim/awesome-npm-scripts#articles), by Ryan Zimmerman\n","slug":"npm-script","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpa6001twsnngifquupk","content":"<h1 id=\"npm-scripts-使用指南\"><a href=\"#npm-scripts-使用指南\" class=\"headerlink\" title=\"npm scripts 使用指南\"></a>npm scripts 使用指南</h1><p>Node 开发离不开 npm，而脚本功能是 npm 最强大、最常用的功能之一。</p>\n<p>本文介绍如何使用 npm 脚本（npm scripts）。</p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016101101.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h2 id=\"一、什么是-npm-脚本？\"><a href=\"#一、什么是-npm-脚本？\" class=\"headerlink\" title=\"一、什么是 npm 脚本？\"></a>一、什么是 npm 脚本？</h2><p>npm 允许在<code>package.json</code>文件里面，使用<code>scripts</code>字段定义脚本命令。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"node build.js\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码是<code>package.json</code>文件的一个片段，里面的<code>scripts</code>字段是一个对象。它的每一个属性，对应一段脚本。比如，<code>build</code>命令对应的脚本是<code>node build.js</code>。</p>\n<p>命令行下使用<code>npm run</code>命令，就可以执行这段脚本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run build</span><br><span class=\"line\"><span class=\"comment\"># 等同于执行</span></span><br><span class=\"line\">$ node build.js</span><br></pre></td></tr></table></figure>\n<p>这些定义在<code>package.json</code>里面的脚本，就称为 npm 脚本。它的优点很多。</p>\n<blockquote>\n<ul>\n<li>项目的相关脚本，可以集中在一个地方。</li>\n<li>不同项目的脚本命令，只要功能相同，就可以有同样的对外接口。用户不需要知道怎么测试你的项目，只要运行<code>npm run test</code>即可。</li>\n<li>可以利用 npm 提供的很多辅助功能。</li>\n</ul>\n</blockquote>\n<p>查看当前项目的所有 npm 脚本命令，可以使用不带任何参数的<code>npm run</code>命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、原理\"><a href=\"#二、原理\" class=\"headerlink\" title=\"二、原理\"></a>二、原理</h2><p>npm 脚本的原理非常简单。每当执行<code>npm run</code>，就会自动新建一个 Shell，在这个 Shell 里面执行指定的脚本命令。因此，只要是 Shell（一般是 Bash）可以运行的命令，就可以写在 npm 脚本里面。</p>\n<p>比较特别的是，<code>npm run</code>新建的这个 Shell，会将当前目录的<code>node_modules/.bin</code>子目录加入<code>PATH</code>变量，执行结束后，再将<code>PATH</code>变量恢复原样。</p>\n<p>这意味着，当前目录的<code>node_modules/.bin</code>子目录里面的所有脚本，都可以直接用脚本名调用，而不必加上路径。比如，当前项目的依赖里面有 Mocha，只要直接写<code>mocha test</code>就可以了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"test\"</span>: <span class=\"string\">\"mocha test\"</span></span><br></pre></td></tr></table></figure>\n<p>而不用写成下面这样。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"test\"</span>: <span class=\"string\">\"./node_modules/.bin/mocha test\"</span></span><br></pre></td></tr></table></figure>\n<p>由于 npm 脚本的唯一要求就是可以在 Shell 执行，因此它不一定是 Node 脚本，任何可执行文件都可以写在里面。</p>\n<p>npm 脚本的退出码，也遵守 Shell 脚本规则。如果退出码不是<code>0</code>，npm 就认为这个脚本执行失败。</p>\n<h2 id=\"三、通配符\"><a href=\"#三、通配符\" class=\"headerlink\" title=\"三、通配符\"></a>三、通配符</h2><p>由于 npm 脚本就是 Shell 脚本，因为可以使用 Shell 通配符。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"lint\"</span>: <span class=\"string\">\"jshint *.js\"</span></span><br><span class=\"line\"><span class=\"string\">\"lint\"</span>: <span class=\"string\">\"jshint **/*.js\"</span></span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>*</code>表示任意文件名，<code>**</code>表示任意一层子目录。</p>\n<p>如果要将通配符传入原始命令，防止被 Shell 转义，要将星号转义。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"test\"</span>: <span class=\"string\">\"tap test/\\*.js\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"四、传参\"><a href=\"#四、传参\" class=\"headerlink\" title=\"四、传参\"></a>四、传参</h2><p>向 npm 脚本传入参数，要使用<code>--</code>标明。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"lint\"</span>: <span class=\"string\">\"jshint **.js\"</span></span><br></pre></td></tr></table></figure>\n<p>向上面的<code>npm run lint</code>命令传入参数，必须写成下面这样。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run lint --  --reporter checkstyle &gt; checkstyle.xml</span><br></pre></td></tr></table></figure>\n<p>也可以在<code>package.json</code>里面再封装一个命令。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"lint\"</span>: <span class=\"string\">\"jshint **.js\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"lint:checkstyle\"</span>: <span class=\"string\">\"npm run lint -- --reporter checkstyle &gt; checkstyle.xml\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"五、执行顺序\"><a href=\"#五、执行顺序\" class=\"headerlink\" title=\"五、执行顺序\"></a>五、执行顺序</h2><p>如果 npm 脚本里面需要执行多个任务，那么需要明确它们的执行顺序。</p>\n<p>如果是并行执行（即同时的平行执行），可以使用<code>&amp;</code>符号。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run script1.js &amp; npm run script2.js</span><br></pre></td></tr></table></figure>\n<p>如果是继发执行（即只有前一个任务成功，才执行下一个任务），可以使用<code>&amp;&amp;</code>符号。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run script1.js &amp;&amp; npm run script2.js</span><br></pre></td></tr></table></figure>\n<p>这两个符号是 Bash 的功能。此外，还可以使用 node 的任务管理模块：<a href=\"https://github.com/paulpflug/script-runner\" target=\"_blank\" rel=\"external\">script-runner</a>、<a href=\"https://github.com/mysticatea/npm-run-all\" target=\"_blank\" rel=\"external\">npm-run-all</a>、<a href=\"https://github.com/coderaiser/redrun\" target=\"_blank\" rel=\"external\">redrun</a>。</p>\n<h2 id=\"六、默认值\"><a href=\"#六、默认值\" class=\"headerlink\" title=\"六、默认值\"></a>六、默认值</h2><p>一般来说，npm 脚本由用户提供。但是，npm 对两个脚本提供了默认值。也就是说，这两个脚本不用定义，就可以直接使用。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"start\"</span>: <span class=\"string\">\"node server.js\"</span>，</span><br><span class=\"line\"><span class=\"string\">\"install\"</span>: <span class=\"string\">\"node-gyp rebuild\"</span></span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>npm run start</code>的默认值是<code>node server.js</code>，前提是项目根目录下有<code>server.js</code>这个脚本；<code>npm run install</code>的默认值是<code>node-gyp rebuild</code>，前提是项目根目录下有<code>binding.gyp</code>文件。</p>\n<h2 id=\"七、钩子\"><a href=\"#七、钩子\" class=\"headerlink\" title=\"七、钩子\"></a>七、钩子</h2><p>npm 脚本有<code>pre</code>和<code>post</code>两个钩子。举例来说，<code>build</code>脚本命令的钩子就是<code>prebuild</code>和<code>postbuild</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"prebuild\"</span>: <span class=\"string\">\"echo I run before the build script\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"build\"</span>: <span class=\"string\">\"cross-env NODE_ENV=production webpack\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"postbuild\"</span>: <span class=\"string\">\"echo I run after the build script\"</span></span><br></pre></td></tr></table></figure>\n<p>用户执行<code>npm run build</code>的时候，会自动按照下面的顺序执行。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run prebuild &amp;&amp; npm run build &amp;&amp; npm run postbuild</span><br></pre></td></tr></table></figure>\n<p>因此，可以在这两个钩子里面，完成一些准备工作和清理工作。下面是一个例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"clean\"</span>: <span class=\"string\">\"rimraf ./dist &amp;&amp; mkdir dist\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"prebuild\"</span>: <span class=\"string\">\"npm run clean\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"build\"</span>: <span class=\"string\">\"cross-env NODE_ENV=production webpack\"</span></span><br></pre></td></tr></table></figure>\n<p>npm 默认提供下面这些钩子。</p>\n<blockquote>\n<ul>\n<li>prepublish，postpublish</li>\n<li>preinstall，postinstall</li>\n<li>preuninstall，postuninstall</li>\n<li>preversion，postversion</li>\n<li>pretest，posttest</li>\n<li>prestop，poststop</li>\n<li>prestart，poststart</li>\n<li>prerestart，postrestart</li>\n</ul>\n</blockquote>\n<p>自定义的脚本命令也可以加上<code>pre</code>和<code>post</code>钩子。比如，<code>myscript</code>这个脚本命令，也有<code>premyscript</code>和<code>postmyscript</code>钩子。不过，双重的<code>pre</code>和<code>post</code>无效，比如<code>prepretest</code>和<code>postposttest</code>是无效的。</p>\n<p>npm 提供一个<code>npm_lifecycle_event</code>变量，返回当前正在运行的脚本名称，比如<code>pretest</code>、<code>test</code>、<code>posttest</code>等等。所以，可以利用这个变量，在同一个脚本文件里面，为不同的<code>npm scripts</code>命令编写代码。请看下面的例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> TARGET = process.env.npm_lifecycle_event;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (TARGET === <span class=\"string\">'test'</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Running the test task!`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (TARGET === <span class=\"string\">'pretest'</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Running the pretest task!`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (TARGET === <span class=\"string\">'posttest'</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Running the posttest task!`</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意，<code>prepublish</code>这个钩子不仅会在<code>npm publish</code>命令之前运行，还会在<code>npm install</code>（不带任何参数）命令之前运行。这种行为很容易让用户感到困惑，所以 npm 4 引入了一个新的钩子<code>prepare</code>，行为等同于<code>prepublish</code>，而从 npm 5 开始，<code>prepublish</code>将只在<code>npm publish</code>命令之前运行。</p>\n<h2 id=\"八、简写形式\"><a href=\"#八、简写形式\" class=\"headerlink\" title=\"八、简写形式\"></a>八、简写形式</h2><p>四个常用的 npm 脚本有简写形式。</p>\n<blockquote>\n<ul>\n<li><code>npm start</code>是<code>npm run start</code></li>\n<li><code>npm stop</code>是<code>npm run stop</code>的简写</li>\n<li><code>npm test</code>是<code>npm run test</code>的简写</li>\n<li><code>npm restart</code>是<code>npm run stop &amp;&amp; npm run restart &amp;&amp; npm run start</code>的简写</li>\n</ul>\n</blockquote>\n<p><code>npm start</code>、<code>npm stop</code>和<code>npm restart</code>都比较好理解，而<code>npm restart</code>是一个复合命令，实际上会执行三个脚本命令：<code>stop</code>、<code>restart</code>、<code>start</code>。具体的执行顺序如下。</p>\n<blockquote>\n<ol>\n<li>prerestart</li>\n<li>prestop</li>\n<li>stop</li>\n<li>poststop</li>\n<li>restart</li>\n<li>prestart</li>\n<li>start</li>\n<li>poststart</li>\n<li>postrestart </li>\n</ol>\n</blockquote>\n<h2 id=\"九、变量\"><a href=\"#九、变量\" class=\"headerlink\" title=\"九、变量\"></a>九、变量</h2><p>npm 脚本有一个非常强大的功能，就是可以使用 npm 的内部变量。</p>\n<p>首先，通过<code>npm_package_</code>前缀，npm 脚本可以拿到<code>package.json</code>里面的字段。比如，下面是一个<code>package.json</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"foo\"</span>, </span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.2.5\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"view\"</span>: <span class=\"string\">\"node view.js\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么，变量<code>npm_package_name</code>返回<code>foo</code>，变量<code>npm_package_version</code>返回<code>1.2.5</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// view.js</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(process.env.npm_package_name); <span class=\"comment\">// foo</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(process.env.npm_package_version); <span class=\"comment\">// 1.2.5</span></span><br></pre></td></tr></table></figure>\n<p>上面代码中，我们通过环境变量<code>process.env</code>对象，拿到<code>package.json</code>的字段值。如果是 Bash 脚本，可以用<code>$npm_package_name</code>和<code>$npm_package_version</code>取到这两个值。</p>\n<p><code>npm_package_</code>前缀也支持嵌套的<code>package.json</code>字段。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"repository\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"type\"</span>: <span class=\"string\">\"git\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"url\"</span>: <span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">scripts: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"view\"</span>: <span class=\"string\">\"echo $npm_package_repository_type\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>repository</code>字段的<code>type</code>属性，可以通过<code>npm_package_repository_type</code>取到。</p>\n<p>下面是另外一个例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"install\"</span>: <span class=\"string\">\"foo.js\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>npm_package_scripts_install</code>变量的值等于<code>foo.js</code>。</p>\n<p>然后，npm 脚本还可以通过<code>npm_config_</code>前缀，拿到 npm 的配置变量，即<code>npm config get xxx</code>命令返回的值。比如，当前模块的发行标签，可以通过<code>npm_config_tag</code>取到。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"view\"</span>: <span class=\"string\">\"echo $npm_config_tag\"</span>,</span><br></pre></td></tr></table></figure>\n<p>注意，<code>package.json</code>里面的<code>config</code>对象，可以被环境变量覆盖。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; </span><br><span class=\"line\">  <span class=\"string\">\"name\"</span> : <span class=\"string\">\"foo\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"config\"</span> : &#123; <span class=\"string\">\"port\"</span> : <span class=\"string\">\"8080\"</span> &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span> : &#123; <span class=\"string\">\"start\"</span> : <span class=\"string\">\"node server.js\"</span> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>npm_package_config_port</code>变量返回的是<code>8080</code>。这个值可以用下面的方法覆盖。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm config <span class=\"built_in\">set</span> foo:port 80</span><br></pre></td></tr></table></figure>\n<p>最后，<code>env</code>命令可以列出所有环境变量。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"env\"</span>: <span class=\"string\">\"env\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"十、常用脚本示例\"><a href=\"#十、常用脚本示例\" class=\"headerlink\" title=\"十、常用脚本示例\"></a>十、常用脚本示例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 删除目录</span></span><br><span class=\"line\"><span class=\"string\">\"clean\"</span>: <span class=\"string\">\"rimraf dist/*\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 本地搭建一个 HTTP 服务</span></span><br><span class=\"line\"><span class=\"string\">\"serve\"</span>: <span class=\"string\">\"http-server -p 9090 dist/\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 打开浏览器</span></span><br><span class=\"line\"><span class=\"string\">\"open:dev\"</span>: <span class=\"string\">\"opener http://localhost:9090\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实时刷新</span></span><br><span class=\"line\"> <span class=\"string\">\"livereload\"</span>: <span class=\"string\">\"live-reload --port 9091 dist/\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 构建 HTML 文件</span></span><br><span class=\"line\"><span class=\"string\">\"build:html\"</span>: <span class=\"string\">\"jade index.jade &gt; dist/index.html\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 只要 CSS 文件有变动，就重新执行构建</span></span><br><span class=\"line\"><span class=\"string\">\"watch:css\"</span>: <span class=\"string\">\"watch 'npm run build:css' assets/styles/\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 只要 HTML 文件有变动，就重新执行构建</span></span><br><span class=\"line\"><span class=\"string\">\"watch:html\"</span>: <span class=\"string\">\"watch 'npm run build:html' assets/html\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 部署到 Amazon S3</span></span><br><span class=\"line\"><span class=\"string\">\"deploy:prod\"</span>: <span class=\"string\">\"s3-cli sync ./dist/ s3://example-com/prod-site/\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 构建 favicon</span></span><br><span class=\"line\"><span class=\"string\">\"build:favicon\"</span>: <span class=\"string\">\"node scripts/favicon.js\"</span>,</span><br></pre></td></tr></table></figure>\n<h2 id=\"十一、参考链接\"><a href=\"#十一、参考链接\" class=\"headerlink\" title=\"十一、参考链接\"></a>十一、参考链接</h2><ul>\n<li><a href=\"https://www.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/\" target=\"_blank\" rel=\"external\">How to Use npm as a Build Tool</a>, by Keith Cirkel</li>\n<li><a href=\"https://github.com/RyanZim/awesome-npm-scripts#articles\" target=\"_blank\" rel=\"external\">Awesome npm scripts</a>, by Ryan Zimmerman</li>\n</ul>\n","excerpt":"<h1 id=\"npm-scripts-使用指南\"><a href=\"#npm-scripts-使用指南\" class=\"headerlink\" title=\"npm scripts 使用指南\"></a>npm scripts 使用指南</h1><p>Node 开发离不开 npm，而脚本功能是 npm 最强大、最常用的功能之一。</p>\n<p>本文介绍如何使用 npm 脚本（npm scripts）。</p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016101101.jpg\" alt=\"\"></p>","more":"<h2 id=\"一、什么是-npm-脚本？\"><a href=\"#一、什么是-npm-脚本？\" class=\"headerlink\" title=\"一、什么是 npm 脚本？\"></a>一、什么是 npm 脚本？</h2><p>npm 允许在<code>package.json</code>文件里面，使用<code>scripts</code>字段定义脚本命令。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"node build.js\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码是<code>package.json</code>文件的一个片段，里面的<code>scripts</code>字段是一个对象。它的每一个属性，对应一段脚本。比如，<code>build</code>命令对应的脚本是<code>node build.js</code>。</p>\n<p>命令行下使用<code>npm run</code>命令，就可以执行这段脚本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run build</span><br><span class=\"line\"><span class=\"comment\"># 等同于执行</span></span><br><span class=\"line\">$ node build.js</span><br></pre></td></tr></table></figure>\n<p>这些定义在<code>package.json</code>里面的脚本，就称为 npm 脚本。它的优点很多。</p>\n<blockquote>\n<ul>\n<li>项目的相关脚本，可以集中在一个地方。</li>\n<li>不同项目的脚本命令，只要功能相同，就可以有同样的对外接口。用户不需要知道怎么测试你的项目，只要运行<code>npm run test</code>即可。</li>\n<li>可以利用 npm 提供的很多辅助功能。</li>\n</ul>\n</blockquote>\n<p>查看当前项目的所有 npm 脚本命令，可以使用不带任何参数的<code>npm run</code>命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、原理\"><a href=\"#二、原理\" class=\"headerlink\" title=\"二、原理\"></a>二、原理</h2><p>npm 脚本的原理非常简单。每当执行<code>npm run</code>，就会自动新建一个 Shell，在这个 Shell 里面执行指定的脚本命令。因此，只要是 Shell（一般是 Bash）可以运行的命令，就可以写在 npm 脚本里面。</p>\n<p>比较特别的是，<code>npm run</code>新建的这个 Shell，会将当前目录的<code>node_modules/.bin</code>子目录加入<code>PATH</code>变量，执行结束后，再将<code>PATH</code>变量恢复原样。</p>\n<p>这意味着，当前目录的<code>node_modules/.bin</code>子目录里面的所有脚本，都可以直接用脚本名调用，而不必加上路径。比如，当前项目的依赖里面有 Mocha，只要直接写<code>mocha test</code>就可以了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"test\"</span>: <span class=\"string\">\"mocha test\"</span></span><br></pre></td></tr></table></figure>\n<p>而不用写成下面这样。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"test\"</span>: <span class=\"string\">\"./node_modules/.bin/mocha test\"</span></span><br></pre></td></tr></table></figure>\n<p>由于 npm 脚本的唯一要求就是可以在 Shell 执行，因此它不一定是 Node 脚本，任何可执行文件都可以写在里面。</p>\n<p>npm 脚本的退出码，也遵守 Shell 脚本规则。如果退出码不是<code>0</code>，npm 就认为这个脚本执行失败。</p>\n<h2 id=\"三、通配符\"><a href=\"#三、通配符\" class=\"headerlink\" title=\"三、通配符\"></a>三、通配符</h2><p>由于 npm 脚本就是 Shell 脚本，因为可以使用 Shell 通配符。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"lint\"</span>: <span class=\"string\">\"jshint *.js\"</span></span><br><span class=\"line\"><span class=\"string\">\"lint\"</span>: <span class=\"string\">\"jshint **/*.js\"</span></span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>*</code>表示任意文件名，<code>**</code>表示任意一层子目录。</p>\n<p>如果要将通配符传入原始命令，防止被 Shell 转义，要将星号转义。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"test\"</span>: <span class=\"string\">\"tap test/\\*.js\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"四、传参\"><a href=\"#四、传参\" class=\"headerlink\" title=\"四、传参\"></a>四、传参</h2><p>向 npm 脚本传入参数，要使用<code>--</code>标明。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"lint\"</span>: <span class=\"string\">\"jshint **.js\"</span></span><br></pre></td></tr></table></figure>\n<p>向上面的<code>npm run lint</code>命令传入参数，必须写成下面这样。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run lint --  --reporter checkstyle &gt; checkstyle.xml</span><br></pre></td></tr></table></figure>\n<p>也可以在<code>package.json</code>里面再封装一个命令。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"lint\"</span>: <span class=\"string\">\"jshint **.js\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"lint:checkstyle\"</span>: <span class=\"string\">\"npm run lint -- --reporter checkstyle &gt; checkstyle.xml\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"五、执行顺序\"><a href=\"#五、执行顺序\" class=\"headerlink\" title=\"五、执行顺序\"></a>五、执行顺序</h2><p>如果 npm 脚本里面需要执行多个任务，那么需要明确它们的执行顺序。</p>\n<p>如果是并行执行（即同时的平行执行），可以使用<code>&amp;</code>符号。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run script1.js &amp; npm run script2.js</span><br></pre></td></tr></table></figure>\n<p>如果是继发执行（即只有前一个任务成功，才执行下一个任务），可以使用<code>&amp;&amp;</code>符号。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run script1.js &amp;&amp; npm run script2.js</span><br></pre></td></tr></table></figure>\n<p>这两个符号是 Bash 的功能。此外，还可以使用 node 的任务管理模块：<a href=\"https://github.com/paulpflug/script-runner\">script-runner</a>、<a href=\"https://github.com/mysticatea/npm-run-all\">npm-run-all</a>、<a href=\"https://github.com/coderaiser/redrun\">redrun</a>。</p>\n<h2 id=\"六、默认值\"><a href=\"#六、默认值\" class=\"headerlink\" title=\"六、默认值\"></a>六、默认值</h2><p>一般来说，npm 脚本由用户提供。但是，npm 对两个脚本提供了默认值。也就是说，这两个脚本不用定义，就可以直接使用。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"start\"</span>: <span class=\"string\">\"node server.js\"</span>，</span><br><span class=\"line\"><span class=\"string\">\"install\"</span>: <span class=\"string\">\"node-gyp rebuild\"</span></span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>npm run start</code>的默认值是<code>node server.js</code>，前提是项目根目录下有<code>server.js</code>这个脚本；<code>npm run install</code>的默认值是<code>node-gyp rebuild</code>，前提是项目根目录下有<code>binding.gyp</code>文件。</p>\n<h2 id=\"七、钩子\"><a href=\"#七、钩子\" class=\"headerlink\" title=\"七、钩子\"></a>七、钩子</h2><p>npm 脚本有<code>pre</code>和<code>post</code>两个钩子。举例来说，<code>build</code>脚本命令的钩子就是<code>prebuild</code>和<code>postbuild</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"prebuild\"</span>: <span class=\"string\">\"echo I run before the build script\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"build\"</span>: <span class=\"string\">\"cross-env NODE_ENV=production webpack\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"postbuild\"</span>: <span class=\"string\">\"echo I run after the build script\"</span></span><br></pre></td></tr></table></figure>\n<p>用户执行<code>npm run build</code>的时候，会自动按照下面的顺序执行。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run prebuild &amp;&amp; npm run build &amp;&amp; npm run postbuild</span><br></pre></td></tr></table></figure>\n<p>因此，可以在这两个钩子里面，完成一些准备工作和清理工作。下面是一个例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"clean\"</span>: <span class=\"string\">\"rimraf ./dist &amp;&amp; mkdir dist\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"prebuild\"</span>: <span class=\"string\">\"npm run clean\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"build\"</span>: <span class=\"string\">\"cross-env NODE_ENV=production webpack\"</span></span><br></pre></td></tr></table></figure>\n<p>npm 默认提供下面这些钩子。</p>\n<blockquote>\n<ul>\n<li>prepublish，postpublish</li>\n<li>preinstall，postinstall</li>\n<li>preuninstall，postuninstall</li>\n<li>preversion，postversion</li>\n<li>pretest，posttest</li>\n<li>prestop，poststop</li>\n<li>prestart，poststart</li>\n<li>prerestart，postrestart</li>\n</ul>\n</blockquote>\n<p>自定义的脚本命令也可以加上<code>pre</code>和<code>post</code>钩子。比如，<code>myscript</code>这个脚本命令，也有<code>premyscript</code>和<code>postmyscript</code>钩子。不过，双重的<code>pre</code>和<code>post</code>无效，比如<code>prepretest</code>和<code>postposttest</code>是无效的。</p>\n<p>npm 提供一个<code>npm_lifecycle_event</code>变量，返回当前正在运行的脚本名称，比如<code>pretest</code>、<code>test</code>、<code>posttest</code>等等。所以，可以利用这个变量，在同一个脚本文件里面，为不同的<code>npm scripts</code>命令编写代码。请看下面的例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> TARGET = process.env.npm_lifecycle_event;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (TARGET === <span class=\"string\">'test'</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Running the test task!`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (TARGET === <span class=\"string\">'pretest'</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Running the pretest task!`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (TARGET === <span class=\"string\">'posttest'</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Running the posttest task!`</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意，<code>prepublish</code>这个钩子不仅会在<code>npm publish</code>命令之前运行，还会在<code>npm install</code>（不带任何参数）命令之前运行。这种行为很容易让用户感到困惑，所以 npm 4 引入了一个新的钩子<code>prepare</code>，行为等同于<code>prepublish</code>，而从 npm 5 开始，<code>prepublish</code>将只在<code>npm publish</code>命令之前运行。</p>\n<h2 id=\"八、简写形式\"><a href=\"#八、简写形式\" class=\"headerlink\" title=\"八、简写形式\"></a>八、简写形式</h2><p>四个常用的 npm 脚本有简写形式。</p>\n<blockquote>\n<ul>\n<li><code>npm start</code>是<code>npm run start</code></li>\n<li><code>npm stop</code>是<code>npm run stop</code>的简写</li>\n<li><code>npm test</code>是<code>npm run test</code>的简写</li>\n<li><code>npm restart</code>是<code>npm run stop &amp;&amp; npm run restart &amp;&amp; npm run start</code>的简写</li>\n</ul>\n</blockquote>\n<p><code>npm start</code>、<code>npm stop</code>和<code>npm restart</code>都比较好理解，而<code>npm restart</code>是一个复合命令，实际上会执行三个脚本命令：<code>stop</code>、<code>restart</code>、<code>start</code>。具体的执行顺序如下。</p>\n<blockquote>\n<ol>\n<li>prerestart</li>\n<li>prestop</li>\n<li>stop</li>\n<li>poststop</li>\n<li>restart</li>\n<li>prestart</li>\n<li>start</li>\n<li>poststart</li>\n<li>postrestart </li>\n</ol>\n</blockquote>\n<h2 id=\"九、变量\"><a href=\"#九、变量\" class=\"headerlink\" title=\"九、变量\"></a>九、变量</h2><p>npm 脚本有一个非常强大的功能，就是可以使用 npm 的内部变量。</p>\n<p>首先，通过<code>npm_package_</code>前缀，npm 脚本可以拿到<code>package.json</code>里面的字段。比如，下面是一个<code>package.json</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"foo\"</span>, </span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.2.5\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"view\"</span>: <span class=\"string\">\"node view.js\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么，变量<code>npm_package_name</code>返回<code>foo</code>，变量<code>npm_package_version</code>返回<code>1.2.5</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// view.js</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(process.env.npm_package_name); <span class=\"comment\">// foo</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(process.env.npm_package_version); <span class=\"comment\">// 1.2.5</span></span><br></pre></td></tr></table></figure>\n<p>上面代码中，我们通过环境变量<code>process.env</code>对象，拿到<code>package.json</code>的字段值。如果是 Bash 脚本，可以用<code>$npm_package_name</code>和<code>$npm_package_version</code>取到这两个值。</p>\n<p><code>npm_package_</code>前缀也支持嵌套的<code>package.json</code>字段。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"repository\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"type\"</span>: <span class=\"string\">\"git\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"url\"</span>: <span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">scripts: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"view\"</span>: <span class=\"string\">\"echo $npm_package_repository_type\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>repository</code>字段的<code>type</code>属性，可以通过<code>npm_package_repository_type</code>取到。</p>\n<p>下面是另外一个例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"install\"</span>: <span class=\"string\">\"foo.js\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>npm_package_scripts_install</code>变量的值等于<code>foo.js</code>。</p>\n<p>然后，npm 脚本还可以通过<code>npm_config_</code>前缀，拿到 npm 的配置变量，即<code>npm config get xxx</code>命令返回的值。比如，当前模块的发行标签，可以通过<code>npm_config_tag</code>取到。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"view\"</span>: <span class=\"string\">\"echo $npm_config_tag\"</span>,</span><br></pre></td></tr></table></figure>\n<p>注意，<code>package.json</code>里面的<code>config</code>对象，可以被环境变量覆盖。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; </span><br><span class=\"line\">  <span class=\"string\">\"name\"</span> : <span class=\"string\">\"foo\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"config\"</span> : &#123; <span class=\"string\">\"port\"</span> : <span class=\"string\">\"8080\"</span> &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span> : &#123; <span class=\"string\">\"start\"</span> : <span class=\"string\">\"node server.js\"</span> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>npm_package_config_port</code>变量返回的是<code>8080</code>。这个值可以用下面的方法覆盖。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm config <span class=\"built_in\">set</span> foo:port 80</span><br></pre></td></tr></table></figure>\n<p>最后，<code>env</code>命令可以列出所有环境变量。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"env\"</span>: <span class=\"string\">\"env\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"十、常用脚本示例\"><a href=\"#十、常用脚本示例\" class=\"headerlink\" title=\"十、常用脚本示例\"></a>十、常用脚本示例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 删除目录</span></span><br><span class=\"line\"><span class=\"string\">\"clean\"</span>: <span class=\"string\">\"rimraf dist/*\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 本地搭建一个 HTTP 服务</span></span><br><span class=\"line\"><span class=\"string\">\"serve\"</span>: <span class=\"string\">\"http-server -p 9090 dist/\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 打开浏览器</span></span><br><span class=\"line\"><span class=\"string\">\"open:dev\"</span>: <span class=\"string\">\"opener http://localhost:9090\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实时刷新</span></span><br><span class=\"line\"> <span class=\"string\">\"livereload\"</span>: <span class=\"string\">\"live-reload --port 9091 dist/\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 构建 HTML 文件</span></span><br><span class=\"line\"><span class=\"string\">\"build:html\"</span>: <span class=\"string\">\"jade index.jade &gt; dist/index.html\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 只要 CSS 文件有变动，就重新执行构建</span></span><br><span class=\"line\"><span class=\"string\">\"watch:css\"</span>: <span class=\"string\">\"watch 'npm run build:css' assets/styles/\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 只要 HTML 文件有变动，就重新执行构建</span></span><br><span class=\"line\"><span class=\"string\">\"watch:html\"</span>: <span class=\"string\">\"watch 'npm run build:html' assets/html\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 部署到 Amazon S3</span></span><br><span class=\"line\"><span class=\"string\">\"deploy:prod\"</span>: <span class=\"string\">\"s3-cli sync ./dist/ s3://example-com/prod-site/\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 构建 favicon</span></span><br><span class=\"line\"><span class=\"string\">\"build:favicon\"</span>: <span class=\"string\">\"node scripts/favicon.js\"</span>,</span><br></pre></td></tr></table></figure>\n<h2 id=\"十一、参考链接\"><a href=\"#十一、参考链接\" class=\"headerlink\" title=\"十一、参考链接\"></a>十一、参考链接</h2><ul>\n<li><a href=\"https://www.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/\">How to Use npm as a Build Tool</a>, by Keith Cirkel</li>\n<li><a href=\"https://github.com/RyanZim/awesome-npm-scripts#articles\">Awesome npm scripts</a>, by Ryan Zimmerman</li>\n</ul>"},{"title":"php-faker","date":"2016-08-19T06:46:49.000Z","updated":"2016-08-19T06:46:49.000Z","_content":"\nFaker 是一个用来生成数据库实例数据的工具。Faker is a PHP library that generates fake data for you. Whether you need to bootstrap your database, create good-looking XML documents, fill-in your persistence to stress test it, or anonymize data taken from a production service, Faker is for you.\n<!--more-->\n### installation\n\n`composer require fzaninotto/faker`\n\n### basic usage\n\n\n\nUse `Faker\\Factory::create()` to create and initialize a faker generator, which can generate data by accessing properties named after the type of data you want.\n\n```php\n<?php\n\nrequire_once '/path/to/Faker/src/autoload.php';\n$faker = Faker\\Factory::create();\necho $faker->name;\necho $faker->address;\necho $faker->text;\necho $faker->email;\n\n```\n\n在`src/Faker/Generator.php` 中狠多种类型可以参考，包括file，image，uuid 各种数据类型。\n\n[GIthub]: https://github.com/fzaninotto/Faker\n\n### 在laravel 中的使用\n\nLaravel artisan 的 tinker 是一个 [REPL (read-eval-print-loop)](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) ，REPL 是指 交互式命令行界面，它可以让你输入一段代码去执行，并把执行结果直接打印到命令行界面里。通过`php artisan tinker`  和faker结合之后，可以直接用来测试。Tinker 是 Laravel 自带的 REPL，基于 [PsySH](http://psysh.org/) 构建而来。同样需要`psysh`的支持。\n\n使用示例如下：\n\n```php\nphp artisan tinker\n//这是是使用faker的工厂模式生成数据，其中App\\User需要在database\\factories\\ModelFactories 文件中提前写好需要设置的数据类型和字段\nfactory(\"App\\User::class\",10)->create(); \n//查询\nAPP\\User::all(); \nApp\\User::count();\n//增加数据\n$user = new App\\User;\n$user->name = \"Wruce Bayne\";\n$user->email = \"iambatman@savegotham.com\";\n$user->save();\n// 删除数据\n$user = App\\User::find(1);\n$user->delete();\n\n// 还可以查看doc帮助\ndoc dd\ndoc app\n  \n// 显示源代码\n show <functionName>\n```\n\n\n","source":"_posts/2016/php-faker.md","raw":"---\ntitle: php-faker \ndate: 2016-08-19 14:46:49\nupdated: 2016-08-19 14:46:49\ntags: php\ncategories:\n---\n\nFaker 是一个用来生成数据库实例数据的工具。Faker is a PHP library that generates fake data for you. Whether you need to bootstrap your database, create good-looking XML documents, fill-in your persistence to stress test it, or anonymize data taken from a production service, Faker is for you.\n<!--more-->\n### installation\n\n`composer require fzaninotto/faker`\n\n### basic usage\n\n\n\nUse `Faker\\Factory::create()` to create and initialize a faker generator, which can generate data by accessing properties named after the type of data you want.\n\n```php\n<?php\n\nrequire_once '/path/to/Faker/src/autoload.php';\n$faker = Faker\\Factory::create();\necho $faker->name;\necho $faker->address;\necho $faker->text;\necho $faker->email;\n\n```\n\n在`src/Faker/Generator.php` 中狠多种类型可以参考，包括file，image，uuid 各种数据类型。\n\n[GIthub]: https://github.com/fzaninotto/Faker\n\n### 在laravel 中的使用\n\nLaravel artisan 的 tinker 是一个 [REPL (read-eval-print-loop)](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) ，REPL 是指 交互式命令行界面，它可以让你输入一段代码去执行，并把执行结果直接打印到命令行界面里。通过`php artisan tinker`  和faker结合之后，可以直接用来测试。Tinker 是 Laravel 自带的 REPL，基于 [PsySH](http://psysh.org/) 构建而来。同样需要`psysh`的支持。\n\n使用示例如下：\n\n```php\nphp artisan tinker\n//这是是使用faker的工厂模式生成数据，其中App\\User需要在database\\factories\\ModelFactories 文件中提前写好需要设置的数据类型和字段\nfactory(\"App\\User::class\",10)->create(); \n//查询\nAPP\\User::all(); \nApp\\User::count();\n//增加数据\n$user = new App\\User;\n$user->name = \"Wruce Bayne\";\n$user->email = \"iambatman@savegotham.com\";\n$user->save();\n// 删除数据\n$user = App\\User::find(1);\n$user->delete();\n\n// 还可以查看doc帮助\ndoc dd\ndoc app\n  \n// 显示源代码\n show <functionName>\n```\n\n\n","slug":"php-faker","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpa6001wwsnndxpbxqco","content":"<p>Faker 是一个用来生成数据库实例数据的工具。Faker is a PHP library that generates fake data for you. Whether you need to bootstrap your database, create good-looking XML documents, fill-in your persistence to stress test it, or anonymize data taken from a production service, Faker is for you.<br><a id=\"more\"></a></p>\n<h3 id=\"installation\"><a href=\"#installation\" class=\"headerlink\" title=\"installation\"></a>installation</h3><p><code>composer require fzaninotto/faker</code></p>\n<h3 id=\"basic-usage\"><a href=\"#basic-usage\" class=\"headerlink\" title=\"basic usage\"></a>basic usage</h3><p>Use <code>Faker\\Factory::create()</code> to create and initialize a faker generator, which can generate data by accessing properties named after the type of data you want.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">require_once</span> <span class=\"string\">'/path/to/Faker/src/autoload.php'</span>;</span><br><span class=\"line\">$faker = Faker\\Factory::create();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $faker-&gt;name;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $faker-&gt;address;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $faker-&gt;text;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $faker-&gt;email;</span><br></pre></td></tr></table></figure>\n<p>在<code>src/Faker/Generator.php</code> 中狠多种类型可以参考，包括file，image，uuid 各种数据类型。</p>\n<h3 id=\"在laravel-中的使用\"><a href=\"#在laravel-中的使用\" class=\"headerlink\" title=\"在laravel 中的使用\"></a>在laravel 中的使用</h3><p>Laravel artisan 的 tinker 是一个 <a href=\"https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop\" target=\"_blank\" rel=\"external\">REPL (read-eval-print-loop)</a> ，REPL 是指 交互式命令行界面，它可以让你输入一段代码去执行，并把执行结果直接打印到命令行界面里。通过<code>php artisan tinker</code>  和faker结合之后，可以直接用来测试。Tinker 是 Laravel 自带的 REPL，基于 <a href=\"http://psysh.org/\" target=\"_blank\" rel=\"external\">PsySH</a> 构建而来。同样需要<code>psysh</code>的支持。</p>\n<p>使用示例如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan tinker</span><br><span class=\"line\"><span class=\"comment\">//这是是使用faker的工厂模式生成数据，其中App\\User需要在database\\factories\\ModelFactories 文件中提前写好需要设置的数据类型和字段</span></span><br><span class=\"line\">factory(<span class=\"string\">\"App\\User::class\"</span>,<span class=\"number\">10</span>)-&gt;create(); </span><br><span class=\"line\"><span class=\"comment\">//查询</span></span><br><span class=\"line\">APP\\User::all(); </span><br><span class=\"line\">App\\User::count();</span><br><span class=\"line\"><span class=\"comment\">//增加数据</span></span><br><span class=\"line\">$user = <span class=\"keyword\">new</span> App\\User;</span><br><span class=\"line\">$user-&gt;name = <span class=\"string\">\"Wruce Bayne\"</span>;</span><br><span class=\"line\">$user-&gt;email = <span class=\"string\">\"iambatman@savegotham.com\"</span>;</span><br><span class=\"line\">$user-&gt;save();</span><br><span class=\"line\"><span class=\"comment\">// 删除数据</span></span><br><span class=\"line\">$user = App\\User::find(<span class=\"number\">1</span>);</span><br><span class=\"line\">$user-&gt;delete();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 还可以查看doc帮助</span></span><br><span class=\"line\">doc dd</span><br><span class=\"line\">doc app</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 显示源代码</span></span><br><span class=\"line\"> show &lt;functionName&gt;</span><br></pre></td></tr></table></figure>\n","excerpt":"<p>Faker 是一个用来生成数据库实例数据的工具。Faker is a PHP library that generates fake data for you. Whether you need to bootstrap your database, create good-looking XML documents, fill-in your persistence to stress test it, or anonymize data taken from a production service, Faker is for you.<br>","more":"</p>\n<h3 id=\"installation\"><a href=\"#installation\" class=\"headerlink\" title=\"installation\"></a>installation</h3><p><code>composer require fzaninotto/faker</code></p>\n<h3 id=\"basic-usage\"><a href=\"#basic-usage\" class=\"headerlink\" title=\"basic usage\"></a>basic usage</h3><p>Use <code>Faker\\Factory::create()</code> to create and initialize a faker generator, which can generate data by accessing properties named after the type of data you want.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">require_once</span> <span class=\"string\">'/path/to/Faker/src/autoload.php'</span>;</span><br><span class=\"line\">$faker = Faker\\Factory::create();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $faker-&gt;name;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $faker-&gt;address;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $faker-&gt;text;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $faker-&gt;email;</span><br></pre></td></tr></table></figure>\n<p>在<code>src/Faker/Generator.php</code> 中狠多种类型可以参考，包括file，image，uuid 各种数据类型。</p>\n<h3 id=\"在laravel-中的使用\"><a href=\"#在laravel-中的使用\" class=\"headerlink\" title=\"在laravel 中的使用\"></a>在laravel 中的使用</h3><p>Laravel artisan 的 tinker 是一个 <a href=\"https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop\">REPL (read-eval-print-loop)</a> ，REPL 是指 交互式命令行界面，它可以让你输入一段代码去执行，并把执行结果直接打印到命令行界面里。通过<code>php artisan tinker</code>  和faker结合之后，可以直接用来测试。Tinker 是 Laravel 自带的 REPL，基于 <a href=\"http://psysh.org/\">PsySH</a> 构建而来。同样需要<code>psysh</code>的支持。</p>\n<p>使用示例如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan tinker</span><br><span class=\"line\"><span class=\"comment\">//这是是使用faker的工厂模式生成数据，其中App\\User需要在database\\factories\\ModelFactories 文件中提前写好需要设置的数据类型和字段</span></span><br><span class=\"line\">factory(<span class=\"string\">\"App\\User::class\"</span>,<span class=\"number\">10</span>)-&gt;create(); </span><br><span class=\"line\"><span class=\"comment\">//查询</span></span><br><span class=\"line\">APP\\User::all(); </span><br><span class=\"line\">App\\User::count();</span><br><span class=\"line\"><span class=\"comment\">//增加数据</span></span><br><span class=\"line\">$user = <span class=\"keyword\">new</span> App\\User;</span><br><span class=\"line\">$user-&gt;name = <span class=\"string\">\"Wruce Bayne\"</span>;</span><br><span class=\"line\">$user-&gt;email = <span class=\"string\">\"iambatman@savegotham.com\"</span>;</span><br><span class=\"line\">$user-&gt;save();</span><br><span class=\"line\"><span class=\"comment\">// 删除数据</span></span><br><span class=\"line\">$user = App\\User::find(<span class=\"number\">1</span>);</span><br><span class=\"line\">$user-&gt;delete();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 还可以查看doc帮助</span></span><br><span class=\"line\">doc dd</span><br><span class=\"line\">doc app</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 显示源代码</span></span><br><span class=\"line\"> show &lt;functionName&gt;</span><br></pre></td></tr></table></figure>"},{"title":"做过那么多计划，为何总是没成功？","date":"2016-07-22T07:48:45.000Z","updated":"2016-07-22T07:48:45.000Z","_content":"![plan](/images/plan/1.png)\n在生活中，我们为了成功，为了达成各式各样的目标 —— 赚更多钱、减肥、变自信 —— 不知来来回回制定过多少次 “完美无缺” 的计划。可最后惨痛的事实摆在眼前：没有几个人能完成计划。更讽刺的是，完成计划和中途放弃的两类人也陷入到两种截然不同的循环模式：前者总能够一次又一次地完成新的计划，能力越来越强，越来越自信；后者也会继续制定计划，但就是接连不断地缴械投降，越来越觉得自己没用，自信心也受到打击。将计划坚持到最后一刻的寥寥无几的人最终成为了大家眼中的成功人士。这样看来，成功的核心要素真的很简单 —— 就是 “坚持”。成功人士的成功轨迹各有不同，但唯一相同的一点便是 “坚持”。\n<!--more-->\n成功人士在生活中的稀缺比例表明，大部分人做不到 ** “坚持”。坚持为什么这么难？是因为在实现目标的过程中诱惑太多了吗？是因为意志力不够坚定吗？是因为懒惰吗？是因为耐心不足吗？ **\n\n我可以肯定地回答你 —— 是。\n\n得到答案的你是否更心急、更绝望了？这么多需要克服的缺点，这辈子要等到何年何月才能学会坚持、才能成功啊！不过这些都是表面问题，试着从今天起，培养自己透过问题表面看本质的能力，反复问自己在实现目标的过程中，抵制不住诱惑、意志力不坚定、懒惰、耐心不够的根本原因是什么？\n\n根本原因就是 ** 你发自内心想要实现这个目标的欲望、动机不够强烈、不够 “致命” 。**\n\n![plan](/images/plan/8.png)\n\n我有个从未谈过恋爱的女性朋友，单身的原因主要是因为过胖。体脂严重超标，几十年来从未瘦过，不过她倒并不是不想瘦 —— 身边朋友的嘲讽她早就受够了，自己也很想瘦下来找个男朋友。但是因为管不住那一张贪吃的嘴，所以无论如何运动，效果也不大，顶多是从一个柔软的胖子晋级成为了一个结实的胖子。\n\n可是忽然有一天，大家见面的时候，她竟然瘦成了一道闪电！我们都惊呆了，这几十年没做到的事怎么突然就做成了？原来是因为医生告诉她，如果再不调整饮食，她就很可能患上糖尿病。医生这一席话把她那一颗怕死的心天天吊在嗓子眼，从此以后拒绝一切高油高盐高糖分的食物，晚上改吃素，每天运动 3 小时，坚持了三个月后整个人瘦了好几圈，直接从 XXL 码跳到了 S 码。比较她减肥的两段历史，目标是相同的，但前者的动力源于爱美之心，后者的动力源于怕死之心。爱美之心拼不过食欲，怕死之心却战胜了一切！\n\n可见，坚持与成功的关键就是拥有发自内心极其强烈的源动力。** 这种源动力本质来说也是一种欲望，它必须比你身上拥有的其他任何欲望都要强烈。** 我的那位女性朋友就是极佳的例子 —— 想要活下去的欲望战胜了多年以来克服不了的食欲与懒惰。\n\n更多情况下，** 实现目标的源动力不会一开始就表现得异常强烈，它需要培养。内心的欲望就像一个小火苗，越为它煽风点火，它就会燃烧得越旺盛。**\n\n![plan](/images/plan/2.png)\n多年来我总能坚持在早上六点钟左右早起读书、晨跑，在大学这种散漫的环境里，很多朋友都深深佩服我这个习惯。其实，刚开始想要养成早起的习惯时，我也是设了十多个闹铃都没能把自己叫醒，后来有几次偶尔起来了，发现早起读书、跑步的感觉还真不赖 —— 身体变得有活力，思维也更加灵活，当我跑完步、看完书、做完护肤、吃完早餐看到室友还在沉睡时，就感觉比别人多出来的这几个小时简直是被我偷来的时光，非常有价值。\n\n早起的每一天我都能感受到自己的进步，明白自己正在拉开与他人的差距。早起带来的这些好处反过来加大了我早起的欲望，有时候我甚至会学着村上春树四点钟起床。渐渐地，早起成了我雷打不动的习惯。其实我心里很明白，让我真正坚持早起的欲望来源于我内在的上进心 —— 不愿甘于平凡过着平庸的生活，想在只有一次的人生中做着自己喜欢的事情还能过上理想的生活，所以我必须很努力去赌一个未来。于是也验证了那句话 —— 每天唤醒我的不是闹钟，而是梦想。\n\n既然对目标发自内心的深切渴望至关重要，那么如何给它加把火，让它战胜其他任何的欲望呢？在本文中我不会详说计划是如何制定的（我想你们可以找到很多计划制定的方法，参考今天推送的第二篇文章《只要是搜索引擎能回答的就不要问别人》），我要强调的是四个非常诚恳、能够有效坚持下去的方法。\n\n![plan](/images/plan/3.png)\n## 一定要给自己的坚持设定奖励回馈机制\n著名的喜剧演员 Jerry Seinfeld 曾说过他成功的秘诀 —— Don't break the chain!（不要让红叉连起来的链条断掉！）。为了创作好的笑话，这位喜剧演员给自己设定了每天都写笑话的规矩。 他买了个巨大的挂历，每天创作完笑话后就用红色记号笔在那一天的方框里画个大大的叉。 坚持一段时间后，日历上就会出现一条红色的链子，接下来要做的，就是 “不要打断它”。\n![plan](/images/plan/4.png)\nJerry Seinfeld 的做法实际上是一种心理反馈激励机制，让自己看到过往付出的努力是很重要的，因为知道自己之前的每一天都做到了，所以今天也一定可以坚持下去。\n\n除了单纯的精神激励，也可以通过物质奖励来刺激精神动力。在你的计划中，大目标是需要被拆解成小目标的，再把小目标拆解到每一天里。当你完成一个阶段性的小目标时，一定要奖励自己，最好是有物质上的奖励。随着阶段性目标的不断递进，每次完成时奖励的额度都应该增大。物质奖励不能与你的目标相冲突，比如说减肥的人不能瘦几斤就奖励自己一顿大餐把肉又给补回来了，相对于 “欺骗餐”，有经验的老司机告诉你：食欲被勾起真的很可怕，不如奖励自己更好的运动装备吧，你会更快完成目标的。 ** 但是请记住一点，在目标没有达成之前绝对不可以提前奖励自己，否则物质激励就完完全全失去了效果。 **\n\n给自己设定奖励机制能够非常有效地促进你的欲望，通过不断地循环激励，你的能力会遵循马太效应 —— 越来越强，从而实现终极目标的欲火也会越来越旺盛。\n## 一次只专注一件事，养成习惯\n我知道每个人想要实现的愿望肯定不只一个，我也很肯定地告诉你，只要足够努力和坚持，你想要的东西都可以得到，但是你不会同时得到所有，你会在不同阶段中分别得到。人的意志力是有限的，一次只够做好一件事，三心二意的结果只能是一事无成。Roy F. Baumeister 教授在《意志力》（Willpower: Rediscovering the Greatest Human Strength）提到培养意志力的方法是：** 一次只做一件事，适时奖励，养成习惯开启 “自动挡”。**\n\nBaumeister 还指出，人在不同事物上的意志力是相互影响的，** 一件事做好了，做好另一件事也会变得容易。** 比如说当你学会把家里整理得井井有条时，就会发现吃饭时不吃不健康的食物、合理控制饮食也变得简单了。\n\n意志力这件事很有趣，大家都认为每天坚持做一件事非常不容易，但是想想刷牙、洗澡、按时吃饭为什么我们能够几十年如一日地做，也没有觉得很困难？更多的时候，我们根本没有想过做这些事需要意志力。 这就是习惯的强大力量，当你把做某件事养成习惯了，它就会自动变成你的日常状态。不过 21天养成一个习惯是不够准确的，21 天只能说是初步培养出了一些习惯的感觉。坚持 21 天晨跑，你会发现第 22 天不晨跑有些难受，只要你接下来几天不晨跑，这个习惯依旧会消失。用我的经验来说，要是你想养成一个新习惯，比如说晨跑，** 至少要一年。不要着急，好习惯需要慢慢养成，你的努力，时间都看得见。 **\n\n## 一定要给自己的坚持设定奖励回馈机制\n![plan](/images/plan/5.png)\n放弃者必败。我们一生中必然会犯许多错误，但这并不是最糟糕的；我们也会遇到很多问题，但最终总会找到解决的办法。可是如果我们半途而废，那么一切就真的无可挽回了。** 如果在追求梦想的路上半途而废，我们就很可能永远终止了自己的梦想。停止追寻梦想的人无异于过着行尸走肉的生活。 **\n\n我们的先人在很早以前就悟出了 “失败与苦难乃成功之母” 的道理：“** 故天将降大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身，行弗乱其所为，所以动心忍性，曾益其所不能。—— 《孟子》 ** ” 。** 你想完成自己的目标，过更好的生活，必须先拥有能承受与这种生活相匹配的抗压能力。生活是公平的，你能够承受住多大的压力、解决多复杂的问题，它就会给你多少的回报 ** 。在实现目标的过程中，** 你遇到的失败只是证明你还未拥有相应的能力，这个时候你唯一要做的就是绝不放弃，然后坚持下去。** 想想打游戏时，当你升级进入下一个难度更高的关卡时，开始时总是挑战失败，多玩几次总结经验、避开之前的那些坑，最后不也顺利进入下一关了吗？不要害怕失败，你遇到失败意味着你已经突破了自己原有的能力局限，你在成长。坚持下去，** 未来在前方已经为你准备好了许多惊喜。**\n![plan](/images/plan/6.png)\n我很建议大家写`“成功日记”`，把自己每天做过的觉得成功的事情写在上面，哪怕是坚持写成功日记这件事也有资格记录在册。经常翻看成功日记，可以培养自己的自信。失败时看看自己做过的成功事迹，进行积极的心理暗示，告诉自己这一次目标达成后我也会把它记录在册。\n\n** 遇到失败一定不要放弃，不要把对目标积累已久的 “欲火” 就这样让它熄灭了，坚持下去一定会成功的。**\n\n## 找到价值观一致的同类\n![plan](/images/plan/7.png)\n当你坚持做了很多事，养成了许多好习惯时，你必然已经成为了一个更好的人。这意味着在之前的环境中，你可能会不合群。千万不要被周围人所影响！** 不要为了合群而去改变自己。**\n\n我的大学不算特别好的学校，但我依然努力学习各种技能、出门参与各项工作实习，可身边出现了这样的声音 “你不过是一个一直想往上爬的人，我们跟你不一样，注定玩不到一块儿”，当时只有十几岁的我听到这种话真的很难过，但我非常庆幸自己当时没有改变自己，去追求和他们 “一样”，去跟他们玩到一起。\n\n现在的我拥有了一个全新的环境，身边的人都是跟我一样的人：他们比我更聪明更努力，我就明白了这种团队与环境才是我想要的，我能够更快地成长、更好地完成自己的目标。燕雀安知鸿鹄之志哉？\n同类也是遵循 `吸引力法则 ` 的，很多人会苦于自己在生活里找不到想要的优秀同类，我只想说** 那是因为你还不够努力、还不够优秀。不断地提升自己，同类会自动被你吸引过来。** 对这个法则有兴趣的朋友可以去阅读一下 `Rhonda Byrne 的《秘密》`。\n\n{% blockquote Jame Saltucher %}\nImprove the internal fire every day. Be persistent internally, then the external success will take of itself !!!\n每天让渴望完成目标的欲火燃烧得更强烈些，你只需要发自内心地去坚持，外界的成功自然而然会到来！！！\n{% endblockquote %}\n\n***\n\n> [转载](http://mp.weixin.qq.com/s?__biz=MzAwMDgyMTA3Mg==&mid=2650055652&idx=1&sn=e69d8252994229b3b3521f1bc80671ce&scene=21#wechat_redirect)\n","source":"_posts/2016/plan.md","raw":"---\ntitle: 做过那么多计划，为何总是没成功？\ndate: 2016-07-22 15:48:45\nupdated: 2016-07-22 15:48:45\ntags:\n- 随笔\ncategories:\n---\n![plan](/images/plan/1.png)\n在生活中，我们为了成功，为了达成各式各样的目标 —— 赚更多钱、减肥、变自信 —— 不知来来回回制定过多少次 “完美无缺” 的计划。可最后惨痛的事实摆在眼前：没有几个人能完成计划。更讽刺的是，完成计划和中途放弃的两类人也陷入到两种截然不同的循环模式：前者总能够一次又一次地完成新的计划，能力越来越强，越来越自信；后者也会继续制定计划，但就是接连不断地缴械投降，越来越觉得自己没用，自信心也受到打击。将计划坚持到最后一刻的寥寥无几的人最终成为了大家眼中的成功人士。这样看来，成功的核心要素真的很简单 —— 就是 “坚持”。成功人士的成功轨迹各有不同，但唯一相同的一点便是 “坚持”。\n<!--more-->\n成功人士在生活中的稀缺比例表明，大部分人做不到 ** “坚持”。坚持为什么这么难？是因为在实现目标的过程中诱惑太多了吗？是因为意志力不够坚定吗？是因为懒惰吗？是因为耐心不足吗？ **\n\n我可以肯定地回答你 —— 是。\n\n得到答案的你是否更心急、更绝望了？这么多需要克服的缺点，这辈子要等到何年何月才能学会坚持、才能成功啊！不过这些都是表面问题，试着从今天起，培养自己透过问题表面看本质的能力，反复问自己在实现目标的过程中，抵制不住诱惑、意志力不坚定、懒惰、耐心不够的根本原因是什么？\n\n根本原因就是 ** 你发自内心想要实现这个目标的欲望、动机不够强烈、不够 “致命” 。**\n\n![plan](/images/plan/8.png)\n\n我有个从未谈过恋爱的女性朋友，单身的原因主要是因为过胖。体脂严重超标，几十年来从未瘦过，不过她倒并不是不想瘦 —— 身边朋友的嘲讽她早就受够了，自己也很想瘦下来找个男朋友。但是因为管不住那一张贪吃的嘴，所以无论如何运动，效果也不大，顶多是从一个柔软的胖子晋级成为了一个结实的胖子。\n\n可是忽然有一天，大家见面的时候，她竟然瘦成了一道闪电！我们都惊呆了，这几十年没做到的事怎么突然就做成了？原来是因为医生告诉她，如果再不调整饮食，她就很可能患上糖尿病。医生这一席话把她那一颗怕死的心天天吊在嗓子眼，从此以后拒绝一切高油高盐高糖分的食物，晚上改吃素，每天运动 3 小时，坚持了三个月后整个人瘦了好几圈，直接从 XXL 码跳到了 S 码。比较她减肥的两段历史，目标是相同的，但前者的动力源于爱美之心，后者的动力源于怕死之心。爱美之心拼不过食欲，怕死之心却战胜了一切！\n\n可见，坚持与成功的关键就是拥有发自内心极其强烈的源动力。** 这种源动力本质来说也是一种欲望，它必须比你身上拥有的其他任何欲望都要强烈。** 我的那位女性朋友就是极佳的例子 —— 想要活下去的欲望战胜了多年以来克服不了的食欲与懒惰。\n\n更多情况下，** 实现目标的源动力不会一开始就表现得异常强烈，它需要培养。内心的欲望就像一个小火苗，越为它煽风点火，它就会燃烧得越旺盛。**\n\n![plan](/images/plan/2.png)\n多年来我总能坚持在早上六点钟左右早起读书、晨跑，在大学这种散漫的环境里，很多朋友都深深佩服我这个习惯。其实，刚开始想要养成早起的习惯时，我也是设了十多个闹铃都没能把自己叫醒，后来有几次偶尔起来了，发现早起读书、跑步的感觉还真不赖 —— 身体变得有活力，思维也更加灵活，当我跑完步、看完书、做完护肤、吃完早餐看到室友还在沉睡时，就感觉比别人多出来的这几个小时简直是被我偷来的时光，非常有价值。\n\n早起的每一天我都能感受到自己的进步，明白自己正在拉开与他人的差距。早起带来的这些好处反过来加大了我早起的欲望，有时候我甚至会学着村上春树四点钟起床。渐渐地，早起成了我雷打不动的习惯。其实我心里很明白，让我真正坚持早起的欲望来源于我内在的上进心 —— 不愿甘于平凡过着平庸的生活，想在只有一次的人生中做着自己喜欢的事情还能过上理想的生活，所以我必须很努力去赌一个未来。于是也验证了那句话 —— 每天唤醒我的不是闹钟，而是梦想。\n\n既然对目标发自内心的深切渴望至关重要，那么如何给它加把火，让它战胜其他任何的欲望呢？在本文中我不会详说计划是如何制定的（我想你们可以找到很多计划制定的方法，参考今天推送的第二篇文章《只要是搜索引擎能回答的就不要问别人》），我要强调的是四个非常诚恳、能够有效坚持下去的方法。\n\n![plan](/images/plan/3.png)\n## 一定要给自己的坚持设定奖励回馈机制\n著名的喜剧演员 Jerry Seinfeld 曾说过他成功的秘诀 —— Don't break the chain!（不要让红叉连起来的链条断掉！）。为了创作好的笑话，这位喜剧演员给自己设定了每天都写笑话的规矩。 他买了个巨大的挂历，每天创作完笑话后就用红色记号笔在那一天的方框里画个大大的叉。 坚持一段时间后，日历上就会出现一条红色的链子，接下来要做的，就是 “不要打断它”。\n![plan](/images/plan/4.png)\nJerry Seinfeld 的做法实际上是一种心理反馈激励机制，让自己看到过往付出的努力是很重要的，因为知道自己之前的每一天都做到了，所以今天也一定可以坚持下去。\n\n除了单纯的精神激励，也可以通过物质奖励来刺激精神动力。在你的计划中，大目标是需要被拆解成小目标的，再把小目标拆解到每一天里。当你完成一个阶段性的小目标时，一定要奖励自己，最好是有物质上的奖励。随着阶段性目标的不断递进，每次完成时奖励的额度都应该增大。物质奖励不能与你的目标相冲突，比如说减肥的人不能瘦几斤就奖励自己一顿大餐把肉又给补回来了，相对于 “欺骗餐”，有经验的老司机告诉你：食欲被勾起真的很可怕，不如奖励自己更好的运动装备吧，你会更快完成目标的。 ** 但是请记住一点，在目标没有达成之前绝对不可以提前奖励自己，否则物质激励就完完全全失去了效果。 **\n\n给自己设定奖励机制能够非常有效地促进你的欲望，通过不断地循环激励，你的能力会遵循马太效应 —— 越来越强，从而实现终极目标的欲火也会越来越旺盛。\n## 一次只专注一件事，养成习惯\n我知道每个人想要实现的愿望肯定不只一个，我也很肯定地告诉你，只要足够努力和坚持，你想要的东西都可以得到，但是你不会同时得到所有，你会在不同阶段中分别得到。人的意志力是有限的，一次只够做好一件事，三心二意的结果只能是一事无成。Roy F. Baumeister 教授在《意志力》（Willpower: Rediscovering the Greatest Human Strength）提到培养意志力的方法是：** 一次只做一件事，适时奖励，养成习惯开启 “自动挡”。**\n\nBaumeister 还指出，人在不同事物上的意志力是相互影响的，** 一件事做好了，做好另一件事也会变得容易。** 比如说当你学会把家里整理得井井有条时，就会发现吃饭时不吃不健康的食物、合理控制饮食也变得简单了。\n\n意志力这件事很有趣，大家都认为每天坚持做一件事非常不容易，但是想想刷牙、洗澡、按时吃饭为什么我们能够几十年如一日地做，也没有觉得很困难？更多的时候，我们根本没有想过做这些事需要意志力。 这就是习惯的强大力量，当你把做某件事养成习惯了，它就会自动变成你的日常状态。不过 21天养成一个习惯是不够准确的，21 天只能说是初步培养出了一些习惯的感觉。坚持 21 天晨跑，你会发现第 22 天不晨跑有些难受，只要你接下来几天不晨跑，这个习惯依旧会消失。用我的经验来说，要是你想养成一个新习惯，比如说晨跑，** 至少要一年。不要着急，好习惯需要慢慢养成，你的努力，时间都看得见。 **\n\n## 一定要给自己的坚持设定奖励回馈机制\n![plan](/images/plan/5.png)\n放弃者必败。我们一生中必然会犯许多错误，但这并不是最糟糕的；我们也会遇到很多问题，但最终总会找到解决的办法。可是如果我们半途而废，那么一切就真的无可挽回了。** 如果在追求梦想的路上半途而废，我们就很可能永远终止了自己的梦想。停止追寻梦想的人无异于过着行尸走肉的生活。 **\n\n我们的先人在很早以前就悟出了 “失败与苦难乃成功之母” 的道理：“** 故天将降大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身，行弗乱其所为，所以动心忍性，曾益其所不能。—— 《孟子》 ** ” 。** 你想完成自己的目标，过更好的生活，必须先拥有能承受与这种生活相匹配的抗压能力。生活是公平的，你能够承受住多大的压力、解决多复杂的问题，它就会给你多少的回报 ** 。在实现目标的过程中，** 你遇到的失败只是证明你还未拥有相应的能力，这个时候你唯一要做的就是绝不放弃，然后坚持下去。** 想想打游戏时，当你升级进入下一个难度更高的关卡时，开始时总是挑战失败，多玩几次总结经验、避开之前的那些坑，最后不也顺利进入下一关了吗？不要害怕失败，你遇到失败意味着你已经突破了自己原有的能力局限，你在成长。坚持下去，** 未来在前方已经为你准备好了许多惊喜。**\n![plan](/images/plan/6.png)\n我很建议大家写`“成功日记”`，把自己每天做过的觉得成功的事情写在上面，哪怕是坚持写成功日记这件事也有资格记录在册。经常翻看成功日记，可以培养自己的自信。失败时看看自己做过的成功事迹，进行积极的心理暗示，告诉自己这一次目标达成后我也会把它记录在册。\n\n** 遇到失败一定不要放弃，不要把对目标积累已久的 “欲火” 就这样让它熄灭了，坚持下去一定会成功的。**\n\n## 找到价值观一致的同类\n![plan](/images/plan/7.png)\n当你坚持做了很多事，养成了许多好习惯时，你必然已经成为了一个更好的人。这意味着在之前的环境中，你可能会不合群。千万不要被周围人所影响！** 不要为了合群而去改变自己。**\n\n我的大学不算特别好的学校，但我依然努力学习各种技能、出门参与各项工作实习，可身边出现了这样的声音 “你不过是一个一直想往上爬的人，我们跟你不一样，注定玩不到一块儿”，当时只有十几岁的我听到这种话真的很难过，但我非常庆幸自己当时没有改变自己，去追求和他们 “一样”，去跟他们玩到一起。\n\n现在的我拥有了一个全新的环境，身边的人都是跟我一样的人：他们比我更聪明更努力，我就明白了这种团队与环境才是我想要的，我能够更快地成长、更好地完成自己的目标。燕雀安知鸿鹄之志哉？\n同类也是遵循 `吸引力法则 ` 的，很多人会苦于自己在生活里找不到想要的优秀同类，我只想说** 那是因为你还不够努力、还不够优秀。不断地提升自己，同类会自动被你吸引过来。** 对这个法则有兴趣的朋友可以去阅读一下 `Rhonda Byrne 的《秘密》`。\n\n{% blockquote Jame Saltucher %}\nImprove the internal fire every day. Be persistent internally, then the external success will take of itself !!!\n每天让渴望完成目标的欲火燃烧得更强烈些，你只需要发自内心地去坚持，外界的成功自然而然会到来！！！\n{% endblockquote %}\n\n***\n\n> [转载](http://mp.weixin.qq.com/s?__biz=MzAwMDgyMTA3Mg==&mid=2650055652&idx=1&sn=e69d8252994229b3b3521f1bc80671ce&scene=21#wechat_redirect)\n","slug":"plan","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpa6001ywsnnda9amf1n","content":"<p><img src=\"/images/plan/1.png\" alt=\"plan\"><br>在生活中，我们为了成功，为了达成各式各样的目标 —— 赚更多钱、减肥、变自信 —— 不知来来回回制定过多少次 “完美无缺” 的计划。可最后惨痛的事实摆在眼前：没有几个人能完成计划。更讽刺的是，完成计划和中途放弃的两类人也陷入到两种截然不同的循环模式：前者总能够一次又一次地完成新的计划，能力越来越强，越来越自信；后者也会继续制定计划，但就是接连不断地缴械投降，越来越觉得自己没用，自信心也受到打击。将计划坚持到最后一刻的寥寥无几的人最终成为了大家眼中的成功人士。这样看来，成功的核心要素真的很简单 —— 就是 “坚持”。成功人士的成功轨迹各有不同，但唯一相同的一点便是 “坚持”。<br><a id=\"more\"></a><br>成功人士在生活中的稀缺比例表明，大部分人做不到 <strong> “坚持”。坚持为什么这么难？是因为在实现目标的过程中诱惑太多了吗？是因为意志力不够坚定吗？是因为懒惰吗？是因为耐心不足吗？ </strong></p>\n<p>我可以肯定地回答你 —— 是。</p>\n<p>得到答案的你是否更心急、更绝望了？这么多需要克服的缺点，这辈子要等到何年何月才能学会坚持、才能成功啊！不过这些都是表面问题，试着从今天起，培养自己透过问题表面看本质的能力，反复问自己在实现目标的过程中，抵制不住诱惑、意志力不坚定、懒惰、耐心不够的根本原因是什么？</p>\n<p>根本原因就是 <strong> 你发自内心想要实现这个目标的欲望、动机不够强烈、不够 “致命” 。</strong></p>\n<p><img src=\"/images/plan/8.png\" alt=\"plan\"></p>\n<p>我有个从未谈过恋爱的女性朋友，单身的原因主要是因为过胖。体脂严重超标，几十年来从未瘦过，不过她倒并不是不想瘦 —— 身边朋友的嘲讽她早就受够了，自己也很想瘦下来找个男朋友。但是因为管不住那一张贪吃的嘴，所以无论如何运动，效果也不大，顶多是从一个柔软的胖子晋级成为了一个结实的胖子。</p>\n<p>可是忽然有一天，大家见面的时候，她竟然瘦成了一道闪电！我们都惊呆了，这几十年没做到的事怎么突然就做成了？原来是因为医生告诉她，如果再不调整饮食，她就很可能患上糖尿病。医生这一席话把她那一颗怕死的心天天吊在嗓子眼，从此以后拒绝一切高油高盐高糖分的食物，晚上改吃素，每天运动 3 小时，坚持了三个月后整个人瘦了好几圈，直接从 XXL 码跳到了 S 码。比较她减肥的两段历史，目标是相同的，但前者的动力源于爱美之心，后者的动力源于怕死之心。爱美之心拼不过食欲，怕死之心却战胜了一切！</p>\n<p>可见，坚持与成功的关键就是拥有发自内心极其强烈的源动力。<strong> 这种源动力本质来说也是一种欲望，它必须比你身上拥有的其他任何欲望都要强烈。</strong> 我的那位女性朋友就是极佳的例子 —— 想要活下去的欲望战胜了多年以来克服不了的食欲与懒惰。</p>\n<p>更多情况下，<strong> 实现目标的源动力不会一开始就表现得异常强烈，它需要培养。内心的欲望就像一个小火苗，越为它煽风点火，它就会燃烧得越旺盛。</strong></p>\n<p><img src=\"/images/plan/2.png\" alt=\"plan\"><br>多年来我总能坚持在早上六点钟左右早起读书、晨跑，在大学这种散漫的环境里，很多朋友都深深佩服我这个习惯。其实，刚开始想要养成早起的习惯时，我也是设了十多个闹铃都没能把自己叫醒，后来有几次偶尔起来了，发现早起读书、跑步的感觉还真不赖 —— 身体变得有活力，思维也更加灵活，当我跑完步、看完书、做完护肤、吃完早餐看到室友还在沉睡时，就感觉比别人多出来的这几个小时简直是被我偷来的时光，非常有价值。</p>\n<p>早起的每一天我都能感受到自己的进步，明白自己正在拉开与他人的差距。早起带来的这些好处反过来加大了我早起的欲望，有时候我甚至会学着村上春树四点钟起床。渐渐地，早起成了我雷打不动的习惯。其实我心里很明白，让我真正坚持早起的欲望来源于我内在的上进心 —— 不愿甘于平凡过着平庸的生活，想在只有一次的人生中做着自己喜欢的事情还能过上理想的生活，所以我必须很努力去赌一个未来。于是也验证了那句话 —— 每天唤醒我的不是闹钟，而是梦想。</p>\n<p>既然对目标发自内心的深切渴望至关重要，那么如何给它加把火，让它战胜其他任何的欲望呢？在本文中我不会详说计划是如何制定的（我想你们可以找到很多计划制定的方法，参考今天推送的第二篇文章《只要是搜索引擎能回答的就不要问别人》），我要强调的是四个非常诚恳、能够有效坚持下去的方法。</p>\n<p><img src=\"/images/plan/3.png\" alt=\"plan\"></p>\n<h2 id=\"一定要给自己的坚持设定奖励回馈机制\"><a href=\"#一定要给自己的坚持设定奖励回馈机制\" class=\"headerlink\" title=\"一定要给自己的坚持设定奖励回馈机制\"></a>一定要给自己的坚持设定奖励回馈机制</h2><p>著名的喜剧演员 Jerry Seinfeld 曾说过他成功的秘诀 —— Don’t break the chain!（不要让红叉连起来的链条断掉！）。为了创作好的笑话，这位喜剧演员给自己设定了每天都写笑话的规矩。 他买了个巨大的挂历，每天创作完笑话后就用红色记号笔在那一天的方框里画个大大的叉。 坚持一段时间后，日历上就会出现一条红色的链子，接下来要做的，就是 “不要打断它”。<br><img src=\"/images/plan/4.png\" alt=\"plan\"><br>Jerry Seinfeld 的做法实际上是一种心理反馈激励机制，让自己看到过往付出的努力是很重要的，因为知道自己之前的每一天都做到了，所以今天也一定可以坚持下去。</p>\n<p>除了单纯的精神激励，也可以通过物质奖励来刺激精神动力。在你的计划中，大目标是需要被拆解成小目标的，再把小目标拆解到每一天里。当你完成一个阶段性的小目标时，一定要奖励自己，最好是有物质上的奖励。随着阶段性目标的不断递进，每次完成时奖励的额度都应该增大。物质奖励不能与你的目标相冲突，比如说减肥的人不能瘦几斤就奖励自己一顿大餐把肉又给补回来了，相对于 “欺骗餐”，有经验的老司机告诉你：食欲被勾起真的很可怕，不如奖励自己更好的运动装备吧，你会更快完成目标的。 <strong> 但是请记住一点，在目标没有达成之前绝对不可以提前奖励自己，否则物质激励就完完全全失去了效果。 </strong></p>\n<p>给自己设定奖励机制能够非常有效地促进你的欲望，通过不断地循环激励，你的能力会遵循马太效应 —— 越来越强，从而实现终极目标的欲火也会越来越旺盛。</p>\n<h2 id=\"一次只专注一件事，养成习惯\"><a href=\"#一次只专注一件事，养成习惯\" class=\"headerlink\" title=\"一次只专注一件事，养成习惯\"></a>一次只专注一件事，养成习惯</h2><p>我知道每个人想要实现的愿望肯定不只一个，我也很肯定地告诉你，只要足够努力和坚持，你想要的东西都可以得到，但是你不会同时得到所有，你会在不同阶段中分别得到。人的意志力是有限的，一次只够做好一件事，三心二意的结果只能是一事无成。Roy F. Baumeister 教授在《意志力》（Willpower: Rediscovering the Greatest Human Strength）提到培养意志力的方法是：<strong> 一次只做一件事，适时奖励，养成习惯开启 “自动挡”。</strong></p>\n<p>Baumeister 还指出，人在不同事物上的意志力是相互影响的，<strong> 一件事做好了，做好另一件事也会变得容易。</strong> 比如说当你学会把家里整理得井井有条时，就会发现吃饭时不吃不健康的食物、合理控制饮食也变得简单了。</p>\n<p>意志力这件事很有趣，大家都认为每天坚持做一件事非常不容易，但是想想刷牙、洗澡、按时吃饭为什么我们能够几十年如一日地做，也没有觉得很困难？更多的时候，我们根本没有想过做这些事需要意志力。 这就是习惯的强大力量，当你把做某件事养成习惯了，它就会自动变成你的日常状态。不过 21天养成一个习惯是不够准确的，21 天只能说是初步培养出了一些习惯的感觉。坚持 21 天晨跑，你会发现第 22 天不晨跑有些难受，只要你接下来几天不晨跑，这个习惯依旧会消失。用我的经验来说，要是你想养成一个新习惯，比如说晨跑，<strong> 至少要一年。不要着急，好习惯需要慢慢养成，你的努力，时间都看得见。 </strong></p>\n<h2 id=\"一定要给自己的坚持设定奖励回馈机制-1\"><a href=\"#一定要给自己的坚持设定奖励回馈机制-1\" class=\"headerlink\" title=\"一定要给自己的坚持设定奖励回馈机制\"></a>一定要给自己的坚持设定奖励回馈机制</h2><p><img src=\"/images/plan/5.png\" alt=\"plan\"><br>放弃者必败。我们一生中必然会犯许多错误，但这并不是最糟糕的；我们也会遇到很多问题，但最终总会找到解决的办法。可是如果我们半途而废，那么一切就真的无可挽回了。<strong> 如果在追求梦想的路上半途而废，我们就很可能永远终止了自己的梦想。停止追寻梦想的人无异于过着行尸走肉的生活。 </strong></p>\n<p>我们的先人在很早以前就悟出了 “失败与苦难乃成功之母” 的道理：“<strong> 故天将降大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身，行弗乱其所为，所以动心忍性，曾益其所不能。—— 《孟子》 </strong> ” 。<strong> 你想完成自己的目标，过更好的生活，必须先拥有能承受与这种生活相匹配的抗压能力。生活是公平的，你能够承受住多大的压力、解决多复杂的问题，它就会给你多少的回报 </strong> 。在实现目标的过程中，<strong> 你遇到的失败只是证明你还未拥有相应的能力，这个时候你唯一要做的就是绝不放弃，然后坚持下去。</strong> 想想打游戏时，当你升级进入下一个难度更高的关卡时，开始时总是挑战失败，多玩几次总结经验、避开之前的那些坑，最后不也顺利进入下一关了吗？不要害怕失败，你遇到失败意味着你已经突破了自己原有的能力局限，你在成长。坚持下去，<strong> 未来在前方已经为你准备好了许多惊喜。</strong><br><img src=\"/images/plan/6.png\" alt=\"plan\"><br>我很建议大家写<code>“成功日记”</code>，把自己每天做过的觉得成功的事情写在上面，哪怕是坚持写成功日记这件事也有资格记录在册。经常翻看成功日记，可以培养自己的自信。失败时看看自己做过的成功事迹，进行积极的心理暗示，告诉自己这一次目标达成后我也会把它记录在册。</p>\n<p><strong> 遇到失败一定不要放弃，不要把对目标积累已久的 “欲火” 就这样让它熄灭了，坚持下去一定会成功的。</strong></p>\n<h2 id=\"找到价值观一致的同类\"><a href=\"#找到价值观一致的同类\" class=\"headerlink\" title=\"找到价值观一致的同类\"></a>找到价值观一致的同类</h2><p><img src=\"/images/plan/7.png\" alt=\"plan\"><br>当你坚持做了很多事，养成了许多好习惯时，你必然已经成为了一个更好的人。这意味着在之前的环境中，你可能会不合群。千万不要被周围人所影响！<strong> 不要为了合群而去改变自己。</strong></p>\n<p>我的大学不算特别好的学校，但我依然努力学习各种技能、出门参与各项工作实习，可身边出现了这样的声音 “你不过是一个一直想往上爬的人，我们跟你不一样，注定玩不到一块儿”，当时只有十几岁的我听到这种话真的很难过，但我非常庆幸自己当时没有改变自己，去追求和他们 “一样”，去跟他们玩到一起。</p>\n<p>现在的我拥有了一个全新的环境，身边的人都是跟我一样的人：他们比我更聪明更努力，我就明白了这种团队与环境才是我想要的，我能够更快地成长、更好地完成自己的目标。燕雀安知鸿鹄之志哉？<br>同类也是遵循 <code>吸引力法则</code> 的，很多人会苦于自己在生活里找不到想要的优秀同类，我只想说<strong> 那是因为你还不够努力、还不够优秀。不断地提升自己，同类会自动被你吸引过来。</strong> 对这个法则有兴趣的朋友可以去阅读一下 <code>Rhonda Byrne 的《秘密》</code>。</p>\n<blockquote><p>Improve the internal fire every day. Be persistent internally, then the external success will take of itself !!!<br>每天让渴望完成目标的欲火燃烧得更强烈些，你只需要发自内心地去坚持，外界的成功自然而然会到来！！！</p>\n<footer><strong>Jame Saltucher</strong></footer></blockquote>\n<hr>\n<blockquote>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MzAwMDgyMTA3Mg==&amp;mid=2650055652&amp;idx=1&amp;sn=e69d8252994229b3b3521f1bc80671ce&amp;scene=21#wechat_redirect\" target=\"_blank\" rel=\"external\">转载</a></p>\n</blockquote>\n","excerpt":"<p><img src=\"/images/plan/1.png\" alt=\"plan\"><br>在生活中，我们为了成功，为了达成各式各样的目标 —— 赚更多钱、减肥、变自信 —— 不知来来回回制定过多少次 “完美无缺” 的计划。可最后惨痛的事实摆在眼前：没有几个人能完成计划。更讽刺的是，完成计划和中途放弃的两类人也陷入到两种截然不同的循环模式：前者总能够一次又一次地完成新的计划，能力越来越强，越来越自信；后者也会继续制定计划，但就是接连不断地缴械投降，越来越觉得自己没用，自信心也受到打击。将计划坚持到最后一刻的寥寥无几的人最终成为了大家眼中的成功人士。这样看来，成功的核心要素真的很简单 —— 就是 “坚持”。成功人士的成功轨迹各有不同，但唯一相同的一点便是 “坚持”。<br>","more":"<br>成功人士在生活中的稀缺比例表明，大部分人做不到 <strong> “坚持”。坚持为什么这么难？是因为在实现目标的过程中诱惑太多了吗？是因为意志力不够坚定吗？是因为懒惰吗？是因为耐心不足吗？ </strong></p>\n<p>我可以肯定地回答你 —— 是。</p>\n<p>得到答案的你是否更心急、更绝望了？这么多需要克服的缺点，这辈子要等到何年何月才能学会坚持、才能成功啊！不过这些都是表面问题，试着从今天起，培养自己透过问题表面看本质的能力，反复问自己在实现目标的过程中，抵制不住诱惑、意志力不坚定、懒惰、耐心不够的根本原因是什么？</p>\n<p>根本原因就是 <strong> 你发自内心想要实现这个目标的欲望、动机不够强烈、不够 “致命” 。</strong></p>\n<p><img src=\"/images/plan/8.png\" alt=\"plan\"></p>\n<p>我有个从未谈过恋爱的女性朋友，单身的原因主要是因为过胖。体脂严重超标，几十年来从未瘦过，不过她倒并不是不想瘦 —— 身边朋友的嘲讽她早就受够了，自己也很想瘦下来找个男朋友。但是因为管不住那一张贪吃的嘴，所以无论如何运动，效果也不大，顶多是从一个柔软的胖子晋级成为了一个结实的胖子。</p>\n<p>可是忽然有一天，大家见面的时候，她竟然瘦成了一道闪电！我们都惊呆了，这几十年没做到的事怎么突然就做成了？原来是因为医生告诉她，如果再不调整饮食，她就很可能患上糖尿病。医生这一席话把她那一颗怕死的心天天吊在嗓子眼，从此以后拒绝一切高油高盐高糖分的食物，晚上改吃素，每天运动 3 小时，坚持了三个月后整个人瘦了好几圈，直接从 XXL 码跳到了 S 码。比较她减肥的两段历史，目标是相同的，但前者的动力源于爱美之心，后者的动力源于怕死之心。爱美之心拼不过食欲，怕死之心却战胜了一切！</p>\n<p>可见，坚持与成功的关键就是拥有发自内心极其强烈的源动力。<strong> 这种源动力本质来说也是一种欲望，它必须比你身上拥有的其他任何欲望都要强烈。</strong> 我的那位女性朋友就是极佳的例子 —— 想要活下去的欲望战胜了多年以来克服不了的食欲与懒惰。</p>\n<p>更多情况下，<strong> 实现目标的源动力不会一开始就表现得异常强烈，它需要培养。内心的欲望就像一个小火苗，越为它煽风点火，它就会燃烧得越旺盛。</strong></p>\n<p><img src=\"/images/plan/2.png\" alt=\"plan\"><br>多年来我总能坚持在早上六点钟左右早起读书、晨跑，在大学这种散漫的环境里，很多朋友都深深佩服我这个习惯。其实，刚开始想要养成早起的习惯时，我也是设了十多个闹铃都没能把自己叫醒，后来有几次偶尔起来了，发现早起读书、跑步的感觉还真不赖 —— 身体变得有活力，思维也更加灵活，当我跑完步、看完书、做完护肤、吃完早餐看到室友还在沉睡时，就感觉比别人多出来的这几个小时简直是被我偷来的时光，非常有价值。</p>\n<p>早起的每一天我都能感受到自己的进步，明白自己正在拉开与他人的差距。早起带来的这些好处反过来加大了我早起的欲望，有时候我甚至会学着村上春树四点钟起床。渐渐地，早起成了我雷打不动的习惯。其实我心里很明白，让我真正坚持早起的欲望来源于我内在的上进心 —— 不愿甘于平凡过着平庸的生活，想在只有一次的人生中做着自己喜欢的事情还能过上理想的生活，所以我必须很努力去赌一个未来。于是也验证了那句话 —— 每天唤醒我的不是闹钟，而是梦想。</p>\n<p>既然对目标发自内心的深切渴望至关重要，那么如何给它加把火，让它战胜其他任何的欲望呢？在本文中我不会详说计划是如何制定的（我想你们可以找到很多计划制定的方法，参考今天推送的第二篇文章《只要是搜索引擎能回答的就不要问别人》），我要强调的是四个非常诚恳、能够有效坚持下去的方法。</p>\n<p><img src=\"/images/plan/3.png\" alt=\"plan\"></p>\n<h2 id=\"一定要给自己的坚持设定奖励回馈机制\"><a href=\"#一定要给自己的坚持设定奖励回馈机制\" class=\"headerlink\" title=\"一定要给自己的坚持设定奖励回馈机制\"></a>一定要给自己的坚持设定奖励回馈机制</h2><p>著名的喜剧演员 Jerry Seinfeld 曾说过他成功的秘诀 —— Don’t break the chain!（不要让红叉连起来的链条断掉！）。为了创作好的笑话，这位喜剧演员给自己设定了每天都写笑话的规矩。 他买了个巨大的挂历，每天创作完笑话后就用红色记号笔在那一天的方框里画个大大的叉。 坚持一段时间后，日历上就会出现一条红色的链子，接下来要做的，就是 “不要打断它”。<br><img src=\"/images/plan/4.png\" alt=\"plan\"><br>Jerry Seinfeld 的做法实际上是一种心理反馈激励机制，让自己看到过往付出的努力是很重要的，因为知道自己之前的每一天都做到了，所以今天也一定可以坚持下去。</p>\n<p>除了单纯的精神激励，也可以通过物质奖励来刺激精神动力。在你的计划中，大目标是需要被拆解成小目标的，再把小目标拆解到每一天里。当你完成一个阶段性的小目标时，一定要奖励自己，最好是有物质上的奖励。随着阶段性目标的不断递进，每次完成时奖励的额度都应该增大。物质奖励不能与你的目标相冲突，比如说减肥的人不能瘦几斤就奖励自己一顿大餐把肉又给补回来了，相对于 “欺骗餐”，有经验的老司机告诉你：食欲被勾起真的很可怕，不如奖励自己更好的运动装备吧，你会更快完成目标的。 <strong> 但是请记住一点，在目标没有达成之前绝对不可以提前奖励自己，否则物质激励就完完全全失去了效果。 </strong></p>\n<p>给自己设定奖励机制能够非常有效地促进你的欲望，通过不断地循环激励，你的能力会遵循马太效应 —— 越来越强，从而实现终极目标的欲火也会越来越旺盛。</p>\n<h2 id=\"一次只专注一件事，养成习惯\"><a href=\"#一次只专注一件事，养成习惯\" class=\"headerlink\" title=\"一次只专注一件事，养成习惯\"></a>一次只专注一件事，养成习惯</h2><p>我知道每个人想要实现的愿望肯定不只一个，我也很肯定地告诉你，只要足够努力和坚持，你想要的东西都可以得到，但是你不会同时得到所有，你会在不同阶段中分别得到。人的意志力是有限的，一次只够做好一件事，三心二意的结果只能是一事无成。Roy F. Baumeister 教授在《意志力》（Willpower: Rediscovering the Greatest Human Strength）提到培养意志力的方法是：<strong> 一次只做一件事，适时奖励，养成习惯开启 “自动挡”。</strong></p>\n<p>Baumeister 还指出，人在不同事物上的意志力是相互影响的，<strong> 一件事做好了，做好另一件事也会变得容易。</strong> 比如说当你学会把家里整理得井井有条时，就会发现吃饭时不吃不健康的食物、合理控制饮食也变得简单了。</p>\n<p>意志力这件事很有趣，大家都认为每天坚持做一件事非常不容易，但是想想刷牙、洗澡、按时吃饭为什么我们能够几十年如一日地做，也没有觉得很困难？更多的时候，我们根本没有想过做这些事需要意志力。 这就是习惯的强大力量，当你把做某件事养成习惯了，它就会自动变成你的日常状态。不过 21天养成一个习惯是不够准确的，21 天只能说是初步培养出了一些习惯的感觉。坚持 21 天晨跑，你会发现第 22 天不晨跑有些难受，只要你接下来几天不晨跑，这个习惯依旧会消失。用我的经验来说，要是你想养成一个新习惯，比如说晨跑，<strong> 至少要一年。不要着急，好习惯需要慢慢养成，你的努力，时间都看得见。 </strong></p>\n<h2 id=\"一定要给自己的坚持设定奖励回馈机制-1\"><a href=\"#一定要给自己的坚持设定奖励回馈机制-1\" class=\"headerlink\" title=\"一定要给自己的坚持设定奖励回馈机制\"></a>一定要给自己的坚持设定奖励回馈机制</h2><p><img src=\"/images/plan/5.png\" alt=\"plan\"><br>放弃者必败。我们一生中必然会犯许多错误，但这并不是最糟糕的；我们也会遇到很多问题，但最终总会找到解决的办法。可是如果我们半途而废，那么一切就真的无可挽回了。<strong> 如果在追求梦想的路上半途而废，我们就很可能永远终止了自己的梦想。停止追寻梦想的人无异于过着行尸走肉的生活。 </strong></p>\n<p>我们的先人在很早以前就悟出了 “失败与苦难乃成功之母” 的道理：“<strong> 故天将降大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身，行弗乱其所为，所以动心忍性，曾益其所不能。—— 《孟子》 </strong> ” 。<strong> 你想完成自己的目标，过更好的生活，必须先拥有能承受与这种生活相匹配的抗压能力。生活是公平的，你能够承受住多大的压力、解决多复杂的问题，它就会给你多少的回报 </strong> 。在实现目标的过程中，<strong> 你遇到的失败只是证明你还未拥有相应的能力，这个时候你唯一要做的就是绝不放弃，然后坚持下去。</strong> 想想打游戏时，当你升级进入下一个难度更高的关卡时，开始时总是挑战失败，多玩几次总结经验、避开之前的那些坑，最后不也顺利进入下一关了吗？不要害怕失败，你遇到失败意味着你已经突破了自己原有的能力局限，你在成长。坚持下去，<strong> 未来在前方已经为你准备好了许多惊喜。</strong><br><img src=\"/images/plan/6.png\" alt=\"plan\"><br>我很建议大家写<code>“成功日记”</code>，把自己每天做过的觉得成功的事情写在上面，哪怕是坚持写成功日记这件事也有资格记录在册。经常翻看成功日记，可以培养自己的自信。失败时看看自己做过的成功事迹，进行积极的心理暗示，告诉自己这一次目标达成后我也会把它记录在册。</p>\n<p><strong> 遇到失败一定不要放弃，不要把对目标积累已久的 “欲火” 就这样让它熄灭了，坚持下去一定会成功的。</strong></p>\n<h2 id=\"找到价值观一致的同类\"><a href=\"#找到价值观一致的同类\" class=\"headerlink\" title=\"找到价值观一致的同类\"></a>找到价值观一致的同类</h2><p><img src=\"/images/plan/7.png\" alt=\"plan\"><br>当你坚持做了很多事，养成了许多好习惯时，你必然已经成为了一个更好的人。这意味着在之前的环境中，你可能会不合群。千万不要被周围人所影响！<strong> 不要为了合群而去改变自己。</strong></p>\n<p>我的大学不算特别好的学校，但我依然努力学习各种技能、出门参与各项工作实习，可身边出现了这样的声音 “你不过是一个一直想往上爬的人，我们跟你不一样，注定玩不到一块儿”，当时只有十几岁的我听到这种话真的很难过，但我非常庆幸自己当时没有改变自己，去追求和他们 “一样”，去跟他们玩到一起。</p>\n<p>现在的我拥有了一个全新的环境，身边的人都是跟我一样的人：他们比我更聪明更努力，我就明白了这种团队与环境才是我想要的，我能够更快地成长、更好地完成自己的目标。燕雀安知鸿鹄之志哉？<br>同类也是遵循 <code>吸引力法则</code> 的，很多人会苦于自己在生活里找不到想要的优秀同类，我只想说<strong> 那是因为你还不够努力、还不够优秀。不断地提升自己，同类会自动被你吸引过来。</strong> 对这个法则有兴趣的朋友可以去阅读一下 <code>Rhonda Byrne 的《秘密》</code>。</p>\n<blockquote><p>Improve the internal fire every day. Be persistent internally, then the external success will take of itself !!!<br>每天让渴望完成目标的欲火燃烧得更强烈些，你只需要发自内心地去坚持，外界的成功自然而然会到来！！！</p>\n<footer><strong>Jame Saltucher</strong></footer></blockquote>\n<hr>\n<blockquote>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MzAwMDgyMTA3Mg==&amp;mid=2650055652&amp;idx=1&amp;sn=e69d8252994229b3b3521f1bc80671ce&amp;scene=21#wechat_redirect\">转载</a></p>\n</blockquote>"},{"title":"principles(原则)","date":"2016-06-14T16:43:20.000Z","_content":"\n> 建立自己的原则系统, 把一些好的概念与方法论，应用到自己的生活中方方面，形成自己的“原则”。\n\n\n# 进取型人格宣言\n1. 学习其实是一种生活方式，学习本身就是最好的洗脑方式。\n2. 只要我投入时间精力，长期来看，没有什么是我学不会的。\n3. 我学会的东西越多，我再学新的东西就只能越来越快。<!-- more -->\n4. 学习不是目的，用起来才是真的，因为价值只能通过创造去实现。\n5. 我知道我现在看起来很笨拙，但刚开始谁都是这样的，实践多了，就自然了，就自然地好起来了。\n6. 在学习这件事儿上，他们不理解我是正常的，这方面我也不需要理解，因为我是一个独立的人。\n7. 我不应该与他们争辩，因为我不想伤害他们；我也不应该被他们影响，因为我不想伤害自己。\n8. 刻意练习永远是必要的，虽然它通常并不舒适，但它的复利效应确实巨大的。哪怕是为了下一代，我也要通过现在的努力成为学习专家，这样才有资格与我的孩子共同成长…\n9. 我的路还很长，我要健康，我要干净，尤其是我的脑子更要干净。\n10. 了解一个概念之后，一定要查找，总结成自己的方法,“用” 到自己的生活中，帮助自己成长,重复练习。\n\n# 方法论\n## 学习技巧\n> 习得任何技能的最根本技巧，就是一句话而已：`马上开始像那些已经精通这个技能的人一样生活。`\n> 保持耐心，反复来过，直至成功。\n\n它会让你无视很多障碍，跨越很多障碍，甚至那些障碍对你来说就好像完全不存在一样。心理学家告诉我们，当你不开心的时候，假装开心，做出笑脸，过一会儿就没那么不开心了，甚至真的开心起来…… 这个原理其实可以用在很多地方，比如，某项技能你不会，但你想会，那就从假装会了这个技能开始，然后当真去做、去学，没多久就真的会了…… 我小时候学吉他也是这样，买来吉他其实是不会的啊，但也不知道为什么就是有欲望坐在那里乱弹一气，就好像会了一样 —— 可真的没多一会儿就开始渐渐调整自己，让手的拨动多少有点节奏…… 竟然比之前好听多了！\n\n## 思考模式（Mindset）和行为模式（Action Pattern）：\n> - 随时准备深入了解某个小领域\n> - 借助地球上最强大的人工智能（Google）找到学习资源\n> - 给自己一小段时间刻意练习\n> - 不怕死记硬背，更要善于死记硬背，通过短时间内的大量重复，把那些别人看起来枯燥的东西迅速变成自己“内建的技能” —— 通过刻意练习将其熟练到“想都不用想就能用的地步”……\n> - 给自己定个“最后期限”，比如一小时之内一定做到把这些命令谙熟于心…… 绝对不能“过些天就想不起来了”，否则，那就是思考监管的“只因为学习习惯不好造成的永久性愚蠢”。\n\n再提醒一遍，别忘了给自己洗脑：**`“只搜索、只阅读英文文档”`**，**`有中文的也不能看，就是不能看`**……\n\n还有就是，**`每次脑子里闪出“呀，好麻烦！”这个念头的时候，就要知道自己脑子脏了，该洗了`**。 无论干什么都挺麻烦的，怕麻烦的人什么都做不成，躲避麻烦的唯一正确方式就是**`“不怕麻烦，逐一完成”`**，否则就会反复麻烦一辈子又一辈子（甚至会遗传，不耐心的父母必然养出不耐心的孩子）。凡事道理都是一样的，我有一句口头禅：**`“偷懒的唯一方式就是不偷懒……”`**也还是一样的道理。\n\n## 工程师思维\n1)自动化\n2 减少工作量  -- *`“ 怎么做才能将来不用做或者起码少做却可以实际上干更多呢？”`*\n\n\n## 冥想：（Meditation）\n坐享，也许是最简单的大脑锻炼方式，这也是人类莫名其妙地已经运用了两千五百年以上的大脑锻炼方式。已经有足够多的科学研究证明，它能使你的大脑皮层表面积加大，能使你的灰质变厚，它也能增强人们的免疫系统，它还能让人们摆脱抑郁症……\n尽管简单，但也相当神奇。虽然神奇，却又非常简单。\n### 总结\n总而言之，要集中注意力、并且最终可以做到自如地控制注意力才算是坐享 —— 最终的目标是可以做到在越来越的时间里自如的注意力集中，并且还能控制集中的注意力。而胡思乱想、放空，甚至是睡着了，都算不上是坐享，对增加大脑皮层面\n积，增厚灰质没有什么具体的帮助。\n[how](http://www.wikihow.com/Do-Mindful-Meditation)\n","source":"_posts/2016/principles.md","raw":"---\ntitle: principles(原则)\ndate: 2016-06-15 00:43:20\ntags:\n- 读书\ncategories:\n---\n\n> 建立自己的原则系统, 把一些好的概念与方法论，应用到自己的生活中方方面，形成自己的“原则”。\n\n\n# 进取型人格宣言\n1. 学习其实是一种生活方式，学习本身就是最好的洗脑方式。\n2. 只要我投入时间精力，长期来看，没有什么是我学不会的。\n3. 我学会的东西越多，我再学新的东西就只能越来越快。<!-- more -->\n4. 学习不是目的，用起来才是真的，因为价值只能通过创造去实现。\n5. 我知道我现在看起来很笨拙，但刚开始谁都是这样的，实践多了，就自然了，就自然地好起来了。\n6. 在学习这件事儿上，他们不理解我是正常的，这方面我也不需要理解，因为我是一个独立的人。\n7. 我不应该与他们争辩，因为我不想伤害他们；我也不应该被他们影响，因为我不想伤害自己。\n8. 刻意练习永远是必要的，虽然它通常并不舒适，但它的复利效应确实巨大的。哪怕是为了下一代，我也要通过现在的努力成为学习专家，这样才有资格与我的孩子共同成长…\n9. 我的路还很长，我要健康，我要干净，尤其是我的脑子更要干净。\n10. 了解一个概念之后，一定要查找，总结成自己的方法,“用” 到自己的生活中，帮助自己成长,重复练习。\n\n# 方法论\n## 学习技巧\n> 习得任何技能的最根本技巧，就是一句话而已：`马上开始像那些已经精通这个技能的人一样生活。`\n> 保持耐心，反复来过，直至成功。\n\n它会让你无视很多障碍，跨越很多障碍，甚至那些障碍对你来说就好像完全不存在一样。心理学家告诉我们，当你不开心的时候，假装开心，做出笑脸，过一会儿就没那么不开心了，甚至真的开心起来…… 这个原理其实可以用在很多地方，比如，某项技能你不会，但你想会，那就从假装会了这个技能开始，然后当真去做、去学，没多久就真的会了…… 我小时候学吉他也是这样，买来吉他其实是不会的啊，但也不知道为什么就是有欲望坐在那里乱弹一气，就好像会了一样 —— 可真的没多一会儿就开始渐渐调整自己，让手的拨动多少有点节奏…… 竟然比之前好听多了！\n\n## 思考模式（Mindset）和行为模式（Action Pattern）：\n> - 随时准备深入了解某个小领域\n> - 借助地球上最强大的人工智能（Google）找到学习资源\n> - 给自己一小段时间刻意练习\n> - 不怕死记硬背，更要善于死记硬背，通过短时间内的大量重复，把那些别人看起来枯燥的东西迅速变成自己“内建的技能” —— 通过刻意练习将其熟练到“想都不用想就能用的地步”……\n> - 给自己定个“最后期限”，比如一小时之内一定做到把这些命令谙熟于心…… 绝对不能“过些天就想不起来了”，否则，那就是思考监管的“只因为学习习惯不好造成的永久性愚蠢”。\n\n再提醒一遍，别忘了给自己洗脑：**`“只搜索、只阅读英文文档”`**，**`有中文的也不能看，就是不能看`**……\n\n还有就是，**`每次脑子里闪出“呀，好麻烦！”这个念头的时候，就要知道自己脑子脏了，该洗了`**。 无论干什么都挺麻烦的，怕麻烦的人什么都做不成，躲避麻烦的唯一正确方式就是**`“不怕麻烦，逐一完成”`**，否则就会反复麻烦一辈子又一辈子（甚至会遗传，不耐心的父母必然养出不耐心的孩子）。凡事道理都是一样的，我有一句口头禅：**`“偷懒的唯一方式就是不偷懒……”`**也还是一样的道理。\n\n## 工程师思维\n1)自动化\n2 减少工作量  -- *`“ 怎么做才能将来不用做或者起码少做却可以实际上干更多呢？”`*\n\n\n## 冥想：（Meditation）\n坐享，也许是最简单的大脑锻炼方式，这也是人类莫名其妙地已经运用了两千五百年以上的大脑锻炼方式。已经有足够多的科学研究证明，它能使你的大脑皮层表面积加大，能使你的灰质变厚，它也能增强人们的免疫系统，它还能让人们摆脱抑郁症……\n尽管简单，但也相当神奇。虽然神奇，却又非常简单。\n### 总结\n总而言之，要集中注意力、并且最终可以做到自如地控制注意力才算是坐享 —— 最终的目标是可以做到在越来越的时间里自如的注意力集中，并且还能控制集中的注意力。而胡思乱想、放空，甚至是睡着了，都算不上是坐享，对增加大脑皮层面\n积，增厚灰质没有什么具体的帮助。\n[how](http://www.wikihow.com/Do-Mindful-Meditation)\n","slug":"principles","published":1,"updated":"2017-01-04T03:59:35.410Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpag001zwsnnl11avvsl","content":"<blockquote>\n<p>建立自己的原则系统, 把一些好的概念与方法论，应用到自己的生活中方方面，形成自己的“原则”。</p>\n</blockquote>\n<h1 id=\"进取型人格宣言\"><a href=\"#进取型人格宣言\" class=\"headerlink\" title=\"进取型人格宣言\"></a>进取型人格宣言</h1><ol>\n<li>学习其实是一种生活方式，学习本身就是最好的洗脑方式。</li>\n<li>只要我投入时间精力，长期来看，没有什么是我学不会的。</li>\n<li>我学会的东西越多，我再学新的东西就只能越来越快。<a id=\"more\"></a></li>\n<li>学习不是目的，用起来才是真的，因为价值只能通过创造去实现。</li>\n<li>我知道我现在看起来很笨拙，但刚开始谁都是这样的，实践多了，就自然了，就自然地好起来了。</li>\n<li>在学习这件事儿上，他们不理解我是正常的，这方面我也不需要理解，因为我是一个独立的人。</li>\n<li>我不应该与他们争辩，因为我不想伤害他们；我也不应该被他们影响，因为我不想伤害自己。</li>\n<li>刻意练习永远是必要的，虽然它通常并不舒适，但它的复利效应确实巨大的。哪怕是为了下一代，我也要通过现在的努力成为学习专家，这样才有资格与我的孩子共同成长…</li>\n<li>我的路还很长，我要健康，我要干净，尤其是我的脑子更要干净。</li>\n<li>了解一个概念之后，一定要查找，总结成自己的方法,“用” 到自己的生活中，帮助自己成长,重复练习。</li>\n</ol>\n<h1 id=\"方法论\"><a href=\"#方法论\" class=\"headerlink\" title=\"方法论\"></a>方法论</h1><h2 id=\"学习技巧\"><a href=\"#学习技巧\" class=\"headerlink\" title=\"学习技巧\"></a>学习技巧</h2><blockquote>\n<p>习得任何技能的最根本技巧，就是一句话而已：<code>马上开始像那些已经精通这个技能的人一样生活。</code><br>保持耐心，反复来过，直至成功。</p>\n</blockquote>\n<p>它会让你无视很多障碍，跨越很多障碍，甚至那些障碍对你来说就好像完全不存在一样。心理学家告诉我们，当你不开心的时候，假装开心，做出笑脸，过一会儿就没那么不开心了，甚至真的开心起来…… 这个原理其实可以用在很多地方，比如，某项技能你不会，但你想会，那就从假装会了这个技能开始，然后当真去做、去学，没多久就真的会了…… 我小时候学吉他也是这样，买来吉他其实是不会的啊，但也不知道为什么就是有欲望坐在那里乱弹一气，就好像会了一样 —— 可真的没多一会儿就开始渐渐调整自己，让手的拨动多少有点节奏…… 竟然比之前好听多了！</p>\n<h2 id=\"思考模式（Mindset）和行为模式（Action-Pattern）：\"><a href=\"#思考模式（Mindset）和行为模式（Action-Pattern）：\" class=\"headerlink\" title=\"思考模式（Mindset）和行为模式（Action Pattern）：\"></a>思考模式（Mindset）和行为模式（Action Pattern）：</h2><blockquote>\n<ul>\n<li>随时准备深入了解某个小领域</li>\n<li>借助地球上最强大的人工智能（Google）找到学习资源</li>\n<li>给自己一小段时间刻意练习</li>\n<li>不怕死记硬背，更要善于死记硬背，通过短时间内的大量重复，把那些别人看起来枯燥的东西迅速变成自己“内建的技能” —— 通过刻意练习将其熟练到“想都不用想就能用的地步”……</li>\n<li>给自己定个“最后期限”，比如一小时之内一定做到把这些命令谙熟于心…… 绝对不能“过些天就想不起来了”，否则，那就是思考监管的“只因为学习习惯不好造成的永久性愚蠢”。</li>\n</ul>\n</blockquote>\n<p>再提醒一遍，别忘了给自己洗脑：<strong><code>“只搜索、只阅读英文文档”</code></strong>，<strong><code>有中文的也不能看，就是不能看</code></strong>……</p>\n<p>还有就是，<strong><code>每次脑子里闪出“呀，好麻烦！”这个念头的时候，就要知道自己脑子脏了，该洗了</code></strong>。 无论干什么都挺麻烦的，怕麻烦的人什么都做不成，躲避麻烦的唯一正确方式就是<strong><code>“不怕麻烦，逐一完成”</code></strong>，否则就会反复麻烦一辈子又一辈子（甚至会遗传，不耐心的父母必然养出不耐心的孩子）。凡事道理都是一样的，我有一句口头禅：<strong><code>“偷懒的唯一方式就是不偷懒……”</code></strong>也还是一样的道理。</p>\n<h2 id=\"工程师思维\"><a href=\"#工程师思维\" class=\"headerlink\" title=\"工程师思维\"></a>工程师思维</h2><p>1)自动化<br>2 减少工作量  – <em><code>“ 怎么做才能将来不用做或者起码少做却可以实际上干更多呢？”</code></em></p>\n<h2 id=\"冥想：（Meditation）\"><a href=\"#冥想：（Meditation）\" class=\"headerlink\" title=\"冥想：（Meditation）\"></a>冥想：（Meditation）</h2><p>坐享，也许是最简单的大脑锻炼方式，这也是人类莫名其妙地已经运用了两千五百年以上的大脑锻炼方式。已经有足够多的科学研究证明，它能使你的大脑皮层表面积加大，能使你的灰质变厚，它也能增强人们的免疫系统，它还能让人们摆脱抑郁症……<br>尽管简单，但也相当神奇。虽然神奇，却又非常简单。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>总而言之，要集中注意力、并且最终可以做到自如地控制注意力才算是坐享 —— 最终的目标是可以做到在越来越的时间里自如的注意力集中，并且还能控制集中的注意力。而胡思乱想、放空，甚至是睡着了，都算不上是坐享，对增加大脑皮层面<br>积，增厚灰质没有什么具体的帮助。<br><a href=\"http://www.wikihow.com/Do-Mindful-Meditation\" target=\"_blank\" rel=\"external\">how</a></p>\n","excerpt":"<blockquote>\n<p>建立自己的原则系统, 把一些好的概念与方法论，应用到自己的生活中方方面，形成自己的“原则”。</p>\n</blockquote>\n<h1 id=\"进取型人格宣言\"><a href=\"#进取型人格宣言\" class=\"headerlink\" title=\"进取型人格宣言\"></a>进取型人格宣言</h1><ol>\n<li>学习其实是一种生活方式，学习本身就是最好的洗脑方式。</li>\n<li>只要我投入时间精力，长期来看，没有什么是我学不会的。</li>\n<li>我学会的东西越多，我再学新的东西就只能越来越快。","more":"</li>\n<li>学习不是目的，用起来才是真的，因为价值只能通过创造去实现。</li>\n<li>我知道我现在看起来很笨拙，但刚开始谁都是这样的，实践多了，就自然了，就自然地好起来了。</li>\n<li>在学习这件事儿上，他们不理解我是正常的，这方面我也不需要理解，因为我是一个独立的人。</li>\n<li>我不应该与他们争辩，因为我不想伤害他们；我也不应该被他们影响，因为我不想伤害自己。</li>\n<li>刻意练习永远是必要的，虽然它通常并不舒适，但它的复利效应确实巨大的。哪怕是为了下一代，我也要通过现在的努力成为学习专家，这样才有资格与我的孩子共同成长…</li>\n<li>我的路还很长，我要健康，我要干净，尤其是我的脑子更要干净。</li>\n<li>了解一个概念之后，一定要查找，总结成自己的方法,“用” 到自己的生活中，帮助自己成长,重复练习。</li>\n</ol>\n<h1 id=\"方法论\"><a href=\"#方法论\" class=\"headerlink\" title=\"方法论\"></a>方法论</h1><h2 id=\"学习技巧\"><a href=\"#学习技巧\" class=\"headerlink\" title=\"学习技巧\"></a>学习技巧</h2><blockquote>\n<p>习得任何技能的最根本技巧，就是一句话而已：<code>马上开始像那些已经精通这个技能的人一样生活。</code><br>保持耐心，反复来过，直至成功。</p>\n</blockquote>\n<p>它会让你无视很多障碍，跨越很多障碍，甚至那些障碍对你来说就好像完全不存在一样。心理学家告诉我们，当你不开心的时候，假装开心，做出笑脸，过一会儿就没那么不开心了，甚至真的开心起来…… 这个原理其实可以用在很多地方，比如，某项技能你不会，但你想会，那就从假装会了这个技能开始，然后当真去做、去学，没多久就真的会了…… 我小时候学吉他也是这样，买来吉他其实是不会的啊，但也不知道为什么就是有欲望坐在那里乱弹一气，就好像会了一样 —— 可真的没多一会儿就开始渐渐调整自己，让手的拨动多少有点节奏…… 竟然比之前好听多了！</p>\n<h2 id=\"思考模式（Mindset）和行为模式（Action-Pattern）：\"><a href=\"#思考模式（Mindset）和行为模式（Action-Pattern）：\" class=\"headerlink\" title=\"思考模式（Mindset）和行为模式（Action Pattern）：\"></a>思考模式（Mindset）和行为模式（Action Pattern）：</h2><blockquote>\n<ul>\n<li>随时准备深入了解某个小领域</li>\n<li>借助地球上最强大的人工智能（Google）找到学习资源</li>\n<li>给自己一小段时间刻意练习</li>\n<li>不怕死记硬背，更要善于死记硬背，通过短时间内的大量重复，把那些别人看起来枯燥的东西迅速变成自己“内建的技能” —— 通过刻意练习将其熟练到“想都不用想就能用的地步”……</li>\n<li>给自己定个“最后期限”，比如一小时之内一定做到把这些命令谙熟于心…… 绝对不能“过些天就想不起来了”，否则，那就是思考监管的“只因为学习习惯不好造成的永久性愚蠢”。</li>\n</ul>\n</blockquote>\n<p>再提醒一遍，别忘了给自己洗脑：<strong><code>“只搜索、只阅读英文文档”</code></strong>，<strong><code>有中文的也不能看，就是不能看</code></strong>……</p>\n<p>还有就是，<strong><code>每次脑子里闪出“呀，好麻烦！”这个念头的时候，就要知道自己脑子脏了，该洗了</code></strong>。 无论干什么都挺麻烦的，怕麻烦的人什么都做不成，躲避麻烦的唯一正确方式就是<strong><code>“不怕麻烦，逐一完成”</code></strong>，否则就会反复麻烦一辈子又一辈子（甚至会遗传，不耐心的父母必然养出不耐心的孩子）。凡事道理都是一样的，我有一句口头禅：<strong><code>“偷懒的唯一方式就是不偷懒……”</code></strong>也还是一样的道理。</p>\n<h2 id=\"工程师思维\"><a href=\"#工程师思维\" class=\"headerlink\" title=\"工程师思维\"></a>工程师思维</h2><p>1)自动化<br>2 减少工作量  – <em><code>“ 怎么做才能将来不用做或者起码少做却可以实际上干更多呢？”</code></em></p>\n<h2 id=\"冥想：（Meditation）\"><a href=\"#冥想：（Meditation）\" class=\"headerlink\" title=\"冥想：（Meditation）\"></a>冥想：（Meditation）</h2><p>坐享，也许是最简单的大脑锻炼方式，这也是人类莫名其妙地已经运用了两千五百年以上的大脑锻炼方式。已经有足够多的科学研究证明，它能使你的大脑皮层表面积加大，能使你的灰质变厚，它也能增强人们的免疫系统，它还能让人们摆脱抑郁症……<br>尽管简单，但也相当神奇。虽然神奇，却又非常简单。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>总而言之，要集中注意力、并且最终可以做到自如地控制注意力才算是坐享 —— 最终的目标是可以做到在越来越的时间里自如的注意力集中，并且还能控制集中的注意力。而胡思乱想、放空，甚至是睡着了，都算不上是坐享，对增加大脑皮层面<br>积，增厚灰质没有什么具体的帮助。<br><a href=\"http://www.wikihow.com/Do-Mindful-Meditation\">how</a></p>"},{"title":"怎么快速恢复数据？","date":"2016-11-23T13:46:52.000Z","updated":"2016-11-23T13:46:52.000Z","_content":"\n### 高可用数据库架构\n一般来说数据库集群会是主从架构：\n![](/images/restore-db/master-slave.png)\n或者主主架构：\n![](/images/restore-db/master-master.png)\n<!-- more --> \n如果此时主库宕机，可以：\n> 1. 一个从库顶上，重建集群\n> 2. 流量迁移到另一个主库\n\n来保证数据的安全性与服务的可用性。\n \n但是，如果人为不小心执行了“删全库”操作，命令会同步给其他从（主）库，导致所有库上的数据全部丢失，这下怎么办呢？\n可以问问自己，当这种情况发生的时候：\n> 1. 能不能恢复数据？（应该没有公司不能）\n> 2. 多久能够恢复数据？\n保证数据的安全性是DBA第一要务。\n \n ### 全量备份+增量备份\n常见的数据库安全性策略是：全量备份+增量备份。\n\n全量备份：定期（例如一个月）将库文件全量备份\n ![](/images/restore-db/all_bak.png)\n\n增量备份：定期（例如每天）将binlog增量备份\n ![](/images/restore-db/inc_bak.png)\n如果不小心误删了全库，可以这么恢复：\n（1）将最近一次全量备份的全库找到，拷贝回来（文件一般比较大），解压，应用\n（2）将最近一次全量备份后，每一天的增量binlog找到，拷贝回来（文件较多），依次重放\n（3）将最近一次增量备份后，到执行“删全库”之前的binlog找到，重放\n恢复完毕。\n为了保证方案的可靠性，建议定期进行恢复演练。\n \n方案优点：能够找回数据\n方案缺点：恢复时间非常长\n有没有更优，更快恢复的方案呢？\n \n### 1小时延时从\n使用1小时延时从库，可大大加速“删全库”恢复时间。\n\n什么是1小时延时从？\n增加一个从库，这个从库不是实时与主库保持同步的，而是每隔1个小时同步一次主库，同步完之后立马断开1小时，这个从库会与主库保持1个小时的数据差距。\n当“删全库”事故发生时，只需要：\n（1）应用1小时延时从\n（2）将1小时延时从最近一次同步时间到，将执行“删全库”之前的binlog找到，重放\n快速恢复完毕。\n \n方案优点：能够快速找回数据\n潜在不足：万一，万一，万一，1小时延时从正在连上主库进行同步的一小段时间内，发生了“删全库”事故，那怎么办咧？\n \n ### 双份1小时延时从\n使用双份1小时延时从库，可以避免上述“万一，万一，万一”的事故发生。\n\n什么是双份1小时延时从？\n如图所示，两个1小时延时从，他们连主库同步数据的时间“岔开半小时”。\n这样，即使一个延时从连上主库进行同步的一小段时间内，发生了“删全库”事故，依然有另一个延时从保有半小时之前的数据，可以实施快速恢复。\n \n![](/images/restore-db/delay_bak.png)\n\n方案**优点**：没有万一，都能快速恢复数据\n潜在**不足**：资源利用率有点低，为了保证数据的安全性，多了2台延时从，降低了从库利用率\n \n### 提高从库效率\n\n1小时延时从也不是完全没有用，对于一些“允许延时”的业务，可以使用1小时延时从，例如：\n（1）运营后台，产品后台\n（2）BI进行数据同步\n（3）研发进行数据抽样，调研\n但需要注意的是，毕竟这是从库，只能够提供“只读”服务哟。\n \n### 总结\n保证数据的安全性是DBA第一要务，需要进行：\n（1）全量备份+增量备份，并定期进行恢复演练，但该方案恢复时间较久，对系统可用性影响大\n（2）1小时延时从，双份1小时延时从能极大加速数据库恢复时间\n（3）个人建议1小时延时从足够，后台只读服务可以连1小时延时从，提高资源利用率","source":"_posts/2016/restore-db.md","raw":"---\ntitle: 怎么快速恢复数据？\ndate: 2016-11-23 21:46:52\nupdated: 2016-11-23 21:46:52\ntags:\n- mysql\ncategories:\n---\n\n### 高可用数据库架构\n一般来说数据库集群会是主从架构：\n![](/images/restore-db/master-slave.png)\n或者主主架构：\n![](/images/restore-db/master-master.png)\n<!-- more --> \n如果此时主库宕机，可以：\n> 1. 一个从库顶上，重建集群\n> 2. 流量迁移到另一个主库\n\n来保证数据的安全性与服务的可用性。\n \n但是，如果人为不小心执行了“删全库”操作，命令会同步给其他从（主）库，导致所有库上的数据全部丢失，这下怎么办呢？\n可以问问自己，当这种情况发生的时候：\n> 1. 能不能恢复数据？（应该没有公司不能）\n> 2. 多久能够恢复数据？\n保证数据的安全性是DBA第一要务。\n \n ### 全量备份+增量备份\n常见的数据库安全性策略是：全量备份+增量备份。\n\n全量备份：定期（例如一个月）将库文件全量备份\n ![](/images/restore-db/all_bak.png)\n\n增量备份：定期（例如每天）将binlog增量备份\n ![](/images/restore-db/inc_bak.png)\n如果不小心误删了全库，可以这么恢复：\n（1）将最近一次全量备份的全库找到，拷贝回来（文件一般比较大），解压，应用\n（2）将最近一次全量备份后，每一天的增量binlog找到，拷贝回来（文件较多），依次重放\n（3）将最近一次增量备份后，到执行“删全库”之前的binlog找到，重放\n恢复完毕。\n为了保证方案的可靠性，建议定期进行恢复演练。\n \n方案优点：能够找回数据\n方案缺点：恢复时间非常长\n有没有更优，更快恢复的方案呢？\n \n### 1小时延时从\n使用1小时延时从库，可大大加速“删全库”恢复时间。\n\n什么是1小时延时从？\n增加一个从库，这个从库不是实时与主库保持同步的，而是每隔1个小时同步一次主库，同步完之后立马断开1小时，这个从库会与主库保持1个小时的数据差距。\n当“删全库”事故发生时，只需要：\n（1）应用1小时延时从\n（2）将1小时延时从最近一次同步时间到，将执行“删全库”之前的binlog找到，重放\n快速恢复完毕。\n \n方案优点：能够快速找回数据\n潜在不足：万一，万一，万一，1小时延时从正在连上主库进行同步的一小段时间内，发生了“删全库”事故，那怎么办咧？\n \n ### 双份1小时延时从\n使用双份1小时延时从库，可以避免上述“万一，万一，万一”的事故发生。\n\n什么是双份1小时延时从？\n如图所示，两个1小时延时从，他们连主库同步数据的时间“岔开半小时”。\n这样，即使一个延时从连上主库进行同步的一小段时间内，发生了“删全库”事故，依然有另一个延时从保有半小时之前的数据，可以实施快速恢复。\n \n![](/images/restore-db/delay_bak.png)\n\n方案**优点**：没有万一，都能快速恢复数据\n潜在**不足**：资源利用率有点低，为了保证数据的安全性，多了2台延时从，降低了从库利用率\n \n### 提高从库效率\n\n1小时延时从也不是完全没有用，对于一些“允许延时”的业务，可以使用1小时延时从，例如：\n（1）运营后台，产品后台\n（2）BI进行数据同步\n（3）研发进行数据抽样，调研\n但需要注意的是，毕竟这是从库，只能够提供“只读”服务哟。\n \n### 总结\n保证数据的安全性是DBA第一要务，需要进行：\n（1）全量备份+增量备份，并定期进行恢复演练，但该方案恢复时间较久，对系统可用性影响大\n（2）1小时延时从，双份1小时延时从能极大加速数据库恢复时间\n（3）个人建议1小时延时从足够，后台只读服务可以连1小时延时从，提高资源利用率","slug":"restore-db","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpag0022wsnnmrr4e6b3","content":"<h3 id=\"高可用数据库架构\"><a href=\"#高可用数据库架构\" class=\"headerlink\" title=\"高可用数据库架构\"></a>高可用数据库架构</h3><p>一般来说数据库集群会是主从架构：<br><img src=\"/images/restore-db/master-slave.png\" alt=\"\"><br>或者主主架构：<br><img src=\"/images/restore-db/master-master.png\" alt=\"\"><br><a id=\"more\"></a><br>如果此时主库宕机，可以：</p>\n<blockquote>\n<ol>\n<li>一个从库顶上，重建集群</li>\n<li>流量迁移到另一个主库</li>\n</ol>\n</blockquote>\n<p>来保证数据的安全性与服务的可用性。</p>\n<p>但是，如果人为不小心执行了“删全库”操作，命令会同步给其他从（主）库，导致所有库上的数据全部丢失，这下怎么办呢？<br>可以问问自己，当这种情况发生的时候：</p>\n<blockquote>\n<ol>\n<li>能不能恢复数据？（应该没有公司不能）</li>\n<li>多久能够恢复数据？<br>保证数据的安全性是DBA第一要务。</li>\n</ol>\n</blockquote>\n<h3 id=\"全量备份-增量备份\"><a href=\"#全量备份-增量备份\" class=\"headerlink\" title=\"全量备份+增量备份\"></a>全量备份+增量备份</h3><p>常见的数据库安全性策略是：全量备份+增量备份。</p>\n<p>全量备份：定期（例如一个月）将库文件全量备份<br> <img src=\"/images/restore-db/all_bak.png\" alt=\"\"></p>\n<p>增量备份：定期（例如每天）将binlog增量备份<br> <img src=\"/images/restore-db/inc_bak.png\" alt=\"\"><br>如果不小心误删了全库，可以这么恢复：<br>（1）将最近一次全量备份的全库找到，拷贝回来（文件一般比较大），解压，应用<br>（2）将最近一次全量备份后，每一天的增量binlog找到，拷贝回来（文件较多），依次重放<br>（3）将最近一次增量备份后，到执行“删全库”之前的binlog找到，重放<br>恢复完毕。<br>为了保证方案的可靠性，建议定期进行恢复演练。</p>\n<p>方案优点：能够找回数据<br>方案缺点：恢复时间非常长<br>有没有更优，更快恢复的方案呢？</p>\n<h3 id=\"1小时延时从\"><a href=\"#1小时延时从\" class=\"headerlink\" title=\"1小时延时从\"></a>1小时延时从</h3><p>使用1小时延时从库，可大大加速“删全库”恢复时间。</p>\n<p>什么是1小时延时从？<br>增加一个从库，这个从库不是实时与主库保持同步的，而是每隔1个小时同步一次主库，同步完之后立马断开1小时，这个从库会与主库保持1个小时的数据差距。<br>当“删全库”事故发生时，只需要：<br>（1）应用1小时延时从<br>（2）将1小时延时从最近一次同步时间到，将执行“删全库”之前的binlog找到，重放<br>快速恢复完毕。</p>\n<p>方案优点：能够快速找回数据<br>潜在不足：万一，万一，万一，1小时延时从正在连上主库进行同步的一小段时间内，发生了“删全库”事故，那怎么办咧？</p>\n<h3 id=\"双份1小时延时从\"><a href=\"#双份1小时延时从\" class=\"headerlink\" title=\"双份1小时延时从\"></a>双份1小时延时从</h3><p>使用双份1小时延时从库，可以避免上述“万一，万一，万一”的事故发生。</p>\n<p>什么是双份1小时延时从？<br>如图所示，两个1小时延时从，他们连主库同步数据的时间“岔开半小时”。<br>这样，即使一个延时从连上主库进行同步的一小段时间内，发生了“删全库”事故，依然有另一个延时从保有半小时之前的数据，可以实施快速恢复。</p>\n<p><img src=\"/images/restore-db/delay_bak.png\" alt=\"\"></p>\n<p>方案<strong>优点</strong>：没有万一，都能快速恢复数据<br>潜在<strong>不足</strong>：资源利用率有点低，为了保证数据的安全性，多了2台延时从，降低了从库利用率</p>\n<h3 id=\"提高从库效率\"><a href=\"#提高从库效率\" class=\"headerlink\" title=\"提高从库效率\"></a>提高从库效率</h3><p>1小时延时从也不是完全没有用，对于一些“允许延时”的业务，可以使用1小时延时从，例如：<br>（1）运营后台，产品后台<br>（2）BI进行数据同步<br>（3）研发进行数据抽样，调研<br>但需要注意的是，毕竟这是从库，只能够提供“只读”服务哟。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>保证数据的安全性是DBA第一要务，需要进行：<br>（1）全量备份+增量备份，并定期进行恢复演练，但该方案恢复时间较久，对系统可用性影响大<br>（2）1小时延时从，双份1小时延时从能极大加速数据库恢复时间<br>（3）个人建议1小时延时从足够，后台只读服务可以连1小时延时从，提高资源利用率</p>\n","excerpt":"<h3 id=\"高可用数据库架构\"><a href=\"#高可用数据库架构\" class=\"headerlink\" title=\"高可用数据库架构\"></a>高可用数据库架构</h3><p>一般来说数据库集群会是主从架构：<br><img src=\"/images/restore-db/master-slave.png\" alt=\"\"><br>或者主主架构：<br><img src=\"/images/restore-db/master-master.png\" alt=\"\"><br>","more":"<br>如果此时主库宕机，可以：</p>\n<blockquote>\n<ol>\n<li>一个从库顶上，重建集群</li>\n<li>流量迁移到另一个主库</li>\n</ol>\n</blockquote>\n<p>来保证数据的安全性与服务的可用性。</p>\n<p>但是，如果人为不小心执行了“删全库”操作，命令会同步给其他从（主）库，导致所有库上的数据全部丢失，这下怎么办呢？<br>可以问问自己，当这种情况发生的时候：</p>\n<blockquote>\n<ol>\n<li>能不能恢复数据？（应该没有公司不能）</li>\n<li>多久能够恢复数据？<br>保证数据的安全性是DBA第一要务。</li>\n</ol>\n</blockquote>\n<h3 id=\"全量备份-增量备份\"><a href=\"#全量备份-增量备份\" class=\"headerlink\" title=\"全量备份+增量备份\"></a>全量备份+增量备份</h3><p>常见的数据库安全性策略是：全量备份+增量备份。</p>\n<p>全量备份：定期（例如一个月）将库文件全量备份<br> <img src=\"/images/restore-db/all_bak.png\" alt=\"\"></p>\n<p>增量备份：定期（例如每天）将binlog增量备份<br> <img src=\"/images/restore-db/inc_bak.png\" alt=\"\"><br>如果不小心误删了全库，可以这么恢复：<br>（1）将最近一次全量备份的全库找到，拷贝回来（文件一般比较大），解压，应用<br>（2）将最近一次全量备份后，每一天的增量binlog找到，拷贝回来（文件较多），依次重放<br>（3）将最近一次增量备份后，到执行“删全库”之前的binlog找到，重放<br>恢复完毕。<br>为了保证方案的可靠性，建议定期进行恢复演练。</p>\n<p>方案优点：能够找回数据<br>方案缺点：恢复时间非常长<br>有没有更优，更快恢复的方案呢？</p>\n<h3 id=\"1小时延时从\"><a href=\"#1小时延时从\" class=\"headerlink\" title=\"1小时延时从\"></a>1小时延时从</h3><p>使用1小时延时从库，可大大加速“删全库”恢复时间。</p>\n<p>什么是1小时延时从？<br>增加一个从库，这个从库不是实时与主库保持同步的，而是每隔1个小时同步一次主库，同步完之后立马断开1小时，这个从库会与主库保持1个小时的数据差距。<br>当“删全库”事故发生时，只需要：<br>（1）应用1小时延时从<br>（2）将1小时延时从最近一次同步时间到，将执行“删全库”之前的binlog找到，重放<br>快速恢复完毕。</p>\n<p>方案优点：能够快速找回数据<br>潜在不足：万一，万一，万一，1小时延时从正在连上主库进行同步的一小段时间内，发生了“删全库”事故，那怎么办咧？</p>\n<h3 id=\"双份1小时延时从\"><a href=\"#双份1小时延时从\" class=\"headerlink\" title=\"双份1小时延时从\"></a>双份1小时延时从</h3><p>使用双份1小时延时从库，可以避免上述“万一，万一，万一”的事故发生。</p>\n<p>什么是双份1小时延时从？<br>如图所示，两个1小时延时从，他们连主库同步数据的时间“岔开半小时”。<br>这样，即使一个延时从连上主库进行同步的一小段时间内，发生了“删全库”事故，依然有另一个延时从保有半小时之前的数据，可以实施快速恢复。</p>\n<p><img src=\"/images/restore-db/delay_bak.png\" alt=\"\"></p>\n<p>方案<strong>优点</strong>：没有万一，都能快速恢复数据<br>潜在<strong>不足</strong>：资源利用率有点低，为了保证数据的安全性，多了2台延时从，降低了从库利用率</p>\n<h3 id=\"提高从库效率\"><a href=\"#提高从库效率\" class=\"headerlink\" title=\"提高从库效率\"></a>提高从库效率</h3><p>1小时延时从也不是完全没有用，对于一些“允许延时”的业务，可以使用1小时延时从，例如：<br>（1）运营后台，产品后台<br>（2）BI进行数据同步<br>（3）研发进行数据抽样，调研<br>但需要注意的是，毕竟这是从库，只能够提供“只读”服务哟。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>保证数据的安全性是DBA第一要务，需要进行：<br>（1）全量备份+增量备份，并定期进行恢复演练，但该方案恢复时间较久，对系统可用性影响大<br>（2）1小时延时从，双份1小时延时从能极大加速数据库恢复时间<br>（3）个人建议1小时延时从足够，后台只读服务可以连1小时延时从，提高资源利用率</p>"},{"title":"running","date":"2016-06-20T07:35:36.000Z","_content":"\n# 几个跑步的TIPS\n\n## 制定计划\n\n为了让你的身体更加习惯处于一种对运动需求的状态，你需要有计划的跑步。我们应该严格遵守每周至少3次或4次的跑步计划表，而不是等有时间或天气好的时候，随性的跑一下。跑步能强化你的下肢和核心肌肉，只要坚持下去你会发现越跑越轻松，同时，跑步能锻炼你的耐力。从短距离开始你的跑步计划，等感觉比较轻松时，再慢慢地在每周的锻炼中增加距离。\n<!-- more -->\n## 放慢速度\n\n没必要一开始就规定自己5分钟内要跑完一千米。放慢你的速度，让呼吸比走路时快上一点，而不是那种大口喘气到肺部都开始疼痛或上气不接下气。不要变速跑，即使这对腹部脂肪有很好的锻炼效果，但舒适的、连贯的步伐比快跑更加容易坚持。放慢速度可以让你将注意力集中到正确的跑步姿势上，这能减缓一些跑步带来的酸痛感，你也有空闲看看风景或与伙伴聊聊天，这些都会让你爱上户外跑步。当你的身体渐渐变得强壮，你的步伐也会自然增加，你也可以挑战一下变速跑。\n\n## 寻找乐趣\n\n如果你讨厌跑步的每分每秒，那么也许你有什么地方做错了。可以带上你的狗或约上最好的朋友，开发一条新的线路，听听你最喜欢的音乐或电台，买一身新的装备，用app记录你的足迹，又或者在游泳池边跑步，跑完后就能马上跳下去降温。\n\n## 爬山和下蹲\n\n强健的腿部肌肉能使跑步变得更轻而易举。一种方法是将爬山增加到你的跑步运动中，以加强腿部锻炼。跑上坡路会让你感到出奇的困难，但当你跑的顶端转向平路时，你会惊讶的觉得跑步是多么轻松的一件事。另外，你也可以在家里通过下蹲、弓步、蹬台阶或试试这个针对跑步者的瑜伽组合动作来锻炼你的下肢肌肉。\n\n## 别只是跑步\n\n按计划跑步能有效锻炼你的身体，让跑步变得更加轻松，但是如果跑步是你唯一的运动方式，厌烦和机械性劳损会使你感到难以忍受。在跑步的同时，增加一些有氧的常规锻炼，如骑车、徒步、舞蹈或游泳。做不同的有氧运动能使你身体的其他部位得到锻炼，所以每当你穿上运动鞋准备出门跑步时，会感到更加轻松。暂停跑步进行其他运动的最大好处在于，你真的会想念它，当你兴奋的出门跑步时，你会体会到更多的快乐。\n\n## 找准跑步最佳时间\n\n在适合自己的时间跑步最好。喜欢早晨跑步的人可以在去公司上班前，而偏爱夜晚跑步的人则可以在回家之后。 比选择什么时候跑步更重要的问题是：既不要在空腹时也不要在满腹(吃饱饭)的时候跑步。空腹的话会使不上力气，满腹则会由于血液的消化管集中，剧烈运动会对健康不利。最佳时间是在饭后2到3小时。 在清晨等空腹状态跑步时，最好提前30分钟左右饮用一些帮助消化和补充体力的运动型饮料或者可以吃根香蕉。\n\n## 要先做拉伸运动\n\n你减肥心切，所以穿上跑步鞋就直接开跑？这可不是最好的跑步瘦身方法。要知道，你体内的能源分为快速能源和储备能源两种。只有当快速能源消耗得差不多的时候，你体内的储备能源\"脂肪\"才会开始燃烧。就是说，如果体能不太好，伸直有可能你已经跑累了，脂肪还没开始消耗。所以，想要有效地跑步瘦身，应该在跑步前先做些拉伸运动或放松运动，一方面可以热身、防止受伤，另一方面可以先消耗一部分糖原，这样接下来再跑步，脂肪的燃烧效率能大大提高。\n\n## 不要天天跑\n\n虽然慢跑有益于保持健康和瘦身，但专家并不建议天天跑，最好隔一天跑一次。至于中间不跑步的那天，可以做做拉伸运动，增加全身的柔韧性，这样很重要，是保证全身新陈代谢顺畅的关键，尤其能防止脂肪和水液在四肢堆积。\n\n--------------------------------------------------------------------------------\n\n# 正确的跑步姿势\n\n## 挺直腰板，保持上身一条线\n\n跑步过程中， 需要伸直你的躯干，让后背舒服地挺起来，在跑步过程中总保持\"跑步身高\"。头部、脖子和背部保持一条直线， 双眼平视前方，不要低头，也不要来回扫视，这决定了你跑步的效率。有的爱好者特别是青少年，在跑步时喜欢身体左右摇晃，觉得这样跑起来\"带劲\"，其实这样不仅会增加不必要的体力消耗，而且还会破坏跑步的直线性；还有一些健身房为吸引顾客，在跑步机前安装电视让健身者观看，俗话说\"一心不能二用\"，这样会让健身者抬头仰视，而且降低安全性。\n\n## 肩膀、手臂要放松\n\n保持上半身姿势， 肩膀是关键。虽然说跑步是下半身的运动，但手臂的动作也不是可有可无的，手臂的来回摆动能给你前进的动力。最佳的姿势是双肩放松、自然下垂， 跑步时肩膀也要保持水平，胳膊自然微屈，双手半握拳，手臂应随步伐尽量前后摆动。跑累时，也注意不要耸肩， 可以晃晃肩膀，放松一下。\n\n## 臀部要紧张，抬腿要适度\n\n臀部是身体力量的中心，而且是人体最强壮的肌肉，保持一个正确身体姿势，臀部可高度紧张，给身体一个持续向前的动力。如果跑步中向前弯腰或者过于前倾， 那骨盆也会前倾， 这会给后背下部造成压力。 对于健身跑爱好者来说，抬腿要适度，不能一味的追求步幅和频率，应选择合适的步幅，尽可能每脚都落在身体的正下方。人们在刚开始跑步健身时， 总喜欢增加步幅来提高锻炼效果， 其实增大步幅势必造成腾空时间长、重心起伏大、落地力量重，这样对人体的震动会增大，久而久之会带来不必要的伤害。\n\n## 脚的落地姿势要正确\n\n跑步时，脚的落地尤为重要，应用脚后跟和脚中部落地，然后快速向前滚动脚掌，然后前脚掌蹬地离开地面。脚落地时声音不能太大，要轻而有弹性。 很多人在跑步时习惯全脚掌着地，其实这种落地方法并不科学，由于落地时没有缓冲，对身体带来很大的冲击，在柏油马路等硬地上跑步就更是如此；切忌内外八字，跑步时脚落地是\"内八字\"或\"外八字\"，那么膝盖和脚尖就不能保持在同一个方向上，就会加重膝关节的负担，长期下来容易造成膝关节等部位的损伤。\n\n## 跑起来，心肺更健康\n\n跑步是非常好的锻炼方法，可以有效提高心肺耐力。心肺耐力是人体心血管系统和呼吸系统摄入、运送、吸收利用氧气， 进行新陈代谢， 产生能量的能力， 也可以理解为一个人持续进行身体活动的能力。通俗点讲就是你能长时间地跑、游泳、爬楼梯和工作的能力。 心肺功能越强，走、跑、学习和工作就会越轻松， 进行各种活动保持的时间也会越长。科学研究表明，无论男女，\"心肺耐力差\" 是导致人群死亡的首要危险因素，\n\n--------------------------------------------------------------------------------\n\n# 其他的总结\n\n## 基本动作\n\n1\\. 一般人可以采取足中着地的方式，由足弓来缓冲震荡，减轻对膝关节的压力。但对于初级跑者，或者体重较大的跑者来说，可以由足尖慢跑开始。这样可以通过增加足弓缓冲，提高足弓支撑力，来降低对膝关节的冲击，预防膝关节受伤。以后可以逐步开始掌握正确的跑法，即\"足跟--全足--拇趾\"的方式。 2\\. 跑步时踝关节要有控制，不要刻意抬高脚趾和前脚掌，也无需用力蹬地，只要维持踝关节保持一定紧张度，避免踝关节扭伤。 3\\. 初跑者，步幅不要过大，防止膝关节在迈步时过伸，也会导致韧带的损伤。尽量选择直道或操场的外圈，可以减少膝关节内外侧受力不均，以及双腿负重不均而造成的关节损伤。 4\\. 绷紧臀部，髋关节前后摆动，避免骨盆过度前倾，使重心不过分向前，减轻地面对骨盆的作用力，保护骨盆及腰椎。确保髋关节前后摆动，减低地面反应力对骨盆的影响。 5\\. 微微收腹，感觉让腹肌靠住脊柱，尽可能采用规则的，有深度的腹式呼吸。 6\\. 腰部放松，上半身带动双臂向前后方向自然交替摆动，双臂靠近躯干，肘关节弯曲，半握拳，不要刻意把力量总在摆动双臂上。用力摆动双臂过抬臂过高会使心脏负担增加。 7\\. 颈部放松，头部直立，一直面朝前方，略低头收下颌，尽量闭嘴用鼻子呼吸。眼睛看向身前7~10米的距离。\n\n## 基本要求\n\n8\\. 呼吸时尽量采用鼻呼吸，若感觉呼吸局促可采用\"鼻吸口呼\"。鼻呼吸的好处是可以通过鼻腔湿润空气，防止干燥空气贸然进入肺部造成不适。还可以防止空气进入胃部，造成胀气。初跑者可以放慢跑步速度，用舌尖抵住门牙避免用口呼吸。同时，尽量采用腹式呼吸，胸式呼吸会增加肩胛带运动，造成肩关节紧张，更容易疲劳。 9\\. 刚进行跑步运动时，速度不重要，距离不重要，重要的是时间，只有能坚持一定时间，才能起到提高心肺功能和肌肉耐力的作用。初跑者需要根据自身情况选择跑步时间，可以先从五分钟开始，根据情况每周增加一两分钟，一年下来也能跑一个小时啦。控制跑步速度，理想状态是在跑步中顺畅讲话即可。如果上气不接下气的跑，会使肌肉无氧运动过多，带来乳酸堆积，造成身体酸痛疲劳，还可能导致岔气，得不偿失。\n\n## 运动装备\n\n10\\. 建议穿紧身衣，除了增加肌肉紧张度外，最重要的是可以避免因跑步带来的肌肉与骨分离。尤其是跑步初期，体重较大，长期不运动的人，小腿韧带强度不足，踝关节承受不住突然猛增的作用力，很容易造成胫腓骨近端关节错位。 11\\. 跑鞋选择非常重要，一定要选择可支撑足弓的跑鞋。当足底筋膜与肌腱韧性强度不足时，一双既有弹性又有支撑能力的跑鞋是足弓最重要的保护。跑鞋选择时，将足跟抵住鞋帮，拇趾距鞋尖保留一指距离。前掌宽度适宜。鞋平放于地面时，鞋尖应微微翘起约二横指（食指和中指两指并齐的宽度），保证足趾在运动中放松。 12\\. 手腕上建议戴毛巾式护腕，可随时擦汗，或头戴发带，同样能防止汗液流入眼睛引起不适。 13\\. 初期跑步尽量选择有节奏的跑步音乐，消除枯燥感。\n\n## 配合训练\n\n14\\. 跑步之后应做充分的拉伸，以消除肌肉运动产生的乳酸，还能使肌肉拉长，形成更好的线条。 15\\. 适宜的肌力训练，诸如深蹲，仰卧起坐，俯卧撑等等也要与跑步相结合。肌力训练不只是增加肌肉的力量，更能强化神经与肌肉联系，使机体更加协调，帮助跑者尽快找到适合自己的跑步方式。\n","source":"_posts/2016/running.md","raw":"---\ntitle: running\ndate: 2016-06-20T15:35:36.000Z\ntags:\n  - 运动\ncategories: \n---\n\n# 几个跑步的TIPS\n\n## 制定计划\n\n为了让你的身体更加习惯处于一种对运动需求的状态，你需要有计划的跑步。我们应该严格遵守每周至少3次或4次的跑步计划表，而不是等有时间或天气好的时候，随性的跑一下。跑步能强化你的下肢和核心肌肉，只要坚持下去你会发现越跑越轻松，同时，跑步能锻炼你的耐力。从短距离开始你的跑步计划，等感觉比较轻松时，再慢慢地在每周的锻炼中增加距离。\n<!-- more -->\n## 放慢速度\n\n没必要一开始就规定自己5分钟内要跑完一千米。放慢你的速度，让呼吸比走路时快上一点，而不是那种大口喘气到肺部都开始疼痛或上气不接下气。不要变速跑，即使这对腹部脂肪有很好的锻炼效果，但舒适的、连贯的步伐比快跑更加容易坚持。放慢速度可以让你将注意力集中到正确的跑步姿势上，这能减缓一些跑步带来的酸痛感，你也有空闲看看风景或与伙伴聊聊天，这些都会让你爱上户外跑步。当你的身体渐渐变得强壮，你的步伐也会自然增加，你也可以挑战一下变速跑。\n\n## 寻找乐趣\n\n如果你讨厌跑步的每分每秒，那么也许你有什么地方做错了。可以带上你的狗或约上最好的朋友，开发一条新的线路，听听你最喜欢的音乐或电台，买一身新的装备，用app记录你的足迹，又或者在游泳池边跑步，跑完后就能马上跳下去降温。\n\n## 爬山和下蹲\n\n强健的腿部肌肉能使跑步变得更轻而易举。一种方法是将爬山增加到你的跑步运动中，以加强腿部锻炼。跑上坡路会让你感到出奇的困难，但当你跑的顶端转向平路时，你会惊讶的觉得跑步是多么轻松的一件事。另外，你也可以在家里通过下蹲、弓步、蹬台阶或试试这个针对跑步者的瑜伽组合动作来锻炼你的下肢肌肉。\n\n## 别只是跑步\n\n按计划跑步能有效锻炼你的身体，让跑步变得更加轻松，但是如果跑步是你唯一的运动方式，厌烦和机械性劳损会使你感到难以忍受。在跑步的同时，增加一些有氧的常规锻炼，如骑车、徒步、舞蹈或游泳。做不同的有氧运动能使你身体的其他部位得到锻炼，所以每当你穿上运动鞋准备出门跑步时，会感到更加轻松。暂停跑步进行其他运动的最大好处在于，你真的会想念它，当你兴奋的出门跑步时，你会体会到更多的快乐。\n\n## 找准跑步最佳时间\n\n在适合自己的时间跑步最好。喜欢早晨跑步的人可以在去公司上班前，而偏爱夜晚跑步的人则可以在回家之后。 比选择什么时候跑步更重要的问题是：既不要在空腹时也不要在满腹(吃饱饭)的时候跑步。空腹的话会使不上力气，满腹则会由于血液的消化管集中，剧烈运动会对健康不利。最佳时间是在饭后2到3小时。 在清晨等空腹状态跑步时，最好提前30分钟左右饮用一些帮助消化和补充体力的运动型饮料或者可以吃根香蕉。\n\n## 要先做拉伸运动\n\n你减肥心切，所以穿上跑步鞋就直接开跑？这可不是最好的跑步瘦身方法。要知道，你体内的能源分为快速能源和储备能源两种。只有当快速能源消耗得差不多的时候，你体内的储备能源\"脂肪\"才会开始燃烧。就是说，如果体能不太好，伸直有可能你已经跑累了，脂肪还没开始消耗。所以，想要有效地跑步瘦身，应该在跑步前先做些拉伸运动或放松运动，一方面可以热身、防止受伤，另一方面可以先消耗一部分糖原，这样接下来再跑步，脂肪的燃烧效率能大大提高。\n\n## 不要天天跑\n\n虽然慢跑有益于保持健康和瘦身，但专家并不建议天天跑，最好隔一天跑一次。至于中间不跑步的那天，可以做做拉伸运动，增加全身的柔韧性，这样很重要，是保证全身新陈代谢顺畅的关键，尤其能防止脂肪和水液在四肢堆积。\n\n--------------------------------------------------------------------------------\n\n# 正确的跑步姿势\n\n## 挺直腰板，保持上身一条线\n\n跑步过程中， 需要伸直你的躯干，让后背舒服地挺起来，在跑步过程中总保持\"跑步身高\"。头部、脖子和背部保持一条直线， 双眼平视前方，不要低头，也不要来回扫视，这决定了你跑步的效率。有的爱好者特别是青少年，在跑步时喜欢身体左右摇晃，觉得这样跑起来\"带劲\"，其实这样不仅会增加不必要的体力消耗，而且还会破坏跑步的直线性；还有一些健身房为吸引顾客，在跑步机前安装电视让健身者观看，俗话说\"一心不能二用\"，这样会让健身者抬头仰视，而且降低安全性。\n\n## 肩膀、手臂要放松\n\n保持上半身姿势， 肩膀是关键。虽然说跑步是下半身的运动，但手臂的动作也不是可有可无的，手臂的来回摆动能给你前进的动力。最佳的姿势是双肩放松、自然下垂， 跑步时肩膀也要保持水平，胳膊自然微屈，双手半握拳，手臂应随步伐尽量前后摆动。跑累时，也注意不要耸肩， 可以晃晃肩膀，放松一下。\n\n## 臀部要紧张，抬腿要适度\n\n臀部是身体力量的中心，而且是人体最强壮的肌肉，保持一个正确身体姿势，臀部可高度紧张，给身体一个持续向前的动力。如果跑步中向前弯腰或者过于前倾， 那骨盆也会前倾， 这会给后背下部造成压力。 对于健身跑爱好者来说，抬腿要适度，不能一味的追求步幅和频率，应选择合适的步幅，尽可能每脚都落在身体的正下方。人们在刚开始跑步健身时， 总喜欢增加步幅来提高锻炼效果， 其实增大步幅势必造成腾空时间长、重心起伏大、落地力量重，这样对人体的震动会增大，久而久之会带来不必要的伤害。\n\n## 脚的落地姿势要正确\n\n跑步时，脚的落地尤为重要，应用脚后跟和脚中部落地，然后快速向前滚动脚掌，然后前脚掌蹬地离开地面。脚落地时声音不能太大，要轻而有弹性。 很多人在跑步时习惯全脚掌着地，其实这种落地方法并不科学，由于落地时没有缓冲，对身体带来很大的冲击，在柏油马路等硬地上跑步就更是如此；切忌内外八字，跑步时脚落地是\"内八字\"或\"外八字\"，那么膝盖和脚尖就不能保持在同一个方向上，就会加重膝关节的负担，长期下来容易造成膝关节等部位的损伤。\n\n## 跑起来，心肺更健康\n\n跑步是非常好的锻炼方法，可以有效提高心肺耐力。心肺耐力是人体心血管系统和呼吸系统摄入、运送、吸收利用氧气， 进行新陈代谢， 产生能量的能力， 也可以理解为一个人持续进行身体活动的能力。通俗点讲就是你能长时间地跑、游泳、爬楼梯和工作的能力。 心肺功能越强，走、跑、学习和工作就会越轻松， 进行各种活动保持的时间也会越长。科学研究表明，无论男女，\"心肺耐力差\" 是导致人群死亡的首要危险因素，\n\n--------------------------------------------------------------------------------\n\n# 其他的总结\n\n## 基本动作\n\n1\\. 一般人可以采取足中着地的方式，由足弓来缓冲震荡，减轻对膝关节的压力。但对于初级跑者，或者体重较大的跑者来说，可以由足尖慢跑开始。这样可以通过增加足弓缓冲，提高足弓支撑力，来降低对膝关节的冲击，预防膝关节受伤。以后可以逐步开始掌握正确的跑法，即\"足跟--全足--拇趾\"的方式。 2\\. 跑步时踝关节要有控制，不要刻意抬高脚趾和前脚掌，也无需用力蹬地，只要维持踝关节保持一定紧张度，避免踝关节扭伤。 3\\. 初跑者，步幅不要过大，防止膝关节在迈步时过伸，也会导致韧带的损伤。尽量选择直道或操场的外圈，可以减少膝关节内外侧受力不均，以及双腿负重不均而造成的关节损伤。 4\\. 绷紧臀部，髋关节前后摆动，避免骨盆过度前倾，使重心不过分向前，减轻地面对骨盆的作用力，保护骨盆及腰椎。确保髋关节前后摆动，减低地面反应力对骨盆的影响。 5\\. 微微收腹，感觉让腹肌靠住脊柱，尽可能采用规则的，有深度的腹式呼吸。 6\\. 腰部放松，上半身带动双臂向前后方向自然交替摆动，双臂靠近躯干，肘关节弯曲，半握拳，不要刻意把力量总在摆动双臂上。用力摆动双臂过抬臂过高会使心脏负担增加。 7\\. 颈部放松，头部直立，一直面朝前方，略低头收下颌，尽量闭嘴用鼻子呼吸。眼睛看向身前7~10米的距离。\n\n## 基本要求\n\n8\\. 呼吸时尽量采用鼻呼吸，若感觉呼吸局促可采用\"鼻吸口呼\"。鼻呼吸的好处是可以通过鼻腔湿润空气，防止干燥空气贸然进入肺部造成不适。还可以防止空气进入胃部，造成胀气。初跑者可以放慢跑步速度，用舌尖抵住门牙避免用口呼吸。同时，尽量采用腹式呼吸，胸式呼吸会增加肩胛带运动，造成肩关节紧张，更容易疲劳。 9\\. 刚进行跑步运动时，速度不重要，距离不重要，重要的是时间，只有能坚持一定时间，才能起到提高心肺功能和肌肉耐力的作用。初跑者需要根据自身情况选择跑步时间，可以先从五分钟开始，根据情况每周增加一两分钟，一年下来也能跑一个小时啦。控制跑步速度，理想状态是在跑步中顺畅讲话即可。如果上气不接下气的跑，会使肌肉无氧运动过多，带来乳酸堆积，造成身体酸痛疲劳，还可能导致岔气，得不偿失。\n\n## 运动装备\n\n10\\. 建议穿紧身衣，除了增加肌肉紧张度外，最重要的是可以避免因跑步带来的肌肉与骨分离。尤其是跑步初期，体重较大，长期不运动的人，小腿韧带强度不足，踝关节承受不住突然猛增的作用力，很容易造成胫腓骨近端关节错位。 11\\. 跑鞋选择非常重要，一定要选择可支撑足弓的跑鞋。当足底筋膜与肌腱韧性强度不足时，一双既有弹性又有支撑能力的跑鞋是足弓最重要的保护。跑鞋选择时，将足跟抵住鞋帮，拇趾距鞋尖保留一指距离。前掌宽度适宜。鞋平放于地面时，鞋尖应微微翘起约二横指（食指和中指两指并齐的宽度），保证足趾在运动中放松。 12\\. 手腕上建议戴毛巾式护腕，可随时擦汗，或头戴发带，同样能防止汗液流入眼睛引起不适。 13\\. 初期跑步尽量选择有节奏的跑步音乐，消除枯燥感。\n\n## 配合训练\n\n14\\. 跑步之后应做充分的拉伸，以消除肌肉运动产生的乳酸，还能使肌肉拉长，形成更好的线条。 15\\. 适宜的肌力训练，诸如深蹲，仰卧起坐，俯卧撑等等也要与跑步相结合。肌力训练不只是增加肌肉的力量，更能强化神经与肌肉联系，使机体更加协调，帮助跑者尽快找到适合自己的跑步方式。\n","slug":"running","published":1,"updated":"2017-01-04T04:00:27.154Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpag0024wsnn2qtk0t3x","content":"<h1 id=\"几个跑步的TIPS\"><a href=\"#几个跑步的TIPS\" class=\"headerlink\" title=\"几个跑步的TIPS\"></a>几个跑步的TIPS</h1><h2 id=\"制定计划\"><a href=\"#制定计划\" class=\"headerlink\" title=\"制定计划\"></a>制定计划</h2><p>为了让你的身体更加习惯处于一种对运动需求的状态，你需要有计划的跑步。我们应该严格遵守每周至少3次或4次的跑步计划表，而不是等有时间或天气好的时候，随性的跑一下。跑步能强化你的下肢和核心肌肉，只要坚持下去你会发现越跑越轻松，同时，跑步能锻炼你的耐力。从短距离开始你的跑步计划，等感觉比较轻松时，再慢慢地在每周的锻炼中增加距离。<br><a id=\"more\"></a></p>\n<h2 id=\"放慢速度\"><a href=\"#放慢速度\" class=\"headerlink\" title=\"放慢速度\"></a>放慢速度</h2><p>没必要一开始就规定自己5分钟内要跑完一千米。放慢你的速度，让呼吸比走路时快上一点，而不是那种大口喘气到肺部都开始疼痛或上气不接下气。不要变速跑，即使这对腹部脂肪有很好的锻炼效果，但舒适的、连贯的步伐比快跑更加容易坚持。放慢速度可以让你将注意力集中到正确的跑步姿势上，这能减缓一些跑步带来的酸痛感，你也有空闲看看风景或与伙伴聊聊天，这些都会让你爱上户外跑步。当你的身体渐渐变得强壮，你的步伐也会自然增加，你也可以挑战一下变速跑。</p>\n<h2 id=\"寻找乐趣\"><a href=\"#寻找乐趣\" class=\"headerlink\" title=\"寻找乐趣\"></a>寻找乐趣</h2><p>如果你讨厌跑步的每分每秒，那么也许你有什么地方做错了。可以带上你的狗或约上最好的朋友，开发一条新的线路，听听你最喜欢的音乐或电台，买一身新的装备，用app记录你的足迹，又或者在游泳池边跑步，跑完后就能马上跳下去降温。</p>\n<h2 id=\"爬山和下蹲\"><a href=\"#爬山和下蹲\" class=\"headerlink\" title=\"爬山和下蹲\"></a>爬山和下蹲</h2><p>强健的腿部肌肉能使跑步变得更轻而易举。一种方法是将爬山增加到你的跑步运动中，以加强腿部锻炼。跑上坡路会让你感到出奇的困难，但当你跑的顶端转向平路时，你会惊讶的觉得跑步是多么轻松的一件事。另外，你也可以在家里通过下蹲、弓步、蹬台阶或试试这个针对跑步者的瑜伽组合动作来锻炼你的下肢肌肉。</p>\n<h2 id=\"别只是跑步\"><a href=\"#别只是跑步\" class=\"headerlink\" title=\"别只是跑步\"></a>别只是跑步</h2><p>按计划跑步能有效锻炼你的身体，让跑步变得更加轻松，但是如果跑步是你唯一的运动方式，厌烦和机械性劳损会使你感到难以忍受。在跑步的同时，增加一些有氧的常规锻炼，如骑车、徒步、舞蹈或游泳。做不同的有氧运动能使你身体的其他部位得到锻炼，所以每当你穿上运动鞋准备出门跑步时，会感到更加轻松。暂停跑步进行其他运动的最大好处在于，你真的会想念它，当你兴奋的出门跑步时，你会体会到更多的快乐。</p>\n<h2 id=\"找准跑步最佳时间\"><a href=\"#找准跑步最佳时间\" class=\"headerlink\" title=\"找准跑步最佳时间\"></a>找准跑步最佳时间</h2><p>在适合自己的时间跑步最好。喜欢早晨跑步的人可以在去公司上班前，而偏爱夜晚跑步的人则可以在回家之后。 比选择什么时候跑步更重要的问题是：既不要在空腹时也不要在满腹(吃饱饭)的时候跑步。空腹的话会使不上力气，满腹则会由于血液的消化管集中，剧烈运动会对健康不利。最佳时间是在饭后2到3小时。 在清晨等空腹状态跑步时，最好提前30分钟左右饮用一些帮助消化和补充体力的运动型饮料或者可以吃根香蕉。</p>\n<h2 id=\"要先做拉伸运动\"><a href=\"#要先做拉伸运动\" class=\"headerlink\" title=\"要先做拉伸运动\"></a>要先做拉伸运动</h2><p>你减肥心切，所以穿上跑步鞋就直接开跑？这可不是最好的跑步瘦身方法。要知道，你体内的能源分为快速能源和储备能源两种。只有当快速能源消耗得差不多的时候，你体内的储备能源”脂肪”才会开始燃烧。就是说，如果体能不太好，伸直有可能你已经跑累了，脂肪还没开始消耗。所以，想要有效地跑步瘦身，应该在跑步前先做些拉伸运动或放松运动，一方面可以热身、防止受伤，另一方面可以先消耗一部分糖原，这样接下来再跑步，脂肪的燃烧效率能大大提高。</p>\n<h2 id=\"不要天天跑\"><a href=\"#不要天天跑\" class=\"headerlink\" title=\"不要天天跑\"></a>不要天天跑</h2><p>虽然慢跑有益于保持健康和瘦身，但专家并不建议天天跑，最好隔一天跑一次。至于中间不跑步的那天，可以做做拉伸运动，增加全身的柔韧性，这样很重要，是保证全身新陈代谢顺畅的关键，尤其能防止脂肪和水液在四肢堆积。</p>\n<hr>\n<h1 id=\"正确的跑步姿势\"><a href=\"#正确的跑步姿势\" class=\"headerlink\" title=\"正确的跑步姿势\"></a>正确的跑步姿势</h1><h2 id=\"挺直腰板，保持上身一条线\"><a href=\"#挺直腰板，保持上身一条线\" class=\"headerlink\" title=\"挺直腰板，保持上身一条线\"></a>挺直腰板，保持上身一条线</h2><p>跑步过程中， 需要伸直你的躯干，让后背舒服地挺起来，在跑步过程中总保持”跑步身高”。头部、脖子和背部保持一条直线， 双眼平视前方，不要低头，也不要来回扫视，这决定了你跑步的效率。有的爱好者特别是青少年，在跑步时喜欢身体左右摇晃，觉得这样跑起来”带劲”，其实这样不仅会增加不必要的体力消耗，而且还会破坏跑步的直线性；还有一些健身房为吸引顾客，在跑步机前安装电视让健身者观看，俗话说”一心不能二用”，这样会让健身者抬头仰视，而且降低安全性。</p>\n<h2 id=\"肩膀、手臂要放松\"><a href=\"#肩膀、手臂要放松\" class=\"headerlink\" title=\"肩膀、手臂要放松\"></a>肩膀、手臂要放松</h2><p>保持上半身姿势， 肩膀是关键。虽然说跑步是下半身的运动，但手臂的动作也不是可有可无的，手臂的来回摆动能给你前进的动力。最佳的姿势是双肩放松、自然下垂， 跑步时肩膀也要保持水平，胳膊自然微屈，双手半握拳，手臂应随步伐尽量前后摆动。跑累时，也注意不要耸肩， 可以晃晃肩膀，放松一下。</p>\n<h2 id=\"臀部要紧张，抬腿要适度\"><a href=\"#臀部要紧张，抬腿要适度\" class=\"headerlink\" title=\"臀部要紧张，抬腿要适度\"></a>臀部要紧张，抬腿要适度</h2><p>臀部是身体力量的中心，而且是人体最强壮的肌肉，保持一个正确身体姿势，臀部可高度紧张，给身体一个持续向前的动力。如果跑步中向前弯腰或者过于前倾， 那骨盆也会前倾， 这会给后背下部造成压力。 对于健身跑爱好者来说，抬腿要适度，不能一味的追求步幅和频率，应选择合适的步幅，尽可能每脚都落在身体的正下方。人们在刚开始跑步健身时， 总喜欢增加步幅来提高锻炼效果， 其实增大步幅势必造成腾空时间长、重心起伏大、落地力量重，这样对人体的震动会增大，久而久之会带来不必要的伤害。</p>\n<h2 id=\"脚的落地姿势要正确\"><a href=\"#脚的落地姿势要正确\" class=\"headerlink\" title=\"脚的落地姿势要正确\"></a>脚的落地姿势要正确</h2><p>跑步时，脚的落地尤为重要，应用脚后跟和脚中部落地，然后快速向前滚动脚掌，然后前脚掌蹬地离开地面。脚落地时声音不能太大，要轻而有弹性。 很多人在跑步时习惯全脚掌着地，其实这种落地方法并不科学，由于落地时没有缓冲，对身体带来很大的冲击，在柏油马路等硬地上跑步就更是如此；切忌内外八字，跑步时脚落地是”内八字”或”外八字”，那么膝盖和脚尖就不能保持在同一个方向上，就会加重膝关节的负担，长期下来容易造成膝关节等部位的损伤。</p>\n<h2 id=\"跑起来，心肺更健康\"><a href=\"#跑起来，心肺更健康\" class=\"headerlink\" title=\"跑起来，心肺更健康\"></a>跑起来，心肺更健康</h2><p>跑步是非常好的锻炼方法，可以有效提高心肺耐力。心肺耐力是人体心血管系统和呼吸系统摄入、运送、吸收利用氧气， 进行新陈代谢， 产生能量的能力， 也可以理解为一个人持续进行身体活动的能力。通俗点讲就是你能长时间地跑、游泳、爬楼梯和工作的能力。 心肺功能越强，走、跑、学习和工作就会越轻松， 进行各种活动保持的时间也会越长。科学研究表明，无论男女，”心肺耐力差” 是导致人群死亡的首要危险因素，</p>\n<hr>\n<h1 id=\"其他的总结\"><a href=\"#其他的总结\" class=\"headerlink\" title=\"其他的总结\"></a>其他的总结</h1><h2 id=\"基本动作\"><a href=\"#基本动作\" class=\"headerlink\" title=\"基本动作\"></a>基本动作</h2><p>1. 一般人可以采取足中着地的方式，由足弓来缓冲震荡，减轻对膝关节的压力。但对于初级跑者，或者体重较大的跑者来说，可以由足尖慢跑开始。这样可以通过增加足弓缓冲，提高足弓支撑力，来降低对膝关节的冲击，预防膝关节受伤。以后可以逐步开始掌握正确的跑法，即”足跟–全足–拇趾”的方式。 2. 跑步时踝关节要有控制，不要刻意抬高脚趾和前脚掌，也无需用力蹬地，只要维持踝关节保持一定紧张度，避免踝关节扭伤。 3. 初跑者，步幅不要过大，防止膝关节在迈步时过伸，也会导致韧带的损伤。尽量选择直道或操场的外圈，可以减少膝关节内外侧受力不均，以及双腿负重不均而造成的关节损伤。 4. 绷紧臀部，髋关节前后摆动，避免骨盆过度前倾，使重心不过分向前，减轻地面对骨盆的作用力，保护骨盆及腰椎。确保髋关节前后摆动，减低地面反应力对骨盆的影响。 5. 微微收腹，感觉让腹肌靠住脊柱，尽可能采用规则的，有深度的腹式呼吸。 6. 腰部放松，上半身带动双臂向前后方向自然交替摆动，双臂靠近躯干，肘关节弯曲，半握拳，不要刻意把力量总在摆动双臂上。用力摆动双臂过抬臂过高会使心脏负担增加。 7. 颈部放松，头部直立，一直面朝前方，略低头收下颌，尽量闭嘴用鼻子呼吸。眼睛看向身前7~10米的距离。</p>\n<h2 id=\"基本要求\"><a href=\"#基本要求\" class=\"headerlink\" title=\"基本要求\"></a>基本要求</h2><p>8. 呼吸时尽量采用鼻呼吸，若感觉呼吸局促可采用”鼻吸口呼”。鼻呼吸的好处是可以通过鼻腔湿润空气，防止干燥空气贸然进入肺部造成不适。还可以防止空气进入胃部，造成胀气。初跑者可以放慢跑步速度，用舌尖抵住门牙避免用口呼吸。同时，尽量采用腹式呼吸，胸式呼吸会增加肩胛带运动，造成肩关节紧张，更容易疲劳。 9. 刚进行跑步运动时，速度不重要，距离不重要，重要的是时间，只有能坚持一定时间，才能起到提高心肺功能和肌肉耐力的作用。初跑者需要根据自身情况选择跑步时间，可以先从五分钟开始，根据情况每周增加一两分钟，一年下来也能跑一个小时啦。控制跑步速度，理想状态是在跑步中顺畅讲话即可。如果上气不接下气的跑，会使肌肉无氧运动过多，带来乳酸堆积，造成身体酸痛疲劳，还可能导致岔气，得不偿失。</p>\n<h2 id=\"运动装备\"><a href=\"#运动装备\" class=\"headerlink\" title=\"运动装备\"></a>运动装备</h2><p>10. 建议穿紧身衣，除了增加肌肉紧张度外，最重要的是可以避免因跑步带来的肌肉与骨分离。尤其是跑步初期，体重较大，长期不运动的人，小腿韧带强度不足，踝关节承受不住突然猛增的作用力，很容易造成胫腓骨近端关节错位。 11. 跑鞋选择非常重要，一定要选择可支撑足弓的跑鞋。当足底筋膜与肌腱韧性强度不足时，一双既有弹性又有支撑能力的跑鞋是足弓最重要的保护。跑鞋选择时，将足跟抵住鞋帮，拇趾距鞋尖保留一指距离。前掌宽度适宜。鞋平放于地面时，鞋尖应微微翘起约二横指（食指和中指两指并齐的宽度），保证足趾在运动中放松。 12. 手腕上建议戴毛巾式护腕，可随时擦汗，或头戴发带，同样能防止汗液流入眼睛引起不适。 13. 初期跑步尽量选择有节奏的跑步音乐，消除枯燥感。</p>\n<h2 id=\"配合训练\"><a href=\"#配合训练\" class=\"headerlink\" title=\"配合训练\"></a>配合训练</h2><p>14. 跑步之后应做充分的拉伸，以消除肌肉运动产生的乳酸，还能使肌肉拉长，形成更好的线条。 15. 适宜的肌力训练，诸如深蹲，仰卧起坐，俯卧撑等等也要与跑步相结合。肌力训练不只是增加肌肉的力量，更能强化神经与肌肉联系，使机体更加协调，帮助跑者尽快找到适合自己的跑步方式。</p>\n","excerpt":"<h1 id=\"几个跑步的TIPS\"><a href=\"#几个跑步的TIPS\" class=\"headerlink\" title=\"几个跑步的TIPS\"></a>几个跑步的TIPS</h1><h2 id=\"制定计划\"><a href=\"#制定计划\" class=\"headerlink\" title=\"制定计划\"></a>制定计划</h2><p>为了让你的身体更加习惯处于一种对运动需求的状态，你需要有计划的跑步。我们应该严格遵守每周至少3次或4次的跑步计划表，而不是等有时间或天气好的时候，随性的跑一下。跑步能强化你的下肢和核心肌肉，只要坚持下去你会发现越跑越轻松，同时，跑步能锻炼你的耐力。从短距离开始你的跑步计划，等感觉比较轻松时，再慢慢地在每周的锻炼中增加距离。<br>","more":"</p>\n<h2 id=\"放慢速度\"><a href=\"#放慢速度\" class=\"headerlink\" title=\"放慢速度\"></a>放慢速度</h2><p>没必要一开始就规定自己5分钟内要跑完一千米。放慢你的速度，让呼吸比走路时快上一点，而不是那种大口喘气到肺部都开始疼痛或上气不接下气。不要变速跑，即使这对腹部脂肪有很好的锻炼效果，但舒适的、连贯的步伐比快跑更加容易坚持。放慢速度可以让你将注意力集中到正确的跑步姿势上，这能减缓一些跑步带来的酸痛感，你也有空闲看看风景或与伙伴聊聊天，这些都会让你爱上户外跑步。当你的身体渐渐变得强壮，你的步伐也会自然增加，你也可以挑战一下变速跑。</p>\n<h2 id=\"寻找乐趣\"><a href=\"#寻找乐趣\" class=\"headerlink\" title=\"寻找乐趣\"></a>寻找乐趣</h2><p>如果你讨厌跑步的每分每秒，那么也许你有什么地方做错了。可以带上你的狗或约上最好的朋友，开发一条新的线路，听听你最喜欢的音乐或电台，买一身新的装备，用app记录你的足迹，又或者在游泳池边跑步，跑完后就能马上跳下去降温。</p>\n<h2 id=\"爬山和下蹲\"><a href=\"#爬山和下蹲\" class=\"headerlink\" title=\"爬山和下蹲\"></a>爬山和下蹲</h2><p>强健的腿部肌肉能使跑步变得更轻而易举。一种方法是将爬山增加到你的跑步运动中，以加强腿部锻炼。跑上坡路会让你感到出奇的困难，但当你跑的顶端转向平路时，你会惊讶的觉得跑步是多么轻松的一件事。另外，你也可以在家里通过下蹲、弓步、蹬台阶或试试这个针对跑步者的瑜伽组合动作来锻炼你的下肢肌肉。</p>\n<h2 id=\"别只是跑步\"><a href=\"#别只是跑步\" class=\"headerlink\" title=\"别只是跑步\"></a>别只是跑步</h2><p>按计划跑步能有效锻炼你的身体，让跑步变得更加轻松，但是如果跑步是你唯一的运动方式，厌烦和机械性劳损会使你感到难以忍受。在跑步的同时，增加一些有氧的常规锻炼，如骑车、徒步、舞蹈或游泳。做不同的有氧运动能使你身体的其他部位得到锻炼，所以每当你穿上运动鞋准备出门跑步时，会感到更加轻松。暂停跑步进行其他运动的最大好处在于，你真的会想念它，当你兴奋的出门跑步时，你会体会到更多的快乐。</p>\n<h2 id=\"找准跑步最佳时间\"><a href=\"#找准跑步最佳时间\" class=\"headerlink\" title=\"找准跑步最佳时间\"></a>找准跑步最佳时间</h2><p>在适合自己的时间跑步最好。喜欢早晨跑步的人可以在去公司上班前，而偏爱夜晚跑步的人则可以在回家之后。 比选择什么时候跑步更重要的问题是：既不要在空腹时也不要在满腹(吃饱饭)的时候跑步。空腹的话会使不上力气，满腹则会由于血液的消化管集中，剧烈运动会对健康不利。最佳时间是在饭后2到3小时。 在清晨等空腹状态跑步时，最好提前30分钟左右饮用一些帮助消化和补充体力的运动型饮料或者可以吃根香蕉。</p>\n<h2 id=\"要先做拉伸运动\"><a href=\"#要先做拉伸运动\" class=\"headerlink\" title=\"要先做拉伸运动\"></a>要先做拉伸运动</h2><p>你减肥心切，所以穿上跑步鞋就直接开跑？这可不是最好的跑步瘦身方法。要知道，你体内的能源分为快速能源和储备能源两种。只有当快速能源消耗得差不多的时候，你体内的储备能源”脂肪”才会开始燃烧。就是说，如果体能不太好，伸直有可能你已经跑累了，脂肪还没开始消耗。所以，想要有效地跑步瘦身，应该在跑步前先做些拉伸运动或放松运动，一方面可以热身、防止受伤，另一方面可以先消耗一部分糖原，这样接下来再跑步，脂肪的燃烧效率能大大提高。</p>\n<h2 id=\"不要天天跑\"><a href=\"#不要天天跑\" class=\"headerlink\" title=\"不要天天跑\"></a>不要天天跑</h2><p>虽然慢跑有益于保持健康和瘦身，但专家并不建议天天跑，最好隔一天跑一次。至于中间不跑步的那天，可以做做拉伸运动，增加全身的柔韧性，这样很重要，是保证全身新陈代谢顺畅的关键，尤其能防止脂肪和水液在四肢堆积。</p>\n<hr>\n<h1 id=\"正确的跑步姿势\"><a href=\"#正确的跑步姿势\" class=\"headerlink\" title=\"正确的跑步姿势\"></a>正确的跑步姿势</h1><h2 id=\"挺直腰板，保持上身一条线\"><a href=\"#挺直腰板，保持上身一条线\" class=\"headerlink\" title=\"挺直腰板，保持上身一条线\"></a>挺直腰板，保持上身一条线</h2><p>跑步过程中， 需要伸直你的躯干，让后背舒服地挺起来，在跑步过程中总保持”跑步身高”。头部、脖子和背部保持一条直线， 双眼平视前方，不要低头，也不要来回扫视，这决定了你跑步的效率。有的爱好者特别是青少年，在跑步时喜欢身体左右摇晃，觉得这样跑起来”带劲”，其实这样不仅会增加不必要的体力消耗，而且还会破坏跑步的直线性；还有一些健身房为吸引顾客，在跑步机前安装电视让健身者观看，俗话说”一心不能二用”，这样会让健身者抬头仰视，而且降低安全性。</p>\n<h2 id=\"肩膀、手臂要放松\"><a href=\"#肩膀、手臂要放松\" class=\"headerlink\" title=\"肩膀、手臂要放松\"></a>肩膀、手臂要放松</h2><p>保持上半身姿势， 肩膀是关键。虽然说跑步是下半身的运动，但手臂的动作也不是可有可无的，手臂的来回摆动能给你前进的动力。最佳的姿势是双肩放松、自然下垂， 跑步时肩膀也要保持水平，胳膊自然微屈，双手半握拳，手臂应随步伐尽量前后摆动。跑累时，也注意不要耸肩， 可以晃晃肩膀，放松一下。</p>\n<h2 id=\"臀部要紧张，抬腿要适度\"><a href=\"#臀部要紧张，抬腿要适度\" class=\"headerlink\" title=\"臀部要紧张，抬腿要适度\"></a>臀部要紧张，抬腿要适度</h2><p>臀部是身体力量的中心，而且是人体最强壮的肌肉，保持一个正确身体姿势，臀部可高度紧张，给身体一个持续向前的动力。如果跑步中向前弯腰或者过于前倾， 那骨盆也会前倾， 这会给后背下部造成压力。 对于健身跑爱好者来说，抬腿要适度，不能一味的追求步幅和频率，应选择合适的步幅，尽可能每脚都落在身体的正下方。人们在刚开始跑步健身时， 总喜欢增加步幅来提高锻炼效果， 其实增大步幅势必造成腾空时间长、重心起伏大、落地力量重，这样对人体的震动会增大，久而久之会带来不必要的伤害。</p>\n<h2 id=\"脚的落地姿势要正确\"><a href=\"#脚的落地姿势要正确\" class=\"headerlink\" title=\"脚的落地姿势要正确\"></a>脚的落地姿势要正确</h2><p>跑步时，脚的落地尤为重要，应用脚后跟和脚中部落地，然后快速向前滚动脚掌，然后前脚掌蹬地离开地面。脚落地时声音不能太大，要轻而有弹性。 很多人在跑步时习惯全脚掌着地，其实这种落地方法并不科学，由于落地时没有缓冲，对身体带来很大的冲击，在柏油马路等硬地上跑步就更是如此；切忌内外八字，跑步时脚落地是”内八字”或”外八字”，那么膝盖和脚尖就不能保持在同一个方向上，就会加重膝关节的负担，长期下来容易造成膝关节等部位的损伤。</p>\n<h2 id=\"跑起来，心肺更健康\"><a href=\"#跑起来，心肺更健康\" class=\"headerlink\" title=\"跑起来，心肺更健康\"></a>跑起来，心肺更健康</h2><p>跑步是非常好的锻炼方法，可以有效提高心肺耐力。心肺耐力是人体心血管系统和呼吸系统摄入、运送、吸收利用氧气， 进行新陈代谢， 产生能量的能力， 也可以理解为一个人持续进行身体活动的能力。通俗点讲就是你能长时间地跑、游泳、爬楼梯和工作的能力。 心肺功能越强，走、跑、学习和工作就会越轻松， 进行各种活动保持的时间也会越长。科学研究表明，无论男女，”心肺耐力差” 是导致人群死亡的首要危险因素，</p>\n<hr>\n<h1 id=\"其他的总结\"><a href=\"#其他的总结\" class=\"headerlink\" title=\"其他的总结\"></a>其他的总结</h1><h2 id=\"基本动作\"><a href=\"#基本动作\" class=\"headerlink\" title=\"基本动作\"></a>基本动作</h2><p>1. 一般人可以采取足中着地的方式，由足弓来缓冲震荡，减轻对膝关节的压力。但对于初级跑者，或者体重较大的跑者来说，可以由足尖慢跑开始。这样可以通过增加足弓缓冲，提高足弓支撑力，来降低对膝关节的冲击，预防膝关节受伤。以后可以逐步开始掌握正确的跑法，即”足跟–全足–拇趾”的方式。 2. 跑步时踝关节要有控制，不要刻意抬高脚趾和前脚掌，也无需用力蹬地，只要维持踝关节保持一定紧张度，避免踝关节扭伤。 3. 初跑者，步幅不要过大，防止膝关节在迈步时过伸，也会导致韧带的损伤。尽量选择直道或操场的外圈，可以减少膝关节内外侧受力不均，以及双腿负重不均而造成的关节损伤。 4. 绷紧臀部，髋关节前后摆动，避免骨盆过度前倾，使重心不过分向前，减轻地面对骨盆的作用力，保护骨盆及腰椎。确保髋关节前后摆动，减低地面反应力对骨盆的影响。 5. 微微收腹，感觉让腹肌靠住脊柱，尽可能采用规则的，有深度的腹式呼吸。 6. 腰部放松，上半身带动双臂向前后方向自然交替摆动，双臂靠近躯干，肘关节弯曲，半握拳，不要刻意把力量总在摆动双臂上。用力摆动双臂过抬臂过高会使心脏负担增加。 7. 颈部放松，头部直立，一直面朝前方，略低头收下颌，尽量闭嘴用鼻子呼吸。眼睛看向身前7~10米的距离。</p>\n<h2 id=\"基本要求\"><a href=\"#基本要求\" class=\"headerlink\" title=\"基本要求\"></a>基本要求</h2><p>8. 呼吸时尽量采用鼻呼吸，若感觉呼吸局促可采用”鼻吸口呼”。鼻呼吸的好处是可以通过鼻腔湿润空气，防止干燥空气贸然进入肺部造成不适。还可以防止空气进入胃部，造成胀气。初跑者可以放慢跑步速度，用舌尖抵住门牙避免用口呼吸。同时，尽量采用腹式呼吸，胸式呼吸会增加肩胛带运动，造成肩关节紧张，更容易疲劳。 9. 刚进行跑步运动时，速度不重要，距离不重要，重要的是时间，只有能坚持一定时间，才能起到提高心肺功能和肌肉耐力的作用。初跑者需要根据自身情况选择跑步时间，可以先从五分钟开始，根据情况每周增加一两分钟，一年下来也能跑一个小时啦。控制跑步速度，理想状态是在跑步中顺畅讲话即可。如果上气不接下气的跑，会使肌肉无氧运动过多，带来乳酸堆积，造成身体酸痛疲劳，还可能导致岔气，得不偿失。</p>\n<h2 id=\"运动装备\"><a href=\"#运动装备\" class=\"headerlink\" title=\"运动装备\"></a>运动装备</h2><p>10. 建议穿紧身衣，除了增加肌肉紧张度外，最重要的是可以避免因跑步带来的肌肉与骨分离。尤其是跑步初期，体重较大，长期不运动的人，小腿韧带强度不足，踝关节承受不住突然猛增的作用力，很容易造成胫腓骨近端关节错位。 11. 跑鞋选择非常重要，一定要选择可支撑足弓的跑鞋。当足底筋膜与肌腱韧性强度不足时，一双既有弹性又有支撑能力的跑鞋是足弓最重要的保护。跑鞋选择时，将足跟抵住鞋帮，拇趾距鞋尖保留一指距离。前掌宽度适宜。鞋平放于地面时，鞋尖应微微翘起约二横指（食指和中指两指并齐的宽度），保证足趾在运动中放松。 12. 手腕上建议戴毛巾式护腕，可随时擦汗，或头戴发带，同样能防止汗液流入眼睛引起不适。 13. 初期跑步尽量选择有节奏的跑步音乐，消除枯燥感。</p>\n<h2 id=\"配合训练\"><a href=\"#配合训练\" class=\"headerlink\" title=\"配合训练\"></a>配合训练</h2><p>14. 跑步之后应做充分的拉伸，以消除肌肉运动产生的乳酸，还能使肌肉拉长，形成更好的线条。 15. 适宜的肌力训练，诸如深蹲，仰卧起坐，俯卧撑等等也要与跑步相结合。肌力训练不只是增加肌肉的力量，更能强化神经与肌肉联系，使机体更加协调，帮助跑者尽快找到适合自己的跑步方式。</p>"},{"title":"做秒杀的几个思路","date":"2016-12-01T05:52:43.000Z","updated":"2016-12-01T05:52:43.000Z","_content":"\n# 秒杀业务为什么难做\n1. im系统，例如qq或者微博，每个人都读自己的数据（好友列表、群列表、个人信息）；\n1. 微博系统，每个人读你关注的人的数据，一个人读多个人的数据；\n1. 秒杀系统，库存只有一份，所有人会在集中的时间读和写这些数据，多个人读一个数据。\n \n> 小米手机每周二的秒杀，可能手机只有1万部，但瞬时进入的流量可能是几百几千万。\n\n> 12306抢票，票是有限的，库存一份，瞬时流量非常多，都读相同的库存。读写冲突，锁非常严重，这是秒杀业务难的地方。那我们怎么优化秒杀业务的架构呢？（其实12306比淘宝要更难做，因为所有的都是动态库存，几百种sku。[有兴趣请点击查看](http://mp.weixin.qq.com/s?src=3&timestamp=1483520302&ver=1&signature=oMV0qeEAoxDXix0z8h1QIV3pVyw4Bqm9EvLUMBtk8dsrtnHZe1fKK2M403x7M2w0ut03F2lv1oFCx65DJxfPl4PlFW1rZPzOaSQspD4bZqjZ7pcjPfvo-PsR3Ec7nmkZo9jni8iNFahs0QtAZ8R3eg==)）\n\n\n# 优化方向\n\n1. 将请求尽量拦截在系统上游（不要让锁冲突落到数据库上去）。传统秒杀系统之所以挂，请求都压倒了后端数据层，数据读写锁冲突严重，并发高响应慢，几乎所有请求都超时，流量虽大，下单成功的有效流量甚小。以12306为例，一趟火车其实只有2000张票，200w个人来买，基本没有人能买成功，请求有效率为0。\n\n2. 充分利用缓存，秒杀买票，这是一个典型的**读多些少**的应用场景，大部分请求是车次查询，票查询，下单和支付才是写请求。一趟火车其实只有2000张票，200w个人来买，最多2000个人下单成功，其他人都是查询库存，写比例只有0.1%，读比例占99.9%，非常适合使用缓存来优化。\n \n# 常见秒杀架构\n1. 浏览器端，最上层，会执行到一些JS代码\n2. 站点层，这一层会访问后端数据，拼html页面返回给浏览器\n3. 服务层，向上游屏蔽底层数据细节，提供数据访问\n4. 数据层，最终的库存是存在这里的，mysql是一个典型（当然还有会缓存）\n \n# 各层次优化细节\n1. 客户端怎么优化（浏览器层，APP层）\n\t- 产品层面，用户点击“查询”或者“购票”后，按钮置灰，禁止用户重复提交请求；\n\t- JS层面，**限制用户**在x秒之内只能提交一次请求；\n\t- APP层面，可以做类似的事情，虽然你疯狂的在摇微信，其实x秒才向后端发起一次请求。这就是所谓的“将请求尽量拦截在系统上游”，越上游越好，浏览器层，APP层就给拦住，这样就能挡住80%+的请求。\n\n但是这种办法只能拦住普通用户（但99%的用户是普通用户）对于群内的高端程序员是拦不住的。firebug一抓包，http长啥样都知道，js是万万拦不住程序员写for循环，调用http接口的，这部分请求怎么处理？\n \n2. 站点层面的请求拦截\n怎么拦截？怎么防止程序员写for循环调用，有去重依据么？ip？cookie-id？…想复杂了，这类业务都需要登录，用uid即可。在站点层面，对uid进行请求计数和去重，甚至不需要统一存储计数，直接站点层内存存储（这样计数会不准，但最简单）。一个uid，5秒只准透过1个请求，这样又能拦住99%的for循环请求。\n\n5s只透过一个请求，其余的请求怎么办？\n**缓存，页面缓存**，同一个uid，限制访问频度，做页面缓存，x秒内到达站点层的请求，均返回同一页面。\n同一个item的查询，例如车次，做页面缓存，x秒内到达站点层的请求，均返回同一页面。如此限流，既能保证用户有良好的用户体验（没有返回404）又能保证系统的健壮性（利用页面缓存，把请求拦截在站点层了）。\n\n页面缓存不一定要保证所有站点返回一致的页面，直接放在每个站点的内存也是可以的。优点是简单，坏处是http请求落到不同的站点，返回的车票数据可能不一样，这是站点层的请求拦截与缓存优化。\n \n好，这个方式拦住了写for循环发http请求的程序员，有些高端程序员（黑客）控制了10w个肉鸡，手里有10w个uid，同时发请求（先不考虑实名制的问题，小米抢手机不需要实名制），这下怎么办，站点层按照uid限流拦不住了。\n \n3. 服务层来拦截（反正就是不要让请求落到数据库上去）\n\n服务层怎么拦截？我是服务层，我清楚的知道小米只有1万部手机，我清楚的知道一列火车只有2000张车票，我透10w个请求去数据库有什么意义呢？没错，** 请求队列！**\n对于写请求，做请求队列，每次只透有限的写请求去数据层（** 下订单，支付** 这样的写业务）\n\n> 1w部手机，只透1w个下单请求去db\n> 3k张火车票，只透3k个下单请求去db\n> 如果均成功再放下一批，如果库存不够则队列里的写请求全部返回“已售完”。\n \n对于读请求，怎么优化？cache抗，不管是memcached还是redis，单机抗个`每秒10w`应该都是没什么问题的。如此限流，只有非常少的写请求，和非常少的读缓存mis的请求会透到数据层去，又有99.9%的请求被拦住了。\n \n其他业务优化方面:\n> - 还有业务规则上的一些优化。回想12306所做的，分时分段售票，原来统一10点卖票，现在8点，8点半，9点，...每隔半个小时放出一批：将流量摊匀。\n> - 数据粒度的优化：你去购票，对于余票查询这个业务，票剩了58张，还是26张，你真的关注么，其实我们只关心有票和无票？流量大的时候，做一个`粗粒度`的“有票”“无票”缓存即可。\n> - 一些业务逻辑的异步：例如下单业务与 支付业务的分离。这些优化都是结合 业务 来的\n \n4. 数据库层\n> - 浏览器拦截了80%\n> - 站点层拦截了99.9%并做了页面缓存\n> - 服务层又做了写请求队列与数据缓存\n\n每次透到数据库层的请求都是可控的,db基本就没什么压力了。库存是有限的，透这么多请求来数据库没有意义，全部透到数据库，100w个下单，0个成功，请求有效率0%。透3k个到数据，全部成功，请求有效率100%。\n \n# 总体思路\n1. 尽量将请求拦截在系统上游（越上游越好）；\n2. 读多写少的常用多使用缓存（缓存抗读压力）；\n\n> - 浏览器和APP：做限速\n> - 站点层：按照uid做限速，做页面缓存\n> - 服务层：按照业务做写请求队列控制流量，做数据缓存\n> - 数据层：闲庭信步\n\n其他的优化：\n- 当还是有大量流量到了站点层了，用扩容；或着**拦截**或抛弃50%的请求，50%的请求直接返回稍后重试，不能让所有的用户都失败。\n- 服务层可以使用**队列**，若队列已经有远超过库存的，在过来的请求就直接返回稍后重试。**可以一个服务一个队列，总数/服务个数**。如果同意一个队列的话，有并发锁的问题。\n- 其他常见的场景，运营活动页面，短时间的推送消息，都可以做**缓存**。\n- 下单不支付，过了等待时间“回仓”改库存。\n- 如果同时进行的活动很多，需要垂直拆分\n- 如果业务失败的话，直接返回重试，没必要再从新放入队列\n- 数据和缓存不一致的时候，脏读了，只要数据库层面真实性没有问题，这个场景是可以容忍的。","source":"_posts/2016/seckill-sys.md","raw":"---\ntitle: 做秒杀的几个思路\ndate: 2016-12-01 13:52:43\nupdated: 2016-12-01 13:52:43\ntags:\ncategories:\n---\n\n# 秒杀业务为什么难做\n1. im系统，例如qq或者微博，每个人都读自己的数据（好友列表、群列表、个人信息）；\n1. 微博系统，每个人读你关注的人的数据，一个人读多个人的数据；\n1. 秒杀系统，库存只有一份，所有人会在集中的时间读和写这些数据，多个人读一个数据。\n \n> 小米手机每周二的秒杀，可能手机只有1万部，但瞬时进入的流量可能是几百几千万。\n\n> 12306抢票，票是有限的，库存一份，瞬时流量非常多，都读相同的库存。读写冲突，锁非常严重，这是秒杀业务难的地方。那我们怎么优化秒杀业务的架构呢？（其实12306比淘宝要更难做，因为所有的都是动态库存，几百种sku。[有兴趣请点击查看](http://mp.weixin.qq.com/s?src=3&timestamp=1483520302&ver=1&signature=oMV0qeEAoxDXix0z8h1QIV3pVyw4Bqm9EvLUMBtk8dsrtnHZe1fKK2M403x7M2w0ut03F2lv1oFCx65DJxfPl4PlFW1rZPzOaSQspD4bZqjZ7pcjPfvo-PsR3Ec7nmkZo9jni8iNFahs0QtAZ8R3eg==)）\n\n\n# 优化方向\n\n1. 将请求尽量拦截在系统上游（不要让锁冲突落到数据库上去）。传统秒杀系统之所以挂，请求都压倒了后端数据层，数据读写锁冲突严重，并发高响应慢，几乎所有请求都超时，流量虽大，下单成功的有效流量甚小。以12306为例，一趟火车其实只有2000张票，200w个人来买，基本没有人能买成功，请求有效率为0。\n\n2. 充分利用缓存，秒杀买票，这是一个典型的**读多些少**的应用场景，大部分请求是车次查询，票查询，下单和支付才是写请求。一趟火车其实只有2000张票，200w个人来买，最多2000个人下单成功，其他人都是查询库存，写比例只有0.1%，读比例占99.9%，非常适合使用缓存来优化。\n \n# 常见秒杀架构\n1. 浏览器端，最上层，会执行到一些JS代码\n2. 站点层，这一层会访问后端数据，拼html页面返回给浏览器\n3. 服务层，向上游屏蔽底层数据细节，提供数据访问\n4. 数据层，最终的库存是存在这里的，mysql是一个典型（当然还有会缓存）\n \n# 各层次优化细节\n1. 客户端怎么优化（浏览器层，APP层）\n\t- 产品层面，用户点击“查询”或者“购票”后，按钮置灰，禁止用户重复提交请求；\n\t- JS层面，**限制用户**在x秒之内只能提交一次请求；\n\t- APP层面，可以做类似的事情，虽然你疯狂的在摇微信，其实x秒才向后端发起一次请求。这就是所谓的“将请求尽量拦截在系统上游”，越上游越好，浏览器层，APP层就给拦住，这样就能挡住80%+的请求。\n\n但是这种办法只能拦住普通用户（但99%的用户是普通用户）对于群内的高端程序员是拦不住的。firebug一抓包，http长啥样都知道，js是万万拦不住程序员写for循环，调用http接口的，这部分请求怎么处理？\n \n2. 站点层面的请求拦截\n怎么拦截？怎么防止程序员写for循环调用，有去重依据么？ip？cookie-id？…想复杂了，这类业务都需要登录，用uid即可。在站点层面，对uid进行请求计数和去重，甚至不需要统一存储计数，直接站点层内存存储（这样计数会不准，但最简单）。一个uid，5秒只准透过1个请求，这样又能拦住99%的for循环请求。\n\n5s只透过一个请求，其余的请求怎么办？\n**缓存，页面缓存**，同一个uid，限制访问频度，做页面缓存，x秒内到达站点层的请求，均返回同一页面。\n同一个item的查询，例如车次，做页面缓存，x秒内到达站点层的请求，均返回同一页面。如此限流，既能保证用户有良好的用户体验（没有返回404）又能保证系统的健壮性（利用页面缓存，把请求拦截在站点层了）。\n\n页面缓存不一定要保证所有站点返回一致的页面，直接放在每个站点的内存也是可以的。优点是简单，坏处是http请求落到不同的站点，返回的车票数据可能不一样，这是站点层的请求拦截与缓存优化。\n \n好，这个方式拦住了写for循环发http请求的程序员，有些高端程序员（黑客）控制了10w个肉鸡，手里有10w个uid，同时发请求（先不考虑实名制的问题，小米抢手机不需要实名制），这下怎么办，站点层按照uid限流拦不住了。\n \n3. 服务层来拦截（反正就是不要让请求落到数据库上去）\n\n服务层怎么拦截？我是服务层，我清楚的知道小米只有1万部手机，我清楚的知道一列火车只有2000张车票，我透10w个请求去数据库有什么意义呢？没错，** 请求队列！**\n对于写请求，做请求队列，每次只透有限的写请求去数据层（** 下订单，支付** 这样的写业务）\n\n> 1w部手机，只透1w个下单请求去db\n> 3k张火车票，只透3k个下单请求去db\n> 如果均成功再放下一批，如果库存不够则队列里的写请求全部返回“已售完”。\n \n对于读请求，怎么优化？cache抗，不管是memcached还是redis，单机抗个`每秒10w`应该都是没什么问题的。如此限流，只有非常少的写请求，和非常少的读缓存mis的请求会透到数据层去，又有99.9%的请求被拦住了。\n \n其他业务优化方面:\n> - 还有业务规则上的一些优化。回想12306所做的，分时分段售票，原来统一10点卖票，现在8点，8点半，9点，...每隔半个小时放出一批：将流量摊匀。\n> - 数据粒度的优化：你去购票，对于余票查询这个业务，票剩了58张，还是26张，你真的关注么，其实我们只关心有票和无票？流量大的时候，做一个`粗粒度`的“有票”“无票”缓存即可。\n> - 一些业务逻辑的异步：例如下单业务与 支付业务的分离。这些优化都是结合 业务 来的\n \n4. 数据库层\n> - 浏览器拦截了80%\n> - 站点层拦截了99.9%并做了页面缓存\n> - 服务层又做了写请求队列与数据缓存\n\n每次透到数据库层的请求都是可控的,db基本就没什么压力了。库存是有限的，透这么多请求来数据库没有意义，全部透到数据库，100w个下单，0个成功，请求有效率0%。透3k个到数据，全部成功，请求有效率100%。\n \n# 总体思路\n1. 尽量将请求拦截在系统上游（越上游越好）；\n2. 读多写少的常用多使用缓存（缓存抗读压力）；\n\n> - 浏览器和APP：做限速\n> - 站点层：按照uid做限速，做页面缓存\n> - 服务层：按照业务做写请求队列控制流量，做数据缓存\n> - 数据层：闲庭信步\n\n其他的优化：\n- 当还是有大量流量到了站点层了，用扩容；或着**拦截**或抛弃50%的请求，50%的请求直接返回稍后重试，不能让所有的用户都失败。\n- 服务层可以使用**队列**，若队列已经有远超过库存的，在过来的请求就直接返回稍后重试。**可以一个服务一个队列，总数/服务个数**。如果同意一个队列的话，有并发锁的问题。\n- 其他常见的场景，运营活动页面，短时间的推送消息，都可以做**缓存**。\n- 下单不支付，过了等待时间“回仓”改库存。\n- 如果同时进行的活动很多，需要垂直拆分\n- 如果业务失败的话，直接返回重试，没必要再从新放入队列\n- 数据和缓存不一致的时候，脏读了，只要数据库层面真实性没有问题，这个场景是可以容忍的。","slug":"seckill-sys","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpag0027wsnn8qjiu1yn","content":"<h1 id=\"秒杀业务为什么难做\"><a href=\"#秒杀业务为什么难做\" class=\"headerlink\" title=\"秒杀业务为什么难做\"></a>秒杀业务为什么难做</h1><ol>\n<li>im系统，例如qq或者微博，每个人都读自己的数据（好友列表、群列表、个人信息）；</li>\n<li>微博系统，每个人读你关注的人的数据，一个人读多个人的数据；</li>\n<li>秒杀系统，库存只有一份，所有人会在集中的时间读和写这些数据，多个人读一个数据。</li>\n</ol>\n<blockquote>\n<p>小米手机每周二的秒杀，可能手机只有1万部，但瞬时进入的流量可能是几百几千万。</p>\n<p>12306抢票，票是有限的，库存一份，瞬时流量非常多，都读相同的库存。读写冲突，锁非常严重，这是秒杀业务难的地方。那我们怎么优化秒杀业务的架构呢？（其实12306比淘宝要更难做，因为所有的都是动态库存，几百种sku。<a href=\"http://mp.weixin.qq.com/s?src=3&amp;timestamp=1483520302&amp;ver=1&amp;signature=oMV0qeEAoxDXix0z8h1QIV3pVyw4Bqm9EvLUMBtk8dsrtnHZe1fKK2M403x7M2w0ut03F2lv1oFCx65DJxfPl4PlFW1rZPzOaSQspD4bZqjZ7pcjPfvo-PsR3Ec7nmkZo9jni8iNFahs0QtAZ8R3eg==\" target=\"_blank\" rel=\"external\">有兴趣请点击查看</a>）</p>\n</blockquote>\n<h1 id=\"优化方向\"><a href=\"#优化方向\" class=\"headerlink\" title=\"优化方向\"></a>优化方向</h1><ol>\n<li><p>将请求尽量拦截在系统上游（不要让锁冲突落到数据库上去）。传统秒杀系统之所以挂，请求都压倒了后端数据层，数据读写锁冲突严重，并发高响应慢，几乎所有请求都超时，流量虽大，下单成功的有效流量甚小。以12306为例，一趟火车其实只有2000张票，200w个人来买，基本没有人能买成功，请求有效率为0。</p>\n</li>\n<li><p>充分利用缓存，秒杀买票，这是一个典型的<strong>读多些少</strong>的应用场景，大部分请求是车次查询，票查询，下单和支付才是写请求。一趟火车其实只有2000张票，200w个人来买，最多2000个人下单成功，其他人都是查询库存，写比例只有0.1%，读比例占99.9%，非常适合使用缓存来优化。</p>\n</li>\n</ol>\n<h1 id=\"常见秒杀架构\"><a href=\"#常见秒杀架构\" class=\"headerlink\" title=\"常见秒杀架构\"></a>常见秒杀架构</h1><ol>\n<li>浏览器端，最上层，会执行到一些JS代码</li>\n<li>站点层，这一层会访问后端数据，拼html页面返回给浏览器</li>\n<li>服务层，向上游屏蔽底层数据细节，提供数据访问</li>\n<li>数据层，最终的库存是存在这里的，mysql是一个典型（当然还有会缓存）</li>\n</ol>\n<h1 id=\"各层次优化细节\"><a href=\"#各层次优化细节\" class=\"headerlink\" title=\"各层次优化细节\"></a>各层次优化细节</h1><ol>\n<li>客户端怎么优化（浏览器层，APP层）<ul>\n<li>产品层面，用户点击“查询”或者“购票”后，按钮置灰，禁止用户重复提交请求；</li>\n<li>JS层面，<strong>限制用户</strong>在x秒之内只能提交一次请求；</li>\n<li>APP层面，可以做类似的事情，虽然你疯狂的在摇微信，其实x秒才向后端发起一次请求。这就是所谓的“将请求尽量拦截在系统上游”，越上游越好，浏览器层，APP层就给拦住，这样就能挡住80%+的请求。</li>\n</ul>\n</li>\n</ol>\n<p>但是这种办法只能拦住普通用户（但99%的用户是普通用户）对于群内的高端程序员是拦不住的。firebug一抓包，http长啥样都知道，js是万万拦不住程序员写for循环，调用http接口的，这部分请求怎么处理？</p>\n<ol>\n<li>站点层面的请求拦截<br>怎么拦截？怎么防止程序员写for循环调用，有去重依据么？ip？cookie-id？…想复杂了，这类业务都需要登录，用uid即可。在站点层面，对uid进行请求计数和去重，甚至不需要统一存储计数，直接站点层内存存储（这样计数会不准，但最简单）。一个uid，5秒只准透过1个请求，这样又能拦住99%的for循环请求。</li>\n</ol>\n<p>5s只透过一个请求，其余的请求怎么办？<br><strong>缓存，页面缓存</strong>，同一个uid，限制访问频度，做页面缓存，x秒内到达站点层的请求，均返回同一页面。<br>同一个item的查询，例如车次，做页面缓存，x秒内到达站点层的请求，均返回同一页面。如此限流，既能保证用户有良好的用户体验（没有返回404）又能保证系统的健壮性（利用页面缓存，把请求拦截在站点层了）。</p>\n<p>页面缓存不一定要保证所有站点返回一致的页面，直接放在每个站点的内存也是可以的。优点是简单，坏处是http请求落到不同的站点，返回的车票数据可能不一样，这是站点层的请求拦截与缓存优化。</p>\n<p>好，这个方式拦住了写for循环发http请求的程序员，有些高端程序员（黑客）控制了10w个肉鸡，手里有10w个uid，同时发请求（先不考虑实名制的问题，小米抢手机不需要实名制），这下怎么办，站点层按照uid限流拦不住了。</p>\n<ol>\n<li>服务层来拦截（反正就是不要让请求落到数据库上去）</li>\n</ol>\n<p>服务层怎么拦截？我是服务层，我清楚的知道小米只有1万部手机，我清楚的知道一列火车只有2000张车票，我透10w个请求去数据库有什么意义呢？没错，<strong> 请求队列！</strong><br>对于写请求，做请求队列，每次只透有限的写请求去数据层（<strong> 下订单，支付</strong> 这样的写业务）</p>\n<blockquote>\n<p>1w部手机，只透1w个下单请求去db<br>3k张火车票，只透3k个下单请求去db<br>如果均成功再放下一批，如果库存不够则队列里的写请求全部返回“已售完”。</p>\n</blockquote>\n<p>对于读请求，怎么优化？cache抗，不管是memcached还是redis，单机抗个<code>每秒10w</code>应该都是没什么问题的。如此限流，只有非常少的写请求，和非常少的读缓存mis的请求会透到数据层去，又有99.9%的请求被拦住了。</p>\n<p>其他业务优化方面:</p>\n<blockquote>\n<ul>\n<li>还有业务规则上的一些优化。回想12306所做的，分时分段售票，原来统一10点卖票，现在8点，8点半，9点，…每隔半个小时放出一批：将流量摊匀。</li>\n<li>数据粒度的优化：你去购票，对于余票查询这个业务，票剩了58张，还是26张，你真的关注么，其实我们只关心有票和无票？流量大的时候，做一个<code>粗粒度</code>的“有票”“无票”缓存即可。</li>\n<li>一些业务逻辑的异步：例如下单业务与 支付业务的分离。这些优化都是结合 业务 来的</li>\n</ul>\n</blockquote>\n<ol>\n<li>数据库层<blockquote>\n<ul>\n<li>浏览器拦截了80%</li>\n<li>站点层拦截了99.9%并做了页面缓存</li>\n<li>服务层又做了写请求队列与数据缓存</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<p>每次透到数据库层的请求都是可控的,db基本就没什么压力了。库存是有限的，透这么多请求来数据库没有意义，全部透到数据库，100w个下单，0个成功，请求有效率0%。透3k个到数据，全部成功，请求有效率100%。</p>\n<h1 id=\"总体思路\"><a href=\"#总体思路\" class=\"headerlink\" title=\"总体思路\"></a>总体思路</h1><ol>\n<li>尽量将请求拦截在系统上游（越上游越好）；</li>\n<li>读多写少的常用多使用缓存（缓存抗读压力）；</li>\n</ol>\n<blockquote>\n<ul>\n<li>浏览器和APP：做限速</li>\n<li>站点层：按照uid做限速，做页面缓存</li>\n<li>服务层：按照业务做写请求队列控制流量，做数据缓存</li>\n<li>数据层：闲庭信步</li>\n</ul>\n</blockquote>\n<p>其他的优化：</p>\n<ul>\n<li>当还是有大量流量到了站点层了，用扩容；或着<strong>拦截</strong>或抛弃50%的请求，50%的请求直接返回稍后重试，不能让所有的用户都失败。</li>\n<li>服务层可以使用<strong>队列</strong>，若队列已经有远超过库存的，在过来的请求就直接返回稍后重试。<strong>可以一个服务一个队列，总数/服务个数</strong>。如果同意一个队列的话，有并发锁的问题。</li>\n<li>其他常见的场景，运营活动页面，短时间的推送消息，都可以做<strong>缓存</strong>。</li>\n<li>下单不支付，过了等待时间“回仓”改库存。</li>\n<li>如果同时进行的活动很多，需要垂直拆分</li>\n<li>如果业务失败的话，直接返回重试，没必要再从新放入队列</li>\n<li>数据和缓存不一致的时候，脏读了，只要数据库层面真实性没有问题，这个场景是可以容忍的。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"秒杀业务为什么难做\"><a href=\"#秒杀业务为什么难做\" class=\"headerlink\" title=\"秒杀业务为什么难做\"></a>秒杀业务为什么难做</h1><ol>\n<li>im系统，例如qq或者微博，每个人都读自己的数据（好友列表、群列表、个人信息）；</li>\n<li>微博系统，每个人读你关注的人的数据，一个人读多个人的数据；</li>\n<li>秒杀系统，库存只有一份，所有人会在集中的时间读和写这些数据，多个人读一个数据。</li>\n</ol>\n<blockquote>\n<p>小米手机每周二的秒杀，可能手机只有1万部，但瞬时进入的流量可能是几百几千万。</p>\n<p>12306抢票，票是有限的，库存一份，瞬时流量非常多，都读相同的库存。读写冲突，锁非常严重，这是秒杀业务难的地方。那我们怎么优化秒杀业务的架构呢？（其实12306比淘宝要更难做，因为所有的都是动态库存，几百种sku。<a href=\"http://mp.weixin.qq.com/s?src=3&amp;timestamp=1483520302&amp;ver=1&amp;signature=oMV0qeEAoxDXix0z8h1QIV3pVyw4Bqm9EvLUMBtk8dsrtnHZe1fKK2M403x7M2w0ut03F2lv1oFCx65DJxfPl4PlFW1rZPzOaSQspD4bZqjZ7pcjPfvo-PsR3Ec7nmkZo9jni8iNFahs0QtAZ8R3eg==\">有兴趣请点击查看</a>）</p>\n</blockquote>\n<h1 id=\"优化方向\"><a href=\"#优化方向\" class=\"headerlink\" title=\"优化方向\"></a>优化方向</h1><ol>\n<li><p>将请求尽量拦截在系统上游（不要让锁冲突落到数据库上去）。传统秒杀系统之所以挂，请求都压倒了后端数据层，数据读写锁冲突严重，并发高响应慢，几乎所有请求都超时，流量虽大，下单成功的有效流量甚小。以12306为例，一趟火车其实只有2000张票，200w个人来买，基本没有人能买成功，请求有效率为0。</p>\n</li>\n<li><p>充分利用缓存，秒杀买票，这是一个典型的<strong>读多些少</strong>的应用场景，大部分请求是车次查询，票查询，下单和支付才是写请求。一趟火车其实只有2000张票，200w个人来买，最多2000个人下单成功，其他人都是查询库存，写比例只有0.1%，读比例占99.9%，非常适合使用缓存来优化。</p>\n</li>\n</ol>\n<h1 id=\"常见秒杀架构\"><a href=\"#常见秒杀架构\" class=\"headerlink\" title=\"常见秒杀架构\"></a>常见秒杀架构</h1><ol>\n<li>浏览器端，最上层，会执行到一些JS代码</li>\n<li>站点层，这一层会访问后端数据，拼html页面返回给浏览器</li>\n<li>服务层，向上游屏蔽底层数据细节，提供数据访问</li>\n<li>数据层，最终的库存是存在这里的，mysql是一个典型（当然还有会缓存）</li>\n</ol>\n<h1 id=\"各层次优化细节\"><a href=\"#各层次优化细节\" class=\"headerlink\" title=\"各层次优化细节\"></a>各层次优化细节</h1><ol>\n<li>客户端怎么优化（浏览器层，APP层）<ul>\n<li>产品层面，用户点击“查询”或者“购票”后，按钮置灰，禁止用户重复提交请求；</li>\n<li>JS层面，<strong>限制用户</strong>在x秒之内只能提交一次请求；</li>\n<li>APP层面，可以做类似的事情，虽然你疯狂的在摇微信，其实x秒才向后端发起一次请求。这就是所谓的“将请求尽量拦截在系统上游”，越上游越好，浏览器层，APP层就给拦住，这样就能挡住80%+的请求。</li>\n</ul>\n</li>\n</ol>\n<p>但是这种办法只能拦住普通用户（但99%的用户是普通用户）对于群内的高端程序员是拦不住的。firebug一抓包，http长啥样都知道，js是万万拦不住程序员写for循环，调用http接口的，这部分请求怎么处理？</p>\n<ol>\n<li>站点层面的请求拦截<br>怎么拦截？怎么防止程序员写for循环调用，有去重依据么？ip？cookie-id？…想复杂了，这类业务都需要登录，用uid即可。在站点层面，对uid进行请求计数和去重，甚至不需要统一存储计数，直接站点层内存存储（这样计数会不准，但最简单）。一个uid，5秒只准透过1个请求，这样又能拦住99%的for循环请求。</li>\n</ol>\n<p>5s只透过一个请求，其余的请求怎么办？<br><strong>缓存，页面缓存</strong>，同一个uid，限制访问频度，做页面缓存，x秒内到达站点层的请求，均返回同一页面。<br>同一个item的查询，例如车次，做页面缓存，x秒内到达站点层的请求，均返回同一页面。如此限流，既能保证用户有良好的用户体验（没有返回404）又能保证系统的健壮性（利用页面缓存，把请求拦截在站点层了）。</p>\n<p>页面缓存不一定要保证所有站点返回一致的页面，直接放在每个站点的内存也是可以的。优点是简单，坏处是http请求落到不同的站点，返回的车票数据可能不一样，这是站点层的请求拦截与缓存优化。</p>\n<p>好，这个方式拦住了写for循环发http请求的程序员，有些高端程序员（黑客）控制了10w个肉鸡，手里有10w个uid，同时发请求（先不考虑实名制的问题，小米抢手机不需要实名制），这下怎么办，站点层按照uid限流拦不住了。</p>\n<ol>\n<li>服务层来拦截（反正就是不要让请求落到数据库上去）</li>\n</ol>\n<p>服务层怎么拦截？我是服务层，我清楚的知道小米只有1万部手机，我清楚的知道一列火车只有2000张车票，我透10w个请求去数据库有什么意义呢？没错，<strong> 请求队列！</strong><br>对于写请求，做请求队列，每次只透有限的写请求去数据层（<strong> 下订单，支付</strong> 这样的写业务）</p>\n<blockquote>\n<p>1w部手机，只透1w个下单请求去db<br>3k张火车票，只透3k个下单请求去db<br>如果均成功再放下一批，如果库存不够则队列里的写请求全部返回“已售完”。</p>\n</blockquote>\n<p>对于读请求，怎么优化？cache抗，不管是memcached还是redis，单机抗个<code>每秒10w</code>应该都是没什么问题的。如此限流，只有非常少的写请求，和非常少的读缓存mis的请求会透到数据层去，又有99.9%的请求被拦住了。</p>\n<p>其他业务优化方面:</p>\n<blockquote>\n<ul>\n<li>还有业务规则上的一些优化。回想12306所做的，分时分段售票，原来统一10点卖票，现在8点，8点半，9点，…每隔半个小时放出一批：将流量摊匀。</li>\n<li>数据粒度的优化：你去购票，对于余票查询这个业务，票剩了58张，还是26张，你真的关注么，其实我们只关心有票和无票？流量大的时候，做一个<code>粗粒度</code>的“有票”“无票”缓存即可。</li>\n<li>一些业务逻辑的异步：例如下单业务与 支付业务的分离。这些优化都是结合 业务 来的</li>\n</ul>\n</blockquote>\n<ol>\n<li>数据库层<blockquote>\n<ul>\n<li>浏览器拦截了80%</li>\n<li>站点层拦截了99.9%并做了页面缓存</li>\n<li>服务层又做了写请求队列与数据缓存</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<p>每次透到数据库层的请求都是可控的,db基本就没什么压力了。库存是有限的，透这么多请求来数据库没有意义，全部透到数据库，100w个下单，0个成功，请求有效率0%。透3k个到数据，全部成功，请求有效率100%。</p>\n<h1 id=\"总体思路\"><a href=\"#总体思路\" class=\"headerlink\" title=\"总体思路\"></a>总体思路</h1><ol>\n<li>尽量将请求拦截在系统上游（越上游越好）；</li>\n<li>读多写少的常用多使用缓存（缓存抗读压力）；</li>\n</ol>\n<blockquote>\n<ul>\n<li>浏览器和APP：做限速</li>\n<li>站点层：按照uid做限速，做页面缓存</li>\n<li>服务层：按照业务做写请求队列控制流量，做数据缓存</li>\n<li>数据层：闲庭信步</li>\n</ul>\n</blockquote>\n<p>其他的优化：</p>\n<ul>\n<li>当还是有大量流量到了站点层了，用扩容；或着<strong>拦截</strong>或抛弃50%的请求，50%的请求直接返回稍后重试，不能让所有的用户都失败。</li>\n<li>服务层可以使用<strong>队列</strong>，若队列已经有远超过库存的，在过来的请求就直接返回稍后重试。<strong>可以一个服务一个队列，总数/服务个数</strong>。如果同意一个队列的话，有并发锁的问题。</li>\n<li>其他常见的场景，运营活动页面，短时间的推送消息，都可以做<strong>缓存</strong>。</li>\n<li>下单不支付，过了等待时间“回仓”改库存。</li>\n<li>如果同时进行的活动很多，需要垂直拆分</li>\n<li>如果业务失败的话，直接返回重试，没必要再从新放入队列</li>\n<li>数据和缓存不一致的时候，脏读了，只要数据库层面真实性没有问题，这个场景是可以容忍的。</li>\n</ul>\n"},{"title":"shell 相关","date":"2016-11-09T08:23:13.000Z","updated":"2016-11-09T08:23:13.000Z","_content":"记录一些用shell编写的小脚本，等等。\n<!-- more -->\n\n### 用shell脚本，实现多台服务器代码同步更新的东东（rsync）\n\n```bash\n# 同步多台服务器文件代码\n#!/bin/bash\nif [ $1 == \"f\" ]\nthen\n\trsync -av ./ --exclude-from='frontend_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/frontend/\nelif [ $1 == \"b\" ]\nthen\n\trsync -av ./ --exclude-from='backend_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/backend/\nelif [ $1 == \"a\" ]\nthen\n\trsync -av ./ --exclude-from='api_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/api/\nelse\n\trsync -av ./ --exclude-from='frontend_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/frontend/\n\trsync -av ./ --exclude-from='backend_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/backend/\n\trsync -av ./ --exclude-from='api_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/api/\nfi\n\n# 其中.txt 文件是一些不需要的同步的目录文件\n```\n\nrsync 是一个远程数据同步工具，可通过LAN,WAN快速同步多台主机间的文件。Rsync使用所谓的“Rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。`rsync --help` 查看帮助，其中常使用的参数如下，有两种实现方式：\n>- -a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD\n>- -v, --verbose 详细模式输出\n>- -P 等同于 --partial\n>- --progress 显示备份过程\n>- -z, --compress 对备份的文件在传输时进行压缩处理\n>- --exclude=PATTERN 指定排除不需要传输的文件模式\n>- --include=PATTERN 指定不排除而需要传输的文件模式\n>- --exclude-from=FILE 排除FILE中指定模式的文件，在一个文件中指定的目录或文件\n>- --include-from=FILE 不排除FILE指定模式匹配的文件 必须包含的,在一个文件中指定的目录或文件\n>- --delete 删除那些DST中SRC没有的文件\n>- --delete-excluded 同样删除接收端那些被该选项指定排除的文件\n>- --delete-after 传输结束以后再删除\n\n#### SSH方式(:)\n```bash\n\tservice sshd start\n\trsync -vzrtopg --progress -e ssh --delete work@172.16.78.192:/www/* /databack/experiment/rsync\n\n\t#如何通过rsync只复制目录结构，忽略掉文件呢?\n\trsync -av --include '*/' --exclude '*' source-dir dest-dir\n```\n\n#### 后台服务方式(::)\n##### 启动rsync服务\n`vim /etc/xinetd.d/rsync` , 将其中的`disable=yes`改为`disable=no`,并重启`xinetd`服务\n##### 创建配置文件\n`vi /etc/rsyncd.conf`\n```bash\n\tuid=root\n\tgid=root\n\tmax connections=4\n\tlog file=/var/log/rsyncd.log\n\tpid file=/var/run/rsyncd.pid\n\tlock file=/var/run/rsyncd.lock\n\tsecrets file=/etc/rsyncd.passwd\n\thosts deny=172.16.78.0/22\n\n\t[www]\n\tcomment= backup web\n\tpath=/www\n\tread only = no\n\texclude=test\n\tauth users=work\n```\n##### 创建密码文件\n```bash\necho \"work:abc123\" > /etc/rsyncd.passwd\nchmod 600 /etc/rsyncd.passwd\n```\n##### 备份,恢复\n```bash\n\trsync -avz --progress --delete work@172.16.78.192::www /databack/experiment/rsync\n\trsync -avz --progress /databack/experiment/rsync/ work@172.16.78.192::www\n```\n\n[更多关于rsync参考](https://rsync.samba.org/) , [官方给出的样例](https://rsync.samba.org/examples.html)\n\n\n### crontab 相关参数\n\n```bash\n .---------------- minute (0 - 59)\n |  .------------- hour (0 - 23)\n |  |  .---------- day of month (1 - 31)\n |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...\n |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\n |  |  |  |  |\n *  *  *  *  * user-name command to be executed\n\neg：\n0 3 * * * bash /home/demo.sh >> /home/sh.log  # 三点开始执行\n8 12 * * 3 bash /data1/auto.sh  # 每周3的12点8分开始执行\n0 21 * * 2 scp /data1/{kid_kid_ask_set,kid_period_ask_set} root@192.168.2.3:/data/ #每周二晚上21点执行\n10 14 * * * bash /home/updataRedis.sh >>/home/log/log.txt 2>&1 # 14:10 开始\n*/1 * * * * curl http://www.xxx.com/test.php  #每分钟开始执行\n\n```\n### 创建文件夹\n\n```bash\n#!/bin/bash \ncd /home/changyuan/test/\nstr=`date '+%Y%m%d%H%M'`\n\nif [ -d $str ] \nthen\n\techo \"exist floder\"\nelse\n\tmkdir $str\nfi\n```\n### shell 基础\n```bash\ntouch online.sh\n\n#!/bin/bash\necho \"Hello World !\"\n\n#变成可执行文件\nchmod +x ./online.sh\n\n#或者直接\n/bin/sh online.sh\n\n#变量使用\nfor file in `ls /etc`\n\nyour_name=\"qinjx\"\necho $your_name\necho ${your_name}\n\n#只读变量\nmyUrl=\"http://www.w3cschool.cc\"\nreadonly myUrl\n\n#删除变量\nunset variable_name\n\n\n\n#字符串\necho \"\\\"It is a test\\\"\" # 转义\necho -e \"OK! \\n\" # 转义换行\necho '$name'  # 单引号为输出\nstring=\"runoob is a great site\"\necho ${#string} #提取子字符串长度\necho ${string:1:4} # 输出 unoo\n\necho $string $string1 #连接字符串\n\necho `expr index \"$string\" is` # 查找is位置expr\n\n\n#数组\narray_name=(value0 value1 value2 value3) #定义\narray_name[n]=valuen\n\n${array_name[1]} #取值\n${array_name[@]} , ${array_name[*]}  #全部\n\n${#array_name[0]} #单个长度\n${#array_name[@]} 或者 ${#array_name[*]} #长度\n\n# 参数传递\n$0,$1,$2... # 分别为第一个，第二个参数等等\n$#\t #为传递到脚本的参数个数\n$* , $@   #所有向脚本传递的参数,只有放到双引号中，前者相当于一个参数\"1 2 3\"，后台还是多个(1,2,3)\n$$  #脚本运行的当前进程ID号\n$!  #后台运行的最后一个进程的ID号\n\n# 运算符 放到 `` 符号中\nval=`expr 2 + 2`\n\n# 布尔运算符  ! 非 -o 或运算(or) -a 与运算(and)\n# 逻辑运算符 && || \n# 字符串运算符\n=:   #两个字符串是否相等\n!=:  #两个字符串是否相等\n-z:  #字符串长度是否为0，为0返回 true(zero) [ -z $a ]\n-n:  #字符串长度是否为0，不为0返回 true(no zero) \nstr: #[ $a ]\n\n#文件测试运算符\n-b,-c,-d,-f,-g,-k,-p,-u,-r,-w,-x,-s,-e\n#其中-c：是字符设备文件，-d目录，-f文件，-r只读，-w可写，-x可执行，-s文件大小是否>0,不为空返回true，-e（exist）文件是否存在\n\n\n# 屏幕读取变量\nread name\necho \"$name It is a test\"\n\nprintf # 格式化输出\n\n#test 检查某个条件是否成立\n# 流程控制\nif test $[num1] -eq $[num2]\nthen\n    echo '两个数相等！'\nelse\n    echo '两个数不相等！'\nfi\n\nif condition1\nthen\n    command1\nelif condition2 \nthen \n    command2\nelse\n    commandN\nfi\n\n\nfor var in item1 item2 ... itemN\ndo\n    command1\n    command2\n    ...\ndone\n\n\n#!/bin/sh\nint=1\nwhile(( $int<=5 ))\ndo\n        echo $int\n        let \"int++\"\ndone\n\nuntil condition\ndo\n    command\ndone\n\ncase var in\n\t1)\n    command1\n    ;;\n\t2）\n    command2\n    ;;\nesac\n\nbreak\ncontinue\n\n# 函数\n[function] demoFun(){\n    echo \"demo\"\n    return ($#,$*); # 返回所有参数个数和全部参数\n}\n\n#Shell 输入/输出重定向\n\ncat test.txt > test1.txt\ncat test.txt >> test1.txt\n\n#如果希望执行某个命令，但又不希望在屏幕上显示输出结果，那么可以将输出重定向到 /dev/null：\ncommand > /dev/null #会起到\"禁止输出\"的效果\n\n# 如果希望屏蔽 stdout 和 stderr,0 是标准输入（STDIN）,1 是标准输出（STDOUT）,2 是标准错误输出（STDERR）\ncommand > /dev/null 2>&1  \n\n\n# 文件包含\n. ./test1.sh 或者\nsource ./test1.sh\n\n```","source":"_posts/2016/shell.md","raw":"---\ntitle: shell 相关\ndate: 2016-11-09 16:23:13\nupdated: 2016-11-09 16:23:13\ntags:\ncategories:\n---\n记录一些用shell编写的小脚本，等等。\n<!-- more -->\n\n### 用shell脚本，实现多台服务器代码同步更新的东东（rsync）\n\n```bash\n# 同步多台服务器文件代码\n#!/bin/bash\nif [ $1 == \"f\" ]\nthen\n\trsync -av ./ --exclude-from='frontend_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/frontend/\nelif [ $1 == \"b\" ]\nthen\n\trsync -av ./ --exclude-from='backend_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/backend/\nelif [ $1 == \"a\" ]\nthen\n\trsync -av ./ --exclude-from='api_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/api/\nelse\n\trsync -av ./ --exclude-from='frontend_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/frontend/\n\trsync -av ./ --exclude-from='backend_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/backend/\n\trsync -av ./ --exclude-from='api_rsync_exclude.txt' changyuan@172.21.0.86:/home/changyuan/api/\nfi\n\n# 其中.txt 文件是一些不需要的同步的目录文件\n```\n\nrsync 是一个远程数据同步工具，可通过LAN,WAN快速同步多台主机间的文件。Rsync使用所谓的“Rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。`rsync --help` 查看帮助，其中常使用的参数如下，有两种实现方式：\n>- -a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD\n>- -v, --verbose 详细模式输出\n>- -P 等同于 --partial\n>- --progress 显示备份过程\n>- -z, --compress 对备份的文件在传输时进行压缩处理\n>- --exclude=PATTERN 指定排除不需要传输的文件模式\n>- --include=PATTERN 指定不排除而需要传输的文件模式\n>- --exclude-from=FILE 排除FILE中指定模式的文件，在一个文件中指定的目录或文件\n>- --include-from=FILE 不排除FILE指定模式匹配的文件 必须包含的,在一个文件中指定的目录或文件\n>- --delete 删除那些DST中SRC没有的文件\n>- --delete-excluded 同样删除接收端那些被该选项指定排除的文件\n>- --delete-after 传输结束以后再删除\n\n#### SSH方式(:)\n```bash\n\tservice sshd start\n\trsync -vzrtopg --progress -e ssh --delete work@172.16.78.192:/www/* /databack/experiment/rsync\n\n\t#如何通过rsync只复制目录结构，忽略掉文件呢?\n\trsync -av --include '*/' --exclude '*' source-dir dest-dir\n```\n\n#### 后台服务方式(::)\n##### 启动rsync服务\n`vim /etc/xinetd.d/rsync` , 将其中的`disable=yes`改为`disable=no`,并重启`xinetd`服务\n##### 创建配置文件\n`vi /etc/rsyncd.conf`\n```bash\n\tuid=root\n\tgid=root\n\tmax connections=4\n\tlog file=/var/log/rsyncd.log\n\tpid file=/var/run/rsyncd.pid\n\tlock file=/var/run/rsyncd.lock\n\tsecrets file=/etc/rsyncd.passwd\n\thosts deny=172.16.78.0/22\n\n\t[www]\n\tcomment= backup web\n\tpath=/www\n\tread only = no\n\texclude=test\n\tauth users=work\n```\n##### 创建密码文件\n```bash\necho \"work:abc123\" > /etc/rsyncd.passwd\nchmod 600 /etc/rsyncd.passwd\n```\n##### 备份,恢复\n```bash\n\trsync -avz --progress --delete work@172.16.78.192::www /databack/experiment/rsync\n\trsync -avz --progress /databack/experiment/rsync/ work@172.16.78.192::www\n```\n\n[更多关于rsync参考](https://rsync.samba.org/) , [官方给出的样例](https://rsync.samba.org/examples.html)\n\n\n### crontab 相关参数\n\n```bash\n .---------------- minute (0 - 59)\n |  .------------- hour (0 - 23)\n |  |  .---------- day of month (1 - 31)\n |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...\n |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\n |  |  |  |  |\n *  *  *  *  * user-name command to be executed\n\neg：\n0 3 * * * bash /home/demo.sh >> /home/sh.log  # 三点开始执行\n8 12 * * 3 bash /data1/auto.sh  # 每周3的12点8分开始执行\n0 21 * * 2 scp /data1/{kid_kid_ask_set,kid_period_ask_set} root@192.168.2.3:/data/ #每周二晚上21点执行\n10 14 * * * bash /home/updataRedis.sh >>/home/log/log.txt 2>&1 # 14:10 开始\n*/1 * * * * curl http://www.xxx.com/test.php  #每分钟开始执行\n\n```\n### 创建文件夹\n\n```bash\n#!/bin/bash \ncd /home/changyuan/test/\nstr=`date '+%Y%m%d%H%M'`\n\nif [ -d $str ] \nthen\n\techo \"exist floder\"\nelse\n\tmkdir $str\nfi\n```\n### shell 基础\n```bash\ntouch online.sh\n\n#!/bin/bash\necho \"Hello World !\"\n\n#变成可执行文件\nchmod +x ./online.sh\n\n#或者直接\n/bin/sh online.sh\n\n#变量使用\nfor file in `ls /etc`\n\nyour_name=\"qinjx\"\necho $your_name\necho ${your_name}\n\n#只读变量\nmyUrl=\"http://www.w3cschool.cc\"\nreadonly myUrl\n\n#删除变量\nunset variable_name\n\n\n\n#字符串\necho \"\\\"It is a test\\\"\" # 转义\necho -e \"OK! \\n\" # 转义换行\necho '$name'  # 单引号为输出\nstring=\"runoob is a great site\"\necho ${#string} #提取子字符串长度\necho ${string:1:4} # 输出 unoo\n\necho $string $string1 #连接字符串\n\necho `expr index \"$string\" is` # 查找is位置expr\n\n\n#数组\narray_name=(value0 value1 value2 value3) #定义\narray_name[n]=valuen\n\n${array_name[1]} #取值\n${array_name[@]} , ${array_name[*]}  #全部\n\n${#array_name[0]} #单个长度\n${#array_name[@]} 或者 ${#array_name[*]} #长度\n\n# 参数传递\n$0,$1,$2... # 分别为第一个，第二个参数等等\n$#\t #为传递到脚本的参数个数\n$* , $@   #所有向脚本传递的参数,只有放到双引号中，前者相当于一个参数\"1 2 3\"，后台还是多个(1,2,3)\n$$  #脚本运行的当前进程ID号\n$!  #后台运行的最后一个进程的ID号\n\n# 运算符 放到 `` 符号中\nval=`expr 2 + 2`\n\n# 布尔运算符  ! 非 -o 或运算(or) -a 与运算(and)\n# 逻辑运算符 && || \n# 字符串运算符\n=:   #两个字符串是否相等\n!=:  #两个字符串是否相等\n-z:  #字符串长度是否为0，为0返回 true(zero) [ -z $a ]\n-n:  #字符串长度是否为0，不为0返回 true(no zero) \nstr: #[ $a ]\n\n#文件测试运算符\n-b,-c,-d,-f,-g,-k,-p,-u,-r,-w,-x,-s,-e\n#其中-c：是字符设备文件，-d目录，-f文件，-r只读，-w可写，-x可执行，-s文件大小是否>0,不为空返回true，-e（exist）文件是否存在\n\n\n# 屏幕读取变量\nread name\necho \"$name It is a test\"\n\nprintf # 格式化输出\n\n#test 检查某个条件是否成立\n# 流程控制\nif test $[num1] -eq $[num2]\nthen\n    echo '两个数相等！'\nelse\n    echo '两个数不相等！'\nfi\n\nif condition1\nthen\n    command1\nelif condition2 \nthen \n    command2\nelse\n    commandN\nfi\n\n\nfor var in item1 item2 ... itemN\ndo\n    command1\n    command2\n    ...\ndone\n\n\n#!/bin/sh\nint=1\nwhile(( $int<=5 ))\ndo\n        echo $int\n        let \"int++\"\ndone\n\nuntil condition\ndo\n    command\ndone\n\ncase var in\n\t1)\n    command1\n    ;;\n\t2）\n    command2\n    ;;\nesac\n\nbreak\ncontinue\n\n# 函数\n[function] demoFun(){\n    echo \"demo\"\n    return ($#,$*); # 返回所有参数个数和全部参数\n}\n\n#Shell 输入/输出重定向\n\ncat test.txt > test1.txt\ncat test.txt >> test1.txt\n\n#如果希望执行某个命令，但又不希望在屏幕上显示输出结果，那么可以将输出重定向到 /dev/null：\ncommand > /dev/null #会起到\"禁止输出\"的效果\n\n# 如果希望屏蔽 stdout 和 stderr,0 是标准输入（STDIN）,1 是标准输出（STDOUT）,2 是标准错误输出（STDERR）\ncommand > /dev/null 2>&1  \n\n\n# 文件包含\n. ./test1.sh 或者\nsource ./test1.sh\n\n```","slug":"shell","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpag0029wsnnqpgbms0p","content":"<p>记录一些用shell编写的小脚本，等等。<br><a id=\"more\"></a></p>\n<h3 id=\"用shell脚本，实现多台服务器代码同步更新的东东（rsync）\"><a href=\"#用shell脚本，实现多台服务器代码同步更新的东东（rsync）\" class=\"headerlink\" title=\"用shell脚本，实现多台服务器代码同步更新的东东（rsync）\"></a>用shell脚本，实现多台服务器代码同步更新的东东（rsync）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 同步多台服务器文件代码</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$1</span> == <span class=\"string\">\"f\"</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'frontend_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/frontend/</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$1</span> == <span class=\"string\">\"b\"</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'backend_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/backend/</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$1</span> == <span class=\"string\">\"a\"</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'api_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/api/</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'frontend_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/frontend/</span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'backend_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/backend/</span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'api_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/api/</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 其中.txt 文件是一些不需要的同步的目录文件</span></span><br></pre></td></tr></table></figure>\n<p>rsync 是一个远程数据同步工具，可通过LAN,WAN快速同步多台主机间的文件。Rsync使用所谓的“Rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。<code>rsync --help</code> 查看帮助，其中常使用的参数如下，有两种实现方式：</p>\n<blockquote>\n<ul>\n<li>-a, –archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD</li>\n<li>-v, –verbose 详细模式输出</li>\n<li>-P 等同于 –partial</li>\n<li>–progress 显示备份过程</li>\n<li>-z, –compress 对备份的文件在传输时进行压缩处理</li>\n<li>–exclude=PATTERN 指定排除不需要传输的文件模式</li>\n<li>–include=PATTERN 指定不排除而需要传输的文件模式</li>\n<li>–exclude-from=FILE 排除FILE中指定模式的文件，在一个文件中指定的目录或文件</li>\n<li>–include-from=FILE 不排除FILE指定模式匹配的文件 必须包含的,在一个文件中指定的目录或文件</li>\n<li>–delete 删除那些DST中SRC没有的文件</li>\n<li>–delete-excluded 同样删除接收端那些被该选项指定排除的文件</li>\n<li>–delete-after 传输结束以后再删除</li>\n</ul>\n</blockquote>\n<h4 id=\"SSH方式\"><a href=\"#SSH方式\" class=\"headerlink\" title=\"SSH方式(:)\"></a>SSH方式(:)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service sshd start</span><br><span class=\"line\">rsync -vzrtopg --progress <span class=\"_\">-e</span> ssh --delete work@172.16.78.192:/www/* /databack/experiment/rsync</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如何通过rsync只复制目录结构，忽略掉文件呢?</span></span><br><span class=\"line\">rsync -av --include <span class=\"string\">'*/'</span> --exclude <span class=\"string\">'*'</span> <span class=\"built_in\">source</span>-dir dest-dir</span><br></pre></td></tr></table></figure>\n<h4 id=\"后台服务方式\"><a href=\"#后台服务方式\" class=\"headerlink\" title=\"后台服务方式(::)\"></a>后台服务方式(::)</h4><h5 id=\"启动rsync服务\"><a href=\"#启动rsync服务\" class=\"headerlink\" title=\"启动rsync服务\"></a>启动rsync服务</h5><p><code>vim /etc/xinetd.d/rsync</code> , 将其中的<code>disable=yes</code>改为<code>disable=no</code>,并重启<code>xinetd</code>服务</p>\n<h5 id=\"创建配置文件\"><a href=\"#创建配置文件\" class=\"headerlink\" title=\"创建配置文件\"></a>创建配置文件</h5><p><code>vi /etc/rsyncd.conf</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uid=root</span><br><span class=\"line\">gid=root</span><br><span class=\"line\">max connections=4</span><br><span class=\"line\"><span class=\"built_in\">log</span> file=/var/<span class=\"built_in\">log</span>/rsyncd.log</span><br><span class=\"line\">pid file=/var/run/rsyncd.pid</span><br><span class=\"line\">lock file=/var/run/rsyncd.lock</span><br><span class=\"line\">secrets file=/etc/rsyncd.passwd</span><br><span class=\"line\">hosts deny=172.16.78.0/22</span><br><span class=\"line\"></span><br><span class=\"line\">[www]</span><br><span class=\"line\">comment= backup web</span><br><span class=\"line\">path=/www</span><br><span class=\"line\"><span class=\"built_in\">read</span> only = no</span><br><span class=\"line\">exclude=<span class=\"built_in\">test</span></span><br><span class=\"line\">auth users=work</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"创建密码文件\"><a href=\"#创建密码文件\" class=\"headerlink\" title=\"创建密码文件\"></a>创建密码文件</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"work:abc123\"</span> &gt; /etc/rsyncd.passwd</span><br><span class=\"line\">chmod 600 /etc/rsyncd.passwd</span><br></pre></td></tr></table></figure>\n<h5 id=\"备份-恢复\"><a href=\"#备份-恢复\" class=\"headerlink\" title=\"备份,恢复\"></a>备份,恢复</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rsync -avz --progress --delete work@172.16.78.192::www /databack/experiment/rsync</span><br><span class=\"line\">rsync -avz --progress /databack/experiment/rsync/ work@172.16.78.192::www</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://rsync.samba.org/\" target=\"_blank\" rel=\"external\">更多关于rsync参考</a> , <a href=\"https://rsync.samba.org/examples.html\" target=\"_blank\" rel=\"external\">官方给出的样例</a></p>\n<h3 id=\"crontab-相关参数\"><a href=\"#crontab-相关参数\" class=\"headerlink\" title=\"crontab 相关参数\"></a>crontab 相关参数</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> .---------------- minute (0 - 59)</span><br><span class=\"line\"> |  .------------- hour (0 - 23)</span><br><span class=\"line\"> |  |  .---------- day of month (1 - 31)</span><br><span class=\"line\"> |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class=\"line\"> |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class=\"line\"> |  |  |  |  |</span><br><span class=\"line\"> *  *  *  *  * user-name <span class=\"built_in\">command</span> to be executed</span><br><span class=\"line\"></span><br><span class=\"line\">eg：</span><br><span class=\"line\">0 3 * * * bash /home/demo.sh &gt;&gt; /home/sh.log  <span class=\"comment\"># 三点开始执行</span></span><br><span class=\"line\">8 12 * * 3 bash /data1/auto.sh  <span class=\"comment\"># 每周3的12点8分开始执行</span></span><br><span class=\"line\">0 21 * * 2 scp /data1/&#123;kid_kid_ask_<span class=\"built_in\">set</span>,kid_period_ask_<span class=\"built_in\">set</span>&#125; root@192.168.2.3:/data/ <span class=\"comment\">#每周二晚上21点执行</span></span><br><span class=\"line\">10 14 * * * bash /home/updataRedis.sh &gt;&gt;/home/<span class=\"built_in\">log</span>/log.txt 2&gt;&amp;1 <span class=\"comment\"># 14:10 开始</span></span><br><span class=\"line\">*/1 * * * * curl http://www.xxx.com/test.php  <span class=\"comment\">#每分钟开始执行</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash </span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /home/changyuan/<span class=\"built_in\">test</span>/</span><br><span class=\"line\">str=`date <span class=\"string\">'+%Y%m%d%H%M'</span>`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"_\">-d</span> <span class=\"variable\">$str</span> ] </span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"exist floder\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\tmkdir <span class=\"variable\">$str</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"shell-基础\"><a href=\"#shell-基础\" class=\"headerlink\" title=\"shell 基础\"></a>shell 基础</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch online.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World !\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#变成可执行文件</span></span><br><span class=\"line\">chmod +x ./online.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#或者直接</span></span><br><span class=\"line\">/bin/sh online.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#变量使用</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> `ls /etc`</span><br><span class=\"line\"></span><br><span class=\"line\">your_name=<span class=\"string\">\"qinjx\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$your_name</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;your_name&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#只读变量</span></span><br><span class=\"line\">myUrl=<span class=\"string\">\"http://www.w3cschool.cc\"</span></span><br><span class=\"line\"><span class=\"built_in\">readonly</span> myUrl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#删除变量</span></span><br><span class=\"line\"><span class=\"built_in\">unset</span> variable_name</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#字符串</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"\\\"It is a test\\\"\"</span> <span class=\"comment\"># 转义</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"_\">-e</span> <span class=\"string\">\"OK! \\n\"</span> <span class=\"comment\"># 转义换行</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'$name'</span>  <span class=\"comment\"># 单引号为输出</span></span><br><span class=\"line\">string=<span class=\"string\">\"runoob is a great site\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;#string&#125;</span> <span class=\"comment\">#提取子字符串长度</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;string:1:4&#125;</span> <span class=\"comment\"># 输出 unoo</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$string</span> <span class=\"variable\">$string1</span> <span class=\"comment\">#连接字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> `expr index <span class=\"string\">\"<span class=\"variable\">$string</span>\"</span> is` <span class=\"comment\"># 查找is位置expr</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#数组</span></span><br><span class=\"line\">array_name=(value0 value1 value2 value3) <span class=\"comment\">#定义</span></span><br><span class=\"line\">array_name[n]=valuen</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$&#123;array_name[1]&#125;</span> <span class=\"comment\">#取值</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;array_name[@]&#125;</span> , <span class=\"variable\">$&#123;array_name[*]&#125;</span>  <span class=\"comment\">#全部</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$&#123;#array_name[0]&#125;</span> <span class=\"comment\">#单个长度</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;#array_name[@]&#125;</span> 或者 <span class=\"variable\">$&#123;#array_name[*]&#125;</span> <span class=\"comment\">#长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数传递</span></span><br><span class=\"line\"><span class=\"variable\">$0</span>,<span class=\"variable\">$1</span>,<span class=\"variable\">$2</span>... <span class=\"comment\"># 分别为第一个，第二个参数等等</span></span><br><span class=\"line\"><span class=\"variable\">$#</span>\t <span class=\"comment\">#为传递到脚本的参数个数</span></span><br><span class=\"line\">$* , <span class=\"variable\">$@</span>   <span class=\"comment\">#所有向脚本传递的参数,只有放到双引号中，前者相当于一个参数\"1 2 3\"，后台还是多个(1,2,3)</span></span><br><span class=\"line\">$$  <span class=\"comment\">#脚本运行的当前进程ID号</span></span><br><span class=\"line\">$!  <span class=\"comment\">#后台运行的最后一个进程的ID号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运算符 放到 `` 符号中</span></span><br><span class=\"line\">val=`expr 2 + 2`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 布尔运算符  ! 非 -o 或运算(or) -a 与运算(and)</span></span><br><span class=\"line\"><span class=\"comment\"># 逻辑运算符 &amp;&amp; || </span></span><br><span class=\"line\"><span class=\"comment\"># 字符串运算符</span></span><br><span class=\"line\">=:   <span class=\"comment\">#两个字符串是否相等</span></span><br><span class=\"line\">!=:  <span class=\"comment\">#两个字符串是否相等</span></span><br><span class=\"line\">-z:  <span class=\"comment\">#字符串长度是否为0，为0返回 true(zero) [ -z $a ]</span></span><br><span class=\"line\">-n:  <span class=\"comment\">#字符串长度是否为0，不为0返回 true(no zero) </span></span><br><span class=\"line\">str: <span class=\"comment\">#[ $a ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文件测试运算符</span></span><br><span class=\"line\">-b,-c,<span class=\"_\">-d</span>,<span class=\"_\">-f</span>,-g,-k,-p,-u,-r,-w,-x,<span class=\"_\">-s</span>,<span class=\"_\">-e</span></span><br><span class=\"line\"><span class=\"comment\">#其中-c：是字符设备文件，-d目录，-f文件，-r只读，-w可写，-x可执行，-s文件大小是否&gt;0,不为空返回true，-e（exist）文件是否存在</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 屏幕读取变量</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> name</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$name</span> It is a test\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"comment\"># 格式化输出</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#test 检查某个条件是否成立</span></span><br><span class=\"line\"><span class=\"comment\"># 流程控制</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">test</span> $[num1] <span class=\"_\">-eq</span> $[num2]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">'两个数相等！'</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">'两个数不相等！'</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> condition1</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span>1</span><br><span class=\"line\"><span class=\"keyword\">elif</span> condition2 </span><br><span class=\"line\"><span class=\"keyword\">then</span> </span><br><span class=\"line\">    <span class=\"built_in\">command</span>2</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span>N</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> var <span class=\"keyword\">in</span> item1 item2 ... itemN</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span>1</span><br><span class=\"line\">    <span class=\"built_in\">command</span>2</span><br><span class=\"line\">    ...</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">int=1</span><br><span class=\"line\"><span class=\"keyword\">while</span>(( <span class=\"variable\">$int</span>&lt;=5 ))</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$int</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> <span class=\"string\">\"int++\"</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">until condition</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">case</span> var <span class=\"keyword\">in</span></span><br><span class=\"line\">\t1)</span><br><span class=\"line\">    <span class=\"built_in\">command</span>1</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">\t2）</span><br><span class=\"line\">    <span class=\"built_in\">command</span>2</span><br><span class=\"line\">    ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">break</span></span><br><span class=\"line\"><span class=\"built_in\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 函数</span></span><br><span class=\"line\">[<span class=\"keyword\">function</span>] <span class=\"function\"><span class=\"title\">demoFun</span></span>()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"demo\"</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> (<span class=\"variable\">$#</span>,$*); <span class=\"comment\"># 返回所有参数个数和全部参数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Shell 输入/输出重定向</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat test.txt &gt; <span class=\"built_in\">test</span>1.txt</span><br><span class=\"line\">cat test.txt &gt;&gt; <span class=\"built_in\">test</span>1.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果希望执行某个命令，但又不希望在屏幕上显示输出结果，那么可以将输出重定向到 /dev/null：</span></span><br><span class=\"line\"><span class=\"built_in\">command</span> &gt; /dev/null <span class=\"comment\">#会起到\"禁止输出\"的效果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果希望屏蔽 stdout 和 stderr,0 是标准输入（STDIN）,1 是标准输出（STDOUT）,2 是标准错误输出（STDERR）</span></span><br><span class=\"line\"><span class=\"built_in\">command</span> &gt; /dev/null 2&gt;&amp;1  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件包含</span></span><br><span class=\"line\">. ./<span class=\"built_in\">test</span>1.sh 或者</span><br><span class=\"line\"><span class=\"built_in\">source</span> ./<span class=\"built_in\">test</span>1.sh</span><br></pre></td></tr></table></figure>","excerpt":"<p>记录一些用shell编写的小脚本，等等。<br>","more":"</p>\n<h3 id=\"用shell脚本，实现多台服务器代码同步更新的东东（rsync）\"><a href=\"#用shell脚本，实现多台服务器代码同步更新的东东（rsync）\" class=\"headerlink\" title=\"用shell脚本，实现多台服务器代码同步更新的东东（rsync）\"></a>用shell脚本，实现多台服务器代码同步更新的东东（rsync）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 同步多台服务器文件代码</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$1</span> == <span class=\"string\">\"f\"</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'frontend_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/frontend/</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$1</span> == <span class=\"string\">\"b\"</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'backend_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/backend/</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$1</span> == <span class=\"string\">\"a\"</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'api_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/api/</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'frontend_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/frontend/</span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'backend_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/backend/</span><br><span class=\"line\">\trsync -av ./ --exclude-from=<span class=\"string\">'api_rsync_exclude.txt'</span> changyuan@172.21.0.86:/home/changyuan/api/</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 其中.txt 文件是一些不需要的同步的目录文件</span></span><br></pre></td></tr></table></figure>\n<p>rsync 是一个远程数据同步工具，可通过LAN,WAN快速同步多台主机间的文件。Rsync使用所谓的“Rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。<code>rsync --help</code> 查看帮助，其中常使用的参数如下，有两种实现方式：</p>\n<blockquote>\n<ul>\n<li>-a, –archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD</li>\n<li>-v, –verbose 详细模式输出</li>\n<li>-P 等同于 –partial</li>\n<li>–progress 显示备份过程</li>\n<li>-z, –compress 对备份的文件在传输时进行压缩处理</li>\n<li>–exclude=PATTERN 指定排除不需要传输的文件模式</li>\n<li>–include=PATTERN 指定不排除而需要传输的文件模式</li>\n<li>–exclude-from=FILE 排除FILE中指定模式的文件，在一个文件中指定的目录或文件</li>\n<li>–include-from=FILE 不排除FILE指定模式匹配的文件 必须包含的,在一个文件中指定的目录或文件</li>\n<li>–delete 删除那些DST中SRC没有的文件</li>\n<li>–delete-excluded 同样删除接收端那些被该选项指定排除的文件</li>\n<li>–delete-after 传输结束以后再删除</li>\n</ul>\n</blockquote>\n<h4 id=\"SSH方式\"><a href=\"#SSH方式\" class=\"headerlink\" title=\"SSH方式(:)\"></a>SSH方式(:)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service sshd start</span><br><span class=\"line\">rsync -vzrtopg --progress <span class=\"_\">-e</span> ssh --delete work@172.16.78.192:/www/* /databack/experiment/rsync</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如何通过rsync只复制目录结构，忽略掉文件呢?</span></span><br><span class=\"line\">rsync -av --include <span class=\"string\">'*/'</span> --exclude <span class=\"string\">'*'</span> <span class=\"built_in\">source</span>-dir dest-dir</span><br></pre></td></tr></table></figure>\n<h4 id=\"后台服务方式\"><a href=\"#后台服务方式\" class=\"headerlink\" title=\"后台服务方式(::)\"></a>后台服务方式(::)</h4><h5 id=\"启动rsync服务\"><a href=\"#启动rsync服务\" class=\"headerlink\" title=\"启动rsync服务\"></a>启动rsync服务</h5><p><code>vim /etc/xinetd.d/rsync</code> , 将其中的<code>disable=yes</code>改为<code>disable=no</code>,并重启<code>xinetd</code>服务</p>\n<h5 id=\"创建配置文件\"><a href=\"#创建配置文件\" class=\"headerlink\" title=\"创建配置文件\"></a>创建配置文件</h5><p><code>vi /etc/rsyncd.conf</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uid=root</span><br><span class=\"line\">gid=root</span><br><span class=\"line\">max connections=4</span><br><span class=\"line\"><span class=\"built_in\">log</span> file=/var/<span class=\"built_in\">log</span>/rsyncd.log</span><br><span class=\"line\">pid file=/var/run/rsyncd.pid</span><br><span class=\"line\">lock file=/var/run/rsyncd.lock</span><br><span class=\"line\">secrets file=/etc/rsyncd.passwd</span><br><span class=\"line\">hosts deny=172.16.78.0/22</span><br><span class=\"line\"></span><br><span class=\"line\">[www]</span><br><span class=\"line\">comment= backup web</span><br><span class=\"line\">path=/www</span><br><span class=\"line\"><span class=\"built_in\">read</span> only = no</span><br><span class=\"line\">exclude=<span class=\"built_in\">test</span></span><br><span class=\"line\">auth users=work</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"创建密码文件\"><a href=\"#创建密码文件\" class=\"headerlink\" title=\"创建密码文件\"></a>创建密码文件</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"work:abc123\"</span> &gt; /etc/rsyncd.passwd</span><br><span class=\"line\">chmod 600 /etc/rsyncd.passwd</span><br></pre></td></tr></table></figure>\n<h5 id=\"备份-恢复\"><a href=\"#备份-恢复\" class=\"headerlink\" title=\"备份,恢复\"></a>备份,恢复</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rsync -avz --progress --delete work@172.16.78.192::www /databack/experiment/rsync</span><br><span class=\"line\">rsync -avz --progress /databack/experiment/rsync/ work@172.16.78.192::www</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://rsync.samba.org/\">更多关于rsync参考</a> , <a href=\"https://rsync.samba.org/examples.html\">官方给出的样例</a></p>\n<h3 id=\"crontab-相关参数\"><a href=\"#crontab-相关参数\" class=\"headerlink\" title=\"crontab 相关参数\"></a>crontab 相关参数</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> .---------------- minute (0 - 59)</span><br><span class=\"line\"> |  .------------- hour (0 - 23)</span><br><span class=\"line\"> |  |  .---------- day of month (1 - 31)</span><br><span class=\"line\"> |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class=\"line\"> |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class=\"line\"> |  |  |  |  |</span><br><span class=\"line\"> *  *  *  *  * user-name <span class=\"built_in\">command</span> to be executed</span><br><span class=\"line\"></span><br><span class=\"line\">eg：</span><br><span class=\"line\">0 3 * * * bash /home/demo.sh &gt;&gt; /home/sh.log  <span class=\"comment\"># 三点开始执行</span></span><br><span class=\"line\">8 12 * * 3 bash /data1/auto.sh  <span class=\"comment\"># 每周3的12点8分开始执行</span></span><br><span class=\"line\">0 21 * * 2 scp /data1/&#123;kid_kid_ask_<span class=\"built_in\">set</span>,kid_period_ask_<span class=\"built_in\">set</span>&#125; root@192.168.2.3:/data/ <span class=\"comment\">#每周二晚上21点执行</span></span><br><span class=\"line\">10 14 * * * bash /home/updataRedis.sh &gt;&gt;/home/<span class=\"built_in\">log</span>/log.txt 2&gt;&amp;1 <span class=\"comment\"># 14:10 开始</span></span><br><span class=\"line\">*/1 * * * * curl http://www.xxx.com/test.php  <span class=\"comment\">#每分钟开始执行</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash </span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /home/changyuan/<span class=\"built_in\">test</span>/</span><br><span class=\"line\">str=`date <span class=\"string\">'+%Y%m%d%H%M'</span>`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"_\">-d</span> <span class=\"variable\">$str</span> ] </span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"exist floder\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\tmkdir <span class=\"variable\">$str</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"shell-基础\"><a href=\"#shell-基础\" class=\"headerlink\" title=\"shell 基础\"></a>shell 基础</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch online.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World !\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#变成可执行文件</span></span><br><span class=\"line\">chmod +x ./online.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#或者直接</span></span><br><span class=\"line\">/bin/sh online.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#变量使用</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> `ls /etc`</span><br><span class=\"line\"></span><br><span class=\"line\">your_name=<span class=\"string\">\"qinjx\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$your_name</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;your_name&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#只读变量</span></span><br><span class=\"line\">myUrl=<span class=\"string\">\"http://www.w3cschool.cc\"</span></span><br><span class=\"line\"><span class=\"built_in\">readonly</span> myUrl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#删除变量</span></span><br><span class=\"line\"><span class=\"built_in\">unset</span> variable_name</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#字符串</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"\\\"It is a test\\\"\"</span> <span class=\"comment\"># 转义</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"_\">-e</span> <span class=\"string\">\"OK! \\n\"</span> <span class=\"comment\"># 转义换行</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'$name'</span>  <span class=\"comment\"># 单引号为输出</span></span><br><span class=\"line\">string=<span class=\"string\">\"runoob is a great site\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;#string&#125;</span> <span class=\"comment\">#提取子字符串长度</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;string:1:4&#125;</span> <span class=\"comment\"># 输出 unoo</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$string</span> <span class=\"variable\">$string1</span> <span class=\"comment\">#连接字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> `expr index <span class=\"string\">\"<span class=\"variable\">$string</span>\"</span> is` <span class=\"comment\"># 查找is位置expr</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#数组</span></span><br><span class=\"line\">array_name=(value0 value1 value2 value3) <span class=\"comment\">#定义</span></span><br><span class=\"line\">array_name[n]=valuen</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$&#123;array_name[1]&#125;</span> <span class=\"comment\">#取值</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;array_name[@]&#125;</span> , <span class=\"variable\">$&#123;array_name[*]&#125;</span>  <span class=\"comment\">#全部</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$&#123;#array_name[0]&#125;</span> <span class=\"comment\">#单个长度</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;#array_name[@]&#125;</span> 或者 <span class=\"variable\">$&#123;#array_name[*]&#125;</span> <span class=\"comment\">#长度</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数传递</span></span><br><span class=\"line\"><span class=\"variable\">$0</span>,<span class=\"variable\">$1</span>,<span class=\"variable\">$2</span>... <span class=\"comment\"># 分别为第一个，第二个参数等等</span></span><br><span class=\"line\"><span class=\"variable\">$#</span>\t <span class=\"comment\">#为传递到脚本的参数个数</span></span><br><span class=\"line\">$* , <span class=\"variable\">$@</span>   <span class=\"comment\">#所有向脚本传递的参数,只有放到双引号中，前者相当于一个参数\"1 2 3\"，后台还是多个(1,2,3)</span></span><br><span class=\"line\">$$  <span class=\"comment\">#脚本运行的当前进程ID号</span></span><br><span class=\"line\">$!  <span class=\"comment\">#后台运行的最后一个进程的ID号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运算符 放到 `` 符号中</span></span><br><span class=\"line\">val=`expr 2 + 2`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 布尔运算符  ! 非 -o 或运算(or) -a 与运算(and)</span></span><br><span class=\"line\"><span class=\"comment\"># 逻辑运算符 &amp;&amp; || </span></span><br><span class=\"line\"><span class=\"comment\"># 字符串运算符</span></span><br><span class=\"line\">=:   <span class=\"comment\">#两个字符串是否相等</span></span><br><span class=\"line\">!=:  <span class=\"comment\">#两个字符串是否相等</span></span><br><span class=\"line\">-z:  <span class=\"comment\">#字符串长度是否为0，为0返回 true(zero) [ -z $a ]</span></span><br><span class=\"line\">-n:  <span class=\"comment\">#字符串长度是否为0，不为0返回 true(no zero) </span></span><br><span class=\"line\">str: <span class=\"comment\">#[ $a ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文件测试运算符</span></span><br><span class=\"line\">-b,-c,<span class=\"_\">-d</span>,<span class=\"_\">-f</span>,-g,-k,-p,-u,-r,-w,-x,<span class=\"_\">-s</span>,<span class=\"_\">-e</span></span><br><span class=\"line\"><span class=\"comment\">#其中-c：是字符设备文件，-d目录，-f文件，-r只读，-w可写，-x可执行，-s文件大小是否&gt;0,不为空返回true，-e（exist）文件是否存在</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 屏幕读取变量</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> name</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$name</span> It is a test\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"comment\"># 格式化输出</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#test 检查某个条件是否成立</span></span><br><span class=\"line\"><span class=\"comment\"># 流程控制</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">test</span> $[num1] <span class=\"_\">-eq</span> $[num2]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">'两个数相等！'</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">'两个数不相等！'</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> condition1</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span>1</span><br><span class=\"line\"><span class=\"keyword\">elif</span> condition2 </span><br><span class=\"line\"><span class=\"keyword\">then</span> </span><br><span class=\"line\">    <span class=\"built_in\">command</span>2</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span>N</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> var <span class=\"keyword\">in</span> item1 item2 ... itemN</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span>1</span><br><span class=\"line\">    <span class=\"built_in\">command</span>2</span><br><span class=\"line\">    ...</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">int=1</span><br><span class=\"line\"><span class=\"keyword\">while</span>(( <span class=\"variable\">$int</span>&lt;=5 ))</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$int</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> <span class=\"string\">\"int++\"</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">until condition</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">case</span> var <span class=\"keyword\">in</span></span><br><span class=\"line\">\t1)</span><br><span class=\"line\">    <span class=\"built_in\">command</span>1</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">\t2）</span><br><span class=\"line\">    <span class=\"built_in\">command</span>2</span><br><span class=\"line\">    ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">break</span></span><br><span class=\"line\"><span class=\"built_in\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 函数</span></span><br><span class=\"line\">[<span class=\"keyword\">function</span>] <span class=\"function\"><span class=\"title\">demoFun</span></span>()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"demo\"</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> (<span class=\"variable\">$#</span>,$*); <span class=\"comment\"># 返回所有参数个数和全部参数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Shell 输入/输出重定向</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat test.txt &gt; <span class=\"built_in\">test</span>1.txt</span><br><span class=\"line\">cat test.txt &gt;&gt; <span class=\"built_in\">test</span>1.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果希望执行某个命令，但又不希望在屏幕上显示输出结果，那么可以将输出重定向到 /dev/null：</span></span><br><span class=\"line\"><span class=\"built_in\">command</span> &gt; /dev/null <span class=\"comment\">#会起到\"禁止输出\"的效果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果希望屏蔽 stdout 和 stderr,0 是标准输入（STDIN）,1 是标准输出（STDOUT）,2 是标准错误输出（STDERR）</span></span><br><span class=\"line\"><span class=\"built_in\">command</span> &gt; /dev/null 2&gt;&amp;1  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件包含</span></span><br><span class=\"line\">. ./<span class=\"built_in\">test</span>1.sh 或者</span><br><span class=\"line\"><span class=\"built_in\">source</span> ./<span class=\"built_in\">test</span>1.sh</span><br></pre></td></tr></table></figure>"},{"title":"vagrant usage","date":"2016-11-10T06:46:53.000Z","updated":"2016-11-10T06:46:53.000Z","author":"change","_content":"\n### VirtualBox， Vagrant\n安装[VirtualBox](https://www.virtualbox.org/wiki/Downloads), 安装[vagrant](https://www.vagrantup.com/downloads.html)\n\n### 安装Box \n你可以把它想成是一个箱子，里面装了一些东西。在用 Vagrant 创建虚拟机的时候，需要用到 Box ，它里面会包装操作系统的镜像，不同的 Box 带的操作系统可能是不一样的，比如 CentOS，Ubuntu 等等，你可以基于它们去创建自己版本的 Box，比如在虚拟机上安装一些软件，然后把它重新打包成 Box。\n\n在 `vagrant添加 Box` ，Vagrant 提供的云服务 ,要把 Box 下载到本地的电脑上，交给 Vagrant 去管理，这样在创建虚拟机的时候，Vagrant 会复制一份你指定的 Box 到你的项目里面，这样你在这个虚拟机上的操作，就不会影响到其它的项目。\n\n<!-- more -->\n\n> http://www.vagrantbox.es/\n> https://atlas.hashicorp.com/boxes/search\n\n```bash\nvagrant box add {title} {box}    # title 为起的名字，box为在线URL地址，或者离线box路径\n\n```\n这里**可以安装很多个box，以服务不同的项目环境**，可以随时通过`vagrant box remove {title}`,所有的命令可以通过vagrant -h 查看。\n\n\n### 查看已安装的box\n`vagrant box list`\n\n\n### 初始化项目环境\n``` bash\n# 到项目目录\ncd project\n# 查看已经装的box\nvagrant box list\n\n# 初始化项目，之后回生成Vagrantfile文件，这个是ruby写的配置文件有一些参数设置\n\n`vagrant init {title}`  ，title：为`config.vm.box`重命名，title可略则默认的`config.vm.box=”base”`\n\n```\n\n\n### 启动 并查看状态\n```bash\nvagrant up\n\nvagrant status\n```\n\n### 控制虚拟机\n\n```bash\n# mac\nvagrant ssh\n\n\n# windows 用其他ssh链接工具\n\n# Host：127.0.0.1\n# Port：2200\n# Username：vagrant\n# password：vagrant\n\n```\n\n### 打包分发，生成box供其他人使用\n\n```bash\nvagrant package\n\n\n# 之后别人拿到box，相当于安装了一个box又 ，之后就直接初始化这个\nvagrant box add hahaha ~/box/package.box  # 添加 package.box 镜像并命名为 hahaha\n\ncd ~/dev  # 切换到项目目录\nvagrant init hahaha  \n\n```\n### 集成预安装\n\n你会发现每次都修改了一点点内容，再打包分发给其他用户其实很麻烦，为此 Vagrant 还提供了更为便捷的预安装定制。打开 Vagrantfile 文件末尾处有下面被注释的代码：\n```bash\nconfig.vm.provision \"shell\", inline: <<-SHELL\n   apt-get update\n   apt-get install -y apache2\nSHELL\n```\n如果你不是初次运行，同时又修改了这里的命令，想让系统再次运行这里面的命令，你可以使用 `vagrant reload --provision` 进行重载。所以在这种情况下，你只要将 Vagrantfile 共享给团队的其他成员就可以了，其他成员运行相同的命令即可。更多[参考](https://www.vagrantup.com/docs/provisioning/)\n\n你还可以把要运行的命令单独写在一个文件里存放在相同的目录下，比如 bootstrap.sh：\n```bash\n#!/usr/bin/env bash\n\napt-get update\napt-get install -y apache2\nif ! [ -L /var/www ]; then\n  rm -rf /var/www\n  ln -fs /vagrant /var/www\nfi\n```\n然后在 Vagrantfile 里这样添加：\n```bash\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"hashicorp/precise64\"\n  ...\n\n  config.vm.provision \"shell\", path: \"bootstrap.sh\"  # 添加这行\nend\n```\n[更多参考](https://www.vagrantup.com/docs/cli/index.html)\n\n\n### yii2 的vagrant 的 DEMO  配置\n```bash\nvagrant box add ubuntu/trusty64\n# 如果已经有了vagrantfile文件就不用 vargrant init 了\n\nvagrant up\n\n\n```\n\nVagrantfile 配置文件：\n\n```Vagrantfile\nrequire 'yaml'\nrequire 'fileutils'\n\ndomains = {\n  frontend: 'y2aa-frontend.dev',\n  backend:  'y2aa-backend.dev'\n}\n\nconfig = {\n  local: './vagrant/config/vagrant-local.yml',\n  example: './vagrant/config/vagrant-local.example.yml'\n}\n\n# copy config from example if local config not exists\nFileUtils.cp config[:example], config[:local] unless File.exist?(config[:local])\n# read config\noptions = YAML.load_file config[:local]\n\n# check github token\nif options['github_token'].nil? || options['github_token'].to_s.length != 40\n  puts \"You must place REAL GitHub token into configuration:\\n/yii2-app-advancded/vagrant/config/vagrant-local.yml\"\n  exit\nend\n\n# vagrant configurate\nVagrant.configure(2) do |config|\n  # select the box\n  config.vm.box = 'ubuntu/trusty64'\n\n  # should we ask about box updates?\n  config.vm.box_check_update = options['box_check_update']\n\n  config.vm.provider 'virtualbox' do |vb|\n    # machine cpus count\n    vb.cpus = options['cpus']\n    # machine memory size\n    vb.memory = options['memory']\n    # machine name (for VirtualBox UI)\n    vb.name = options['machine_name']\n  end\n\n  # machine name (for vagrant console)\n  config.vm.define options['machine_name']\n\n  # machine name (for guest machine console)\n  config.vm.hostname = options['machine_name']\n\n  # network settings\n  config.vm.network 'private_network', ip: options['ip']\n\n  # sync: folder 'yii2-app-advanced' (host machine) -> folder '/app' (guest machine)\n  config.vm.synced_folder './', '/app', owner: 'vagrant', group: 'vagrant'\n\n  # disable folder '/vagrant' (guest machine)\n  config.vm.synced_folder '.', '/vagrant', disabled: true\n\n  # hosts settings (host machine)\n  config.vm.provision :hostmanager\n  config.hostmanager.enabled            = true\n  config.hostmanager.manage_host        = true\n  config.hostmanager.ignore_private_ip  = false\n  config.hostmanager.include_offline    = true\n  config.hostmanager.aliases            = domains.values\n\n  # provisioners\n  config.vm.provision 'shell', path: './vagrant/provision/once-as-root.sh', args: [options['timezone']]\n  config.vm.provision 'shell', path: './vagrant/provision/once-as-vagrant.sh', args: [options['github_token']], privileged: false\n  config.vm.provision 'shell', path: './vagrant/provision/always-as-root.sh', run: 'always'\n\n  # post-install message (vagrant console)\n  config.vm.post_up_message = \"Frontend URL: http://#{domains[:frontend]}\\nBackend URL: http://#{domains[:backend]}\"\nend\n\n```\n\n```once-as-vagrant.sh\n\n#!/usr/bin/env bash\n\n#== Import script args ==\n\ngithub_token=$(echo \"$1\")\n\n#== Bash helpers ==\n\nfunction info {\n  echo \" \"\n  echo \"--> $1\"\n  echo \" \"\n}\n\n#== Provision script ==\n\ninfo \"Provision-script user: `whoami`\"\n\ninfo \"Configure composer\"\ncomposer config --global github-oauth.github.com ${github_token}\necho \"Done!\"\n\ninfo \"Install plugins for composer\"\ncomposer global require \"fxp/composer-asset-plugin:~1.1.1\" --no-progress\n\ninfo \"Install codeception\"\ncomposer global require \"codeception/codeception=2.0.*\" \"codeception/specify=*\" \"codeception/verify=*\" --no-progress\necho 'export PATH=/home/vagrant/.config/composer/vendor/bin:$PATH' | tee -a /home/vagrant/.profile\n\ninfo \"Install project dependencies\"\ncd /app\ncomposer --no-progress --prefer-dist install\n\ninfo \"Init project\"\n./init --env=Development --overwrite=y\n\ninfo \"Apply migrations\"\n./yii migrate <<< \"yes\"\n\ninfo \"Create bash-alias 'app' for vagrant user\"\necho 'alias app=\"cd /app\"' | tee /home/vagrant/.bash_aliases\n\ninfo \"Enabling colorized prompt for guest console\"\nsed -i \"s/#force_color_prompt=yes/force_color_prompt=yes/\" /home/vagrant/.bashrc\n\n```\n\n\n```once-as-root.sh\n\t#!/usr/bin/env bash\n\n#== Import script args ==\n\ntimezone=$(echo \"$1\")\n\n#== Bash helpers ==\n\nfunction info {\n  echo \" \"\n  echo \"--> $1\"\n  echo \" \"\n}\n\n#== Provision script ==\n\ninfo \"Provision-script user: `whoami`\"\n\ninfo \"Allocate swap for MySQL 5.6\"\nfallocate -l 2048M /swapfile\nchmod 600 /swapfile\nmkswap /swapfile\nswapon /swapfile\necho '/swapfile none swap defaults 0 0' >> /etc/fstab\n\ninfo \"Configure locales\"\nupdate-locale LC_ALL=\"C\"\ndpkg-reconfigure locales\n\ninfo \"Configure timezone\"\necho ${timezone} | tee /etc/timezone\ndpkg-reconfigure --frontend noninteractive tzdata\n\ninfo \"Prepare root password for MySQL\"\ndebconf-set-selections <<< \"mysql-server-5.6 mysql-server/root_password password \\\"''\\\"\"\ndebconf-set-selections <<< \"mysql-server-5.6 mysql-server/root_password_again password \\\"''\\\"\"\necho \"Done!\"\n\ninfo \"Update OS software\"\napt-get update\napt-get upgrade -y\n\ninfo \"Install additional software\"\napt-get install -y git php5-curl php5-cli php5-intl php5-mysqlnd php5-gd php5-fpm nginx mysql-server-5.6\n\ninfo \"Configure MySQL\"\nsed -i \"s/.*bind-address.*/bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\necho \"Done!\"\n\ninfo \"Configure PHP-FPM\"\nsed -i 's/user = www-data/user = vagrant/g' /etc/php5/fpm/pool.d/www.conf\nsed -i 's/group = www-data/group = vagrant/g' /etc/php5/fpm/pool.d/www.conf\nsed -i 's/owner = www-data/owner = vagrant/g' /etc/php5/fpm/pool.d/www.conf\necho \"Done!\"\n\ninfo \"Configure NGINX\"\nsed -i 's/user www-data/user vagrant/g' /etc/nginx/nginx.conf\necho \"Done!\"\n\ninfo \"Enabling site configuration\"\nln -s /app/vagrant/nginx/app.conf /etc/nginx/sites-enabled/app.conf\necho \"Done!\"\n\ninfo \"Initailize databases for MySQL\"\nmysql -uroot <<< \"CREATE DATABASE yii2advanced\"\nmysql -uroot <<< \"CREATE DATABASE yii2_advanced_tests\"\necho \"Done!\"\n\ninfo \"Install composer\"\ncurl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n```","source":"_posts/2016/vagrant.md","raw":"---\ntitle: vagrant usage\ndate: 2016-11-10 14:46:53\nupdated: 2016-11-10 14:46:53\nauthor: change\ntags:\ncategories:\n---\n\n### VirtualBox， Vagrant\n安装[VirtualBox](https://www.virtualbox.org/wiki/Downloads), 安装[vagrant](https://www.vagrantup.com/downloads.html)\n\n### 安装Box \n你可以把它想成是一个箱子，里面装了一些东西。在用 Vagrant 创建虚拟机的时候，需要用到 Box ，它里面会包装操作系统的镜像，不同的 Box 带的操作系统可能是不一样的，比如 CentOS，Ubuntu 等等，你可以基于它们去创建自己版本的 Box，比如在虚拟机上安装一些软件，然后把它重新打包成 Box。\n\n在 `vagrant添加 Box` ，Vagrant 提供的云服务 ,要把 Box 下载到本地的电脑上，交给 Vagrant 去管理，这样在创建虚拟机的时候，Vagrant 会复制一份你指定的 Box 到你的项目里面，这样你在这个虚拟机上的操作，就不会影响到其它的项目。\n\n<!-- more -->\n\n> http://www.vagrantbox.es/\n> https://atlas.hashicorp.com/boxes/search\n\n```bash\nvagrant box add {title} {box}    # title 为起的名字，box为在线URL地址，或者离线box路径\n\n```\n这里**可以安装很多个box，以服务不同的项目环境**，可以随时通过`vagrant box remove {title}`,所有的命令可以通过vagrant -h 查看。\n\n\n### 查看已安装的box\n`vagrant box list`\n\n\n### 初始化项目环境\n``` bash\n# 到项目目录\ncd project\n# 查看已经装的box\nvagrant box list\n\n# 初始化项目，之后回生成Vagrantfile文件，这个是ruby写的配置文件有一些参数设置\n\n`vagrant init {title}`  ，title：为`config.vm.box`重命名，title可略则默认的`config.vm.box=”base”`\n\n```\n\n\n### 启动 并查看状态\n```bash\nvagrant up\n\nvagrant status\n```\n\n### 控制虚拟机\n\n```bash\n# mac\nvagrant ssh\n\n\n# windows 用其他ssh链接工具\n\n# Host：127.0.0.1\n# Port：2200\n# Username：vagrant\n# password：vagrant\n\n```\n\n### 打包分发，生成box供其他人使用\n\n```bash\nvagrant package\n\n\n# 之后别人拿到box，相当于安装了一个box又 ，之后就直接初始化这个\nvagrant box add hahaha ~/box/package.box  # 添加 package.box 镜像并命名为 hahaha\n\ncd ~/dev  # 切换到项目目录\nvagrant init hahaha  \n\n```\n### 集成预安装\n\n你会发现每次都修改了一点点内容，再打包分发给其他用户其实很麻烦，为此 Vagrant 还提供了更为便捷的预安装定制。打开 Vagrantfile 文件末尾处有下面被注释的代码：\n```bash\nconfig.vm.provision \"shell\", inline: <<-SHELL\n   apt-get update\n   apt-get install -y apache2\nSHELL\n```\n如果你不是初次运行，同时又修改了这里的命令，想让系统再次运行这里面的命令，你可以使用 `vagrant reload --provision` 进行重载。所以在这种情况下，你只要将 Vagrantfile 共享给团队的其他成员就可以了，其他成员运行相同的命令即可。更多[参考](https://www.vagrantup.com/docs/provisioning/)\n\n你还可以把要运行的命令单独写在一个文件里存放在相同的目录下，比如 bootstrap.sh：\n```bash\n#!/usr/bin/env bash\n\napt-get update\napt-get install -y apache2\nif ! [ -L /var/www ]; then\n  rm -rf /var/www\n  ln -fs /vagrant /var/www\nfi\n```\n然后在 Vagrantfile 里这样添加：\n```bash\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"hashicorp/precise64\"\n  ...\n\n  config.vm.provision \"shell\", path: \"bootstrap.sh\"  # 添加这行\nend\n```\n[更多参考](https://www.vagrantup.com/docs/cli/index.html)\n\n\n### yii2 的vagrant 的 DEMO  配置\n```bash\nvagrant box add ubuntu/trusty64\n# 如果已经有了vagrantfile文件就不用 vargrant init 了\n\nvagrant up\n\n\n```\n\nVagrantfile 配置文件：\n\n```Vagrantfile\nrequire 'yaml'\nrequire 'fileutils'\n\ndomains = {\n  frontend: 'y2aa-frontend.dev',\n  backend:  'y2aa-backend.dev'\n}\n\nconfig = {\n  local: './vagrant/config/vagrant-local.yml',\n  example: './vagrant/config/vagrant-local.example.yml'\n}\n\n# copy config from example if local config not exists\nFileUtils.cp config[:example], config[:local] unless File.exist?(config[:local])\n# read config\noptions = YAML.load_file config[:local]\n\n# check github token\nif options['github_token'].nil? || options['github_token'].to_s.length != 40\n  puts \"You must place REAL GitHub token into configuration:\\n/yii2-app-advancded/vagrant/config/vagrant-local.yml\"\n  exit\nend\n\n# vagrant configurate\nVagrant.configure(2) do |config|\n  # select the box\n  config.vm.box = 'ubuntu/trusty64'\n\n  # should we ask about box updates?\n  config.vm.box_check_update = options['box_check_update']\n\n  config.vm.provider 'virtualbox' do |vb|\n    # machine cpus count\n    vb.cpus = options['cpus']\n    # machine memory size\n    vb.memory = options['memory']\n    # machine name (for VirtualBox UI)\n    vb.name = options['machine_name']\n  end\n\n  # machine name (for vagrant console)\n  config.vm.define options['machine_name']\n\n  # machine name (for guest machine console)\n  config.vm.hostname = options['machine_name']\n\n  # network settings\n  config.vm.network 'private_network', ip: options['ip']\n\n  # sync: folder 'yii2-app-advanced' (host machine) -> folder '/app' (guest machine)\n  config.vm.synced_folder './', '/app', owner: 'vagrant', group: 'vagrant'\n\n  # disable folder '/vagrant' (guest machine)\n  config.vm.synced_folder '.', '/vagrant', disabled: true\n\n  # hosts settings (host machine)\n  config.vm.provision :hostmanager\n  config.hostmanager.enabled            = true\n  config.hostmanager.manage_host        = true\n  config.hostmanager.ignore_private_ip  = false\n  config.hostmanager.include_offline    = true\n  config.hostmanager.aliases            = domains.values\n\n  # provisioners\n  config.vm.provision 'shell', path: './vagrant/provision/once-as-root.sh', args: [options['timezone']]\n  config.vm.provision 'shell', path: './vagrant/provision/once-as-vagrant.sh', args: [options['github_token']], privileged: false\n  config.vm.provision 'shell', path: './vagrant/provision/always-as-root.sh', run: 'always'\n\n  # post-install message (vagrant console)\n  config.vm.post_up_message = \"Frontend URL: http://#{domains[:frontend]}\\nBackend URL: http://#{domains[:backend]}\"\nend\n\n```\n\n```once-as-vagrant.sh\n\n#!/usr/bin/env bash\n\n#== Import script args ==\n\ngithub_token=$(echo \"$1\")\n\n#== Bash helpers ==\n\nfunction info {\n  echo \" \"\n  echo \"--> $1\"\n  echo \" \"\n}\n\n#== Provision script ==\n\ninfo \"Provision-script user: `whoami`\"\n\ninfo \"Configure composer\"\ncomposer config --global github-oauth.github.com ${github_token}\necho \"Done!\"\n\ninfo \"Install plugins for composer\"\ncomposer global require \"fxp/composer-asset-plugin:~1.1.1\" --no-progress\n\ninfo \"Install codeception\"\ncomposer global require \"codeception/codeception=2.0.*\" \"codeception/specify=*\" \"codeception/verify=*\" --no-progress\necho 'export PATH=/home/vagrant/.config/composer/vendor/bin:$PATH' | tee -a /home/vagrant/.profile\n\ninfo \"Install project dependencies\"\ncd /app\ncomposer --no-progress --prefer-dist install\n\ninfo \"Init project\"\n./init --env=Development --overwrite=y\n\ninfo \"Apply migrations\"\n./yii migrate <<< \"yes\"\n\ninfo \"Create bash-alias 'app' for vagrant user\"\necho 'alias app=\"cd /app\"' | tee /home/vagrant/.bash_aliases\n\ninfo \"Enabling colorized prompt for guest console\"\nsed -i \"s/#force_color_prompt=yes/force_color_prompt=yes/\" /home/vagrant/.bashrc\n\n```\n\n\n```once-as-root.sh\n\t#!/usr/bin/env bash\n\n#== Import script args ==\n\ntimezone=$(echo \"$1\")\n\n#== Bash helpers ==\n\nfunction info {\n  echo \" \"\n  echo \"--> $1\"\n  echo \" \"\n}\n\n#== Provision script ==\n\ninfo \"Provision-script user: `whoami`\"\n\ninfo \"Allocate swap for MySQL 5.6\"\nfallocate -l 2048M /swapfile\nchmod 600 /swapfile\nmkswap /swapfile\nswapon /swapfile\necho '/swapfile none swap defaults 0 0' >> /etc/fstab\n\ninfo \"Configure locales\"\nupdate-locale LC_ALL=\"C\"\ndpkg-reconfigure locales\n\ninfo \"Configure timezone\"\necho ${timezone} | tee /etc/timezone\ndpkg-reconfigure --frontend noninteractive tzdata\n\ninfo \"Prepare root password for MySQL\"\ndebconf-set-selections <<< \"mysql-server-5.6 mysql-server/root_password password \\\"''\\\"\"\ndebconf-set-selections <<< \"mysql-server-5.6 mysql-server/root_password_again password \\\"''\\\"\"\necho \"Done!\"\n\ninfo \"Update OS software\"\napt-get update\napt-get upgrade -y\n\ninfo \"Install additional software\"\napt-get install -y git php5-curl php5-cli php5-intl php5-mysqlnd php5-gd php5-fpm nginx mysql-server-5.6\n\ninfo \"Configure MySQL\"\nsed -i \"s/.*bind-address.*/bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\necho \"Done!\"\n\ninfo \"Configure PHP-FPM\"\nsed -i 's/user = www-data/user = vagrant/g' /etc/php5/fpm/pool.d/www.conf\nsed -i 's/group = www-data/group = vagrant/g' /etc/php5/fpm/pool.d/www.conf\nsed -i 's/owner = www-data/owner = vagrant/g' /etc/php5/fpm/pool.d/www.conf\necho \"Done!\"\n\ninfo \"Configure NGINX\"\nsed -i 's/user www-data/user vagrant/g' /etc/nginx/nginx.conf\necho \"Done!\"\n\ninfo \"Enabling site configuration\"\nln -s /app/vagrant/nginx/app.conf /etc/nginx/sites-enabled/app.conf\necho \"Done!\"\n\ninfo \"Initailize databases for MySQL\"\nmysql -uroot <<< \"CREATE DATABASE yii2advanced\"\nmysql -uroot <<< \"CREATE DATABASE yii2_advanced_tests\"\necho \"Done!\"\n\ninfo \"Install composer\"\ncurl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n```","slug":"vagrant","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpaq002cwsnn63oxg53x","content":"<h3 id=\"VirtualBox，-Vagrant\"><a href=\"#VirtualBox，-Vagrant\" class=\"headerlink\" title=\"VirtualBox， Vagrant\"></a>VirtualBox， Vagrant</h3><p>安装<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\" rel=\"external\">VirtualBox</a>, 安装<a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\" rel=\"external\">vagrant</a></p>\n<h3 id=\"安装Box\"><a href=\"#安装Box\" class=\"headerlink\" title=\"安装Box\"></a>安装Box</h3><p>你可以把它想成是一个箱子，里面装了一些东西。在用 Vagrant 创建虚拟机的时候，需要用到 Box ，它里面会包装操作系统的镜像，不同的 Box 带的操作系统可能是不一样的，比如 CentOS，Ubuntu 等等，你可以基于它们去创建自己版本的 Box，比如在虚拟机上安装一些软件，然后把它重新打包成 Box。</p>\n<p>在 <code>vagrant添加 Box</code> ，Vagrant 提供的云服务 ,要把 Box 下载到本地的电脑上，交给 Vagrant 去管理，这样在创建虚拟机的时候，Vagrant 会复制一份你指定的 Box 到你的项目里面，这样你在这个虚拟机上的操作，就不会影响到其它的项目。</p>\n<a id=\"more\"></a>\n<blockquote>\n<p><a href=\"http://www.vagrantbox.es/\" target=\"_blank\" rel=\"external\">http://www.vagrantbox.es/</a><br><a href=\"https://atlas.hashicorp.com/boxes/search\" target=\"_blank\" rel=\"external\">https://atlas.hashicorp.com/boxes/search</a></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant box add &#123;title&#125; &#123;box&#125;    <span class=\"comment\"># title 为起的名字，box为在线URL地址，或者离线box路径</span></span><br></pre></td></tr></table></figure>\n<p>这里<strong>可以安装很多个box，以服务不同的项目环境</strong>，可以随时通过<code>vagrant box remove {title}</code>,所有的命令可以通过vagrant -h 查看。</p>\n<h3 id=\"查看已安装的box\"><a href=\"#查看已安装的box\" class=\"headerlink\" title=\"查看已安装的box\"></a>查看已安装的box</h3><p><code>vagrant box list</code></p>\n<h3 id=\"初始化项目环境\"><a href=\"#初始化项目环境\" class=\"headerlink\" title=\"初始化项目环境\"></a>初始化项目环境</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 到项目目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> project</span><br><span class=\"line\"><span class=\"comment\"># 查看已经装的box</span></span><br><span class=\"line\">vagrant box list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化项目，之后回生成Vagrantfile文件，这个是ruby写的配置文件有一些参数设置</span></span><br><span class=\"line\"></span><br><span class=\"line\">`vagrant init &#123;title&#125;`  ，title：为`config.vm.box`重命名，title可略则默认的`config.vm.box=”base”`</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动-并查看状态\"><a href=\"#启动-并查看状态\" class=\"headerlink\" title=\"启动 并查看状态\"></a>启动 并查看状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant up</span><br><span class=\"line\"></span><br><span class=\"line\">vagrant status</span><br></pre></td></tr></table></figure>\n<h3 id=\"控制虚拟机\"><a href=\"#控制虚拟机\" class=\"headerlink\" title=\"控制虚拟机\"></a>控制虚拟机</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># mac</span></span><br><span class=\"line\">vagrant ssh</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># windows 用其他ssh链接工具</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Host：127.0.0.1</span></span><br><span class=\"line\"><span class=\"comment\"># Port：2200</span></span><br><span class=\"line\"><span class=\"comment\"># Username：vagrant</span></span><br><span class=\"line\"><span class=\"comment\"># password：vagrant</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"打包分发，生成box供其他人使用\"><a href=\"#打包分发，生成box供其他人使用\" class=\"headerlink\" title=\"打包分发，生成box供其他人使用\"></a>打包分发，生成box供其他人使用</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant package</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 之后别人拿到box，相当于安装了一个box又 ，之后就直接初始化这个</span></span><br><span class=\"line\">vagrant box add hahaha ~/box/package.box  <span class=\"comment\"># 添加 package.box 镜像并命名为 hahaha</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/dev  <span class=\"comment\"># 切换到项目目录</span></span><br><span class=\"line\">vagrant init hahaha</span><br></pre></td></tr></table></figure>\n<h3 id=\"集成预安装\"><a href=\"#集成预安装\" class=\"headerlink\" title=\"集成预安装\"></a>集成预安装</h3><p>你会发现每次都修改了一点点内容，再打包分发给其他用户其实很麻烦，为此 Vagrant 还提供了更为便捷的预安装定制。打开 Vagrantfile 文件末尾处有下面被注释的代码：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.vm.provision <span class=\"string\">\"shell\"</span>, inline: &lt;&lt;-SHELL</span><br><span class=\"line\">   apt-get update</span><br><span class=\"line\">   apt-get install -y apache2</span><br><span class=\"line\">SHELL</span><br></pre></td></tr></table></figure></p>\n<p>如果你不是初次运行，同时又修改了这里的命令，想让系统再次运行这里面的命令，你可以使用 <code>vagrant reload --provision</code> 进行重载。所以在这种情况下，你只要将 Vagrantfile 共享给团队的其他成员就可以了，其他成员运行相同的命令即可。更多<a href=\"https://www.vagrantup.com/docs/provisioning/\" target=\"_blank\" rel=\"external\">参考</a></p>\n<p>你还可以把要运行的命令单独写在一个文件里存放在相同的目录下，比如 bootstrap.sh：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env bash</span><br><span class=\"line\"></span></span><br><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get install -y apache2</span><br><span class=\"line\"><span class=\"keyword\">if</span> ! [ -L /var/www ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  rm -rf /var/www</span><br><span class=\"line\">  ln -fs /vagrant /var/www</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></p>\n<p>然后在 Vagrantfile 里这样添加：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vagrant.configure(<span class=\"string\">\"2\"</span>) <span class=\"keyword\">do</span> |config|</span><br><span class=\"line\">  config.vm.box = <span class=\"string\">\"hashicorp/precise64\"</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  config.vm.provision <span class=\"string\">\"shell\"</span>, path: <span class=\"string\">\"bootstrap.sh\"</span>  <span class=\"comment\"># 添加这行</span></span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://www.vagrantup.com/docs/cli/index.html\" target=\"_blank\" rel=\"external\">更多参考</a></p>\n<h3 id=\"yii2-的vagrant-的-DEMO-配置\"><a href=\"#yii2-的vagrant-的-DEMO-配置\" class=\"headerlink\" title=\"yii2 的vagrant 的 DEMO  配置\"></a>yii2 的vagrant 的 DEMO  配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant box add ubuntu/trusty64</span><br><span class=\"line\"><span class=\"comment\"># 如果已经有了vagrantfile文件就不用 vargrant init 了</span></span><br><span class=\"line\"></span><br><span class=\"line\">vagrant up</span><br></pre></td></tr></table></figure>\n<p>Vagrantfile 配置文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require &apos;yaml&apos;</span><br><span class=\"line\">require &apos;fileutils&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">domains = &#123;</span><br><span class=\"line\">  frontend: &apos;y2aa-frontend.dev&apos;,</span><br><span class=\"line\">  backend:  &apos;y2aa-backend.dev&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">config = &#123;</span><br><span class=\"line\">  local: &apos;./vagrant/config/vagrant-local.yml&apos;,</span><br><span class=\"line\">  example: &apos;./vagrant/config/vagrant-local.example.yml&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># copy config from example if local config not exists</span><br><span class=\"line\">FileUtils.cp config[:example], config[:local] unless File.exist?(config[:local])</span><br><span class=\"line\"># read config</span><br><span class=\"line\">options = YAML.load_file config[:local]</span><br><span class=\"line\"></span><br><span class=\"line\"># check github token</span><br><span class=\"line\">if options[&apos;github_token&apos;].nil? || options[&apos;github_token&apos;].to_s.length != 40</span><br><span class=\"line\">  puts &quot;You must place REAL GitHub token into configuration:\\n/yii2-app-advancded/vagrant/config/vagrant-local.yml&quot;</span><br><span class=\"line\">  exit</span><br><span class=\"line\">end</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant configurate</span><br><span class=\"line\">Vagrant.configure(2) do |config|</span><br><span class=\"line\">  # select the box</span><br><span class=\"line\">  config.vm.box = &apos;ubuntu/trusty64&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">  # should we ask about box updates?</span><br><span class=\"line\">  config.vm.box_check_update = options[&apos;box_check_update&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">  config.vm.provider &apos;virtualbox&apos; do |vb|</span><br><span class=\"line\">    # machine cpus count</span><br><span class=\"line\">    vb.cpus = options[&apos;cpus&apos;]</span><br><span class=\"line\">    # machine memory size</span><br><span class=\"line\">    vb.memory = options[&apos;memory&apos;]</span><br><span class=\"line\">    # machine name (for VirtualBox UI)</span><br><span class=\"line\">    vb.name = options[&apos;machine_name&apos;]</span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">  # machine name (for vagrant console)</span><br><span class=\"line\">  config.vm.define options[&apos;machine_name&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">  # machine name (for guest machine console)</span><br><span class=\"line\">  config.vm.hostname = options[&apos;machine_name&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">  # network settings</span><br><span class=\"line\">  config.vm.network &apos;private_network&apos;, ip: options[&apos;ip&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">  # sync: folder &apos;yii2-app-advanced&apos; (host machine) -&gt; folder &apos;/app&apos; (guest machine)</span><br><span class=\"line\">  config.vm.synced_folder &apos;./&apos;, &apos;/app&apos;, owner: &apos;vagrant&apos;, group: &apos;vagrant&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">  # disable folder &apos;/vagrant&apos; (guest machine)</span><br><span class=\"line\">  config.vm.synced_folder &apos;.&apos;, &apos;/vagrant&apos;, disabled: true</span><br><span class=\"line\"></span><br><span class=\"line\">  # hosts settings (host machine)</span><br><span class=\"line\">  config.vm.provision :hostmanager</span><br><span class=\"line\">  config.hostmanager.enabled            = true</span><br><span class=\"line\">  config.hostmanager.manage_host        = true</span><br><span class=\"line\">  config.hostmanager.ignore_private_ip  = false</span><br><span class=\"line\">  config.hostmanager.include_offline    = true</span><br><span class=\"line\">  config.hostmanager.aliases            = domains.values</span><br><span class=\"line\"></span><br><span class=\"line\">  # provisioners</span><br><span class=\"line\">  config.vm.provision &apos;shell&apos;, path: &apos;./vagrant/provision/once-as-root.sh&apos;, args: [options[&apos;timezone&apos;]]</span><br><span class=\"line\">  config.vm.provision &apos;shell&apos;, path: &apos;./vagrant/provision/once-as-vagrant.sh&apos;, args: [options[&apos;github_token&apos;]], privileged: false</span><br><span class=\"line\">  config.vm.provision &apos;shell&apos;, path: &apos;./vagrant/provision/always-as-root.sh&apos;, run: &apos;always&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">  # post-install message (vagrant console)</span><br><span class=\"line\">  config.vm.post_up_message = &quot;Frontend URL: http://#&#123;domains[:frontend]&#125;\\nBackend URL: http://#&#123;domains[:backend]&#125;&quot;</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#!/usr/bin/env bash</span><br><span class=\"line\"></span><br><span class=\"line\">#== Import script args ==</span><br><span class=\"line\"></span><br><span class=\"line\">github_token=$(echo &quot;$1&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">#== Bash helpers ==</span><br><span class=\"line\"></span><br><span class=\"line\">function info &#123;</span><br><span class=\"line\">  echo &quot; &quot;</span><br><span class=\"line\">  echo &quot;--&gt; $1&quot;</span><br><span class=\"line\">  echo &quot; &quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#== Provision script ==</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Provision-script user: `whoami`&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure composer&quot;</span><br><span class=\"line\">composer config --global github-oauth.github.com $&#123;github_token&#125;</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Install plugins for composer&quot;</span><br><span class=\"line\">composer global require &quot;fxp/composer-asset-plugin:~1.1.1&quot; --no-progress</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Install codeception&quot;</span><br><span class=\"line\">composer global require &quot;codeception/codeception=2.0.*&quot; &quot;codeception/specify=*&quot; &quot;codeception/verify=*&quot; --no-progress</span><br><span class=\"line\">echo &apos;export PATH=/home/vagrant/.config/composer/vendor/bin:$PATH&apos; | tee -a /home/vagrant/.profile</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Install project dependencies&quot;</span><br><span class=\"line\">cd /app</span><br><span class=\"line\">composer --no-progress --prefer-dist install</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Init project&quot;</span><br><span class=\"line\">./init --env=Development --overwrite=y</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Apply migrations&quot;</span><br><span class=\"line\">./yii migrate &lt;&lt;&lt; &quot;yes&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Create bash-alias &apos;app&apos; for vagrant user&quot;</span><br><span class=\"line\">echo &apos;alias app=&quot;cd /app&quot;&apos; | tee /home/vagrant/.bash_aliases</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Enabling colorized prompt for guest console&quot;</span><br><span class=\"line\">sed -i &quot;s/#force_color_prompt=yes/force_color_prompt=yes/&quot; /home/vagrant/.bashrc</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t#!/usr/bin/env bash</span><br><span class=\"line\"></span><br><span class=\"line\">#== Import script args ==</span><br><span class=\"line\"></span><br><span class=\"line\">timezone=$(echo &quot;$1&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">#== Bash helpers ==</span><br><span class=\"line\"></span><br><span class=\"line\">function info &#123;</span><br><span class=\"line\">  echo &quot; &quot;</span><br><span class=\"line\">  echo &quot;--&gt; $1&quot;</span><br><span class=\"line\">  echo &quot; &quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#== Provision script ==</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Provision-script user: `whoami`&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Allocate swap for MySQL 5.6&quot;</span><br><span class=\"line\">fallocate -l 2048M /swapfile</span><br><span class=\"line\">chmod 600 /swapfile</span><br><span class=\"line\">mkswap /swapfile</span><br><span class=\"line\">swapon /swapfile</span><br><span class=\"line\">echo &apos;/swapfile none swap defaults 0 0&apos; &gt;&gt; /etc/fstab</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure locales&quot;</span><br><span class=\"line\">update-locale LC_ALL=&quot;C&quot;</span><br><span class=\"line\">dpkg-reconfigure locales</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure timezone&quot;</span><br><span class=\"line\">echo $&#123;timezone&#125; | tee /etc/timezone</span><br><span class=\"line\">dpkg-reconfigure --frontend noninteractive tzdata</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Prepare root password for MySQL&quot;</span><br><span class=\"line\">debconf-set-selections &lt;&lt;&lt; &quot;mysql-server-5.6 mysql-server/root_password password \\&quot;&apos;&apos;\\&quot;&quot;</span><br><span class=\"line\">debconf-set-selections &lt;&lt;&lt; &quot;mysql-server-5.6 mysql-server/root_password_again password \\&quot;&apos;&apos;\\&quot;&quot;</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Update OS software&quot;</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get upgrade -y</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Install additional software&quot;</span><br><span class=\"line\">apt-get install -y git php5-curl php5-cli php5-intl php5-mysqlnd php5-gd php5-fpm nginx mysql-server-5.6</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure MySQL&quot;</span><br><span class=\"line\">sed -i &quot;s/.*bind-address.*/bind-address = 0.0.0.0/&quot; /etc/mysql/my.cnf</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure PHP-FPM&quot;</span><br><span class=\"line\">sed -i &apos;s/user = www-data/user = vagrant/g&apos; /etc/php5/fpm/pool.d/www.conf</span><br><span class=\"line\">sed -i &apos;s/group = www-data/group = vagrant/g&apos; /etc/php5/fpm/pool.d/www.conf</span><br><span class=\"line\">sed -i &apos;s/owner = www-data/owner = vagrant/g&apos; /etc/php5/fpm/pool.d/www.conf</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure NGINX&quot;</span><br><span class=\"line\">sed -i &apos;s/user www-data/user vagrant/g&apos; /etc/nginx/nginx.conf</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Enabling site configuration&quot;</span><br><span class=\"line\">ln -s /app/vagrant/nginx/app.conf /etc/nginx/sites-enabled/app.conf</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Initailize databases for MySQL&quot;</span><br><span class=\"line\">mysql -uroot &lt;&lt;&lt; &quot;CREATE DATABASE yii2advanced&quot;</span><br><span class=\"line\">mysql -uroot &lt;&lt;&lt; &quot;CREATE DATABASE yii2_advanced_tests&quot;</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Install composer&quot;</span><br><span class=\"line\">curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer</span><br></pre></td></tr></table></figure>","excerpt":"<h3 id=\"VirtualBox，-Vagrant\"><a href=\"#VirtualBox，-Vagrant\" class=\"headerlink\" title=\"VirtualBox， Vagrant\"></a>VirtualBox， Vagrant</h3><p>安装<a href=\"https://www.virtualbox.org/wiki/Downloads\">VirtualBox</a>, 安装<a href=\"https://www.vagrantup.com/downloads.html\">vagrant</a></p>\n<h3 id=\"安装Box\"><a href=\"#安装Box\" class=\"headerlink\" title=\"安装Box\"></a>安装Box</h3><p>你可以把它想成是一个箱子，里面装了一些东西。在用 Vagrant 创建虚拟机的时候，需要用到 Box ，它里面会包装操作系统的镜像，不同的 Box 带的操作系统可能是不一样的，比如 CentOS，Ubuntu 等等，你可以基于它们去创建自己版本的 Box，比如在虚拟机上安装一些软件，然后把它重新打包成 Box。</p>\n<p>在 <code>vagrant添加 Box</code> ，Vagrant 提供的云服务 ,要把 Box 下载到本地的电脑上，交给 Vagrant 去管理，这样在创建虚拟机的时候，Vagrant 会复制一份你指定的 Box 到你的项目里面，这样你在这个虚拟机上的操作，就不会影响到其它的项目。</p>","more":"<blockquote>\n<p><a href=\"http://www.vagrantbox.es/\">http://www.vagrantbox.es/</a><br><a href=\"https://atlas.hashicorp.com/boxes/search\">https://atlas.hashicorp.com/boxes/search</a></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant box add &#123;title&#125; &#123;box&#125;    <span class=\"comment\"># title 为起的名字，box为在线URL地址，或者离线box路径</span></span><br></pre></td></tr></table></figure>\n<p>这里<strong>可以安装很多个box，以服务不同的项目环境</strong>，可以随时通过<code>vagrant box remove {title}</code>,所有的命令可以通过vagrant -h 查看。</p>\n<h3 id=\"查看已安装的box\"><a href=\"#查看已安装的box\" class=\"headerlink\" title=\"查看已安装的box\"></a>查看已安装的box</h3><p><code>vagrant box list</code></p>\n<h3 id=\"初始化项目环境\"><a href=\"#初始化项目环境\" class=\"headerlink\" title=\"初始化项目环境\"></a>初始化项目环境</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 到项目目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> project</span><br><span class=\"line\"><span class=\"comment\"># 查看已经装的box</span></span><br><span class=\"line\">vagrant box list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化项目，之后回生成Vagrantfile文件，这个是ruby写的配置文件有一些参数设置</span></span><br><span class=\"line\"></span><br><span class=\"line\">`vagrant init &#123;title&#125;`  ，title：为`config.vm.box`重命名，title可略则默认的`config.vm.box=”base”`</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动-并查看状态\"><a href=\"#启动-并查看状态\" class=\"headerlink\" title=\"启动 并查看状态\"></a>启动 并查看状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant up</span><br><span class=\"line\"></span><br><span class=\"line\">vagrant status</span><br></pre></td></tr></table></figure>\n<h3 id=\"控制虚拟机\"><a href=\"#控制虚拟机\" class=\"headerlink\" title=\"控制虚拟机\"></a>控制虚拟机</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># mac</span></span><br><span class=\"line\">vagrant ssh</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># windows 用其他ssh链接工具</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Host：127.0.0.1</span></span><br><span class=\"line\"><span class=\"comment\"># Port：2200</span></span><br><span class=\"line\"><span class=\"comment\"># Username：vagrant</span></span><br><span class=\"line\"><span class=\"comment\"># password：vagrant</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"打包分发，生成box供其他人使用\"><a href=\"#打包分发，生成box供其他人使用\" class=\"headerlink\" title=\"打包分发，生成box供其他人使用\"></a>打包分发，生成box供其他人使用</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant package</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 之后别人拿到box，相当于安装了一个box又 ，之后就直接初始化这个</span></span><br><span class=\"line\">vagrant box add hahaha ~/box/package.box  <span class=\"comment\"># 添加 package.box 镜像并命名为 hahaha</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/dev  <span class=\"comment\"># 切换到项目目录</span></span><br><span class=\"line\">vagrant init hahaha</span><br></pre></td></tr></table></figure>\n<h3 id=\"集成预安装\"><a href=\"#集成预安装\" class=\"headerlink\" title=\"集成预安装\"></a>集成预安装</h3><p>你会发现每次都修改了一点点内容，再打包分发给其他用户其实很麻烦，为此 Vagrant 还提供了更为便捷的预安装定制。打开 Vagrantfile 文件末尾处有下面被注释的代码：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.vm.provision <span class=\"string\">\"shell\"</span>, inline: &lt;&lt;-SHELL</span><br><span class=\"line\">   apt-get update</span><br><span class=\"line\">   apt-get install -y apache2</span><br><span class=\"line\">SHELL</span><br></pre></td></tr></table></figure></p>\n<p>如果你不是初次运行，同时又修改了这里的命令，想让系统再次运行这里面的命令，你可以使用 <code>vagrant reload --provision</code> 进行重载。所以在这种情况下，你只要将 Vagrantfile 共享给团队的其他成员就可以了，其他成员运行相同的命令即可。更多<a href=\"https://www.vagrantup.com/docs/provisioning/\">参考</a></p>\n<p>你还可以把要运行的命令单独写在一个文件里存放在相同的目录下，比如 bootstrap.sh：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env bash</span><br><span class=\"line\"></span></span><br><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get install -y apache2</span><br><span class=\"line\"><span class=\"keyword\">if</span> ! [ -L /var/www ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  rm -rf /var/www</span><br><span class=\"line\">  ln -fs /vagrant /var/www</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></p>\n<p>然后在 Vagrantfile 里这样添加：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vagrant.configure(<span class=\"string\">\"2\"</span>) <span class=\"keyword\">do</span> |config|</span><br><span class=\"line\">  config.vm.box = <span class=\"string\">\"hashicorp/precise64\"</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  config.vm.provision <span class=\"string\">\"shell\"</span>, path: <span class=\"string\">\"bootstrap.sh\"</span>  <span class=\"comment\"># 添加这行</span></span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://www.vagrantup.com/docs/cli/index.html\">更多参考</a></p>\n<h3 id=\"yii2-的vagrant-的-DEMO-配置\"><a href=\"#yii2-的vagrant-的-DEMO-配置\" class=\"headerlink\" title=\"yii2 的vagrant 的 DEMO  配置\"></a>yii2 的vagrant 的 DEMO  配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant box add ubuntu/trusty64</span><br><span class=\"line\"><span class=\"comment\"># 如果已经有了vagrantfile文件就不用 vargrant init 了</span></span><br><span class=\"line\"></span><br><span class=\"line\">vagrant up</span><br></pre></td></tr></table></figure>\n<p>Vagrantfile 配置文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require &apos;yaml&apos;</span><br><span class=\"line\">require &apos;fileutils&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">domains = &#123;</span><br><span class=\"line\">  frontend: &apos;y2aa-frontend.dev&apos;,</span><br><span class=\"line\">  backend:  &apos;y2aa-backend.dev&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">config = &#123;</span><br><span class=\"line\">  local: &apos;./vagrant/config/vagrant-local.yml&apos;,</span><br><span class=\"line\">  example: &apos;./vagrant/config/vagrant-local.example.yml&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># copy config from example if local config not exists</span><br><span class=\"line\">FileUtils.cp config[:example], config[:local] unless File.exist?(config[:local])</span><br><span class=\"line\"># read config</span><br><span class=\"line\">options = YAML.load_file config[:local]</span><br><span class=\"line\"></span><br><span class=\"line\"># check github token</span><br><span class=\"line\">if options[&apos;github_token&apos;].nil? || options[&apos;github_token&apos;].to_s.length != 40</span><br><span class=\"line\">  puts &quot;You must place REAL GitHub token into configuration:\\n/yii2-app-advancded/vagrant/config/vagrant-local.yml&quot;</span><br><span class=\"line\">  exit</span><br><span class=\"line\">end</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant configurate</span><br><span class=\"line\">Vagrant.configure(2) do |config|</span><br><span class=\"line\">  # select the box</span><br><span class=\"line\">  config.vm.box = &apos;ubuntu/trusty64&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">  # should we ask about box updates?</span><br><span class=\"line\">  config.vm.box_check_update = options[&apos;box_check_update&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">  config.vm.provider &apos;virtualbox&apos; do |vb|</span><br><span class=\"line\">    # machine cpus count</span><br><span class=\"line\">    vb.cpus = options[&apos;cpus&apos;]</span><br><span class=\"line\">    # machine memory size</span><br><span class=\"line\">    vb.memory = options[&apos;memory&apos;]</span><br><span class=\"line\">    # machine name (for VirtualBox UI)</span><br><span class=\"line\">    vb.name = options[&apos;machine_name&apos;]</span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">  # machine name (for vagrant console)</span><br><span class=\"line\">  config.vm.define options[&apos;machine_name&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">  # machine name (for guest machine console)</span><br><span class=\"line\">  config.vm.hostname = options[&apos;machine_name&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">  # network settings</span><br><span class=\"line\">  config.vm.network &apos;private_network&apos;, ip: options[&apos;ip&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">  # sync: folder &apos;yii2-app-advanced&apos; (host machine) -&gt; folder &apos;/app&apos; (guest machine)</span><br><span class=\"line\">  config.vm.synced_folder &apos;./&apos;, &apos;/app&apos;, owner: &apos;vagrant&apos;, group: &apos;vagrant&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">  # disable folder &apos;/vagrant&apos; (guest machine)</span><br><span class=\"line\">  config.vm.synced_folder &apos;.&apos;, &apos;/vagrant&apos;, disabled: true</span><br><span class=\"line\"></span><br><span class=\"line\">  # hosts settings (host machine)</span><br><span class=\"line\">  config.vm.provision :hostmanager</span><br><span class=\"line\">  config.hostmanager.enabled            = true</span><br><span class=\"line\">  config.hostmanager.manage_host        = true</span><br><span class=\"line\">  config.hostmanager.ignore_private_ip  = false</span><br><span class=\"line\">  config.hostmanager.include_offline    = true</span><br><span class=\"line\">  config.hostmanager.aliases            = domains.values</span><br><span class=\"line\"></span><br><span class=\"line\">  # provisioners</span><br><span class=\"line\">  config.vm.provision &apos;shell&apos;, path: &apos;./vagrant/provision/once-as-root.sh&apos;, args: [options[&apos;timezone&apos;]]</span><br><span class=\"line\">  config.vm.provision &apos;shell&apos;, path: &apos;./vagrant/provision/once-as-vagrant.sh&apos;, args: [options[&apos;github_token&apos;]], privileged: false</span><br><span class=\"line\">  config.vm.provision &apos;shell&apos;, path: &apos;./vagrant/provision/always-as-root.sh&apos;, run: &apos;always&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">  # post-install message (vagrant console)</span><br><span class=\"line\">  config.vm.post_up_message = &quot;Frontend URL: http://#&#123;domains[:frontend]&#125;\\nBackend URL: http://#&#123;domains[:backend]&#125;&quot;</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#!/usr/bin/env bash</span><br><span class=\"line\"></span><br><span class=\"line\">#== Import script args ==</span><br><span class=\"line\"></span><br><span class=\"line\">github_token=$(echo &quot;$1&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">#== Bash helpers ==</span><br><span class=\"line\"></span><br><span class=\"line\">function info &#123;</span><br><span class=\"line\">  echo &quot; &quot;</span><br><span class=\"line\">  echo &quot;--&gt; $1&quot;</span><br><span class=\"line\">  echo &quot; &quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#== Provision script ==</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Provision-script user: `whoami`&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure composer&quot;</span><br><span class=\"line\">composer config --global github-oauth.github.com $&#123;github_token&#125;</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Install plugins for composer&quot;</span><br><span class=\"line\">composer global require &quot;fxp/composer-asset-plugin:~1.1.1&quot; --no-progress</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Install codeception&quot;</span><br><span class=\"line\">composer global require &quot;codeception/codeception=2.0.*&quot; &quot;codeception/specify=*&quot; &quot;codeception/verify=*&quot; --no-progress</span><br><span class=\"line\">echo &apos;export PATH=/home/vagrant/.config/composer/vendor/bin:$PATH&apos; | tee -a /home/vagrant/.profile</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Install project dependencies&quot;</span><br><span class=\"line\">cd /app</span><br><span class=\"line\">composer --no-progress --prefer-dist install</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Init project&quot;</span><br><span class=\"line\">./init --env=Development --overwrite=y</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Apply migrations&quot;</span><br><span class=\"line\">./yii migrate &lt;&lt;&lt; &quot;yes&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Create bash-alias &apos;app&apos; for vagrant user&quot;</span><br><span class=\"line\">echo &apos;alias app=&quot;cd /app&quot;&apos; | tee /home/vagrant/.bash_aliases</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Enabling colorized prompt for guest console&quot;</span><br><span class=\"line\">sed -i &quot;s/#force_color_prompt=yes/force_color_prompt=yes/&quot; /home/vagrant/.bashrc</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t#!/usr/bin/env bash</span><br><span class=\"line\"></span><br><span class=\"line\">#== Import script args ==</span><br><span class=\"line\"></span><br><span class=\"line\">timezone=$(echo &quot;$1&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">#== Bash helpers ==</span><br><span class=\"line\"></span><br><span class=\"line\">function info &#123;</span><br><span class=\"line\">  echo &quot; &quot;</span><br><span class=\"line\">  echo &quot;--&gt; $1&quot;</span><br><span class=\"line\">  echo &quot; &quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#== Provision script ==</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Provision-script user: `whoami`&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Allocate swap for MySQL 5.6&quot;</span><br><span class=\"line\">fallocate -l 2048M /swapfile</span><br><span class=\"line\">chmod 600 /swapfile</span><br><span class=\"line\">mkswap /swapfile</span><br><span class=\"line\">swapon /swapfile</span><br><span class=\"line\">echo &apos;/swapfile none swap defaults 0 0&apos; &gt;&gt; /etc/fstab</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure locales&quot;</span><br><span class=\"line\">update-locale LC_ALL=&quot;C&quot;</span><br><span class=\"line\">dpkg-reconfigure locales</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure timezone&quot;</span><br><span class=\"line\">echo $&#123;timezone&#125; | tee /etc/timezone</span><br><span class=\"line\">dpkg-reconfigure --frontend noninteractive tzdata</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Prepare root password for MySQL&quot;</span><br><span class=\"line\">debconf-set-selections &lt;&lt;&lt; &quot;mysql-server-5.6 mysql-server/root_password password \\&quot;&apos;&apos;\\&quot;&quot;</span><br><span class=\"line\">debconf-set-selections &lt;&lt;&lt; &quot;mysql-server-5.6 mysql-server/root_password_again password \\&quot;&apos;&apos;\\&quot;&quot;</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Update OS software&quot;</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get upgrade -y</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Install additional software&quot;</span><br><span class=\"line\">apt-get install -y git php5-curl php5-cli php5-intl php5-mysqlnd php5-gd php5-fpm nginx mysql-server-5.6</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure MySQL&quot;</span><br><span class=\"line\">sed -i &quot;s/.*bind-address.*/bind-address = 0.0.0.0/&quot; /etc/mysql/my.cnf</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure PHP-FPM&quot;</span><br><span class=\"line\">sed -i &apos;s/user = www-data/user = vagrant/g&apos; /etc/php5/fpm/pool.d/www.conf</span><br><span class=\"line\">sed -i &apos;s/group = www-data/group = vagrant/g&apos; /etc/php5/fpm/pool.d/www.conf</span><br><span class=\"line\">sed -i &apos;s/owner = www-data/owner = vagrant/g&apos; /etc/php5/fpm/pool.d/www.conf</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Configure NGINX&quot;</span><br><span class=\"line\">sed -i &apos;s/user www-data/user vagrant/g&apos; /etc/nginx/nginx.conf</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Enabling site configuration&quot;</span><br><span class=\"line\">ln -s /app/vagrant/nginx/app.conf /etc/nginx/sites-enabled/app.conf</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Initailize databases for MySQL&quot;</span><br><span class=\"line\">mysql -uroot &lt;&lt;&lt; &quot;CREATE DATABASE yii2advanced&quot;</span><br><span class=\"line\">mysql -uroot &lt;&lt;&lt; &quot;CREATE DATABASE yii2_advanced_tests&quot;</span><br><span class=\"line\">echo &quot;Done!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">info &quot;Install composer&quot;</span><br><span class=\"line\">curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer</span><br></pre></td></tr></table></figure>"},{"title":"YAML 语言教程","date":"2016-11-23T10:13:25.000Z","updated":"2016-11-23T10:13:25.000Z","_content":"\n配置文件是软件不可缺少的部分，怎么写配置也是一门学问。\n\nYAML 语言专门用来写配置文件，非常简洁和强大，远比 JSON 格式方便和灵活。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2016/bg2016070401.gif)\n\n本文介绍 YAML 的语法，以 [JS-YAML](https://github.com/nodeca/js-yaml) 实现为例。它有一个[在线 Demo](http://nodeca.github.io/js-yaml/)，你可以去那里验证下面的例子。\n<!-- more -->\n## 一、简介\n\nYAML 语言（发音 /ˈjæməl/ ）的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。\n\n它的基本语法规则如下。\n\n> - 大小写敏感\n- 使用缩进表示层级关系\n- 缩进时不允许使用Tab键，只允许使用空格。\n- 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可\n\n`#` 表示注释，从这个字符一直到行尾，都会被解析器忽略。\n\nYAML 支持的数据结构有三种。\n\n> - 对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）\n- 数组：一组值，又称为序列（sequence） / 列表（list）\n- 纯量（scalars）：单个的、不可再分的值\n\n以下分别介绍这三种数据结构。\n\n## 二、对象\n\n对象的一组键值对，使用冒号结构表示。\n\n```yaml\nanimal: pets\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ animal: 'pets' }\n```\n\nYaml 也允许另一种写法，将所有键值对写成一个行内对象。\n\n```yaml\nhash: { name: Steve, foo: bar } \n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ hash: { name: 'Steve', foo: 'bar' } }\n```\n\n## 三、数组\n\n一组连词线开头的行，构成一个数组。\n\n```yaml\n- Cat\n- Dog\n- Goldfish\n```\n\n转为 JavaScript 如下。\n\n```javascript\n[ 'Cat', 'Dog', 'Goldfish' ]\n```\n\n数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。\n\n```yaml\n-\n - Cat\n - Dog\n - Goldfish\n```\n\n转为 JavaScript 如下。\n\n```javascript\n[ [ 'Cat', 'Dog', 'Goldfish' ] ]\n```\n\n数组也可以采用行内表示法。\n\n```yaml\nanimal: [Cat, Dog]\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ animal: [ 'Cat', 'Dog' ] }\n```\n\n## 四、复合结构\n\n对象和数组可以结合使用，形成复合结构。\n\n```yaml\nlanguages:\n - Ruby\n - Perl\n - Python \nwebsites:\n YAML: yaml.org \n Ruby: ruby-lang.org \n Python: python.org \n Perl: use.perl.org \n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ languages: [ 'Ruby', 'Perl', 'Python' ],\n  websites: \n   { YAML: 'yaml.org',\n     Ruby: 'ruby-lang.org',\n     Python: 'python.org',\n     Perl: 'use.perl.org' } }\n```\n\n## 五、纯量\n\n纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量。\n\n> - 字符串\n- 布尔值\n- 整数\n- 浮点数\n- Null\n- 时间\n- 日期\n\n数值直接以字面量的形式表示。\n\n```yaml\nnumber: 12.30\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ number: 12.30 }\n```\n\n布尔值用`true`和`false`表示。\n\n```yaml\nisSet: true\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ isSet: true }\n```\n\n`null`用`~`表示。\n\n```yaml\nparent: ~ \n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ parent: null }\n```\n\n时间采用 ISO8601 格式。\n\n```yaml\niso8601: 2001-12-14t21:59:43.10-05:00 \n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ iso8601: new Date('2001-12-14t21:59:43.10-05:00') }\n```\n\n日期采用复合 iso8601 格式的年、月、日表示。\n\n```yaml\ndate: 1976-07-31\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ date: new Date('1976-07-31') }\n```\n\nYAML 允许使用两个感叹号，强制转换数据类型。\n\n```yaml\ne: !!str 123\nf: !!str true\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ e: '123', f: 'true' }\n```\n\n## 六、字符串\n\n字符串是最常见，也是最复杂的一种数据类型。\n\n字符串默认不使用引号表示。\n\n```yaml\nstr: 这是一行字符串\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ str: '这是一行字符串' }\n```\n\n如果字符串之中包含空格或特殊字符，需要放在引号之中。\n\n```yaml\nstr: '内容： 字符串'\n```\n\n转为 JavaScript 如下。\n\n```javascript\nstr: '内容: 字符串'\n```\n\n单引号和双引号都可以使用，双引号不会对特殊字符转义。\n\n```yaml\ns1: '内容\\n字符串'\ns2: \"内容\\n字符串\"\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ s1: '内容\\\\n字符串', s2: '内容\\n字符串' }\n```\n\n单引号之中如果还有单引号，必须连续使用两个单引号转义。\n\n```javascript\nstr: 'labor''s day' \n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ str: 'labor\\'s day' }\n```\n\n字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格。\n\n```yaml\nstr: 这是一段\n  多行\n  字符串\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ str: '这是一段 多行 字符串' }\n```\n\n多行字符串可以使用`|`保留换行符，也可以使用`>`折叠换行。\n\n```javascript\nthis: |\n  Foo\n  Bar\nthat: >\n  Foo\n  Bar\n```\n\n转为 JavaScript 代码如下。\n\n```javascript\n{ this: 'Foo\\nBar\\n', that: 'Foo Bar\\n' }\n```\n\n`+`表示保留文字块末尾的换行，`-`表示删除字符串末尾的换行。\n\n```yaml\ns1: |\n  Foo\n\ns2: |+\n  Foo\n\n\ns3: |-\n  Foo\n```\n\n转为 JavaScript 代码如下。\n\n```javascript\n{ s1: 'Foo\\n', s2: 'Foo\\n\\n\\n', s3: 'Foo' }\n```\n\n字符串之中可以插入 HTML 标记。\n\n```yaml\nmessage: |\n\n        <p style=\"color: red\">\n          段落\n        </p>\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ message: '\\n<p style=\"color: red\">\\n  段落\\n</p>\\n' }\n```\n\n## 七、引用\n\n锚点`&`和别名`*`，可以用来引用。\n\n```yaml\ndefaults: &defaults\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  <<: *defaults\n\ntest:\n  database: myapp_test\n  <<: *defaults\n```\n\n等同于下面的代码。\n\n```yaml\ndefaults:\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  adapter:  postgres\n  host:     localhost\n\ntest:\n  database: myapp_test\n  adapter:  postgres\n  host:     localhost\n```\n\n`&`用来建立锚点（`defaults`），`<<`表示合并到当前数据，`*`用来引用锚点。类似于下面结构。\n\n下面是另一个例子。\n\n```yaml\n- &showell Steve \n- Clark \n- Brian \n- Oren \n- *showell \n``` \n\n转为 JavaScript 代码如下。\n\n```javascript\n[ 'Steve', 'Clark', 'Brian', 'Oren', 'Steve' ]\n```\n\n## 八、转换函数和正则表达式\n\n这是 [JS-YAML](https://github.com/nodeca/js-yaml) 库特有的功能，可以把函数和正则表达式转为字符串。\n\n```yaml\n# example.yml\nfn: function () { return 1 }\nreg: /test/\n```\n\n解析上面的 yml 文件的代码如下。\n\n```javascript\nvar yaml = require('js-yaml');\nvar fs   = require('fs');\n\ntry {\n  var doc = yaml.load(\n    fs.readFileSync('./example.yml', 'utf8')\n  );\n  console.log(doc);\n} catch (e) {\n  console.log(e);\n}\n```\n\n从 JavaScript 对象还原到 yaml 文件的代码如下。\n\n```javascript\nvar yaml = require('js-yaml');\nvar fs   = require('fs');\n\nvar obj = {\n  fn: function () { return 1 },\n  reg: /test/\n};\n\ntry {\n  fs.writeFileSync(\n    './example.yml',\n    yaml.dump(obj),\n    'utf8'\n  );\n} catch (e) {\n  console.log(e);\n}\n```\n\n## 九、参考链接\n\n- [YAML 1.2 规格](http://www.yaml.org/spec/1.2/spec.html)\n- [YAML from Wikipedia](https://en.wikipedia.org/wiki/YAML)\n- [YAML for Ruby](http://yaml.org/YAML_for_ruby.html)","source":"_posts/2016/yaml.md","raw":"---\ntitle: YAML 语言教程\ndate: 2016-11-23 18:13:25\nupdated: 2016-11-23 18:13:25\ntags:\ncategories:\n---\n\n配置文件是软件不可缺少的部分，怎么写配置也是一门学问。\n\nYAML 语言专门用来写配置文件，非常简洁和强大，远比 JSON 格式方便和灵活。\n\n![](http://www.ruanyifeng.com/blogimg/asset/2016/bg2016070401.gif)\n\n本文介绍 YAML 的语法，以 [JS-YAML](https://github.com/nodeca/js-yaml) 实现为例。它有一个[在线 Demo](http://nodeca.github.io/js-yaml/)，你可以去那里验证下面的例子。\n<!-- more -->\n## 一、简介\n\nYAML 语言（发音 /ˈjæməl/ ）的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。\n\n它的基本语法规则如下。\n\n> - 大小写敏感\n- 使用缩进表示层级关系\n- 缩进时不允许使用Tab键，只允许使用空格。\n- 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可\n\n`#` 表示注释，从这个字符一直到行尾，都会被解析器忽略。\n\nYAML 支持的数据结构有三种。\n\n> - 对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）\n- 数组：一组值，又称为序列（sequence） / 列表（list）\n- 纯量（scalars）：单个的、不可再分的值\n\n以下分别介绍这三种数据结构。\n\n## 二、对象\n\n对象的一组键值对，使用冒号结构表示。\n\n```yaml\nanimal: pets\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ animal: 'pets' }\n```\n\nYaml 也允许另一种写法，将所有键值对写成一个行内对象。\n\n```yaml\nhash: { name: Steve, foo: bar } \n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ hash: { name: 'Steve', foo: 'bar' } }\n```\n\n## 三、数组\n\n一组连词线开头的行，构成一个数组。\n\n```yaml\n- Cat\n- Dog\n- Goldfish\n```\n\n转为 JavaScript 如下。\n\n```javascript\n[ 'Cat', 'Dog', 'Goldfish' ]\n```\n\n数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。\n\n```yaml\n-\n - Cat\n - Dog\n - Goldfish\n```\n\n转为 JavaScript 如下。\n\n```javascript\n[ [ 'Cat', 'Dog', 'Goldfish' ] ]\n```\n\n数组也可以采用行内表示法。\n\n```yaml\nanimal: [Cat, Dog]\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ animal: [ 'Cat', 'Dog' ] }\n```\n\n## 四、复合结构\n\n对象和数组可以结合使用，形成复合结构。\n\n```yaml\nlanguages:\n - Ruby\n - Perl\n - Python \nwebsites:\n YAML: yaml.org \n Ruby: ruby-lang.org \n Python: python.org \n Perl: use.perl.org \n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ languages: [ 'Ruby', 'Perl', 'Python' ],\n  websites: \n   { YAML: 'yaml.org',\n     Ruby: 'ruby-lang.org',\n     Python: 'python.org',\n     Perl: 'use.perl.org' } }\n```\n\n## 五、纯量\n\n纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量。\n\n> - 字符串\n- 布尔值\n- 整数\n- 浮点数\n- Null\n- 时间\n- 日期\n\n数值直接以字面量的形式表示。\n\n```yaml\nnumber: 12.30\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ number: 12.30 }\n```\n\n布尔值用`true`和`false`表示。\n\n```yaml\nisSet: true\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ isSet: true }\n```\n\n`null`用`~`表示。\n\n```yaml\nparent: ~ \n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ parent: null }\n```\n\n时间采用 ISO8601 格式。\n\n```yaml\niso8601: 2001-12-14t21:59:43.10-05:00 \n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ iso8601: new Date('2001-12-14t21:59:43.10-05:00') }\n```\n\n日期采用复合 iso8601 格式的年、月、日表示。\n\n```yaml\ndate: 1976-07-31\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ date: new Date('1976-07-31') }\n```\n\nYAML 允许使用两个感叹号，强制转换数据类型。\n\n```yaml\ne: !!str 123\nf: !!str true\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ e: '123', f: 'true' }\n```\n\n## 六、字符串\n\n字符串是最常见，也是最复杂的一种数据类型。\n\n字符串默认不使用引号表示。\n\n```yaml\nstr: 这是一行字符串\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ str: '这是一行字符串' }\n```\n\n如果字符串之中包含空格或特殊字符，需要放在引号之中。\n\n```yaml\nstr: '内容： 字符串'\n```\n\n转为 JavaScript 如下。\n\n```javascript\nstr: '内容: 字符串'\n```\n\n单引号和双引号都可以使用，双引号不会对特殊字符转义。\n\n```yaml\ns1: '内容\\n字符串'\ns2: \"内容\\n字符串\"\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ s1: '内容\\\\n字符串', s2: '内容\\n字符串' }\n```\n\n单引号之中如果还有单引号，必须连续使用两个单引号转义。\n\n```javascript\nstr: 'labor''s day' \n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ str: 'labor\\'s day' }\n```\n\n字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格。\n\n```yaml\nstr: 这是一段\n  多行\n  字符串\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ str: '这是一段 多行 字符串' }\n```\n\n多行字符串可以使用`|`保留换行符，也可以使用`>`折叠换行。\n\n```javascript\nthis: |\n  Foo\n  Bar\nthat: >\n  Foo\n  Bar\n```\n\n转为 JavaScript 代码如下。\n\n```javascript\n{ this: 'Foo\\nBar\\n', that: 'Foo Bar\\n' }\n```\n\n`+`表示保留文字块末尾的换行，`-`表示删除字符串末尾的换行。\n\n```yaml\ns1: |\n  Foo\n\ns2: |+\n  Foo\n\n\ns3: |-\n  Foo\n```\n\n转为 JavaScript 代码如下。\n\n```javascript\n{ s1: 'Foo\\n', s2: 'Foo\\n\\n\\n', s3: 'Foo' }\n```\n\n字符串之中可以插入 HTML 标记。\n\n```yaml\nmessage: |\n\n        <p style=\"color: red\">\n          段落\n        </p>\n```\n\n转为 JavaScript 如下。\n\n```javascript\n{ message: '\\n<p style=\"color: red\">\\n  段落\\n</p>\\n' }\n```\n\n## 七、引用\n\n锚点`&`和别名`*`，可以用来引用。\n\n```yaml\ndefaults: &defaults\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  <<: *defaults\n\ntest:\n  database: myapp_test\n  <<: *defaults\n```\n\n等同于下面的代码。\n\n```yaml\ndefaults:\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  adapter:  postgres\n  host:     localhost\n\ntest:\n  database: myapp_test\n  adapter:  postgres\n  host:     localhost\n```\n\n`&`用来建立锚点（`defaults`），`<<`表示合并到当前数据，`*`用来引用锚点。类似于下面结构。\n\n下面是另一个例子。\n\n```yaml\n- &showell Steve \n- Clark \n- Brian \n- Oren \n- *showell \n``` \n\n转为 JavaScript 代码如下。\n\n```javascript\n[ 'Steve', 'Clark', 'Brian', 'Oren', 'Steve' ]\n```\n\n## 八、转换函数和正则表达式\n\n这是 [JS-YAML](https://github.com/nodeca/js-yaml) 库特有的功能，可以把函数和正则表达式转为字符串。\n\n```yaml\n# example.yml\nfn: function () { return 1 }\nreg: /test/\n```\n\n解析上面的 yml 文件的代码如下。\n\n```javascript\nvar yaml = require('js-yaml');\nvar fs   = require('fs');\n\ntry {\n  var doc = yaml.load(\n    fs.readFileSync('./example.yml', 'utf8')\n  );\n  console.log(doc);\n} catch (e) {\n  console.log(e);\n}\n```\n\n从 JavaScript 对象还原到 yaml 文件的代码如下。\n\n```javascript\nvar yaml = require('js-yaml');\nvar fs   = require('fs');\n\nvar obj = {\n  fn: function () { return 1 },\n  reg: /test/\n};\n\ntry {\n  fs.writeFileSync(\n    './example.yml',\n    yaml.dump(obj),\n    'utf8'\n  );\n} catch (e) {\n  console.log(e);\n}\n```\n\n## 九、参考链接\n\n- [YAML 1.2 规格](http://www.yaml.org/spec/1.2/spec.html)\n- [YAML from Wikipedia](https://en.wikipedia.org/wiki/YAML)\n- [YAML for Ruby](http://yaml.org/YAML_for_ruby.html)","slug":"yaml","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpaq002ewsnn1204om7b","content":"<p>配置文件是软件不可缺少的部分，怎么写配置也是一门学问。</p>\n<p>YAML 语言专门用来写配置文件，非常简洁和强大，远比 JSON 格式方便和灵活。</p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016070401.gif\" alt=\"\"></p>\n<p>本文介绍 YAML 的语法，以 <a href=\"https://github.com/nodeca/js-yaml\" target=\"_blank\" rel=\"external\">JS-YAML</a> 实现为例。它有一个<a href=\"http://nodeca.github.io/js-yaml/\" target=\"_blank\" rel=\"external\">在线 Demo</a>，你可以去那里验证下面的例子。<br><a id=\"more\"></a></p>\n<h2 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h2><p>YAML 语言（发音 /ˈjæməl/ ）的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。</p>\n<p>它的基本语法规则如下。</p>\n<blockquote>\n<ul>\n<li>大小写敏感</li>\n<li>使用缩进表示层级关系</li>\n<li>缩进时不允许使用Tab键，只允许使用空格。</li>\n<li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li>\n</ul>\n</blockquote>\n<p><code>#</code> 表示注释，从这个字符一直到行尾，都会被解析器忽略。</p>\n<p>YAML 支持的数据结构有三种。</p>\n<blockquote>\n<ul>\n<li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li>\n<li>数组：一组值，又称为序列（sequence） / 列表（list）</li>\n<li>纯量（scalars）：单个的、不可再分的值</li>\n</ul>\n</blockquote>\n<p>以下分别介绍这三种数据结构。</p>\n<h2 id=\"二、对象\"><a href=\"#二、对象\" class=\"headerlink\" title=\"二、对象\"></a>二、对象</h2><p>对象的一组键值对，使用冒号结构表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">animal:</span> pets</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; animal: <span class=\"string\">'pets'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>Yaml 也允许另一种写法，将所有键值对写成一个行内对象。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">hash:</span> &#123; name: Steve, foo: bar &#125;</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; hash: &#123; name: <span class=\"string\">'Steve'</span>, foo: <span class=\"string\">'bar'</span> &#125; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"三、数组\"><a href=\"#三、数组\" class=\"headerlink\" title=\"三、数组\"></a>三、数组</h2><p>一组连词线开头的行，构成一个数组。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> Cat</span><br><span class=\"line\"><span class=\"bullet\">-</span> Dog</span><br><span class=\"line\"><span class=\"bullet\">-</span> Goldfish</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"string\">'Cat'</span>, <span class=\"string\">'Dog'</span>, <span class=\"string\">'Goldfish'</span> ]</span><br></pre></td></tr></table></figure>\n<p>数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> Cat</span><br><span class=\"line\"><span class=\"bullet\"> -</span> Dog</span><br><span class=\"line\"><span class=\"bullet\"> -</span> Goldfish</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ [ <span class=\"string\">'Cat'</span>, <span class=\"string\">'Dog'</span>, <span class=\"string\">'Goldfish'</span> ] ]</span><br></pre></td></tr></table></figure>\n<p>数组也可以采用行内表示法。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">animal:</span> [Cat, Dog]</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; animal: [ <span class=\"string\">'Cat'</span>, <span class=\"string\">'Dog'</span> ] &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、复合结构\"><a href=\"#四、复合结构\" class=\"headerlink\" title=\"四、复合结构\"></a>四、复合结构</h2><p>对象和数组可以结合使用，形成复合结构。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">languages:</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> Ruby</span><br><span class=\"line\"><span class=\"bullet\"> -</span> Perl</span><br><span class=\"line\"><span class=\"bullet\"> -</span> Python </span><br><span class=\"line\"><span class=\"attr\">websites:</span></span><br><span class=\"line\"><span class=\"attr\"> YAML:</span> yaml.org </span><br><span class=\"line\"><span class=\"attr\"> Ruby:</span> ruby-lang.org </span><br><span class=\"line\"><span class=\"attr\"> Python:</span> python.org </span><br><span class=\"line\"><span class=\"attr\"> Perl:</span> use.perl.org</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; languages: [ <span class=\"string\">'Ruby'</span>, <span class=\"string\">'Perl'</span>, <span class=\"string\">'Python'</span> ],</span><br><span class=\"line\">  websites: </span><br><span class=\"line\">   &#123; YAML: <span class=\"string\">'yaml.org'</span>,</span><br><span class=\"line\">     Ruby: <span class=\"string\">'ruby-lang.org'</span>,</span><br><span class=\"line\">     Python: <span class=\"string\">'python.org'</span>,</span><br><span class=\"line\">     Perl: <span class=\"string\">'use.perl.org'</span> &#125; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"五、纯量\"><a href=\"#五、纯量\" class=\"headerlink\" title=\"五、纯量\"></a>五、纯量</h2><p>纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量。</p>\n<blockquote>\n<ul>\n<li>字符串</li>\n<li>布尔值</li>\n<li>整数</li>\n<li>浮点数</li>\n<li>Null</li>\n<li>时间</li>\n<li>日期</li>\n</ul>\n</blockquote>\n<p>数值直接以字面量的形式表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">number:</span> <span class=\"number\">12.30</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; number: <span class=\"number\">12.30</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>布尔值用<code>true</code>和<code>false</code>表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">isSet:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; isSet: <span class=\"literal\">true</span> &#125;</span><br></pre></td></tr></table></figure>\n<p><code>null</code>用<code>~</code>表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">parent:</span> ~</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; parent: <span class=\"literal\">null</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>时间采用 ISO8601 格式。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">iso8601:</span> <span class=\"number\">2001</span><span class=\"bullet\">-12</span><span class=\"bullet\">-14</span>t21:<span class=\"number\">59</span>:<span class=\"number\">43.10</span><span class=\"bullet\">-05</span>:<span class=\"number\">00</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; iso8601: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">'2001-12-14t21:59:43.10-05:00'</span>) &#125;</span><br></pre></td></tr></table></figure>\n<p>日期采用复合 iso8601 格式的年、月、日表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">1976</span><span class=\"bullet\">-07</span><span class=\"bullet\">-31</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; date: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">'1976-07-31'</span>) &#125;</span><br></pre></td></tr></table></figure>\n<p>YAML 允许使用两个感叹号，强制转换数据类型。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">e:</span> <span class=\"type\">!!str</span> <span class=\"number\">123</span></span><br><span class=\"line\"><span class=\"attr\">f:</span> <span class=\"type\">!!str</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; e: <span class=\"string\">'123'</span>, f: <span class=\"string\">'true'</span> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"六、字符串\"><a href=\"#六、字符串\" class=\"headerlink\" title=\"六、字符串\"></a>六、字符串</h2><p>字符串是最常见，也是最复杂的一种数据类型。</p>\n<p>字符串默认不使用引号表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">str:</span> 这是一行字符串</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; str: <span class=\"string\">'这是一行字符串'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>如果字符串之中包含空格或特殊字符，需要放在引号之中。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">str:</span> <span class=\"string\">'内容： 字符串'</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str: <span class=\"string\">'内容: 字符串'</span></span><br></pre></td></tr></table></figure>\n<p>单引号和双引号都可以使用，双引号不会对特殊字符转义。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">s1:</span> <span class=\"string\">'内容\\n字符串'</span></span><br><span class=\"line\"><span class=\"attr\">s2:</span> <span class=\"string\">\"内容\\n字符串\"</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; s1: <span class=\"string\">'内容\\\\n字符串'</span>, s2: <span class=\"string\">'内容\\n字符串'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>单引号之中如果还有单引号，必须连续使用两个单引号转义。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str: <span class=\"string\">'labor'</span><span class=\"string\">'s day'</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; str: <span class=\"string\">'labor\\'s day'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">str:</span> 这是一段</span><br><span class=\"line\">  多行</span><br><span class=\"line\">  字符串</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; str: <span class=\"string\">'这是一段 多行 字符串'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>多行字符串可以使用<code>|</code>保留换行符，也可以使用<code>&gt;</code>折叠换行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>: |</span><br><span class=\"line\">  Foo</span><br><span class=\"line\">  Bar</span><br><span class=\"line\">that: &gt;</span><br><span class=\"line\">  Foo</span><br><span class=\"line\">  Bar</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 代码如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; <span class=\"keyword\">this</span>: <span class=\"string\">'Foo\\nBar\\n'</span>, that: <span class=\"string\">'Foo Bar\\n'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p><code>+</code>表示保留文字块末尾的换行，<code>-</code>表示删除字符串末尾的换行。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">s1:</span> <span class=\"string\">|</span><br><span class=\"line\">  Foo</span><br><span class=\"line\"></span><br><span class=\"line\"></span><span class=\"attr\">s2:</span> |+</span><br><span class=\"line\">  Foo</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">s3:</span> |-</span><br><span class=\"line\">  Foo</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 代码如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; s1: <span class=\"string\">'Foo\\n'</span>, s2: <span class=\"string\">'Foo\\n\\n\\n'</span>, s3: <span class=\"string\">'Foo'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>字符串之中可以插入 HTML 标记。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">message:</span> <span class=\"string\">|</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;p style=\"color: red\"&gt;</span><br><span class=\"line\">          段落</span><br><span class=\"line\">        &lt;/p&gt;</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; message: <span class=\"string\">'\\n&lt;p style=\"color: red\"&gt;\\n  段落\\n&lt;/p&gt;\\n'</span> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"七、引用\"><a href=\"#七、引用\" class=\"headerlink\" title=\"七、引用\"></a>七、引用</h2><p>锚点<code>&amp;</code>和别名<code>*</code>，可以用来引用。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">defaults:</span> <span class=\"meta\">&amp;defaults</span></span><br><span class=\"line\"><span class=\"attr\">  adapter:</span>  postgres</span><br><span class=\"line\"><span class=\"attr\">  host:</span>     localhost</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">development:</span></span><br><span class=\"line\"><span class=\"attr\">  database:</span> myapp_development</span><br><span class=\"line\">  &lt;&lt;: <span class=\"meta\">*defaults</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">test:</span></span><br><span class=\"line\"><span class=\"attr\">  database:</span> myapp_test</span><br><span class=\"line\">  &lt;&lt;: <span class=\"meta\">*defaults</span></span><br></pre></td></tr></table></figure>\n<p>等同于下面的代码。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">defaults:</span></span><br><span class=\"line\"><span class=\"attr\">  adapter:</span>  postgres</span><br><span class=\"line\"><span class=\"attr\">  host:</span>     localhost</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">development:</span></span><br><span class=\"line\"><span class=\"attr\">  database:</span> myapp_development</span><br><span class=\"line\"><span class=\"attr\">  adapter:</span>  postgres</span><br><span class=\"line\"><span class=\"attr\">  host:</span>     localhost</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">test:</span></span><br><span class=\"line\"><span class=\"attr\">  database:</span> myapp_test</span><br><span class=\"line\"><span class=\"attr\">  adapter:</span>  postgres</span><br><span class=\"line\"><span class=\"attr\">  host:</span>     localhost</span><br></pre></td></tr></table></figure>\n<p><code>&amp;</code>用来建立锚点（<code>defaults</code>），<code>&lt;&lt;</code>表示合并到当前数据，<code>*</code>用来引用锚点。类似于下面结构。</p>\n<p>下面是另一个例子。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> &amp;showell Steve </span><br><span class=\"line\"><span class=\"bullet\">-</span> Clark </span><br><span class=\"line\"><span class=\"bullet\">-</span> Brian </span><br><span class=\"line\"><span class=\"bullet\">-</span> Oren </span><br><span class=\"line\"><span class=\"bullet\">-</span> *showell </span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">转为 JavaScript 代码如下。</span><br><span class=\"line\"></span><br><span class=\"line\">```javascript</span><br><span class=\"line\">[ <span class=\"string\">'Steve'</span>, <span class=\"string\">'Clark'</span>, <span class=\"string\">'Brian'</span>, <span class=\"string\">'Oren'</span>, <span class=\"string\">'Steve'</span> ]</span><br></pre></td></tr></table></figure>\n<h2 id=\"八、转换函数和正则表达式\"><a href=\"#八、转换函数和正则表达式\" class=\"headerlink\" title=\"八、转换函数和正则表达式\"></a>八、转换函数和正则表达式</h2><p>这是 <a href=\"https://github.com/nodeca/js-yaml\" target=\"_blank\" rel=\"external\">JS-YAML</a> 库特有的功能，可以把函数和正则表达式转为字符串。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># example.yml</span></span><br><span class=\"line\"><span class=\"attr\">fn:</span> function () &#123; return <span class=\"number\">1</span> &#125;</span><br><span class=\"line\"><span class=\"attr\">reg:</span> /test/</span><br></pre></td></tr></table></figure>\n<p>解析上面的 yml 文件的代码如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> yaml = <span class=\"built_in\">require</span>(<span class=\"string\">'js-yaml'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs   = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> doc = yaml.load(</span><br><span class=\"line\">    fs.readFileSync(<span class=\"string\">'./example.yml'</span>, <span class=\"string\">'utf8'</span>)</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(doc);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>从 JavaScript 对象还原到 yaml 文件的代码如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> yaml = <span class=\"built_in\">require</span>(<span class=\"string\">'js-yaml'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs   = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  fn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">  reg: <span class=\"regexp\">/test/</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  fs.writeFileSync(</span><br><span class=\"line\">    <span class=\"string\">'./example.yml'</span>,</span><br><span class=\"line\">    yaml.dump(obj),</span><br><span class=\"line\">    <span class=\"string\">'utf8'</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"九、参考链接\"><a href=\"#九、参考链接\" class=\"headerlink\" title=\"九、参考链接\"></a>九、参考链接</h2><ul>\n<li><a href=\"http://www.yaml.org/spec/1.2/spec.html\" target=\"_blank\" rel=\"external\">YAML 1.2 规格</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/YAML\" target=\"_blank\" rel=\"external\">YAML from Wikipedia</a></li>\n<li><a href=\"http://yaml.org/YAML_for_ruby.html\" target=\"_blank\" rel=\"external\">YAML for Ruby</a></li>\n</ul>\n","excerpt":"<p>配置文件是软件不可缺少的部分，怎么写配置也是一门学问。</p>\n<p>YAML 语言专门用来写配置文件，非常简洁和强大，远比 JSON 格式方便和灵活。</p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016070401.gif\" alt=\"\"></p>\n<p>本文介绍 YAML 的语法，以 <a href=\"https://github.com/nodeca/js-yaml\">JS-YAML</a> 实现为例。它有一个<a href=\"http://nodeca.github.io/js-yaml/\">在线 Demo</a>，你可以去那里验证下面的例子。<br>","more":"</p>\n<h2 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h2><p>YAML 语言（发音 /ˈjæməl/ ）的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。</p>\n<p>它的基本语法规则如下。</p>\n<blockquote>\n<ul>\n<li>大小写敏感</li>\n<li>使用缩进表示层级关系</li>\n<li>缩进时不允许使用Tab键，只允许使用空格。</li>\n<li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li>\n</ul>\n</blockquote>\n<p><code>#</code> 表示注释，从这个字符一直到行尾，都会被解析器忽略。</p>\n<p>YAML 支持的数据结构有三种。</p>\n<blockquote>\n<ul>\n<li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li>\n<li>数组：一组值，又称为序列（sequence） / 列表（list）</li>\n<li>纯量（scalars）：单个的、不可再分的值</li>\n</ul>\n</blockquote>\n<p>以下分别介绍这三种数据结构。</p>\n<h2 id=\"二、对象\"><a href=\"#二、对象\" class=\"headerlink\" title=\"二、对象\"></a>二、对象</h2><p>对象的一组键值对，使用冒号结构表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">animal:</span> pets</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; animal: <span class=\"string\">'pets'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>Yaml 也允许另一种写法，将所有键值对写成一个行内对象。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">hash:</span> &#123; name: Steve, foo: bar &#125;</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; hash: &#123; name: <span class=\"string\">'Steve'</span>, foo: <span class=\"string\">'bar'</span> &#125; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"三、数组\"><a href=\"#三、数组\" class=\"headerlink\" title=\"三、数组\"></a>三、数组</h2><p>一组连词线开头的行，构成一个数组。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> Cat</span><br><span class=\"line\"><span class=\"bullet\">-</span> Dog</span><br><span class=\"line\"><span class=\"bullet\">-</span> Goldfish</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"string\">'Cat'</span>, <span class=\"string\">'Dog'</span>, <span class=\"string\">'Goldfish'</span> ]</span><br></pre></td></tr></table></figure>\n<p>数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> Cat</span><br><span class=\"line\"><span class=\"bullet\"> -</span> Dog</span><br><span class=\"line\"><span class=\"bullet\"> -</span> Goldfish</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ [ <span class=\"string\">'Cat'</span>, <span class=\"string\">'Dog'</span>, <span class=\"string\">'Goldfish'</span> ] ]</span><br></pre></td></tr></table></figure>\n<p>数组也可以采用行内表示法。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">animal:</span> [Cat, Dog]</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; animal: [ <span class=\"string\">'Cat'</span>, <span class=\"string\">'Dog'</span> ] &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、复合结构\"><a href=\"#四、复合结构\" class=\"headerlink\" title=\"四、复合结构\"></a>四、复合结构</h2><p>对象和数组可以结合使用，形成复合结构。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">languages:</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> Ruby</span><br><span class=\"line\"><span class=\"bullet\"> -</span> Perl</span><br><span class=\"line\"><span class=\"bullet\"> -</span> Python </span><br><span class=\"line\"><span class=\"attr\">websites:</span></span><br><span class=\"line\"><span class=\"attr\"> YAML:</span> yaml.org </span><br><span class=\"line\"><span class=\"attr\"> Ruby:</span> ruby-lang.org </span><br><span class=\"line\"><span class=\"attr\"> Python:</span> python.org </span><br><span class=\"line\"><span class=\"attr\"> Perl:</span> use.perl.org</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; languages: [ <span class=\"string\">'Ruby'</span>, <span class=\"string\">'Perl'</span>, <span class=\"string\">'Python'</span> ],</span><br><span class=\"line\">  websites: </span><br><span class=\"line\">   &#123; YAML: <span class=\"string\">'yaml.org'</span>,</span><br><span class=\"line\">     Ruby: <span class=\"string\">'ruby-lang.org'</span>,</span><br><span class=\"line\">     Python: <span class=\"string\">'python.org'</span>,</span><br><span class=\"line\">     Perl: <span class=\"string\">'use.perl.org'</span> &#125; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"五、纯量\"><a href=\"#五、纯量\" class=\"headerlink\" title=\"五、纯量\"></a>五、纯量</h2><p>纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量。</p>\n<blockquote>\n<ul>\n<li>字符串</li>\n<li>布尔值</li>\n<li>整数</li>\n<li>浮点数</li>\n<li>Null</li>\n<li>时间</li>\n<li>日期</li>\n</ul>\n</blockquote>\n<p>数值直接以字面量的形式表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">number:</span> <span class=\"number\">12.30</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; number: <span class=\"number\">12.30</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>布尔值用<code>true</code>和<code>false</code>表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">isSet:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; isSet: <span class=\"literal\">true</span> &#125;</span><br></pre></td></tr></table></figure>\n<p><code>null</code>用<code>~</code>表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">parent:</span> ~</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; parent: <span class=\"literal\">null</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>时间采用 ISO8601 格式。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">iso8601:</span> <span class=\"number\">2001</span><span class=\"bullet\">-12</span><span class=\"bullet\">-14</span>t21:<span class=\"number\">59</span>:<span class=\"number\">43.10</span><span class=\"bullet\">-05</span>:<span class=\"number\">00</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; iso8601: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">'2001-12-14t21:59:43.10-05:00'</span>) &#125;</span><br></pre></td></tr></table></figure>\n<p>日期采用复合 iso8601 格式的年、月、日表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">1976</span><span class=\"bullet\">-07</span><span class=\"bullet\">-31</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; date: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">'1976-07-31'</span>) &#125;</span><br></pre></td></tr></table></figure>\n<p>YAML 允许使用两个感叹号，强制转换数据类型。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">e:</span> <span class=\"type\">!!str</span> <span class=\"number\">123</span></span><br><span class=\"line\"><span class=\"attr\">f:</span> <span class=\"type\">!!str</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; e: <span class=\"string\">'123'</span>, f: <span class=\"string\">'true'</span> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"六、字符串\"><a href=\"#六、字符串\" class=\"headerlink\" title=\"六、字符串\"></a>六、字符串</h2><p>字符串是最常见，也是最复杂的一种数据类型。</p>\n<p>字符串默认不使用引号表示。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">str:</span> 这是一行字符串</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; str: <span class=\"string\">'这是一行字符串'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>如果字符串之中包含空格或特殊字符，需要放在引号之中。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">str:</span> <span class=\"string\">'内容： 字符串'</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str: <span class=\"string\">'内容: 字符串'</span></span><br></pre></td></tr></table></figure>\n<p>单引号和双引号都可以使用，双引号不会对特殊字符转义。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">s1:</span> <span class=\"string\">'内容\\n字符串'</span></span><br><span class=\"line\"><span class=\"attr\">s2:</span> <span class=\"string\">\"内容\\n字符串\"</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; s1: <span class=\"string\">'内容\\\\n字符串'</span>, s2: <span class=\"string\">'内容\\n字符串'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>单引号之中如果还有单引号，必须连续使用两个单引号转义。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str: <span class=\"string\">'labor'</span><span class=\"string\">'s day'</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; str: <span class=\"string\">'labor\\'s day'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">str:</span> 这是一段</span><br><span class=\"line\">  多行</span><br><span class=\"line\">  字符串</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; str: <span class=\"string\">'这是一段 多行 字符串'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>多行字符串可以使用<code>|</code>保留换行符，也可以使用<code>&gt;</code>折叠换行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>: |</span><br><span class=\"line\">  Foo</span><br><span class=\"line\">  Bar</span><br><span class=\"line\">that: &gt;</span><br><span class=\"line\">  Foo</span><br><span class=\"line\">  Bar</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 代码如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; <span class=\"keyword\">this</span>: <span class=\"string\">'Foo\\nBar\\n'</span>, that: <span class=\"string\">'Foo Bar\\n'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p><code>+</code>表示保留文字块末尾的换行，<code>-</code>表示删除字符串末尾的换行。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">s1:</span> <span class=\"string\">|</span><br><span class=\"line\">  Foo</span><br><span class=\"line\"></span><br><span class=\"line\"></span><span class=\"attr\">s2:</span> |+</span><br><span class=\"line\">  Foo</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">s3:</span> |-</span><br><span class=\"line\">  Foo</span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 代码如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; s1: <span class=\"string\">'Foo\\n'</span>, s2: <span class=\"string\">'Foo\\n\\n\\n'</span>, s3: <span class=\"string\">'Foo'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>字符串之中可以插入 HTML 标记。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">message:</span> <span class=\"string\">|</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;p style=\"color: red\"&gt;</span><br><span class=\"line\">          段落</span><br><span class=\"line\">        &lt;/p&gt;</span></span><br></pre></td></tr></table></figure>\n<p>转为 JavaScript 如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; message: <span class=\"string\">'\\n&lt;p style=\"color: red\"&gt;\\n  段落\\n&lt;/p&gt;\\n'</span> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"七、引用\"><a href=\"#七、引用\" class=\"headerlink\" title=\"七、引用\"></a>七、引用</h2><p>锚点<code>&amp;</code>和别名<code>*</code>，可以用来引用。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">defaults:</span> <span class=\"meta\">&amp;defaults</span></span><br><span class=\"line\"><span class=\"attr\">  adapter:</span>  postgres</span><br><span class=\"line\"><span class=\"attr\">  host:</span>     localhost</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">development:</span></span><br><span class=\"line\"><span class=\"attr\">  database:</span> myapp_development</span><br><span class=\"line\">  &lt;&lt;: <span class=\"meta\">*defaults</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">test:</span></span><br><span class=\"line\"><span class=\"attr\">  database:</span> myapp_test</span><br><span class=\"line\">  &lt;&lt;: <span class=\"meta\">*defaults</span></span><br></pre></td></tr></table></figure>\n<p>等同于下面的代码。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">defaults:</span></span><br><span class=\"line\"><span class=\"attr\">  adapter:</span>  postgres</span><br><span class=\"line\"><span class=\"attr\">  host:</span>     localhost</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">development:</span></span><br><span class=\"line\"><span class=\"attr\">  database:</span> myapp_development</span><br><span class=\"line\"><span class=\"attr\">  adapter:</span>  postgres</span><br><span class=\"line\"><span class=\"attr\">  host:</span>     localhost</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">test:</span></span><br><span class=\"line\"><span class=\"attr\">  database:</span> myapp_test</span><br><span class=\"line\"><span class=\"attr\">  adapter:</span>  postgres</span><br><span class=\"line\"><span class=\"attr\">  host:</span>     localhost</span><br></pre></td></tr></table></figure>\n<p><code>&amp;</code>用来建立锚点（<code>defaults</code>），<code>&lt;&lt;</code>表示合并到当前数据，<code>*</code>用来引用锚点。类似于下面结构。</p>\n<p>下面是另一个例子。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> &amp;showell Steve </span><br><span class=\"line\"><span class=\"bullet\">-</span> Clark </span><br><span class=\"line\"><span class=\"bullet\">-</span> Brian </span><br><span class=\"line\"><span class=\"bullet\">-</span> Oren </span><br><span class=\"line\"><span class=\"bullet\">-</span> *showell </span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">转为 JavaScript 代码如下。</span><br><span class=\"line\"></span><br><span class=\"line\">```javascript</span><br><span class=\"line\">[ <span class=\"string\">'Steve'</span>, <span class=\"string\">'Clark'</span>, <span class=\"string\">'Brian'</span>, <span class=\"string\">'Oren'</span>, <span class=\"string\">'Steve'</span> ]</span><br></pre></td></tr></table></figure>\n<h2 id=\"八、转换函数和正则表达式\"><a href=\"#八、转换函数和正则表达式\" class=\"headerlink\" title=\"八、转换函数和正则表达式\"></a>八、转换函数和正则表达式</h2><p>这是 <a href=\"https://github.com/nodeca/js-yaml\">JS-YAML</a> 库特有的功能，可以把函数和正则表达式转为字符串。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># example.yml</span></span><br><span class=\"line\"><span class=\"attr\">fn:</span> function () &#123; return <span class=\"number\">1</span> &#125;</span><br><span class=\"line\"><span class=\"attr\">reg:</span> /test/</span><br></pre></td></tr></table></figure>\n<p>解析上面的 yml 文件的代码如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> yaml = <span class=\"built_in\">require</span>(<span class=\"string\">'js-yaml'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs   = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> doc = yaml.load(</span><br><span class=\"line\">    fs.readFileSync(<span class=\"string\">'./example.yml'</span>, <span class=\"string\">'utf8'</span>)</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(doc);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>从 JavaScript 对象还原到 yaml 文件的代码如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> yaml = <span class=\"built_in\">require</span>(<span class=\"string\">'js-yaml'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs   = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  fn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">  reg: <span class=\"regexp\">/test/</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  fs.writeFileSync(</span><br><span class=\"line\">    <span class=\"string\">'./example.yml'</span>,</span><br><span class=\"line\">    yaml.dump(obj),</span><br><span class=\"line\">    <span class=\"string\">'utf8'</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"九、参考链接\"><a href=\"#九、参考链接\" class=\"headerlink\" title=\"九、参考链接\"></a>九、参考链接</h2><ul>\n<li><a href=\"http://www.yaml.org/spec/1.2/spec.html\">YAML 1.2 规格</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/YAML\">YAML from Wikipedia</a></li>\n<li><a href=\"http://yaml.org/YAML_for_ruby.html\">YAML for Ruby</a></li>\n</ul>"},{"title":"git-cheatsheet","date":"2014-09-02T03:49:51.000Z","updated":"2014-09-02T03:49:51.000Z","_content":"\n![GIT](http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png)\n- Workspace：工作区\n- Index / Stage：暂存区\n- Repository：仓库区（或本地仓库）\n- Remote：远程仓库\n<!-- more -->\n\n### 新建代码库\n```bash\n# 在当前目录新建一个Git代码库\n$ git init\n\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n```\n\n### 配置\nGit的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n```bash\n# 显示当前的Git配置\n$ git config --list\n\n# 编辑Git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name \"[name]\"\n$ git config [--global] user.email \"[email address]\"\n```\n### 增加/删除文件\n```bash\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n```\n### 代码提交\n```\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n```\n\n### 分支\n```\n# 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n```\n\n### 标签\n```\n# 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n```\n### 查看信息\n\n```\n\t\n# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat \"@{0 day ago}\"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n```\n\n### 远程同步\n```\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n\n```\n### 撤销\n\n```\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 恢复暂存区的所有的php文件到工作区\ngit checkout *.php\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n```\n\n### 其他\n```\n#生成一个可供发布的压缩包\ngit archive\n\n```\n\n---\n\n### Git Basics\n- git init Initialize a repository\n- git status Show status of working tree\n- git add file.txt Start tracking file.txt\n- git add main.txt Stage modified file main.txt\n- git diff Show what's changed but not yet staged\n- git commit Commit changes\n- git commit -a Stage files and commit\n- git mv main.txt file.txt Rename main.txt to file.txt\n- git fetch develop Pull data from remote 'develop' without merging\n- git pull origin develop Fetch and merge branch 'develop' from origin\n- git clone url Create local copy of remote repository at 'url'\n\n### Branching\n- git branch Show current branches\n- git push origin master Push master branch to origin server\n- git branch -v Show last commit on all branches\n- git checkout master Switch to branch 'master'\n- git branch feature1 Create new branch called 'feature1'\n- git checkout -b feature2 Create branch 'feature2' and switch to it\n- git branch -d mybranch Delete branch 'mybranch'\n- git branch --merged Show branches already merged into current branch\n- git branch --no-merged Show branches not yet merged into current branch\n- git branch -D fix Force delete branch 'fix' that is not yet merged\n- git push origin feature1 Push local branch 'feature1' to origin\n- git push staging develop:master Push develop branch to remote staging master\n- git checkout -b fix1 origin/fix1 Create local branch 'fix1' based off origin branch\n- git checkout --track origin/fix2 Create tracking branch 'fix2' based off origin\n- git push origin :fix2 Delete remote branch 'fix2' from origin\n\n```\n### Merging / Rebasing\n- git mergetool Use graphical merge tool\n- git commit Finalize merge after resolving conflicts\n- git merge feature1 Merge branch 'feature1' with current branch\n- git add file.txt Mark file.txt as resolved after merge\n- git rebase develop Rebase changes made on current branch over develop\n- git rebase master develop Rebase master onto develop without checking it out\n- git rebase --onto master 1a 1b Rebase master onto branch 1b made from branch 1a\n### Remotes\n- git remote Show remote servers you have configured\n- git remote -v Show remote servers with URL displayed\n- git remote add myurl url Add remote server 'url' with shortname 'myurl'\n- git remote rename server1 server2 Rename remote 'server1' to 'server2'\n- git remote rm server1 Remove remote 'server1'\n- git remote show origin Show info about remote origin\n### Commit Logs\n- git log Show commit logs\n- git log -p -2 Show last two commits with diffs\n- git log --stat Show commit logs with stats\n- git log --pretty=oneline Show commit logs one per line\n- git log --graph Show commit logs with ascii graph\n- git log --since=1.week Show commit log for the last week\n- git blame -L 10,15 file.rb Show prev commits for each lines 10-15 of file.rb\n### Undo / Change History\n- git rm --cached main.txt Remove main.txt from staging but keep in working\n- git commit --amend Replace last commit with whats in staging\n- git checkout -- file.txt Discard changes to file.txt\n- git reset HEAD file.txt Unstage file.txt\n- git commit --amend Modify last commit message\n- git rebase -i HEAD~3 Make changes to the last 3 commits\n### Using Tags\n- git tag Show available tags\n- git tag -a v3.0 Create annotated tag 'v3.0'\n- git show v3.0 Show info for tag v3.0\n- git tag -s v3.0 Create signed tag v3.0\n- git tag v2.1-lw Create lightweight tag v2.1\n- git tag -v v3.0 Verify signed tag v3.0\n- git tag -a v2.2 8feb Tag previous commit '8feb' as v2.2\n- git push origin v2.2 Push tag v2.2 to origin\n- git push origin --tags Push all local tags to origin\n### Using Stashes\n- git stash Stash changes without committing\n- git stash list Show stores stashes\n- git stash apply Reapply most recent stash\n- git stash apply stash@2 Reapply stash 2\n- git stash apply --index Reapply stashed changes along with staged changes\n- git stash drop stash@{2} Drop stash 2\n- git stash pop Apply most recent stash and drop from stack\n- git stash branch mybranch Create branch 'mybranch' from stash\n- git stash clear Delete all stashes\n- git diff --staged Show what's staged but not yet committed\n- git diff --check Check for whitespace errors before committing\n\n### Using Bisect\n- git bisect start Start binary search of commits to find bad commit\n- git bisect bad Mark current commit as broken during bisect\n- git bisect good v2.2 Mark v2.2 as last known good commit during bisect\n- git bisect good Mark current commit as good during bisect\n- git bisect reset Reset HEAD when finished with bisect\n- git bisect run test.sh Run 'test.sh' on each commit during bisect\n\n[参考](http://www.ruanyifeng.com/blog/2015/12/git-workflow.html)\n[参考](https://www.shortcutfoo.com/app/dojos/git/cheatsheet)","source":"_posts/2014/git-cheatsheet.md","raw":"---\ntitle: git-cheatsheet\ndate: 2014-09-02 11:49:51\nupdated: 2014-09-02 11:49:51\ntags:\n- git\ncategories:\n---\n\n![GIT](http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png)\n- Workspace：工作区\n- Index / Stage：暂存区\n- Repository：仓库区（或本地仓库）\n- Remote：远程仓库\n<!-- more -->\n\n### 新建代码库\n```bash\n# 在当前目录新建一个Git代码库\n$ git init\n\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n```\n\n### 配置\nGit的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n```bash\n# 显示当前的Git配置\n$ git config --list\n\n# 编辑Git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name \"[name]\"\n$ git config [--global] user.email \"[email address]\"\n```\n### 增加/删除文件\n```bash\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n```\n### 代码提交\n```\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n```\n\n### 分支\n```\n# 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n```\n\n### 标签\n```\n# 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n```\n### 查看信息\n\n```\n\t\n# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat \"@{0 day ago}\"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n```\n\n### 远程同步\n```\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n\n```\n### 撤销\n\n```\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 恢复暂存区的所有的php文件到工作区\ngit checkout *.php\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n```\n\n### 其他\n```\n#生成一个可供发布的压缩包\ngit archive\n\n```\n\n---\n\n### Git Basics\n- git init Initialize a repository\n- git status Show status of working tree\n- git add file.txt Start tracking file.txt\n- git add main.txt Stage modified file main.txt\n- git diff Show what's changed but not yet staged\n- git commit Commit changes\n- git commit -a Stage files and commit\n- git mv main.txt file.txt Rename main.txt to file.txt\n- git fetch develop Pull data from remote 'develop' without merging\n- git pull origin develop Fetch and merge branch 'develop' from origin\n- git clone url Create local copy of remote repository at 'url'\n\n### Branching\n- git branch Show current branches\n- git push origin master Push master branch to origin server\n- git branch -v Show last commit on all branches\n- git checkout master Switch to branch 'master'\n- git branch feature1 Create new branch called 'feature1'\n- git checkout -b feature2 Create branch 'feature2' and switch to it\n- git branch -d mybranch Delete branch 'mybranch'\n- git branch --merged Show branches already merged into current branch\n- git branch --no-merged Show branches not yet merged into current branch\n- git branch -D fix Force delete branch 'fix' that is not yet merged\n- git push origin feature1 Push local branch 'feature1' to origin\n- git push staging develop:master Push develop branch to remote staging master\n- git checkout -b fix1 origin/fix1 Create local branch 'fix1' based off origin branch\n- git checkout --track origin/fix2 Create tracking branch 'fix2' based off origin\n- git push origin :fix2 Delete remote branch 'fix2' from origin\n\n```\n### Merging / Rebasing\n- git mergetool Use graphical merge tool\n- git commit Finalize merge after resolving conflicts\n- git merge feature1 Merge branch 'feature1' with current branch\n- git add file.txt Mark file.txt as resolved after merge\n- git rebase develop Rebase changes made on current branch over develop\n- git rebase master develop Rebase master onto develop without checking it out\n- git rebase --onto master 1a 1b Rebase master onto branch 1b made from branch 1a\n### Remotes\n- git remote Show remote servers you have configured\n- git remote -v Show remote servers with URL displayed\n- git remote add myurl url Add remote server 'url' with shortname 'myurl'\n- git remote rename server1 server2 Rename remote 'server1' to 'server2'\n- git remote rm server1 Remove remote 'server1'\n- git remote show origin Show info about remote origin\n### Commit Logs\n- git log Show commit logs\n- git log -p -2 Show last two commits with diffs\n- git log --stat Show commit logs with stats\n- git log --pretty=oneline Show commit logs one per line\n- git log --graph Show commit logs with ascii graph\n- git log --since=1.week Show commit log for the last week\n- git blame -L 10,15 file.rb Show prev commits for each lines 10-15 of file.rb\n### Undo / Change History\n- git rm --cached main.txt Remove main.txt from staging but keep in working\n- git commit --amend Replace last commit with whats in staging\n- git checkout -- file.txt Discard changes to file.txt\n- git reset HEAD file.txt Unstage file.txt\n- git commit --amend Modify last commit message\n- git rebase -i HEAD~3 Make changes to the last 3 commits\n### Using Tags\n- git tag Show available tags\n- git tag -a v3.0 Create annotated tag 'v3.0'\n- git show v3.0 Show info for tag v3.0\n- git tag -s v3.0 Create signed tag v3.0\n- git tag v2.1-lw Create lightweight tag v2.1\n- git tag -v v3.0 Verify signed tag v3.0\n- git tag -a v2.2 8feb Tag previous commit '8feb' as v2.2\n- git push origin v2.2 Push tag v2.2 to origin\n- git push origin --tags Push all local tags to origin\n### Using Stashes\n- git stash Stash changes without committing\n- git stash list Show stores stashes\n- git stash apply Reapply most recent stash\n- git stash apply stash@2 Reapply stash 2\n- git stash apply --index Reapply stashed changes along with staged changes\n- git stash drop stash@{2} Drop stash 2\n- git stash pop Apply most recent stash and drop from stack\n- git stash branch mybranch Create branch 'mybranch' from stash\n- git stash clear Delete all stashes\n- git diff --staged Show what's staged but not yet committed\n- git diff --check Check for whitespace errors before committing\n\n### Using Bisect\n- git bisect start Start binary search of commits to find bad commit\n- git bisect bad Mark current commit as broken during bisect\n- git bisect good v2.2 Mark v2.2 as last known good commit during bisect\n- git bisect good Mark current commit as good during bisect\n- git bisect reset Reset HEAD when finished with bisect\n- git bisect run test.sh Run 'test.sh' on each commit during bisect\n\n[参考](http://www.ruanyifeng.com/blog/2015/12/git-workflow.html)\n[参考](https://www.shortcutfoo.com/app/dojos/git/cheatsheet)","slug":"git-cheatsheet","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixitbpaq002gwsnnafoah84b","content":"<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png\" alt=\"GIT\"></p>\n<ul>\n<li>Workspace：工作区</li>\n<li>Index / Stage：暂存区</li>\n<li>Repository：仓库区（或本地仓库）</li>\n<li>Remote：远程仓库<a id=\"more\"></a>\n</li>\n</ul>\n<h3 id=\"新建代码库\"><a href=\"#新建代码库\" class=\"headerlink\" title=\"新建代码库\"></a>新建代码库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在当前目录新建一个Git代码库</span></span><br><span class=\"line\">$ git init</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class=\"line\">$ git init [project-name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载一个项目和它的整个代码历史</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> [url]</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示当前的Git配置</span></span><br><span class=\"line\">$ git config --list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑Git配置文件</span></span><br><span class=\"line\">$ git config <span class=\"_\">-e</span> [--global]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置提交代码时的用户信息</span></span><br><span class=\"line\">$ git config [--global] user.name <span class=\"string\">\"[name]\"</span></span><br><span class=\"line\">$ git config [--global] user.email <span class=\"string\">\"[email address]\"</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"增加-删除文件\"><a href=\"#增加-删除文件\" class=\"headerlink\" title=\"增加/删除文件\"></a>增加/删除文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加指定文件到暂存区</span></span><br><span class=\"line\">$ git add [file1] [file2] ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加指定目录到暂存区，包括子目录</span></span><br><span class=\"line\">$ git add [dir]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加当前目录的所有文件到暂存区</span></span><br><span class=\"line\">$ git add .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加每个变化前，都会要求确认</span></span><br><span class=\"line\"><span class=\"comment\"># 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class=\"line\">$ git add -p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class=\"line\">$ git rm [file1] [file2] ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class=\"line\">$ git rm --cached [file]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 改名文件，并且将这个改名放入暂存区</span></span><br><span class=\"line\">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码提交\"><a href=\"#代码提交\" class=\"headerlink\" title=\"代码提交\"></a>代码提交</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 提交暂存区到仓库区</span><br><span class=\"line\">$ git commit -m [message]</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交暂存区的指定文件到仓库区</span><br><span class=\"line\">$ git commit [file1] [file2] ... -m [message]</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class=\"line\">$ git commit -a</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交时显示所有diff信息</span><br><span class=\"line\">$ git commit -v</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用一次新的commit，替代上一次提交</span><br><span class=\"line\"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class=\"line\">$ git commit --amend -m [message]</span><br><span class=\"line\"></span><br><span class=\"line\"># 重做上一次commit，并包括指定文件的新变化</span><br><span class=\"line\">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure>\n<h3 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出所有本地分支</span><br><span class=\"line\">$ git branch</span><br><span class=\"line\"></span><br><span class=\"line\"># 列出所有远程分支</span><br><span class=\"line\">$ git branch -r</span><br><span class=\"line\"></span><br><span class=\"line\"># 列出所有本地分支和远程分支</span><br><span class=\"line\">$ git branch -a</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个分支，但依然停留在当前分支</span><br><span class=\"line\">$ git branch [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个分支，并切换到该分支</span><br><span class=\"line\">$ git checkout -b [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个分支，指向指定commit</span><br><span class=\"line\">$ git branch [branch] [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class=\"line\">$ git branch --track [branch] [remote-branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 切换到指定分支，并更新工作区</span><br><span class=\"line\">$ git checkout [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\"># 切换到上一个分支</span><br><span class=\"line\">$ git checkout -</span><br><span class=\"line\"></span><br><span class=\"line\"># 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class=\"line\">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 合并指定分支到当前分支</span><br><span class=\"line\">$ git merge [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 选择一个commit，合并进当前分支</span><br><span class=\"line\">$ git cherry-pick [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除分支</span><br><span class=\"line\">$ git branch -d [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除远程分支</span><br><span class=\"line\">$ git push origin --delete [branch-name]</span><br><span class=\"line\">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>\n<h3 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出所有tag</span><br><span class=\"line\">$ git tag</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个tag在当前commit</span><br><span class=\"line\">$ git tag [tag]</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个tag在指定commit</span><br><span class=\"line\">$ git tag [tag] [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除本地tag</span><br><span class=\"line\">$ git tag -d [tag]</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除远程tag</span><br><span class=\"line\">$ git push origin :refs/tags/[tagName]</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看tag信息</span><br><span class=\"line\">$ git show [tag]</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交指定tag</span><br><span class=\"line\">$ git push [remote] [tag]</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交所有tag</span><br><span class=\"line\">$ git push [remote] --tags</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个分支，指向某个tag</span><br><span class=\"line\">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t</span><br><span class=\"line\"># 显示有变更的文件</span><br><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示当前分支的版本历史</span><br><span class=\"line\">$ git log</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示commit历史，以及每次commit发生变更的文件</span><br><span class=\"line\">$ git log --stat</span><br><span class=\"line\"></span><br><span class=\"line\"># 搜索提交历史，根据关键词</span><br><span class=\"line\">$ git log -S [keyword]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某个commit之后的所有变动，每个commit占据一行</span><br><span class=\"line\">$ git log [tag] HEAD --pretty=format:%s</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件</span><br><span class=\"line\">$ git log [tag] HEAD --grep feature</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某个文件的版本历史，包括文件改名</span><br><span class=\"line\">$ git log --follow [file]</span><br><span class=\"line\">$ git whatchanged [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示指定文件相关的每一次diff</span><br><span class=\"line\">$ git log -p [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示过去5次提交</span><br><span class=\"line\">$ git log -5 --pretty --oneline</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示所有提交过的用户，按提交次数排序</span><br><span class=\"line\">$ git shortlog -sn</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示指定文件是什么人在什么时间修改过</span><br><span class=\"line\">$ git blame [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示暂存区和工作区的差异</span><br><span class=\"line\">$ git diff</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示暂存区和上一个commit的差异</span><br><span class=\"line\">$ git diff --cached [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示工作区与当前分支最新commit之间的差异</span><br><span class=\"line\">$ git diff HEAD</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示两次提交之间的差异</span><br><span class=\"line\">$ git diff [first-branch]...[second-branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示今天你写了多少行代码</span><br><span class=\"line\">$ git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某次提交的元数据和内容变化</span><br><span class=\"line\">$ git show [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某次提交发生变化的文件</span><br><span class=\"line\">$ git show --name-only [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某次提交时，某个文件的内容</span><br><span class=\"line\">$ git show [commit]:[filename]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示当前分支的最近几次提交</span><br><span class=\"line\">$ git reflog</span><br></pre></td></tr></table></figure>\n<h3 id=\"远程同步\"><a href=\"#远程同步\" class=\"headerlink\" title=\"远程同步\"></a>远程同步</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 下载远程仓库的所有变动</span><br><span class=\"line\">$ git fetch [remote]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示所有远程仓库</span><br><span class=\"line\">$ git remote -v</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某个远程仓库的信息</span><br><span class=\"line\">$ git remote show [remote]</span><br><span class=\"line\"></span><br><span class=\"line\"># 增加一个新的远程仓库，并命名</span><br><span class=\"line\">$ git remote add [shortname] [url]</span><br><span class=\"line\"></span><br><span class=\"line\"># 取回远程仓库的变化，并与本地分支合并</span><br><span class=\"line\">$ git pull [remote] [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 上传本地指定分支到远程仓库</span><br><span class=\"line\">$ git push [remote] [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 强行推送当前分支到远程仓库，即使有冲突</span><br><span class=\"line\">$ git push [remote] --force</span><br><span class=\"line\"></span><br><span class=\"line\"># 推送所有分支到远程仓库</span><br><span class=\"line\">$ git push [remote] --all</span><br></pre></td></tr></table></figure>\n<h3 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 恢复暂存区的指定文件到工作区</span><br><span class=\"line\">$ git checkout [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 恢复某个commit的指定文件到暂存区和工作区</span><br><span class=\"line\">$ git checkout [commit] [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 恢复暂存区的所有文件到工作区</span><br><span class=\"line\">$ git checkout .</span><br><span class=\"line\"></span><br><span class=\"line\"># 恢复暂存区的所有的php文件到工作区</span><br><span class=\"line\">git checkout *.php</span><br><span class=\"line\"></span><br><span class=\"line\"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class=\"line\">$ git reset [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 重置暂存区与工作区，与上一次commit保持一致</span><br><span class=\"line\">$ git reset --hard</span><br><span class=\"line\"></span><br><span class=\"line\"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class=\"line\">$ git reset [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><span class=\"line\">$ git reset --hard [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class=\"line\">$ git reset --keep [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个commit，用来撤销指定commit</span><br><span class=\"line\"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class=\"line\">$ git revert [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 暂时将未提交的变化移除，稍后再移入</span><br><span class=\"line\">$ git stash</span><br><span class=\"line\">$ git stash pop</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#生成一个可供发布的压缩包</span><br><span class=\"line\">git archive</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Git-Basics\"><a href=\"#Git-Basics\" class=\"headerlink\" title=\"Git Basics\"></a>Git Basics</h3><ul>\n<li>git init Initialize a repository</li>\n<li>git status Show status of working tree</li>\n<li>git add file.txt Start tracking file.txt</li>\n<li>git add main.txt Stage modified file main.txt</li>\n<li>git diff Show what’s changed but not yet staged</li>\n<li>git commit Commit changes</li>\n<li>git commit -a Stage files and commit</li>\n<li>git mv main.txt file.txt Rename main.txt to file.txt</li>\n<li>git fetch develop Pull data from remote ‘develop’ without merging</li>\n<li>git pull origin develop Fetch and merge branch ‘develop’ from origin</li>\n<li>git clone url Create local copy of remote repository at ‘url’</li>\n</ul>\n<h3 id=\"Branching\"><a href=\"#Branching\" class=\"headerlink\" title=\"Branching\"></a>Branching</h3><ul>\n<li>git branch Show current branches</li>\n<li>git push origin master Push master branch to origin server</li>\n<li>git branch -v Show last commit on all branches</li>\n<li>git checkout master Switch to branch ‘master’</li>\n<li>git branch feature1 Create new branch called ‘feature1’</li>\n<li>git checkout -b feature2 Create branch ‘feature2’ and switch to it</li>\n<li>git branch -d mybranch Delete branch ‘mybranch’</li>\n<li>git branch –merged Show branches already merged into current branch</li>\n<li>git branch –no-merged Show branches not yet merged into current branch</li>\n<li>git branch -D fix Force delete branch ‘fix’ that is not yet merged</li>\n<li>git push origin feature1 Push local branch ‘feature1’ to origin</li>\n<li>git push staging develop:master Push develop branch to remote staging master</li>\n<li>git checkout -b fix1 origin/fix1 Create local branch ‘fix1’ based off origin branch</li>\n<li>git checkout –track origin/fix2 Create tracking branch ‘fix2’ based off origin</li>\n<li>git push origin :fix2 Delete remote branch ‘fix2’ from origin</li>\n</ul>\n<p>```</p>\n<h3 id=\"Merging-Rebasing\"><a href=\"#Merging-Rebasing\" class=\"headerlink\" title=\"Merging / Rebasing\"></a>Merging / Rebasing</h3><ul>\n<li>git mergetool Use graphical merge tool</li>\n<li>git commit Finalize merge after resolving conflicts</li>\n<li>git merge feature1 Merge branch ‘feature1’ with current branch</li>\n<li>git add file.txt Mark file.txt as resolved after merge</li>\n<li>git rebase develop Rebase changes made on current branch over develop</li>\n<li>git rebase master develop Rebase master onto develop without checking it out</li>\n<li>git rebase –onto master 1a 1b Rebase master onto branch 1b made from branch 1a<h3 id=\"Remotes\"><a href=\"#Remotes\" class=\"headerlink\" title=\"Remotes\"></a>Remotes</h3></li>\n<li>git remote Show remote servers you have configured</li>\n<li>git remote -v Show remote servers with URL displayed</li>\n<li>git remote add myurl url Add remote server ‘url’ with shortname ‘myurl’</li>\n<li>git remote rename server1 server2 Rename remote ‘server1’ to ‘server2’</li>\n<li>git remote rm server1 Remove remote ‘server1’</li>\n<li>git remote show origin Show info about remote origin<h3 id=\"Commit-Logs\"><a href=\"#Commit-Logs\" class=\"headerlink\" title=\"Commit Logs\"></a>Commit Logs</h3></li>\n<li>git log Show commit logs</li>\n<li>git log -p -2 Show last two commits with diffs</li>\n<li>git log –stat Show commit logs with stats</li>\n<li>git log –pretty=oneline Show commit logs one per line</li>\n<li>git log –graph Show commit logs with ascii graph</li>\n<li>git log –since=1.week Show commit log for the last week</li>\n<li>git blame -L 10,15 file.rb Show prev commits for each lines 10-15 of file.rb<h3 id=\"Undo-Change-History\"><a href=\"#Undo-Change-History\" class=\"headerlink\" title=\"Undo / Change History\"></a>Undo / Change History</h3></li>\n<li>git rm –cached main.txt Remove main.txt from staging but keep in working</li>\n<li>git commit –amend Replace last commit with whats in staging</li>\n<li>git checkout – file.txt Discard changes to file.txt</li>\n<li>git reset HEAD file.txt Unstage file.txt</li>\n<li>git commit –amend Modify last commit message</li>\n<li>git rebase -i HEAD~3 Make changes to the last 3 commits<h3 id=\"Using-Tags\"><a href=\"#Using-Tags\" class=\"headerlink\" title=\"Using Tags\"></a>Using Tags</h3></li>\n<li>git tag Show available tags</li>\n<li>git tag -a v3.0 Create annotated tag ‘v3.0’</li>\n<li>git show v3.0 Show info for tag v3.0</li>\n<li>git tag -s v3.0 Create signed tag v3.0</li>\n<li>git tag v2.1-lw Create lightweight tag v2.1</li>\n<li>git tag -v v3.0 Verify signed tag v3.0</li>\n<li>git tag -a v2.2 8feb Tag previous commit ‘8feb’ as v2.2</li>\n<li>git push origin v2.2 Push tag v2.2 to origin</li>\n<li>git push origin –tags Push all local tags to origin<h3 id=\"Using-Stashes\"><a href=\"#Using-Stashes\" class=\"headerlink\" title=\"Using Stashes\"></a>Using Stashes</h3></li>\n<li>git stash Stash changes without committing</li>\n<li>git stash list Show stores stashes</li>\n<li>git stash apply Reapply most recent stash</li>\n<li>git stash apply stash@2 Reapply stash 2</li>\n<li>git stash apply –index Reapply stashed changes along with staged changes</li>\n<li>git stash drop stash@{2} Drop stash 2</li>\n<li>git stash pop Apply most recent stash and drop from stack</li>\n<li>git stash branch mybranch Create branch ‘mybranch’ from stash</li>\n<li>git stash clear Delete all stashes</li>\n<li>git diff –staged Show what’s staged but not yet committed</li>\n<li>git diff –check Check for whitespace errors before committing</li>\n</ul>\n<h3 id=\"Using-Bisect\"><a href=\"#Using-Bisect\" class=\"headerlink\" title=\"Using Bisect\"></a>Using Bisect</h3><ul>\n<li>git bisect start Start binary search of commits to find bad commit</li>\n<li>git bisect bad Mark current commit as broken during bisect</li>\n<li>git bisect good v2.2 Mark v2.2 as last known good commit during bisect</li>\n<li>git bisect good Mark current commit as good during bisect</li>\n<li>git bisect reset Reset HEAD when finished with bisect</li>\n<li>git bisect run test.sh Run ‘test.sh’ on each commit during bisect</li>\n</ul>\n<p><a href=\"http://www.ruanyifeng.com/blog/2015/12/git-workflow.html\" target=\"_blank\" rel=\"external\">参考</a><br><a href=\"https://www.shortcutfoo.com/app/dojos/git/cheatsheet\" target=\"_blank\" rel=\"external\">参考</a></p>\n","excerpt":"<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png\" alt=\"GIT\"></p>\n<ul>\n<li>Workspace：工作区</li>\n<li>Index / Stage：暂存区</li>\n<li>Repository：仓库区（或本地仓库）</li>\n<li>Remote：远程仓库","more":"</li>\n</ul>\n<h3 id=\"新建代码库\"><a href=\"#新建代码库\" class=\"headerlink\" title=\"新建代码库\"></a>新建代码库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在当前目录新建一个Git代码库</span></span><br><span class=\"line\">$ git init</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class=\"line\">$ git init [project-name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载一个项目和它的整个代码历史</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> [url]</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示当前的Git配置</span></span><br><span class=\"line\">$ git config --list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑Git配置文件</span></span><br><span class=\"line\">$ git config <span class=\"_\">-e</span> [--global]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置提交代码时的用户信息</span></span><br><span class=\"line\">$ git config [--global] user.name <span class=\"string\">\"[name]\"</span></span><br><span class=\"line\">$ git config [--global] user.email <span class=\"string\">\"[email address]\"</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"增加-删除文件\"><a href=\"#增加-删除文件\" class=\"headerlink\" title=\"增加/删除文件\"></a>增加/删除文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加指定文件到暂存区</span></span><br><span class=\"line\">$ git add [file1] [file2] ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加指定目录到暂存区，包括子目录</span></span><br><span class=\"line\">$ git add [dir]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加当前目录的所有文件到暂存区</span></span><br><span class=\"line\">$ git add .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加每个变化前，都会要求确认</span></span><br><span class=\"line\"><span class=\"comment\"># 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class=\"line\">$ git add -p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class=\"line\">$ git rm [file1] [file2] ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class=\"line\">$ git rm --cached [file]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 改名文件，并且将这个改名放入暂存区</span></span><br><span class=\"line\">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码提交\"><a href=\"#代码提交\" class=\"headerlink\" title=\"代码提交\"></a>代码提交</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 提交暂存区到仓库区</span><br><span class=\"line\">$ git commit -m [message]</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交暂存区的指定文件到仓库区</span><br><span class=\"line\">$ git commit [file1] [file2] ... -m [message]</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class=\"line\">$ git commit -a</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交时显示所有diff信息</span><br><span class=\"line\">$ git commit -v</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用一次新的commit，替代上一次提交</span><br><span class=\"line\"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class=\"line\">$ git commit --amend -m [message]</span><br><span class=\"line\"></span><br><span class=\"line\"># 重做上一次commit，并包括指定文件的新变化</span><br><span class=\"line\">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure>\n<h3 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出所有本地分支</span><br><span class=\"line\">$ git branch</span><br><span class=\"line\"></span><br><span class=\"line\"># 列出所有远程分支</span><br><span class=\"line\">$ git branch -r</span><br><span class=\"line\"></span><br><span class=\"line\"># 列出所有本地分支和远程分支</span><br><span class=\"line\">$ git branch -a</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个分支，但依然停留在当前分支</span><br><span class=\"line\">$ git branch [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个分支，并切换到该分支</span><br><span class=\"line\">$ git checkout -b [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个分支，指向指定commit</span><br><span class=\"line\">$ git branch [branch] [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class=\"line\">$ git branch --track [branch] [remote-branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 切换到指定分支，并更新工作区</span><br><span class=\"line\">$ git checkout [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\"># 切换到上一个分支</span><br><span class=\"line\">$ git checkout -</span><br><span class=\"line\"></span><br><span class=\"line\"># 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class=\"line\">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 合并指定分支到当前分支</span><br><span class=\"line\">$ git merge [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 选择一个commit，合并进当前分支</span><br><span class=\"line\">$ git cherry-pick [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除分支</span><br><span class=\"line\">$ git branch -d [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除远程分支</span><br><span class=\"line\">$ git push origin --delete [branch-name]</span><br><span class=\"line\">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>\n<h3 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出所有tag</span><br><span class=\"line\">$ git tag</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个tag在当前commit</span><br><span class=\"line\">$ git tag [tag]</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个tag在指定commit</span><br><span class=\"line\">$ git tag [tag] [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除本地tag</span><br><span class=\"line\">$ git tag -d [tag]</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除远程tag</span><br><span class=\"line\">$ git push origin :refs/tags/[tagName]</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看tag信息</span><br><span class=\"line\">$ git show [tag]</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交指定tag</span><br><span class=\"line\">$ git push [remote] [tag]</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交所有tag</span><br><span class=\"line\">$ git push [remote] --tags</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个分支，指向某个tag</span><br><span class=\"line\">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t</span><br><span class=\"line\"># 显示有变更的文件</span><br><span class=\"line\">$ git status</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示当前分支的版本历史</span><br><span class=\"line\">$ git log</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示commit历史，以及每次commit发生变更的文件</span><br><span class=\"line\">$ git log --stat</span><br><span class=\"line\"></span><br><span class=\"line\"># 搜索提交历史，根据关键词</span><br><span class=\"line\">$ git log -S [keyword]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某个commit之后的所有变动，每个commit占据一行</span><br><span class=\"line\">$ git log [tag] HEAD --pretty=format:%s</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件</span><br><span class=\"line\">$ git log [tag] HEAD --grep feature</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某个文件的版本历史，包括文件改名</span><br><span class=\"line\">$ git log --follow [file]</span><br><span class=\"line\">$ git whatchanged [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示指定文件相关的每一次diff</span><br><span class=\"line\">$ git log -p [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示过去5次提交</span><br><span class=\"line\">$ git log -5 --pretty --oneline</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示所有提交过的用户，按提交次数排序</span><br><span class=\"line\">$ git shortlog -sn</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示指定文件是什么人在什么时间修改过</span><br><span class=\"line\">$ git blame [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示暂存区和工作区的差异</span><br><span class=\"line\">$ git diff</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示暂存区和上一个commit的差异</span><br><span class=\"line\">$ git diff --cached [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示工作区与当前分支最新commit之间的差异</span><br><span class=\"line\">$ git diff HEAD</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示两次提交之间的差异</span><br><span class=\"line\">$ git diff [first-branch]...[second-branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示今天你写了多少行代码</span><br><span class=\"line\">$ git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某次提交的元数据和内容变化</span><br><span class=\"line\">$ git show [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某次提交发生变化的文件</span><br><span class=\"line\">$ git show --name-only [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某次提交时，某个文件的内容</span><br><span class=\"line\">$ git show [commit]:[filename]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示当前分支的最近几次提交</span><br><span class=\"line\">$ git reflog</span><br></pre></td></tr></table></figure>\n<h3 id=\"远程同步\"><a href=\"#远程同步\" class=\"headerlink\" title=\"远程同步\"></a>远程同步</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 下载远程仓库的所有变动</span><br><span class=\"line\">$ git fetch [remote]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示所有远程仓库</span><br><span class=\"line\">$ git remote -v</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示某个远程仓库的信息</span><br><span class=\"line\">$ git remote show [remote]</span><br><span class=\"line\"></span><br><span class=\"line\"># 增加一个新的远程仓库，并命名</span><br><span class=\"line\">$ git remote add [shortname] [url]</span><br><span class=\"line\"></span><br><span class=\"line\"># 取回远程仓库的变化，并与本地分支合并</span><br><span class=\"line\">$ git pull [remote] [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 上传本地指定分支到远程仓库</span><br><span class=\"line\">$ git push [remote] [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"># 强行推送当前分支到远程仓库，即使有冲突</span><br><span class=\"line\">$ git push [remote] --force</span><br><span class=\"line\"></span><br><span class=\"line\"># 推送所有分支到远程仓库</span><br><span class=\"line\">$ git push [remote] --all</span><br></pre></td></tr></table></figure>\n<h3 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 恢复暂存区的指定文件到工作区</span><br><span class=\"line\">$ git checkout [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 恢复某个commit的指定文件到暂存区和工作区</span><br><span class=\"line\">$ git checkout [commit] [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 恢复暂存区的所有文件到工作区</span><br><span class=\"line\">$ git checkout .</span><br><span class=\"line\"></span><br><span class=\"line\"># 恢复暂存区的所有的php文件到工作区</span><br><span class=\"line\">git checkout *.php</span><br><span class=\"line\"></span><br><span class=\"line\"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class=\"line\">$ git reset [file]</span><br><span class=\"line\"></span><br><span class=\"line\"># 重置暂存区与工作区，与上一次commit保持一致</span><br><span class=\"line\">$ git reset --hard</span><br><span class=\"line\"></span><br><span class=\"line\"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class=\"line\">$ git reset [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><span class=\"line\">$ git reset --hard [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class=\"line\">$ git reset --keep [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 新建一个commit，用来撤销指定commit</span><br><span class=\"line\"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class=\"line\">$ git revert [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"># 暂时将未提交的变化移除，稍后再移入</span><br><span class=\"line\">$ git stash</span><br><span class=\"line\">$ git stash pop</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#生成一个可供发布的压缩包</span><br><span class=\"line\">git archive</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Git-Basics\"><a href=\"#Git-Basics\" class=\"headerlink\" title=\"Git Basics\"></a>Git Basics</h3><ul>\n<li>git init Initialize a repository</li>\n<li>git status Show status of working tree</li>\n<li>git add file.txt Start tracking file.txt</li>\n<li>git add main.txt Stage modified file main.txt</li>\n<li>git diff Show what’s changed but not yet staged</li>\n<li>git commit Commit changes</li>\n<li>git commit -a Stage files and commit</li>\n<li>git mv main.txt file.txt Rename main.txt to file.txt</li>\n<li>git fetch develop Pull data from remote ‘develop’ without merging</li>\n<li>git pull origin develop Fetch and merge branch ‘develop’ from origin</li>\n<li>git clone url Create local copy of remote repository at ‘url’</li>\n</ul>\n<h3 id=\"Branching\"><a href=\"#Branching\" class=\"headerlink\" title=\"Branching\"></a>Branching</h3><ul>\n<li>git branch Show current branches</li>\n<li>git push origin master Push master branch to origin server</li>\n<li>git branch -v Show last commit on all branches</li>\n<li>git checkout master Switch to branch ‘master’</li>\n<li>git branch feature1 Create new branch called ‘feature1’</li>\n<li>git checkout -b feature2 Create branch ‘feature2’ and switch to it</li>\n<li>git branch -d mybranch Delete branch ‘mybranch’</li>\n<li>git branch –merged Show branches already merged into current branch</li>\n<li>git branch –no-merged Show branches not yet merged into current branch</li>\n<li>git branch -D fix Force delete branch ‘fix’ that is not yet merged</li>\n<li>git push origin feature1 Push local branch ‘feature1’ to origin</li>\n<li>git push staging develop:master Push develop branch to remote staging master</li>\n<li>git checkout -b fix1 origin/fix1 Create local branch ‘fix1’ based off origin branch</li>\n<li>git checkout –track origin/fix2 Create tracking branch ‘fix2’ based off origin</li>\n<li>git push origin :fix2 Delete remote branch ‘fix2’ from origin</li>\n</ul>\n<p>```</p>\n<h3 id=\"Merging-Rebasing\"><a href=\"#Merging-Rebasing\" class=\"headerlink\" title=\"Merging / Rebasing\"></a>Merging / Rebasing</h3><ul>\n<li>git mergetool Use graphical merge tool</li>\n<li>git commit Finalize merge after resolving conflicts</li>\n<li>git merge feature1 Merge branch ‘feature1’ with current branch</li>\n<li>git add file.txt Mark file.txt as resolved after merge</li>\n<li>git rebase develop Rebase changes made on current branch over develop</li>\n<li>git rebase master develop Rebase master onto develop without checking it out</li>\n<li>git rebase –onto master 1a 1b Rebase master onto branch 1b made from branch 1a<h3 id=\"Remotes\"><a href=\"#Remotes\" class=\"headerlink\" title=\"Remotes\"></a>Remotes</h3></li>\n<li>git remote Show remote servers you have configured</li>\n<li>git remote -v Show remote servers with URL displayed</li>\n<li>git remote add myurl url Add remote server ‘url’ with shortname ‘myurl’</li>\n<li>git remote rename server1 server2 Rename remote ‘server1’ to ‘server2’</li>\n<li>git remote rm server1 Remove remote ‘server1’</li>\n<li>git remote show origin Show info about remote origin<h3 id=\"Commit-Logs\"><a href=\"#Commit-Logs\" class=\"headerlink\" title=\"Commit Logs\"></a>Commit Logs</h3></li>\n<li>git log Show commit logs</li>\n<li>git log -p -2 Show last two commits with diffs</li>\n<li>git log –stat Show commit logs with stats</li>\n<li>git log –pretty=oneline Show commit logs one per line</li>\n<li>git log –graph Show commit logs with ascii graph</li>\n<li>git log –since=1.week Show commit log for the last week</li>\n<li>git blame -L 10,15 file.rb Show prev commits for each lines 10-15 of file.rb<h3 id=\"Undo-Change-History\"><a href=\"#Undo-Change-History\" class=\"headerlink\" title=\"Undo / Change History\"></a>Undo / Change History</h3></li>\n<li>git rm –cached main.txt Remove main.txt from staging but keep in working</li>\n<li>git commit –amend Replace last commit with whats in staging</li>\n<li>git checkout – file.txt Discard changes to file.txt</li>\n<li>git reset HEAD file.txt Unstage file.txt</li>\n<li>git commit –amend Modify last commit message</li>\n<li>git rebase -i HEAD~3 Make changes to the last 3 commits<h3 id=\"Using-Tags\"><a href=\"#Using-Tags\" class=\"headerlink\" title=\"Using Tags\"></a>Using Tags</h3></li>\n<li>git tag Show available tags</li>\n<li>git tag -a v3.0 Create annotated tag ‘v3.0’</li>\n<li>git show v3.0 Show info for tag v3.0</li>\n<li>git tag -s v3.0 Create signed tag v3.0</li>\n<li>git tag v2.1-lw Create lightweight tag v2.1</li>\n<li>git tag -v v3.0 Verify signed tag v3.0</li>\n<li>git tag -a v2.2 8feb Tag previous commit ‘8feb’ as v2.2</li>\n<li>git push origin v2.2 Push tag v2.2 to origin</li>\n<li>git push origin –tags Push all local tags to origin<h3 id=\"Using-Stashes\"><a href=\"#Using-Stashes\" class=\"headerlink\" title=\"Using Stashes\"></a>Using Stashes</h3></li>\n<li>git stash Stash changes without committing</li>\n<li>git stash list Show stores stashes</li>\n<li>git stash apply Reapply most recent stash</li>\n<li>git stash apply stash@2 Reapply stash 2</li>\n<li>git stash apply –index Reapply stashed changes along with staged changes</li>\n<li>git stash drop stash@{2} Drop stash 2</li>\n<li>git stash pop Apply most recent stash and drop from stack</li>\n<li>git stash branch mybranch Create branch ‘mybranch’ from stash</li>\n<li>git stash clear Delete all stashes</li>\n<li>git diff –staged Show what’s staged but not yet committed</li>\n<li>git diff –check Check for whitespace errors before committing</li>\n</ul>\n<h3 id=\"Using-Bisect\"><a href=\"#Using-Bisect\" class=\"headerlink\" title=\"Using Bisect\"></a>Using Bisect</h3><ul>\n<li>git bisect start Start binary search of commits to find bad commit</li>\n<li>git bisect bad Mark current commit as broken during bisect</li>\n<li>git bisect good v2.2 Mark v2.2 as last known good commit during bisect</li>\n<li>git bisect good Mark current commit as good during bisect</li>\n<li>git bisect reset Reset HEAD when finished with bisect</li>\n<li>git bisect run test.sh Run ‘test.sh’ on each commit during bisect</li>\n</ul>\n<p><a href=\"http://www.ruanyifeng.com/blog/2015/12/git-workflow.html\">参考</a><br><a href=\"https://www.shortcutfoo.com/app/dojos/git/cheatsheet\">参考</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cixitbp7y0009wsnnq7cg1acg","category_id":"cixitbp88000bwsnnmk8gxb4s","_id":"cixitbp8i000jwsnnosk68yg1"},{"post_id":"cixitbp8i000gwsnnkbhsmf4j","category_id":"cixitbp88000bwsnnmk8gxb4s","_id":"cixitbp8i000mwsnnlfp936h1"}],"PostTag":[{"post_id":"cixitbp7o0006wsnnu2xpr50t","tag_id":"cixitbp7y0008wsnnyihvne9q","_id":"cixitbp88000ewsnnrbppikm1"},{"post_id":"cixitbp7y0009wsnnq7cg1acg","tag_id":"cixitbp88000cwsnndnk4t8jg","_id":"cixitbp8s000owsnnsmtmvus5"},{"post_id":"cixitbp7y0009wsnnq7cg1acg","tag_id":"cixitbp8i000hwsnnqkwjhdmb","_id":"cixitbp8s000qwsnn2zm6xrfl"},{"post_id":"cixitbp88000fwsnnvo1davs6","tag_id":"cixitbp8i000lwsnnpsjrv4xt","_id":"cixitbp92000twsnnray8np9g"},{"post_id":"cixitbp8i000gwsnnkbhsmf4j","tag_id":"cixitbp8s000rwsnnxb5bqn16","_id":"cixitbp92000xwsnna70z3lng"},{"post_id":"cixitbp8i000kwsnnye3794w3","tag_id":"cixitbp92000vwsnndc4dascy","_id":"cixitbp920011wsnnbsenfote"},{"post_id":"cixitbp8s000swsnna0ww2iph","tag_id":"cixitbp920010wsnnwosxmigv","_id":"cixitbp9c0016wsnnj621yz8b"},{"post_id":"cixitbp92000wwsnntuqxt5m6","tag_id":"cixitbp9c0014wsnnwp2uph4t","_id":"cixitbp9m001awsnn5218kekv"},{"post_id":"cixitbp920012wsnnodokbeht","tag_id":"cixitbp9c0018wsnn0rohwlgo","_id":"cixitbp9m001ewsnnkg4n4xfb"},{"post_id":"cixitbp9m001fwsnnhvrjvyi6","tag_id":"cixitbp92000vwsnndc4dascy","_id":"cixitbp9m001iwsnnrdehs4mp"},{"post_id":"cixitbp9c0015wsnnawru9tpa","tag_id":"cixitbp9m001cwsnnqgouqw1b","_id":"cixitbp9w001nwsnnn56x9ptn"},{"post_id":"cixitbp9c0015wsnnawru9tpa","tag_id":"cixitbp9m001hwsnnp0vf3n64","_id":"cixitbp9w001pwsnnfad1p1ly"},{"post_id":"cixitbp9w001mwsnn2wdxazr1","tag_id":"cixitbp9m001hwsnnp0vf3n64","_id":"cixitbpa6001swsnnch7tj4n0"},{"post_id":"cixitbp9c0019wsnn41ffg9p3","tag_id":"cixitbp9w001lwsnn1a7nvu2s","_id":"cixitbpa6001uwsnnafak40hw"},{"post_id":"cixitbpa6001rwsnnqjv0zm5m","tag_id":"cixitbp92000vwsnndc4dascy","_id":"cixitbpa6001xwsnn5hvesjs0"},{"post_id":"cixitbpa6001ywsnnda9amf1n","tag_id":"cixitbp920010wsnnwosxmigv","_id":"cixitbpag0021wsnn4vw91ily"},{"post_id":"cixitbp9m001bwsnnhv954m0j","tag_id":"cixitbp9w001qwsnn7cd3xwdk","_id":"cixitbpag0023wsnnjhuiz2al"},{"post_id":"cixitbp9m001bwsnnhv954m0j","tag_id":"cixitbpa6001vwsnn2rotw1s5","_id":"cixitbpag0026wsnnh0ydf3kx"},{"post_id":"cixitbpag001zwsnnl11avvsl","tag_id":"cixitbp9m001hwsnnp0vf3n64","_id":"cixitbpag0028wsnn7m5o5udq"},{"post_id":"cixitbpag0022wsnnmrr4e6b3","tag_id":"cixitbp92000vwsnndc4dascy","_id":"cixitbpaq002awsnn5uyhu3l2"},{"post_id":"cixitbpa6001twsnngifquupk","tag_id":"cixitbpag0020wsnn5zt8l14j","_id":"cixitbpaq002dwsnnbut7ocaq"},{"post_id":"cixitbpa6001wwsnndxpbxqco","tag_id":"cixitbpag0025wsnnpsohq6az","_id":"cixitbpaq002fwsnns2pxd59m"},{"post_id":"cixitbpag0024wsnn2qtk0t3x","tag_id":"cixitbpaq002bwsnnqysao7zb","_id":"cixitbpaq002hwsnn5zfq8ti4"},{"post_id":"cixitbpaq002gwsnnafoah84b","tag_id":"cixitbpb0002iwsnn168kfu8i","_id":"cixitbpb1002jwsnnz7bcxedx"}],"Tag":[{"name":"方法论","_id":"cixitbp7y0008wsnnyihvne9q"},{"name":"hexo","_id":"cixitbp88000cwsnndnk4t8jg"},{"name":"next","_id":"cixitbp8i000hwsnnqkwjhdmb"},{"name":"english","_id":"cixitbp8i000lwsnnpsjrv4xt"},{"name":"learn","_id":"cixitbp8s000rwsnnxb5bqn16"},{"name":"mysql","_id":"cixitbp92000vwsnndc4dascy"},{"name":"随笔","_id":"cixitbp920010wsnnwosxmigv"},{"name":"work","_id":"cixitbp9c0014wsnnwp2uph4t"},{"name":"tools","_id":"cixitbp9c0018wsnn0rohwlgo"},{"name":"创业","_id":"cixitbp9m001cwsnnqgouqw1b"},{"name":"读书","_id":"cixitbp9m001hwsnnp0vf3n64"},{"name":"db","_id":"cixitbp9w001lwsnn1a7nvu2s"},{"name":"逻辑","_id":"cixitbp9w001qwsnn7cd3xwdk"},{"name":"阅读","_id":"cixitbpa6001vwsnn2rotw1s5"},{"name":"js","_id":"cixitbpag0020wsnn5zt8l14j"},{"name":"php","_id":"cixitbpag0025wsnnpsohq6az"},{"name":"运动","_id":"cixitbpaq002bwsnnqysao7zb"},{"name":"git","_id":"cixitbpb0002iwsnn168kfu8i"}]}}